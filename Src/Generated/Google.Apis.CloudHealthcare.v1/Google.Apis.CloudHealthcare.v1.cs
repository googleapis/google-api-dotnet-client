// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated code. DO NOT EDIT!

namespace Google.Apis.CloudHealthcare.v1
{
    /// <summary>The CloudHealthcare Service.</summary>
    public class CloudHealthcareService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public CloudHealthcareService() : this(new Google.Apis.Services.BaseClientService.Initializer())
        {
        }

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public CloudHealthcareService(Google.Apis.Services.BaseClientService.Initializer initializer) : base(initializer)
        {
            Projects = new ProjectsResource(this);
            BaseUri = GetEffectiveUri(BaseUriOverride, "https://healthcare.googleapis.com/");
            BatchUri = GetEffectiveUri(null, "https://healthcare.googleapis.com/batch");
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features => new string[0];

        /// <summary>Gets the service name.</summary>
        public override string Name => "healthcare";

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri { get; }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath => "";

        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri { get; }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath => "batch";

        /// <summary>Available OAuth 2.0 scopes for use with the Cloud Healthcare API.</summary>
        public class Scope
        {
            /// <summary>Read, write and manage healthcare data</summary>
            public static string CloudHealthcare = "https://www.googleapis.com/auth/cloud-healthcare";

            /// <summary>
            /// See, edit, configure, and delete your Google Cloud data and see the email address for your Google
            /// Account.
            /// </summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";
        }

        /// <summary>Available OAuth 2.0 scope constants for use with the Cloud Healthcare API.</summary>
        public static class ScopeConstants
        {
            /// <summary>Read, write and manage healthcare data</summary>
            public const string CloudHealthcare = "https://www.googleapis.com/auth/cloud-healthcare";

            /// <summary>
            /// See, edit, configure, and delete your Google Cloud data and see the email address for your Google
            /// Account.
            /// </summary>
            public const string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";
        }

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects { get; }
    }

    /// <summary>A base abstract class for CloudHealthcare requests.</summary>
    public abstract class CloudHealthcareBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        /// <summary>Constructs a new CloudHealthcareBaseServiceRequest instance.</summary>
        protected CloudHealthcareBaseServiceRequest(Google.Apis.Services.IClientService service) : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1 = 0,

            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2 = 1,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json = 0,

            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media = 1,

            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto = 2,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>
        /// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required
        /// unless you provide an OAuth 2.0 token.
        /// </summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>
        /// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a
        /// user, but should not exceed 40 characters.
        /// </summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes CloudHealthcare parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();
            RequestParameters.Add("$.xgafv", new Google.Apis.Discovery.Parameter
            {
                Name = "$.xgafv",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("access_token", new Google.Apis.Discovery.Parameter
            {
                Name = "access_token",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("alt", new Google.Apis.Discovery.Parameter
            {
                Name = "alt",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = "json",
                Pattern = null,
            });
            RequestParameters.Add("callback", new Google.Apis.Discovery.Parameter
            {
                Name = "callback",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("fields", new Google.Apis.Discovery.Parameter
            {
                Name = "fields",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("key", new Google.Apis.Discovery.Parameter
            {
                Name = "key",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("oauth_token", new Google.Apis.Discovery.Parameter
            {
                Name = "oauth_token",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("prettyPrint", new Google.Apis.Discovery.Parameter
            {
                Name = "prettyPrint",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = "true",
                Pattern = null,
            });
            RequestParameters.Add("quotaUser", new Google.Apis.Discovery.Parameter
            {
                Name = "quotaUser",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("uploadType", new Google.Apis.Discovery.Parameter
            {
                Name = "uploadType",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("upload_protocol", new Google.Apis.Discovery.Parameter
            {
                Name = "upload_protocol",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            Locations = new LocationsResource(service);
        }

        /// <summary>Gets the Locations resource.</summary>
        public virtual LocationsResource Locations { get; }

        /// <summary>The "locations" collection of methods.</summary>
        public class LocationsResource
        {
            private const string Resource = "locations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LocationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                Datasets = new DatasetsResource(service);
                Services = new ServicesResource(service);
            }

            /// <summary>Gets the Datasets resource.</summary>
            public virtual DatasetsResource Datasets { get; }

            /// <summary>The "datasets" collection of methods.</summary>
            public class DatasetsResource
            {
                private const string Resource = "datasets";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public DatasetsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    ConsentStores = new ConsentStoresResource(service);
                    DataMapperWorkspaces = new DataMapperWorkspacesResource(service);
                    DicomStores = new DicomStoresResource(service);
                    FhirStores = new FhirStoresResource(service);
                    Hl7V2Stores = new Hl7V2StoresResource(service);
                    Operations = new OperationsResource(service);
                }

                /// <summary>Gets the ConsentStores resource.</summary>
                public virtual ConsentStoresResource ConsentStores { get; }

                /// <summary>The "consentStores" collection of methods.</summary>
                public class ConsentStoresResource
                {
                    private const string Resource = "consentStores";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public ConsentStoresResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        AttributeDefinitions = new AttributeDefinitionsResource(service);
                        ConsentArtifacts = new ConsentArtifactsResource(service);
                        Consents = new ConsentsResource(service);
                        UserDataMappings = new UserDataMappingsResource(service);
                    }

                    /// <summary>Gets the AttributeDefinitions resource.</summary>
                    public virtual AttributeDefinitionsResource AttributeDefinitions { get; }

                    /// <summary>The "attributeDefinitions" collection of methods.</summary>
                    public class AttributeDefinitionsResource
                    {
                        private const string Resource = "attributeDefinitions";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public AttributeDefinitionsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Creates a new Attribute definition in the parent consent store.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the consent store that this Attribute definition belongs to.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates a new Attribute definition in the parent consent store.</summary>
                        public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the consent store that this Attribute definition belongs to.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The ID of the Attribute definition to create. The string must match the
                            /// following regex: `_a-zA-Z{0,255}` and must not be a reserved keyword within the Common
                            /// Expression Language as listed on
                            /// https://github.com/google/cel-spec/blob/master/doc/langdef.md.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("attributeDefinitionId", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string AttributeDefinitionId { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/attributeDefinitions";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                                });
                                RequestParameters.Add("attributeDefinitionId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "attributeDefinitionId",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes the specified Attribute definition. Fails if the Attribute definition is referenced
                        /// by any User data mapping, or the latest revision of any Consent.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Attribute definition to delete. To preserve referential
                        /// integrity, Attribute definitions referenced by a User data mapping or the latest revision of
                        /// a Consent cannot be deleted.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes the specified Attribute definition. Fails if the Attribute definition is referenced
                        /// by any User data mapping, or the latest revision of any Consent.
                        /// </summary>
                        public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Attribute definition to delete. To preserve
                            /// referential integrity, Attribute definitions referenced by a User data mapping or the
                            /// latest revision of a Consent cannot be deleted.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets the specified Attribute definition.</summary>
                        /// <param name="name">Required. The resource name of the Attribute definition to get.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets the specified Attribute definition.</summary>
                        public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The resource name of the Attribute definition to get.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists the Attribute definitions in the specified consent store.</summary>
                        /// <param name="parent">
                        /// Required. Name of the consent store to retrieve Attribute definitions from.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists the Attribute definitions in the specified consent store.</summary>
                        public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListAttributeDefinitionsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Name of the consent store to retrieve Attribute definitions from.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. Restricts the attributes returned to those matching a filter. The only field
                            /// available for filtering is `category`. For example, `filter=category=\"REQUEST\"`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// Optional. Limit on the number of Attribute definitions to return in a single response.
                            /// If not specified, 100 is used. May not be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. Token to retrieve the next page of results or empty to get the first page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/attributeDefinitions";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Updates the specified Attribute definition.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Identifier. Resource name of the Attribute definition, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`.
                        /// Cannot be changed after creation.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>Updates the specified Attribute definition.</summary>
                        public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Identifier. Resource name of the Attribute definition, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`.
                            /// Cannot be changed after creation.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Required. The update mask that applies to the resource. For the `FieldMask` definition,
                            /// see
                            /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.
                            /// Only the `description`, `allowed_values`, `consent_default_values` and
                            /// `data_mapping_default_value` fields can be updated. The updated `allowed_values` must
                            /// contain all values from the previous `allowed_values`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.AttributeDefinition Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/attributeDefinitions/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the ConsentArtifacts resource.</summary>
                    public virtual ConsentArtifactsResource ConsentArtifacts { get; }

                    /// <summary>The "consentArtifacts" collection of methods.</summary>
                    public class ConsentArtifactsResource
                    {
                        private const string Resource = "consentArtifacts";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ConsentArtifactsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Creates a new Consent artifact in the parent consent store.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the consent store this Consent artifact belongs to.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.ConsentArtifact body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates a new Consent artifact in the parent consent store.</summary>
                        public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ConsentArtifact>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ConsentArtifact body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the consent store this Consent artifact belongs to.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.ConsentArtifact Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/consentArtifacts";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes the specified Consent artifact. Fails if the artifact is referenced by the latest
                        /// revision of any Consent.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Consent artifact to delete. To preserve referential
                        /// integrity, Consent artifacts referenced by the latest revision of a Consent cannot be
                        /// deleted.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes the specified Consent artifact. Fails if the artifact is referenced by the latest
                        /// revision of any Consent.
                        /// </summary>
                        public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Consent artifact to delete. To preserve referential
                            /// integrity, Consent artifacts referenced by the latest revision of a Consent cannot be
                            /// deleted.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consentArtifacts/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets the specified Consent artifact.</summary>
                        /// <param name="name">Required. The resource name of the Consent artifact to retrieve.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets the specified Consent artifact.</summary>
                        public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ConsentArtifact>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The resource name of the Consent artifact to retrieve.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consentArtifacts/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists the Consent artifacts in the specified consent store.</summary>
                        /// <param name="parent">
                        /// Required. Name of the consent store to retrieve consent artifacts from.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists the Consent artifacts in the specified consent store.</summary>
                        public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListConsentArtifactsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Name of the consent store to retrieve consent artifacts from.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. Restricts the artifacts returned to those matching a filter. The following
                            /// syntax is available: * A string field value can be written as text inside quotation
                            /// marks, for example `"query text"`. The only valid relational operation for text fields
                            /// is equality (`=`), where text is searched within the field, rather than having the field
                            /// be equal to the text. For example, `"Comment = great"` returns messages with `great` in
                            /// the comment field. * A number field value can be written as an integer, a decimal, or an
                            /// exponential. The valid relational operators for number fields are the equality operator
                            /// (`=`), along with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`,
                            /// `&amp;gt;`, `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can
                            /// prepend the `NOT` operator to an expression to negate it. * A date field value must be
                            /// written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format.
                            /// Leading zeros are required for one-digit months and days. The valid relational operators
                            /// for date fields are the equality operator (`=`) , along with the less than/greater than
                            /// operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that there is no
                            /// inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
                            /// negate it. * Multiple field query expressions can be combined in one query by adding
                            /// `AND` or `OR` operators between the expressions. If a boolean operator appears within a
                            /// quoted string, it is not treated as special, it's just another part of the character
                            /// string to be matched. You can prepend the `NOT` operator to an expression to negate it.
                            /// The fields available for filtering are: - user_id. For example,
                            /// `filter=user_id=\"user123\"`. - consent_content_version - metadata. For example,
                            /// `filter=Metadata(\"testkey\")=\"value\"` or `filter=HasMetadata(\"testkey\")`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// Optional. Limit on the number of consent artifacts to return in a single response. If
                            /// not specified, 100 is used. May not be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. The next_page_token value returned from the previous List request, if any.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/consentArtifacts";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Consents resource.</summary>
                    public virtual ConsentsResource Consents { get; }

                    /// <summary>The "consents" collection of methods.</summary>
                    public class ConsentsResource
                    {
                        private const string Resource = "consents";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ConsentsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Activates the latest revision of the specified Consent by committing a new revision with
                        /// `state` updated to `ACTIVE`. If the latest revision of the specified Consent is in the
                        /// `ACTIVE` state, no new revision is committed. A FAILED_PRECONDITION error occurs if the
                        /// latest revision of the specified Consent is in the `REJECTED` or `REVOKED` state.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Required. The resource name of the Consent to activate, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                        /// An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
                        /// </param>
                        public virtual ActivateRequest Activate(Google.Apis.CloudHealthcare.v1.Data.ActivateConsentRequest body, string name)
                        {
                            return new ActivateRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Activates the latest revision of the specified Consent by committing a new revision with
                        /// `state` updated to `ACTIVE`. If the latest revision of the specified Consent is in the
                        /// `ACTIVE` state, no new revision is committed. A FAILED_PRECONDITION error occurs if the
                        /// latest revision of the specified Consent is in the `REJECTED` or `REVOKED` state.
                        /// </summary>
                        public class ActivateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Consent>
                        {
                            /// <summary>Constructs a new Activate request.</summary>
                            public ActivateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ActivateConsentRequest body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Consent to activate, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                            /// An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.ActivateConsentRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "activate";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}:activate";

                            /// <summary>Initializes Activate parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Creates a new Consent in the parent consent store.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. Name of the consent store.</param>
                        public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.Consent body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates a new Consent in the parent consent store.</summary>
                        public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Consent>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.Consent body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. Name of the consent store.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.Consent Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/consents";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes the Consent and its revisions. To keep a record of the Consent but mark it inactive,
                        /// see [RevokeConsent]. To delete a revision of a Consent, see [DeleteConsentRevision]. This
                        /// operation does not delete the related Consent artifact.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Consent to delete, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                        /// An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes the Consent and its revisions. To keep a record of the Consent but mark it inactive,
                        /// see [RevokeConsent]. To delete a revision of a Consent, see [DeleteConsentRevision]. This
                        /// operation does not delete the related Consent artifact.
                        /// </summary>
                        public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Consent to delete, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                            /// An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes the specified revision of a Consent. An INVALID_ARGUMENT error occurs if the
                        /// specified revision is the latest revision.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Consent revision to delete, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}@{revision_id}`.
                        /// An INVALID_ARGUMENT error occurs if `revision_id` is not specified in the name.
                        /// </param>
                        public virtual DeleteRevisionRequest DeleteRevision(string name)
                        {
                            return new DeleteRevisionRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes the specified revision of a Consent. An INVALID_ARGUMENT error occurs if the
                        /// specified revision is the latest revision.
                        /// </summary>
                        public class DeleteRevisionRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                        {
                            /// <summary>Constructs a new DeleteRevision request.</summary>
                            public DeleteRevisionRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Consent revision to delete, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}@{revision_id}`.
                            /// An INVALID_ARGUMENT error occurs if `revision_id` is not specified in the name.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "deleteRevision";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}:deleteRevision";

                            /// <summary>Initializes DeleteRevision parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets the specified revision of a Consent, or the latest revision if `revision_id` is not
                        /// specified in the resource name.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Consent to retrieve, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                        /// In order to retrieve a previous revision of the Consent, also provide the revision ID:
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}@{revision_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the specified revision of a Consent, or the latest revision if `revision_id` is not
                        /// specified in the resource name.
                        /// </summary>
                        public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Consent>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Consent to retrieve, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                            /// In order to retrieve a previous revision of the Consent, also provide the revision ID:
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}@{revision_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Lists the Consent in the given consent store, returning each Consent's latest revision.
                        /// </summary>
                        /// <param name="parent">Required. Name of the consent store to retrieve Consents from.</param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>
                        /// Lists the Consent in the given consent store, returning each Consent's latest revision.
                        /// </summary>
                        public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListConsentsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>Required. Name of the consent store to retrieve Consents from.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. Restricts the Consents returned to those matching a filter. The following
                            /// syntax is available: * A string field value can be written as text inside quotation
                            /// marks, for example `"query text"`. The only valid relational operation for text fields
                            /// is equality (`=`), where text is searched within the field, rather than having the field
                            /// be equal to the text. For example, `"Comment = great"` returns messages with `great` in
                            /// the comment field. * A number field value can be written as an integer, a decimal, or an
                            /// exponential. The valid relational operators for number fields are the equality operator
                            /// (`=`), along with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`,
                            /// `&amp;gt;`, `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can
                            /// prepend the `NOT` operator to an expression to negate it. * A date field value must be
                            /// written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format.
                            /// Leading zeros are required for one-digit months and days. The valid relational operators
                            /// for date fields are the equality operator (`=`) , along with the less than/greater than
                            /// operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that there is no
                            /// inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
                            /// negate it. * Multiple field query expressions can be combined in one query by adding
                            /// `AND` or `OR` operators between the expressions. If a boolean operator appears within a
                            /// quoted string, it is not treated as special, it's just another part of the character
                            /// string to be matched. You can prepend the `NOT` operator to an expression to negate it.
                            /// The fields available for filtering are: - user_id. For example,
                            /// `filter='user_id="user123"'`. - consent_artifact - state - revision_create_time -
                            /// metadata. For example, `filter=Metadata(\"testkey\")=\"value\"` or
                            /// `filter=HasMetadata(\"testkey\")`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// Optional. Limit on the number of Consents to return in a single response. If not
                            /// specified, 100 is used. May not be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. The next_page_token value returned from the previous List request, if any.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/consents";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Lists the revisions of the specified Consent in reverse chronological order.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Consent to retrieve revisions for.
                        /// </param>
                        public virtual ListRevisionsRequest ListRevisions(string name)
                        {
                            return new ListRevisionsRequest(this.service, name);
                        }

                        /// <summary>
                        /// Lists the revisions of the specified Consent in reverse chronological order.
                        /// </summary>
                        public class ListRevisionsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListConsentRevisionsResponse>
                        {
                            /// <summary>Constructs a new ListRevisions request.</summary>
                            public ListRevisionsRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The resource name of the Consent to retrieve revisions for.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Optional. Restricts the revisions returned to those matching a filter. The following
                            /// syntax is available: * A string field value can be written as text inside quotation
                            /// marks, for example `"query text"`. The only valid relational operation for text fields
                            /// is equality (`=`), where text is searched within the field, rather than having the field
                            /// be equal to the text. For example, `"Comment = great"` returns messages with `great` in
                            /// the comment field. * A number field value can be written as an integer, a decimal, or an
                            /// exponential. The valid relational operators for number fields are the equality operator
                            /// (`=`), along with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`,
                            /// `&amp;gt;`, `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can
                            /// prepend the `NOT` operator to an expression to negate it. * A date field value must be
                            /// written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format.
                            /// Leading zeros are required for one-digit months and days. The valid relational operators
                            /// for date fields are the equality operator (`=`) , along with the less than/greater than
                            /// operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that there is no
                            /// inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
                            /// negate it. * Multiple field query expressions can be combined in one query by adding
                            /// `AND` or `OR` operators between the expressions. If a boolean operator appears within a
                            /// quoted string, it is not treated as special, it's just another part of the character
                            /// string to be matched. You can prepend the `NOT` operator to an expression to negate it.
                            /// Fields available for filtering are: - user_id. For example,
                            /// `filter='user_id="user123"'`. - consent_artifact - state - revision_create_time -
                            /// metadata. For example, `filter=Metadata(\"testkey\")=\"value\"` or
                            /// `filter=HasMetadata(\"testkey\")`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// Optional. Limit on the number of revisions to return in a single response. If not
                            /// specified, 100 is used. May not be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. Token to retrieve the next page of results or empty if there are no more
                            /// results in the list.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "listRevisions";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}:listRevisions";

                            /// <summary>Initializes ListRevisions parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates the latest revision of the specified Consent by committing a new revision with the
                        /// changes. A FAILED_PRECONDITION error occurs if the latest revision of the specified Consent
                        /// is in the `REJECTED` or `REVOKED` state.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Identifier. Resource name of the Consent, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                        /// Cannot be changed after creation.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.Consent body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates the latest revision of the specified Consent by committing a new revision with the
                        /// changes. A FAILED_PRECONDITION error occurs if the latest revision of the specified Consent
                        /// is in the `REJECTED` or `REVOKED` state.
                        /// </summary>
                        public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Consent>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.Consent body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Identifier. Resource name of the Consent, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                            /// Cannot be changed after creation.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Required. The update mask to apply to the resource. For the `FieldMask` definition, see
                            /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.
                            /// Only the `user_id`, `policies`, `consent_artifact`, and `metadata` fields can be
                            /// updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.Consent Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Rejects the latest revision of the specified Consent by committing a new revision with
                        /// `state` updated to `REJECTED`. If the latest revision of the specified Consent is in the
                        /// `REJECTED` state, no new revision is committed. A FAILED_PRECONDITION error occurs if the
                        /// latest revision of the specified Consent is in the `ACTIVE` or `REVOKED` state.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Required. The resource name of the Consent to reject, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                        /// An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
                        /// </param>
                        public virtual RejectRequest Reject(Google.Apis.CloudHealthcare.v1.Data.RejectConsentRequest body, string name)
                        {
                            return new RejectRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Rejects the latest revision of the specified Consent by committing a new revision with
                        /// `state` updated to `REJECTED`. If the latest revision of the specified Consent is in the
                        /// `REJECTED` state, no new revision is committed. A FAILED_PRECONDITION error occurs if the
                        /// latest revision of the specified Consent is in the `ACTIVE` or `REVOKED` state.
                        /// </summary>
                        public class RejectRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Consent>
                        {
                            /// <summary>Constructs a new Reject request.</summary>
                            public RejectRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.RejectConsentRequest body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Consent to reject, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                            /// An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.RejectConsentRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "reject";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}:reject";

                            /// <summary>Initializes Reject parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Revokes the latest revision of the specified Consent by committing a new revision with
                        /// `state` updated to `REVOKED`. If the latest revision of the specified Consent is in the
                        /// `REVOKED` state, no new revision is committed. A FAILED_PRECONDITION error occurs if the
                        /// latest revision of the given consent is in `DRAFT` or `REJECTED` state.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Required. The resource name of the Consent to revoke, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                        /// An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
                        /// </param>
                        public virtual RevokeRequest Revoke(Google.Apis.CloudHealthcare.v1.Data.RevokeConsentRequest body, string name)
                        {
                            return new RevokeRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Revokes the latest revision of the specified Consent by committing a new revision with
                        /// `state` updated to `REVOKED`. If the latest revision of the specified Consent is in the
                        /// `REVOKED` state, no new revision is committed. A FAILED_PRECONDITION error occurs if the
                        /// latest revision of the given consent is in `DRAFT` or `REJECTED` state.
                        /// </summary>
                        public class RevokeRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Consent>
                        {
                            /// <summary>Constructs a new Revoke request.</summary>
                            public RevokeRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.RevokeConsentRequest body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Consent to revoke, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
                            /// An INVALID_ARGUMENT error occurs if `revision_id` is specified in the name.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.RevokeConsentRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "revoke";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}:revoke";

                            /// <summary>Initializes Revoke parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/consents/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the UserDataMappings resource.</summary>
                    public virtual UserDataMappingsResource UserDataMappings { get; }

                    /// <summary>The "userDataMappings" collection of methods.</summary>
                    public class UserDataMappingsResource
                    {
                        private const string Resource = "userDataMappings";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public UserDataMappingsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Archives the specified User data mapping.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">Required. The resource name of the User data mapping to archive.</param>
                        public virtual ArchiveRequest Archive(Google.Apis.CloudHealthcare.v1.Data.ArchiveUserDataMappingRequest body, string name)
                        {
                            return new ArchiveRequest(this.service, body, name);
                        }

                        /// <summary>Archives the specified User data mapping.</summary>
                        public class ArchiveRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ArchiveUserDataMappingResponse>
                        {
                            /// <summary>Constructs a new Archive request.</summary>
                            public ArchiveRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ArchiveUserDataMappingRequest body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The resource name of the User data mapping to archive.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.ArchiveUserDataMappingRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "archive";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}:archive";

                            /// <summary>Initializes Archive parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Creates a new User data mapping in the parent consent store.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. Name of the consent store.</param>
                        public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.UserDataMapping body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates a new User data mapping in the parent consent store.</summary>
                        public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.UserDataMapping>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.UserDataMapping body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. Name of the consent store.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.UserDataMapping Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/userDataMappings";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Deletes the specified User data mapping.</summary>
                        /// <param name="name">Required. The resource name of the User data mapping to delete.</param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>Deletes the specified User data mapping.</summary>
                        public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The resource name of the User data mapping to delete.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets the specified User data mapping.</summary>
                        /// <param name="name">Required. The resource name of the User data mapping to retrieve.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets the specified User data mapping.</summary>
                        public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.UserDataMapping>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The resource name of the User data mapping to retrieve.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists the User data mappings in the specified consent store.</summary>
                        /// <param name="parent">
                        /// Required. Name of the consent store to retrieve User data mappings from.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists the User data mappings in the specified consent store.</summary>
                        public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListUserDataMappingsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Name of the consent store to retrieve User data mappings from.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. Restricts the User data mappings returned to those matching a filter. The
                            /// following syntax is available: * A string field value can be written as text inside
                            /// quotation marks, for example `"query text"`. The only valid relational operation for
                            /// text fields is equality (`=`), where text is searched within the field, rather than
                            /// having the field be equal to the text. For example, `"Comment = great"` returns messages
                            /// with `great` in the comment field. * A number field value can be written as an integer,
                            /// a decimal, or an exponential. The valid relational operators for number fields are the
                            /// equality operator (`=`), along with the less than/greater than operators (`&amp;lt;`,
                            /// `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that there is no inequality (`!=`) operator.
                            /// You can prepend the `NOT` operator to an expression to negate it. * A date field value
                            /// must be written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time
                            /// format. Leading zeros are required for one-digit months and days. The valid relational
                            /// operators for date fields are the equality operator (`=`) , along with the less
                            /// than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note
                            /// that there is no inequality (`!=`) operator. You can prepend the `NOT` operator to an
                            /// expression to negate it. * Multiple field query expressions can be combined in one query
                            /// by adding `AND` or `OR` operators between the expressions. If a boolean operator appears
                            /// within a quoted string, it is not treated as special, it's just another part of the
                            /// character string to be matched. You can prepend the `NOT` operator to an expression to
                            /// negate it. The fields available for filtering are: - data_id - user_id. For example,
                            /// `filter=user_id=\"user123\"`. - archived - archive_time
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// Optional. Limit on the number of User data mappings to return in a single response. If
                            /// not specified, 100 is used. May not be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. Token to retrieve the next page of results, or empty to get the first page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/userDataMappings";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Updates the specified User data mapping.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Resource name of the User data mapping, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.UserDataMapping body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>Updates the specified User data mapping.</summary>
                        public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.UserDataMapping>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.UserDataMapping body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Resource name of the User data mapping, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Required. The update mask that applies to the resource. For the `FieldMask` definition,
                            /// see
                            /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.
                            /// Only the `data_id`, `user_id` and `resource_attributes` fields can be updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.UserDataMapping Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+/userDataMappings/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>
                    /// Checks if a particular data_id of a User data mapping in the specified consent store is
                    /// consented for the specified use.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="consentStore">
                    /// Required. Name of the consent store where the requested data_id is stored, of the form
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
                    /// </param>
                    public virtual CheckDataAccessRequest CheckDataAccess(Google.Apis.CloudHealthcare.v1.Data.CheckDataAccessRequest body, string consentStore)
                    {
                        return new CheckDataAccessRequest(this.service, body, consentStore);
                    }

                    /// <summary>
                    /// Checks if a particular data_id of a User data mapping in the specified consent store is
                    /// consented for the specified use.
                    /// </summary>
                    public class CheckDataAccessRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.CheckDataAccessResponse>
                    {
                        /// <summary>Constructs a new CheckDataAccess request.</summary>
                        public CheckDataAccessRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.CheckDataAccessRequest body, string consentStore) : base(service)
                        {
                            ConsentStore = consentStore;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Name of the consent store where the requested data_id is stored, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("consentStore", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ConsentStore { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.CheckDataAccessRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "checkDataAccess";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+consentStore}:checkDataAccess";

                        /// <summary>Initializes CheckDataAccess parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("consentStore", new Google.Apis.Discovery.Parameter
                            {
                                Name = "consentStore",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Creates a new consent store in the parent dataset. Attempting to create a consent store with the
                    /// same ID as an existing store fails with an ALREADY_EXISTS error.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">Required. The name of the dataset this consent store belongs to.</param>
                    public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.ConsentStore body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a new consent store in the parent dataset. Attempting to create a consent store with the
                    /// same ID as an existing store fails with an ALREADY_EXISTS error.
                    /// </summary>
                    public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ConsentStore>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ConsentStore body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>Required. The name of the dataset this consent store belongs to.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The ID of the consent store to create. The string must match the following regex:
                        /// `[\p{L}\p{N}_\-\.]{1,256}`. Cannot be changed after creation.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("consentStoreId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string ConsentStoreId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ConsentStore Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/consentStores";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("consentStoreId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "consentStoreId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Deletes the specified consent store and removes all the consent store's data.</summary>
                    /// <param name="name">Required. The resource name of the consent store to delete.</param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes the specified consent store and removes all the consent store's data.</summary>
                    public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the consent store to delete.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Evaluates the user's Consents for all matching User data mappings. Note: User data mappings are
                    /// indexed asynchronously, which can cause a slight delay between the time mappings are created or
                    /// updated and when they are included in EvaluateUserConsents results.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="consentStore">
                    /// Required. Name of the consent store to retrieve User data mappings from.
                    /// </param>
                    public virtual EvaluateUserConsentsRequest EvaluateUserConsents(Google.Apis.CloudHealthcare.v1.Data.EvaluateUserConsentsRequest body, string consentStore)
                    {
                        return new EvaluateUserConsentsRequest(this.service, body, consentStore);
                    }

                    /// <summary>
                    /// Evaluates the user's Consents for all matching User data mappings. Note: User data mappings are
                    /// indexed asynchronously, which can cause a slight delay between the time mappings are created or
                    /// updated and when they are included in EvaluateUserConsents results.
                    /// </summary>
                    public class EvaluateUserConsentsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.EvaluateUserConsentsResponse>
                    {
                        /// <summary>Constructs a new EvaluateUserConsents request.</summary>
                        public EvaluateUserConsentsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.EvaluateUserConsentsRequest body, string consentStore) : base(service)
                        {
                            ConsentStore = consentStore;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>Required. Name of the consent store to retrieve User data mappings from.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("consentStore", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ConsentStore { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.EvaluateUserConsentsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "evaluateUserConsents";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+consentStore}:evaluateUserConsents";

                        /// <summary>Initializes EvaluateUserConsents parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("consentStore", new Google.Apis.Discovery.Parameter
                            {
                                Name = "consentStore",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets the specified consent store.</summary>
                    /// <param name="name">Required. The resource name of the consent store to get.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets the specified consent store.</summary>
                    public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ConsentStore>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the consent store to get.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual GetIamPolicyRequest GetIamPolicy(string resource)
                    {
                        return new GetIamPolicyRequest(this.service, resource);
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    public class GetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new GetIamPolicy request.</summary>
                        public GetIamPolicyRequest(Google.Apis.Services.IClientService service, string resource) : base(service)
                        {
                            Resource = resource;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>
                        /// Optional. The maximum policy version that will be used to format the policy. Valid values
                        /// are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
                        /// policies with any conditional role bindings must specify version 3. Policies with no
                        /// conditional role bindings may specify any valid value or leave the field unset. The policy
                        /// in the response might use the policy version that you specified, or it might use a lower
                        /// policy version. For example, if you specify version 3, but the policy has no conditional
                        /// role bindings, the response uses version 1. To learn which resources support conditions in
                        /// their IAM policies, see the [IAM
                        /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("options.requestedPolicyVersion", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> OptionsRequestedPolicyVersion { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:getIamPolicy";

                        /// <summary>Initializes GetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                            RequestParameters.Add("options.requestedPolicyVersion", new Google.Apis.Discovery.Parameter
                            {
                                Name = "options.requestedPolicyVersion",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Lists the consent stores in the specified dataset.</summary>
                    /// <param name="parent">Required. Name of the dataset.</param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists the consent stores in the specified dataset.</summary>
                    public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListConsentStoresResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>Required. Name of the dataset.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. Restricts the stores returned to those matching a filter. Only filtering on labels
                        /// is supported. For example, `filter=labels.key=value`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// Optional. Limit on the number of consent stores to return in a single response. If not
                        /// specified, 100 is used. May not be larger than 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. Token to retrieve the next page of results, or empty to get the first page.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/consentStores";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates the specified consent store.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Identifier. Resource name of the consent store, of the form
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
                    /// Cannot be changed after creation.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.ConsentStore body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates the specified consent store.</summary>
                    public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ConsentStore>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ConsentStore body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Identifier. Resource name of the consent store, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
                        /// Cannot be changed after creation.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Required. The update mask that applies to the resource. For the `FieldMask` definition, see
                        /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask.
                        /// Only the `labels`, `default_consent_ttl`, and `enable_consent_create_on_update` fields are
                        /// allowed to be updated.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ConsentStore Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Queries all data_ids that are consented for a specified use in the given consent store and
                    /// writes them to a specified destination. The returned Operation includes a progress counter for
                    /// the number of User data mappings processed. If the request is successful, a detailed response is
                    /// returned of type QueryAccessibleDataResponse, contained in the response field when the operation
                    /// finishes. The metadata field type is OperationMetadata. Errors are logged to Cloud Logging (see
                    /// [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). For example, the following
                    /// sample log entry shows a `failed to evaluate consent policy` error that occurred during a
                    /// QueryAccessibleData call to consent store
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
                    /// ```
                    /// json jsonPayload: { @type:
                    /// "type.googleapis.com/google.cloud.healthcare.logging.QueryAccessibleDataLogEntry" error: { code:
                    /// 9 message: "failed to evaluate consent policy" } resourceName:
                    /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}"
                    /// } logName: "projects/{project_id}/logs/healthcare.googleapis.com%2Fquery_accessible_data"
                    /// operation: { id:
                    /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/operations/{operation_id}"
                    /// producer: "healthcare.googleapis.com/QueryAccessibleData" } receiveTimestamp: "TIMESTAMP"
                    /// resource: { labels: { consent_store_id: "{consent_store_id}" dataset_id: "{dataset_id}"
                    /// location: "{location_id}" project_id: "{project_id}" } type: "healthcare_consent_store" }
                    /// severity: "ERROR" timestamp: "TIMESTAMP"
                    /// ```
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="consentStore">
                    /// Required. Name of the consent store to retrieve User data mappings from.
                    /// </param>
                    public virtual QueryAccessibleDataRequest QueryAccessibleData(Google.Apis.CloudHealthcare.v1.Data.QueryAccessibleDataRequest body, string consentStore)
                    {
                        return new QueryAccessibleDataRequest(this.service, body, consentStore);
                    }

                    /// <summary>
                    /// Queries all data_ids that are consented for a specified use in the given consent store and
                    /// writes them to a specified destination. The returned Operation includes a progress counter for
                    /// the number of User data mappings processed. If the request is successful, a detailed response is
                    /// returned of type QueryAccessibleDataResponse, contained in the response field when the operation
                    /// finishes. The metadata field type is OperationMetadata. Errors are logged to Cloud Logging (see
                    /// [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). For example, the following
                    /// sample log entry shows a `failed to evaluate consent policy` error that occurred during a
                    /// QueryAccessibleData call to consent store
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
                    /// ```
                    /// json jsonPayload: { @type:
                    /// "type.googleapis.com/google.cloud.healthcare.logging.QueryAccessibleDataLogEntry" error: { code:
                    /// 9 message: "failed to evaluate consent policy" } resourceName:
                    /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}"
                    /// } logName: "projects/{project_id}/logs/healthcare.googleapis.com%2Fquery_accessible_data"
                    /// operation: { id:
                    /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/operations/{operation_id}"
                    /// producer: "healthcare.googleapis.com/QueryAccessibleData" } receiveTimestamp: "TIMESTAMP"
                    /// resource: { labels: { consent_store_id: "{consent_store_id}" dataset_id: "{dataset_id}"
                    /// location: "{location_id}" project_id: "{project_id}" } type: "healthcare_consent_store" }
                    /// severity: "ERROR" timestamp: "TIMESTAMP"
                    /// ```
                    /// </summary>
                    public class QueryAccessibleDataRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new QueryAccessibleData request.</summary>
                        public QueryAccessibleDataRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.QueryAccessibleDataRequest body, string consentStore) : base(service)
                        {
                            ConsentStore = consentStore;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>Required. Name of the consent store to retrieve User data mappings from.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("consentStore", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ConsentStore { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.QueryAccessibleDataRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "queryAccessibleData";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+consentStore}:queryAccessibleData";

                        /// <summary>Initializes QueryAccessibleData parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("consentStore", new Google.Apis.Discovery.Parameter
                            {
                                Name = "consentStore",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being specified. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual SetIamPolicyRequest SetIamPolicy(Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource)
                    {
                        return new SetIamPolicyRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    public class SetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new SetIamPolicy request.</summary>
                        public SetIamPolicyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being specified. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "setIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:setIamPolicy";

                        /// <summary>Initializes SetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual TestIamPermissionsRequest TestIamPermissions(Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource)
                    {
                        return new TestIamPermissionsRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    public class TestIamPermissionsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsResponse>
                    {
                        /// <summary>Constructs a new TestIamPermissions request.</summary>
                        public TestIamPermissionsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "testIamPermissions";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:testIamPermissions";

                        /// <summary>Initializes TestIamPermissions parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/consentStores/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the DataMapperWorkspaces resource.</summary>
                public virtual DataMapperWorkspacesResource DataMapperWorkspaces { get; }

                /// <summary>The "dataMapperWorkspaces" collection of methods.</summary>
                public class DataMapperWorkspacesResource
                {
                    private const string Resource = "dataMapperWorkspaces";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public DataMapperWorkspacesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual GetIamPolicyRequest GetIamPolicy(string resource)
                    {
                        return new GetIamPolicyRequest(this.service, resource);
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    public class GetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new GetIamPolicy request.</summary>
                        public GetIamPolicyRequest(Google.Apis.Services.IClientService service, string resource) : base(service)
                        {
                            Resource = resource;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>
                        /// Optional. The maximum policy version that will be used to format the policy. Valid values
                        /// are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
                        /// policies with any conditional role bindings must specify version 3. Policies with no
                        /// conditional role bindings may specify any valid value or leave the field unset. The policy
                        /// in the response might use the policy version that you specified, or it might use a lower
                        /// policy version. For example, if you specify version 3, but the policy has no conditional
                        /// role bindings, the response uses version 1. To learn which resources support conditions in
                        /// their IAM policies, see the [IAM
                        /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("options.requestedPolicyVersion", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> OptionsRequestedPolicyVersion { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:getIamPolicy";

                        /// <summary>Initializes GetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$",
                            });
                            RequestParameters.Add("options.requestedPolicyVersion", new Google.Apis.Discovery.Parameter
                            {
                                Name = "options.requestedPolicyVersion",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being specified. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual SetIamPolicyRequest SetIamPolicy(Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource)
                    {
                        return new SetIamPolicyRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    public class SetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new SetIamPolicy request.</summary>
                        public SetIamPolicyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being specified. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "setIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:setIamPolicy";

                        /// <summary>Initializes SetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual TestIamPermissionsRequest TestIamPermissions(Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource)
                    {
                        return new TestIamPermissionsRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    public class TestIamPermissionsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsResponse>
                    {
                        /// <summary>Constructs a new TestIamPermissions request.</summary>
                        public TestIamPermissionsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "testIamPermissions";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:testIamPermissions";

                        /// <summary>Initializes TestIamPermissions parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dataMapperWorkspaces/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the DicomStores resource.</summary>
                public virtual DicomStoresResource DicomStores { get; }

                /// <summary>The "dicomStores" collection of methods.</summary>
                public class DicomStoresResource
                {
                    private const string Resource = "dicomStores";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public DicomStoresResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        DicomWeb = new DicomWebResource(service);
                        Studies = new StudiesResource(service);
                    }

                    /// <summary>Gets the DicomWeb resource.</summary>
                    public virtual DicomWebResource DicomWeb { get; }

                    /// <summary>The "dicomWeb" collection of methods.</summary>
                    public class DicomWebResource
                    {
                        private const string Resource = "dicomWeb";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public DicomWebResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Studies = new StudiesResource(service);
                        }

                        /// <summary>Gets the Studies resource.</summary>
                        public virtual StudiesResource Studies { get; }

                        /// <summary>The "studies" collection of methods.</summary>
                        public class StudiesResource
                        {
                            private const string Resource = "studies";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public StudiesResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                                Series = new SeriesResource(service);
                            }

                            /// <summary>Gets the Series resource.</summary>
                            public virtual SeriesResource Series { get; }

                            /// <summary>The "series" collection of methods.</summary>
                            public class SeriesResource
                            {
                                private const string Resource = "series";

                                /// <summary>The service which this resource belongs to.</summary>
                                private readonly Google.Apis.Services.IClientService service;

                                /// <summary>Constructs a new resource.</summary>
                                public SeriesResource(Google.Apis.Services.IClientService service)
                                {
                                    this.service = service;
                                    Instances = new InstancesResource(service);
                                }

                                /// <summary>Gets the Instances resource.</summary>
                                public virtual InstancesResource Instances { get; }

                                /// <summary>The "instances" collection of methods.</summary>
                                public class InstancesResource
                                {
                                    private const string Resource = "instances";

                                    /// <summary>The service which this resource belongs to.</summary>
                                    private readonly Google.Apis.Services.IClientService service;

                                    /// <summary>Constructs a new resource.</summary>
                                    public InstancesResource(Google.Apis.Services.IClientService service)
                                    {
                                        this.service = service;
                                    }

                                    /// <summary>
                                    /// GetStorageInfo returns the storage info of the specified resource.
                                    /// </summary>
                                    /// <param name="resource">
                                    /// Required. The path of the instance to return storage info for, in the form:
                                    /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`
                                    /// </param>
                                    public virtual GetStorageInfoRequest GetStorageInfo(string resource)
                                    {
                                        return new GetStorageInfoRequest(this.service, resource);
                                    }

                                    /// <summary>
                                    /// GetStorageInfo returns the storage info of the specified resource.
                                    /// </summary>
                                    public class GetStorageInfoRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.StorageInfo>
                                    {
                                        /// <summary>Constructs a new GetStorageInfo request.</summary>
                                        public GetStorageInfoRequest(Google.Apis.Services.IClientService service, string resource) : base(service)
                                        {
                                            Resource = resource;
                                            InitParameters();
                                        }

                                        /// <summary>
                                        /// Required. The path of the instance to return storage info for, in the form:
                                        /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`
                                        /// </summary>
                                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                                        public virtual string Resource { get; private set; }

                                        /// <summary>Gets the method name.</summary>
                                        public override string MethodName => "getStorageInfo";

                                        /// <summary>Gets the HTTP method.</summary>
                                        public override string HttpMethod => "GET";

                                        /// <summary>Gets the REST path.</summary>
                                        public override string RestPath => "v1/{+resource}:getStorageInfo";

                                        /// <summary>Initializes GetStorageInfo parameter list.</summary>
                                        protected override void InitParameters()
                                        {
                                            base.InitParameters();
                                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                                            {
                                                Name = "resource",
                                                IsRequired = true,
                                                ParameterType = "path",
                                                DefaultValue = null,
                                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+/series/[^/]+/instances/[^/]+$",
                                            });
                                        }
                                    }
                                }

                                /// <summary>GetSeriesMetrics returns metrics for a series.</summary>
                                /// <param name="series">
                                /// Required. The series resource path. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}/series/{series_uid}`.
                                /// </param>
                                public virtual GetSeriesMetricsRequest GetSeriesMetrics(string series)
                                {
                                    return new GetSeriesMetricsRequest(this.service, series);
                                }

                                /// <summary>GetSeriesMetrics returns metrics for a series.</summary>
                                public class GetSeriesMetricsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.SeriesMetrics>
                                {
                                    /// <summary>Constructs a new GetSeriesMetrics request.</summary>
                                    public GetSeriesMetricsRequest(Google.Apis.Services.IClientService service, string series) : base(service)
                                    {
                                        Series = series;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The series resource path. For example,
                                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}/series/{series_uid}`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("series", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Series { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "getSeriesMetrics";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v1/{+series}:getSeriesMetrics";

                                    /// <summary>Initializes GetSeriesMetrics parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("series", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "series",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+/series/[^/]+$",
                                        });
                                    }
                                }
                            }

                            /// <summary>GetStudyMetrics returns metrics for a study.</summary>
                            /// <param name="study">
                            /// Required. The study resource path. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}`.
                            /// </param>
                            public virtual GetStudyMetricsRequest GetStudyMetrics(string study)
                            {
                                return new GetStudyMetricsRequest(this.service, study);
                            }

                            /// <summary>GetStudyMetrics returns metrics for a study.</summary>
                            public class GetStudyMetricsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.StudyMetrics>
                            {
                                /// <summary>Constructs a new GetStudyMetrics request.</summary>
                                public GetStudyMetricsRequest(Google.Apis.Services.IClientService service, string study) : base(service)
                                {
                                    Study = study;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The study resource path. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("study", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Study { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "getStudyMetrics";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1/{+study}:getStudyMetrics";

                                /// <summary>Initializes GetStudyMetrics parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("study", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "study",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// SetBlobStorageSettings sets the blob storage settings of the specified resources.
                            /// </summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="resource">
                            /// Required. The path of the resource to update the blob storage settings in the format of
                            /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}`,
                            /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`,
                            /// or
                            /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`.
                            /// If `filter_config` is specified, set the value of `resource` to the resource name of a
                            /// DICOM store in the format
                            /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
                            /// </param>
                            public virtual SetBlobStorageSettingsRequest SetBlobStorageSettings(Google.Apis.CloudHealthcare.v1.Data.SetBlobStorageSettingsRequest body, string resource)
                            {
                                return new SetBlobStorageSettingsRequest(this.service, body, resource);
                            }

                            /// <summary>
                            /// SetBlobStorageSettings sets the blob storage settings of the specified resources.
                            /// </summary>
                            public class SetBlobStorageSettingsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                            {
                                /// <summary>Constructs a new SetBlobStorageSettings request.</summary>
                                public SetBlobStorageSettingsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SetBlobStorageSettingsRequest body, string resource) : base(service)
                                {
                                    Resource = resource;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The path of the resource to update the blob storage settings in the format
                                /// of
                                /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}`,
                                /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`,
                                /// or
                                /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`.
                                /// If `filter_config` is specified, set the value of `resource` to the resource name of
                                /// a DICOM store in the format
                                /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Resource { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.CloudHealthcare.v1.Data.SetBlobStorageSettingsRequest Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "setBlobStorageSettings";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1/{+resource}:setBlobStorageSettings";

                                /// <summary>Initializes SetBlobStorageSettings parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "resource",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+/dicomWeb/studies/.*$",
                                    });
                                }
                            }
                        }
                    }

                    /// <summary>Gets the Studies resource.</summary>
                    public virtual StudiesResource Studies { get; }

                    /// <summary>The "studies" collection of methods.</summary>
                    public class StudiesResource
                    {
                        private const string Resource = "studies";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public StudiesResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Series = new SeriesResource(service);
                        }

                        /// <summary>Gets the Series resource.</summary>
                        public virtual SeriesResource Series { get; }

                        /// <summary>The "series" collection of methods.</summary>
                        public class SeriesResource
                        {
                            private const string Resource = "series";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public SeriesResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                                Instances = new InstancesResource(service);
                            }

                            /// <summary>Gets the Instances resource.</summary>
                            public virtual InstancesResource Instances { get; }

                            /// <summary>The "instances" collection of methods.</summary>
                            public class InstancesResource
                            {
                                private const string Resource = "instances";

                                /// <summary>The service which this resource belongs to.</summary>
                                private readonly Google.Apis.Services.IClientService service;

                                /// <summary>Constructs a new resource.</summary>
                                public InstancesResource(Google.Apis.Services.IClientService service)
                                {
                                    this.service = service;
                                    Frames = new FramesResource(service);
                                }

                                /// <summary>Gets the Frames resource.</summary>
                                public virtual FramesResource Frames { get; }

                                /// <summary>The "frames" collection of methods.</summary>
                                public class FramesResource
                                {
                                    private const string Resource = "frames";

                                    /// <summary>The service which this resource belongs to.</summary>
                                    private readonly Google.Apis.Services.IClientService service;

                                    /// <summary>Constructs a new resource.</summary>
                                    public FramesResource(Google.Apis.Services.IClientService service)
                                    {
                                        this.service = service;
                                    }

                                    /// <summary>
                                    /// RetrieveFrames returns instances associated with the given study, series, SOP
                                    /// Instance UID and frame numbers. See [RetrieveTransaction]
                                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4}.
                                    /// For details on the implementation of RetrieveFrames, see [DICOM
                                    /// frames](https://cloud.google.com/healthcare/docs/dicom#dicom_frames) in the
                                    /// Cloud Healthcare API conformance statement. For samples that show how to call
                                    /// RetrieveFrames, see [Retrieve DICOM
                                    /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                                    /// </summary>
                                    /// <param name="parent">
                                    /// Required. The name of the DICOM store that is being accessed. For example,
                                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                    /// </param>
                                    /// <param name="dicomWebPath">
                                    /// Required. The path of the RetrieveFrames DICOMweb request. For example,
                                    /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}`.
                                    /// </param>
                                    public virtual RetrieveFramesRequest RetrieveFrames(string parent, string dicomWebPath)
                                    {
                                        return new RetrieveFramesRequest(this.service, parent, dicomWebPath);
                                    }

                                    /// <summary>
                                    /// RetrieveFrames returns instances associated with the given study, series, SOP
                                    /// Instance UID and frame numbers. See [RetrieveTransaction]
                                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4}.
                                    /// For details on the implementation of RetrieveFrames, see [DICOM
                                    /// frames](https://cloud.google.com/healthcare/docs/dicom#dicom_frames) in the
                                    /// Cloud Healthcare API conformance statement. For samples that show how to call
                                    /// RetrieveFrames, see [Retrieve DICOM
                                    /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                                    /// </summary>
                                    public class RetrieveFramesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                                    {
                                        /// <summary>Constructs a new RetrieveFrames request.</summary>
                                        public RetrieveFramesRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                        {
                                            Parent = parent;
                                            DicomWebPath = dicomWebPath;
                                            InitParameters();
                                        }

                                        /// <summary>
                                        /// Required. The name of the DICOM store that is being accessed. For example,
                                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                        /// </summary>
                                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                        public virtual string Parent { get; private set; }

                                        /// <summary>
                                        /// Required. The path of the RetrieveFrames DICOMweb request. For example,
                                        /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}`.
                                        /// </summary>
                                        [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                        public virtual string DicomWebPath { get; private set; }

                                        /// <summary>Gets the method name.</summary>
                                        public override string MethodName => "retrieveFrames";

                                        /// <summary>Gets the HTTP method.</summary>
                                        public override string HttpMethod => "GET";

                                        /// <summary>Gets the REST path.</summary>
                                        public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                        /// <summary>Initializes RetrieveFrames parameter list.</summary>
                                        protected override void InitParameters()
                                        {
                                            base.InitParameters();
                                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                            {
                                                Name = "parent",
                                                IsRequired = true,
                                                ParameterType = "path",
                                                DefaultValue = null,
                                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                            });
                                            RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                            {
                                                Name = "dicomWebPath",
                                                IsRequired = true,
                                                ParameterType = "path",
                                                DefaultValue = null,
                                                Pattern = @"^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+$",
                                            });
                                        }
                                    }

                                    /// <summary>
                                    /// RetrieveRenderedFrames returns instances associated with the given study,
                                    /// series, SOP Instance UID and frame numbers in an acceptable Rendered Media Type.
                                    /// See [RetrieveTransaction]
                                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).
                                    /// For details on the implementation of RetrieveRenderedFrames, see [Rendered
                                    /// resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources) in
                                    /// the Cloud Healthcare API conformance statement. For samples that show how to
                                    /// call RetrieveRenderedFrames, see [Retrieve consumer image
                                    /// formats](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-consumer).
                                    /// </summary>
                                    /// <param name="parent">
                                    /// Required. The name of the DICOM store that is being accessed. For example,
                                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                    /// </param>
                                    /// <param name="dicomWebPath">
                                    /// Required. The path of the RetrieveRenderedFrames DICOMweb request. For example,
                                    /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}/rendered`.
                                    /// </param>
                                    public virtual RetrieveRenderedRequest RetrieveRendered(string parent, string dicomWebPath)
                                    {
                                        return new RetrieveRenderedRequest(this.service, parent, dicomWebPath);
                                    }

                                    /// <summary>
                                    /// RetrieveRenderedFrames returns instances associated with the given study,
                                    /// series, SOP Instance UID and frame numbers in an acceptable Rendered Media Type.
                                    /// See [RetrieveTransaction]
                                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4).
                                    /// For details on the implementation of RetrieveRenderedFrames, see [Rendered
                                    /// resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources) in
                                    /// the Cloud Healthcare API conformance statement. For samples that show how to
                                    /// call RetrieveRenderedFrames, see [Retrieve consumer image
                                    /// formats](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-consumer).
                                    /// </summary>
                                    public class RetrieveRenderedRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                                    {
                                        /// <summary>Constructs a new RetrieveRendered request.</summary>
                                        public RetrieveRenderedRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                        {
                                            Parent = parent;
                                            DicomWebPath = dicomWebPath;
                                            InitParameters();
                                        }

                                        /// <summary>
                                        /// Required. The name of the DICOM store that is being accessed. For example,
                                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                        /// </summary>
                                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                        public virtual string Parent { get; private set; }

                                        /// <summary>
                                        /// Required. The path of the RetrieveRenderedFrames DICOMweb request. For
                                        /// example,
                                        /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/frames/{frame_list}/rendered`.
                                        /// </summary>
                                        [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                        public virtual string DicomWebPath { get; private set; }

                                        /// <summary>
                                        /// Optional. The viewport setting to use as specified in
                                        /// https://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_8.3.5.html#sect_8.3.5.1.3
                                        /// </summary>
                                        [Google.Apis.Util.RequestParameterAttribute("viewport", Google.Apis.Util.RequestParameterType.Query)]
                                        public virtual string Viewport { get; set; }

                                        /// <summary>Gets the method name.</summary>
                                        public override string MethodName => "retrieveRendered";

                                        /// <summary>Gets the HTTP method.</summary>
                                        public override string HttpMethod => "GET";

                                        /// <summary>Gets the REST path.</summary>
                                        public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                        /// <summary>Initializes RetrieveRendered parameter list.</summary>
                                        protected override void InitParameters()
                                        {
                                            base.InitParameters();
                                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                            {
                                                Name = "parent",
                                                IsRequired = true,
                                                ParameterType = "path",
                                                DefaultValue = null,
                                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                            });
                                            RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                            {
                                                Name = "dicomWebPath",
                                                IsRequired = true,
                                                ParameterType = "path",
                                                DefaultValue = null,
                                                Pattern = @"^studies/[^/]+/series/[^/]+/instances/[^/]+/frames/[^/]+/rendered$",
                                            });
                                            RequestParameters.Add("viewport", new Google.Apis.Discovery.Parameter
                                            {
                                                Name = "viewport",
                                                IsRequired = false,
                                                ParameterType = "query",
                                                DefaultValue = null,
                                                Pattern = null,
                                            });
                                        }
                                    }
                                }

                                /// <summary>
                                /// DeleteInstance deletes an instance associated with the given study, series, and SOP
                                /// Instance UID. Delete requests are equivalent to the GET requests specified in the
                                /// Retrieve transaction. Study and series search results can take a few seconds to be
                                /// updated after an instance is deleted using DeleteInstance. For samples that show how
                                /// to call DeleteInstance, see [Delete a study, series, or
                                /// instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
                                /// </summary>
                                /// <param name="parent">
                                /// Required. The name of the DICOM store that is being accessed. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                /// </param>
                                /// <param name="dicomWebPath">
                                /// Required. The path of the DeleteInstance request. For example,
                                /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                                /// </param>
                                public virtual DeleteRequest Delete(string parent, string dicomWebPath)
                                {
                                    return new DeleteRequest(this.service, parent, dicomWebPath);
                                }

                                /// <summary>
                                /// DeleteInstance deletes an instance associated with the given study, series, and SOP
                                /// Instance UID. Delete requests are equivalent to the GET requests specified in the
                                /// Retrieve transaction. Study and series search results can take a few seconds to be
                                /// updated after an instance is deleted using DeleteInstance. For samples that show how
                                /// to call DeleteInstance, see [Delete a study, series, or
                                /// instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
                                /// </summary>
                                public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                                {
                                    /// <summary>Constructs a new Delete request.</summary>
                                    public DeleteRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                    {
                                        Parent = parent;
                                        DicomWebPath = dicomWebPath;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The name of the DICOM store that is being accessed. For example,
                                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Parent { get; private set; }

                                    /// <summary>
                                    /// Required. The path of the DeleteInstance request. For example,
                                    /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string DicomWebPath { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "delete";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "DELETE";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                    /// <summary>Initializes Delete parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "parent",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                        });
                                        RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "dicomWebPath",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^studies/[^/]+/series/[^/]+/instances/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>
                                /// RetrieveInstance returns instance associated with the given study, series, and SOP
                                /// Instance UID. See [RetrieveTransaction]
                                /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                                /// details on the implementation of RetrieveInstance, see [DICOM
                                /// study/series/instances](https://cloud.google.com/healthcare/docs/dicom#dicom_studyseriesinstances)
                                /// and [DICOM
                                /// instances](https://cloud.google.com/healthcare/docs/dicom#dicom_instances) in the
                                /// Cloud Healthcare API conformance statement. For samples that show how to call
                                /// RetrieveInstance, see [Retrieve an
                                /// instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-instance).
                                /// </summary>
                                /// <param name="parent">
                                /// Required. The name of the DICOM store that is being accessed. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                /// </param>
                                /// <param name="dicomWebPath">
                                /// Required. The path of the RetrieveInstance DICOMweb request. For example,
                                /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                                /// </param>
                                public virtual RetrieveInstanceRequest RetrieveInstance(string parent, string dicomWebPath)
                                {
                                    return new RetrieveInstanceRequest(this.service, parent, dicomWebPath);
                                }

                                /// <summary>
                                /// RetrieveInstance returns instance associated with the given study, series, and SOP
                                /// Instance UID. See [RetrieveTransaction]
                                /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                                /// details on the implementation of RetrieveInstance, see [DICOM
                                /// study/series/instances](https://cloud.google.com/healthcare/docs/dicom#dicom_studyseriesinstances)
                                /// and [DICOM
                                /// instances](https://cloud.google.com/healthcare/docs/dicom#dicom_instances) in the
                                /// Cloud Healthcare API conformance statement. For samples that show how to call
                                /// RetrieveInstance, see [Retrieve an
                                /// instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-instance).
                                /// </summary>
                                public class RetrieveInstanceRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                                {
                                    /// <summary>Constructs a new RetrieveInstance request.</summary>
                                    public RetrieveInstanceRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                    {
                                        Parent = parent;
                                        DicomWebPath = dicomWebPath;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The name of the DICOM store that is being accessed. For example,
                                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Parent { get; private set; }

                                    /// <summary>
                                    /// Required. The path of the RetrieveInstance DICOMweb request. For example,
                                    /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string DicomWebPath { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "retrieveInstance";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                    /// <summary>Initializes RetrieveInstance parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "parent",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                        });
                                        RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "dicomWebPath",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^studies/[^/]+/series/[^/]+/instances/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>
                                /// RetrieveInstanceMetadata returns instance associated with the given study, series,
                                /// and SOP Instance UID presented as metadata with the bulk data removed. See
                                /// [RetrieveTransaction]
                                /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                                /// details on the implementation of RetrieveInstanceMetadata, see [Metadata
                                /// resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the
                                /// Cloud Healthcare API conformance statement. For samples that show how to call
                                /// RetrieveInstanceMetadata, see [Retrieve
                                /// metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-metadata).
                                /// </summary>
                                /// <param name="parent">
                                /// Required. The name of the DICOM store that is being accessed. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                /// </param>
                                /// <param name="dicomWebPath">
                                /// Required. The path of the RetrieveInstanceMetadata DICOMweb request. For example,
                                /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/metadata`.
                                /// </param>
                                public virtual RetrieveMetadataRequest RetrieveMetadata(string parent, string dicomWebPath)
                                {
                                    return new RetrieveMetadataRequest(this.service, parent, dicomWebPath);
                                }

                                /// <summary>
                                /// RetrieveInstanceMetadata returns instance associated with the given study, series,
                                /// and SOP Instance UID presented as metadata with the bulk data removed. See
                                /// [RetrieveTransaction]
                                /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                                /// details on the implementation of RetrieveInstanceMetadata, see [Metadata
                                /// resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the
                                /// Cloud Healthcare API conformance statement. For samples that show how to call
                                /// RetrieveInstanceMetadata, see [Retrieve
                                /// metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-metadata).
                                /// </summary>
                                public class RetrieveMetadataRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                                {
                                    /// <summary>Constructs a new RetrieveMetadata request.</summary>
                                    public RetrieveMetadataRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                    {
                                        Parent = parent;
                                        DicomWebPath = dicomWebPath;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The name of the DICOM store that is being accessed. For example,
                                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Parent { get; private set; }

                                    /// <summary>
                                    /// Required. The path of the RetrieveInstanceMetadata DICOMweb request. For
                                    /// example,
                                    /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/metadata`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string DicomWebPath { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "retrieveMetadata";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                    /// <summary>Initializes RetrieveMetadata parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "parent",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                        });
                                        RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "dicomWebPath",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^studies/[^/]+/series/[^/]+/instances/[^/]+/metadata$",
                                        });
                                    }
                                }

                                /// <summary>
                                /// RetrieveRenderedInstance returns instance associated with the given study, series,
                                /// and SOP Instance UID in an acceptable Rendered Media Type. See [RetrieveTransaction]
                                /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                                /// details on the implementation of RetrieveRenderedInstance, see [Rendered
                                /// resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources) in the
                                /// Cloud Healthcare API conformance statement. For samples that show how to call
                                /// RetrieveRenderedInstance, see [Retrieve consumer image
                                /// formats](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-consumer).
                                /// </summary>
                                /// <param name="parent">
                                /// Required. The name of the DICOM store that is being accessed. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                /// </param>
                                /// <param name="dicomWebPath">
                                /// Required. The path of the RetrieveRenderedInstance DICOMweb request. For example,
                                /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/rendered`.
                                /// </param>
                                public virtual RetrieveRenderedRequest RetrieveRendered(string parent, string dicomWebPath)
                                {
                                    return new RetrieveRenderedRequest(this.service, parent, dicomWebPath);
                                }

                                /// <summary>
                                /// RetrieveRenderedInstance returns instance associated with the given study, series,
                                /// and SOP Instance UID in an acceptable Rendered Media Type. See [RetrieveTransaction]
                                /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                                /// details on the implementation of RetrieveRenderedInstance, see [Rendered
                                /// resources](https://cloud.google.com/healthcare/docs/dicom#rendered_resources) in the
                                /// Cloud Healthcare API conformance statement. For samples that show how to call
                                /// RetrieveRenderedInstance, see [Retrieve consumer image
                                /// formats](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-consumer).
                                /// </summary>
                                public class RetrieveRenderedRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                                {
                                    /// <summary>Constructs a new RetrieveRendered request.</summary>
                                    public RetrieveRenderedRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                    {
                                        Parent = parent;
                                        DicomWebPath = dicomWebPath;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The name of the DICOM store that is being accessed. For example,
                                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Parent { get; private set; }

                                    /// <summary>
                                    /// Required. The path of the RetrieveRenderedInstance DICOMweb request. For
                                    /// example,
                                    /// `studies/{study_uid}/series/{series_uid}/instances/{instance_uid}/rendered`.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string DicomWebPath { get; private set; }

                                    /// <summary>
                                    /// Optional. The viewport setting to use as specified in
                                    /// https://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_8.3.5.html#sect_8.3.5.1.3
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("viewport", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual string Viewport { get; set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "retrieveRendered";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                    /// <summary>Initializes RetrieveRendered parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "parent",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                        });
                                        RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "dicomWebPath",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^studies/[^/]+/series/[^/]+/instances/[^/]+/rendered$",
                                        });
                                        RequestParameters.Add("viewport", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "viewport",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                    }
                                }
                            }

                            /// <summary>
                            /// DeleteSeries deletes all instances within the given study and series. Delete requests
                            /// are equivalent to the GET requests specified in the Retrieve transaction. The method
                            /// returns an Operation which will be marked successful when the deletion is complete.
                            /// Warning: Instances cannot be inserted into a series that is being deleted by an
                            /// operation until the operation completes. For samples that show how to call DeleteSeries,
                            /// see [Delete a study, series, or
                            /// instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
                            /// </summary>
                            /// <param name="parent">
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </param>
                            /// <param name="dicomWebPath">
                            /// Required. The path of the DeleteSeries request. For example,
                            /// `studies/{study_uid}/series/{series_uid}`.
                            /// </param>
                            public virtual DeleteRequest Delete(string parent, string dicomWebPath)
                            {
                                return new DeleteRequest(this.service, parent, dicomWebPath);
                            }

                            /// <summary>
                            /// DeleteSeries deletes all instances within the given study and series. Delete requests
                            /// are equivalent to the GET requests specified in the Retrieve transaction. The method
                            /// returns an Operation which will be marked successful when the deletion is complete.
                            /// Warning: Instances cannot be inserted into a series that is being deleted by an
                            /// operation until the operation completes. For samples that show how to call DeleteSeries,
                            /// see [Delete a study, series, or
                            /// instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
                            /// </summary>
                            public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                            {
                                /// <summary>Constructs a new Delete request.</summary>
                                public DeleteRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                {
                                    Parent = parent;
                                    DicomWebPath = dicomWebPath;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the DICOM store that is being accessed. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Required. The path of the DeleteSeries request. For example,
                                /// `studies/{study_uid}/series/{series_uid}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string DicomWebPath { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "delete";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "DELETE";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                /// <summary>Initializes Delete parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                    });
                                    RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "dicomWebPath",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^studies/[^/]+/series/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// RetrieveSeriesMetadata returns instance associated with the given study and series,
                            /// presented as metadata with the bulk data removed. See [RetrieveTransaction]
                            /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                            /// details on the implementation of RetrieveSeriesMetadata, see [Metadata
                            /// resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the
                            /// Cloud Healthcare API conformance statement. For samples that show how to call
                            /// RetrieveSeriesMetadata, see [Retrieve
                            /// metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-metadata).
                            /// </summary>
                            /// <param name="parent">
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </param>
                            /// <param name="dicomWebPath">
                            /// Required. The path of the RetrieveSeriesMetadata DICOMweb request. For example,
                            /// `studies/{study_uid}/series/{series_uid}/metadata`.
                            /// </param>
                            public virtual RetrieveMetadataRequest RetrieveMetadata(string parent, string dicomWebPath)
                            {
                                return new RetrieveMetadataRequest(this.service, parent, dicomWebPath);
                            }

                            /// <summary>
                            /// RetrieveSeriesMetadata returns instance associated with the given study and series,
                            /// presented as metadata with the bulk data removed. See [RetrieveTransaction]
                            /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                            /// details on the implementation of RetrieveSeriesMetadata, see [Metadata
                            /// resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the
                            /// Cloud Healthcare API conformance statement. For samples that show how to call
                            /// RetrieveSeriesMetadata, see [Retrieve
                            /// metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-metadata).
                            /// </summary>
                            public class RetrieveMetadataRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                            {
                                /// <summary>Constructs a new RetrieveMetadata request.</summary>
                                public RetrieveMetadataRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                {
                                    Parent = parent;
                                    DicomWebPath = dicomWebPath;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the DICOM store that is being accessed. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Required. The path of the RetrieveSeriesMetadata DICOMweb request. For example,
                                /// `studies/{study_uid}/series/{series_uid}/metadata`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string DicomWebPath { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "retrieveMetadata";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                /// <summary>Initializes RetrieveMetadata parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                    });
                                    RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "dicomWebPath",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^studies/[^/]+/series/[^/]+/metadata$",
                                    });
                                }
                            }

                            /// <summary>
                            /// RetrieveSeries returns all instances within the given study and series. See
                            /// [RetrieveTransaction]
                            /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                            /// details on the implementation of RetrieveSeries, see [DICOM
                            /// study/series/instances](https://cloud.google.com/healthcare/docs/dicom#dicom_studyseriesinstances)
                            /// in the Cloud Healthcare API conformance statement. For samples that show how to call
                            /// RetrieveSeries, see [Retrieve DICOM
                            /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                            /// </summary>
                            /// <param name="parent">
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </param>
                            /// <param name="dicomWebPath">
                            /// Required. The path of the RetrieveSeries DICOMweb request. For example,
                            /// `studies/{study_uid}/series/{series_uid}`.
                            /// </param>
                            public virtual RetrieveSeriesRequest RetrieveSeries(string parent, string dicomWebPath)
                            {
                                return new RetrieveSeriesRequest(this.service, parent, dicomWebPath);
                            }

                            /// <summary>
                            /// RetrieveSeries returns all instances within the given study and series. See
                            /// [RetrieveTransaction]
                            /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For
                            /// details on the implementation of RetrieveSeries, see [DICOM
                            /// study/series/instances](https://cloud.google.com/healthcare/docs/dicom#dicom_studyseriesinstances)
                            /// in the Cloud Healthcare API conformance statement. For samples that show how to call
                            /// RetrieveSeries, see [Retrieve DICOM
                            /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                            /// </summary>
                            public class RetrieveSeriesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                            {
                                /// <summary>Constructs a new RetrieveSeries request.</summary>
                                public RetrieveSeriesRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                {
                                    Parent = parent;
                                    DicomWebPath = dicomWebPath;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the DICOM store that is being accessed. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Required. The path of the RetrieveSeries DICOMweb request. For example,
                                /// `studies/{study_uid}/series/{series_uid}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string DicomWebPath { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "retrieveSeries";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                /// <summary>Initializes RetrieveSeries parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                    });
                                    RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "dicomWebPath",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^studies/[^/]+/series/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// SearchForInstances returns a list of matching instances. See [Search Transaction]
                            /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For
                            /// details on the implementation of SearchForInstances, see [Search
                            /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the
                            /// Cloud Healthcare API conformance statement. For samples that show how to call
                            /// SearchForInstances, see [Search for DICOM
                            /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                            /// </summary>
                            /// <param name="parent">
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </param>
                            /// <param name="dicomWebPath">
                            /// Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
                            /// `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
                            /// </param>
                            public virtual SearchForInstancesRequest SearchForInstances(string parent, string dicomWebPath)
                            {
                                return new SearchForInstancesRequest(this.service, parent, dicomWebPath);
                            }

                            /// <summary>
                            /// SearchForInstances returns a list of matching instances. See [Search Transaction]
                            /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For
                            /// details on the implementation of SearchForInstances, see [Search
                            /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the
                            /// Cloud Healthcare API conformance statement. For samples that show how to call
                            /// SearchForInstances, see [Search for DICOM
                            /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                            /// </summary>
                            public class SearchForInstancesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                            {
                                /// <summary>Constructs a new SearchForInstances request.</summary>
                                public SearchForInstancesRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                                {
                                    Parent = parent;
                                    DicomWebPath = dicomWebPath;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the DICOM store that is being accessed. For example,
                                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
                                /// `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string DicomWebPath { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "searchForInstances";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                                /// <summary>Initializes SearchForInstances parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                    });
                                    RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "dicomWebPath",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^studies/[^/]+/series/[^/]+/instances$",
                                    });
                                }
                            }
                        }

                        /// <summary>
                        /// DeleteStudy deletes all instances within the given study. Delete requests are equivalent to
                        /// the GET requests specified in the Retrieve transaction. The method returns an Operation
                        /// which will be marked successful when the deletion is complete. Warning: Instances cannot be
                        /// inserted into a study that is being deleted by an operation until the operation completes.
                        /// For samples that show how to call DeleteStudy, see [Delete a study, series, or
                        /// instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
                        /// </summary>
                        /// <param name="parent"><c>null</c></param>
                        /// <param name="dicomWebPath">
                        /// Required. The path of the DeleteStudy request. For example, `studies/{study_uid}`.
                        /// </param>
                        public virtual DeleteRequest Delete(string parent, string dicomWebPath)
                        {
                            return new DeleteRequest(this.service, parent, dicomWebPath);
                        }

                        /// <summary>
                        /// DeleteStudy deletes all instances within the given study. Delete requests are equivalent to
                        /// the GET requests specified in the Retrieve transaction. The method returns an Operation
                        /// which will be marked successful when the deletion is complete. Warning: Instances cannot be
                        /// inserted into a study that is being deleted by an operation until the operation completes.
                        /// For samples that show how to call DeleteStudy, see [Delete a study, series, or
                        /// instance](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#delete-dicom).
                        /// </summary>
                        public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                            {
                                Parent = parent;
                                DicomWebPath = dicomWebPath;
                                InitParameters();
                            }

                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The path of the DeleteStudy request. For example, `studies/{study_uid}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string DicomWebPath { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                });
                                RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "dicomWebPath",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^studies/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// RetrieveStudyMetadata returns instance associated with the given study presented as metadata
                        /// with the bulk data removed. See [RetrieveTransaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details
                        /// on the implementation of RetrieveStudyMetadata, see [Metadata
                        /// resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the Cloud
                        /// Healthcare API conformance statement. For samples that show how to call
                        /// RetrieveStudyMetadata, see [Retrieve
                        /// metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-metadata).
                        /// </summary>
                        /// <param name="parent">
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </param>
                        /// <param name="dicomWebPath">
                        /// Required. The path of the RetrieveStudyMetadata DICOMweb request. For example,
                        /// `studies/{study_uid}/metadata`.
                        /// </param>
                        public virtual RetrieveMetadataRequest RetrieveMetadata(string parent, string dicomWebPath)
                        {
                            return new RetrieveMetadataRequest(this.service, parent, dicomWebPath);
                        }

                        /// <summary>
                        /// RetrieveStudyMetadata returns instance associated with the given study presented as metadata
                        /// with the bulk data removed. See [RetrieveTransaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details
                        /// on the implementation of RetrieveStudyMetadata, see [Metadata
                        /// resources](https://cloud.google.com/healthcare/docs/dicom#metadata_resources) in the Cloud
                        /// Healthcare API conformance statement. For samples that show how to call
                        /// RetrieveStudyMetadata, see [Retrieve
                        /// metadata](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-metadata).
                        /// </summary>
                        public class RetrieveMetadataRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new RetrieveMetadata request.</summary>
                            public RetrieveMetadataRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                            {
                                Parent = parent;
                                DicomWebPath = dicomWebPath;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The path of the RetrieveStudyMetadata DICOMweb request. For example,
                            /// `studies/{study_uid}/metadata`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string DicomWebPath { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "retrieveMetadata";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                            /// <summary>Initializes RetrieveMetadata parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                });
                                RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "dicomWebPath",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^studies/[^/]+/metadata$",
                                });
                            }
                        }

                        /// <summary>
                        /// RetrieveStudy returns all instances within the given study. See [RetrieveTransaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details
                        /// on the implementation of RetrieveStudy, see [DICOM
                        /// study/series/instances](https://cloud.google.com/healthcare/docs/dicom#dicom_studyseriesinstances)
                        /// in the Cloud Healthcare API conformance statement. For samples that show how to call
                        /// RetrieveStudy, see [Retrieve DICOM
                        /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                        /// </summary>
                        /// <param name="parent">
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </param>
                        /// <param name="dicomWebPath">
                        /// Required. The path of the RetrieveStudy DICOMweb request. For example,
                        /// `studies/{study_uid}`.
                        /// </param>
                        public virtual RetrieveStudyRequest RetrieveStudy(string parent, string dicomWebPath)
                        {
                            return new RetrieveStudyRequest(this.service, parent, dicomWebPath);
                        }

                        /// <summary>
                        /// RetrieveStudy returns all instances within the given study. See [RetrieveTransaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.4). For details
                        /// on the implementation of RetrieveStudy, see [DICOM
                        /// study/series/instances](https://cloud.google.com/healthcare/docs/dicom#dicom_studyseriesinstances)
                        /// in the Cloud Healthcare API conformance statement. For samples that show how to call
                        /// RetrieveStudy, see [Retrieve DICOM
                        /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#retrieve-dicom).
                        /// </summary>
                        public class RetrieveStudyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new RetrieveStudy request.</summary>
                            public RetrieveStudyRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                            {
                                Parent = parent;
                                DicomWebPath = dicomWebPath;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The path of the RetrieveStudy DICOMweb request. For example,
                            /// `studies/{study_uid}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string DicomWebPath { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "retrieveStudy";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                            /// <summary>Initializes RetrieveStudy parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                });
                                RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "dicomWebPath",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^studies/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// SearchForInstances returns a list of matching instances. See [Search Transaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details
                        /// on the implementation of SearchForInstances, see [Search
                        /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                        /// Healthcare API conformance statement. For samples that show how to call SearchForInstances,
                        /// see [Search for DICOM
                        /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                        /// </summary>
                        /// <param name="parent">
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </param>
                        /// <param name="dicomWebPath">
                        /// Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
                        /// `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
                        /// </param>
                        public virtual SearchForInstancesRequest SearchForInstances(string parent, string dicomWebPath)
                        {
                            return new SearchForInstancesRequest(this.service, parent, dicomWebPath);
                        }

                        /// <summary>
                        /// SearchForInstances returns a list of matching instances. See [Search Transaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details
                        /// on the implementation of SearchForInstances, see [Search
                        /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                        /// Healthcare API conformance statement. For samples that show how to call SearchForInstances,
                        /// see [Search for DICOM
                        /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                        /// </summary>
                        public class SearchForInstancesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new SearchForInstances request.</summary>
                            public SearchForInstancesRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                            {
                                Parent = parent;
                                DicomWebPath = dicomWebPath;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
                            /// `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string DicomWebPath { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "searchForInstances";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                            /// <summary>Initializes SearchForInstances parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                });
                                RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "dicomWebPath",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^studies/[^/]+/instances$",
                                });
                            }
                        }

                        /// <summary>
                        /// SearchForSeries returns a list of matching series. See [Search Transaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details
                        /// on the implementation of SearchForSeries, see [Search
                        /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                        /// Healthcare API conformance statement. For samples that show how to call SearchForSeries, see
                        /// [Search for DICOM
                        /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                        /// </summary>
                        /// <param name="parent">
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </param>
                        /// <param name="dicomWebPath">
                        /// Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
                        /// `studies/{study_uid}/series`.
                        /// </param>
                        public virtual SearchForSeriesRequest SearchForSeries(string parent, string dicomWebPath)
                        {
                            return new SearchForSeriesRequest(this.service, parent, dicomWebPath);
                        }

                        /// <summary>
                        /// SearchForSeries returns a list of matching series. See [Search Transaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details
                        /// on the implementation of SearchForSeries, see [Search
                        /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                        /// Healthcare API conformance statement. For samples that show how to call SearchForSeries, see
                        /// [Search for DICOM
                        /// data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                        /// </summary>
                        public class SearchForSeriesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new SearchForSeries request.</summary>
                            public SearchForSeriesRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                            {
                                Parent = parent;
                                DicomWebPath = dicomWebPath;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
                            /// `studies/{study_uid}/series`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string DicomWebPath { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "searchForSeries";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                            /// <summary>Initializes SearchForSeries parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                });
                                RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "dicomWebPath",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^studies/[^/]+/series$",
                                });
                            }
                        }

                        /// <summary>
                        /// StoreInstances stores DICOM instances associated with study instance unique identifiers
                        /// (SUID). See [Store Transaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5). For details
                        /// on the implementation of StoreInstances, see [Store
                        /// transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction) in the Cloud
                        /// Healthcare API conformance statement. For samples that show how to call StoreInstances, see
                        /// [Store DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#store-dicom).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </param>
                        /// <param name="dicomWebPath">
                        /// Required. The path of the StoreInstances DICOMweb request. For example,
                        /// `studies/[{study_uid}]`. Note that the `study_uid` is optional.
                        /// </param>
                        public virtual StoreInstancesRequest StoreInstances(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string dicomWebPath)
                        {
                            return new StoreInstancesRequest(this.service, body, parent, dicomWebPath);
                        }

                        /// <summary>
                        /// StoreInstances stores DICOM instances associated with study instance unique identifiers
                        /// (SUID). See [Store Transaction]
                        /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5). For details
                        /// on the implementation of StoreInstances, see [Store
                        /// transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction) in the Cloud
                        /// Healthcare API conformance statement. For samples that show how to call StoreInstances, see
                        /// [Store DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#store-dicom).
                        /// </summary>
                        public class StoreInstancesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new StoreInstances request.</summary>
                            public StoreInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string dicomWebPath) : base(service)
                            {
                                Parent = parent;
                                DicomWebPath = dicomWebPath;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the DICOM store that is being accessed. For example,
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The path of the StoreInstances DICOMweb request. For example,
                            /// `studies/[{study_uid}]`. Note that the `study_uid` is optional.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string DicomWebPath { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "storeInstances";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                            /// <summary>Initializes StoreInstances parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                                });
                                RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "dicomWebPath",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^studies/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Creates a new DICOM store within the parent dataset.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">Required. The name of the dataset this DICOM store belongs to.</param>
                    public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.DicomStore body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates a new DICOM store within the parent dataset.</summary>
                    public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.DicomStore>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.DicomStore body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>Required. The name of the dataset this DICOM store belongs to.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The ID of the DICOM store that is being created. Any string value up to 256
                        /// characters in length.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("dicomStoreId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string DicomStoreId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.DicomStore Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/dicomStores";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("dicomStoreId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "dicomStoreId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// De-identifies data from the source store and writes it to the destination store. The metadata
                    /// field type is OperationMetadata. If the request is successful, the response field type is
                    /// DeidentifyDicomStoreSummary. If errors occur, error is set. The LRO result may still be
                    /// successful if de-identification fails for some DICOM instances. The output DICOM store will not
                    /// contain these failed resources. Failed resource totals are tracked in Operation.metadata. Error
                    /// details are also logged to Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="sourceStore">
                    /// Required. Source DICOM store resource name. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                    /// </param>
                    public virtual DeidentifyRequest Deidentify(Google.Apis.CloudHealthcare.v1.Data.DeidentifyDicomStoreRequest body, string sourceStore)
                    {
                        return new DeidentifyRequest(this.service, body, sourceStore);
                    }

                    /// <summary>
                    /// De-identifies data from the source store and writes it to the destination store. The metadata
                    /// field type is OperationMetadata. If the request is successful, the response field type is
                    /// DeidentifyDicomStoreSummary. If errors occur, error is set. The LRO result may still be
                    /// successful if de-identification fails for some DICOM instances. The output DICOM store will not
                    /// contain these failed resources. Failed resource totals are tracked in Operation.metadata. Error
                    /// details are also logged to Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
                    /// </summary>
                    public class DeidentifyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Deidentify request.</summary>
                        public DeidentifyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.DeidentifyDicomStoreRequest body, string sourceStore) : base(service)
                        {
                            SourceStore = sourceStore;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Source DICOM store resource name. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("sourceStore", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string SourceStore { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.DeidentifyDicomStoreRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "deidentify";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+sourceStore}:deidentify";

                        /// <summary>Initializes Deidentify parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("sourceStore", new Google.Apis.Discovery.Parameter
                            {
                                Name = "sourceStore",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes the specified DICOM store and removes all images that are contained within it.
                    /// </summary>
                    /// <param name="name">Required. The resource name of the DICOM store to delete.</param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes the specified DICOM store and removes all images that are contained within it.
                    /// </summary>
                    public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the DICOM store to delete.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Exports data to the specified destination by copying it from the DICOM store. Errors are also
                    /// logged to Cloud Logging. For more information, see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging). The metadata field type is
                    /// OperationMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The DICOM store resource name from which to export the data. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                    /// </param>
                    public virtual ExportRequest Export(Google.Apis.CloudHealthcare.v1.Data.ExportDicomDataRequest body, string name)
                    {
                        return new ExportRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Exports data to the specified destination by copying it from the DICOM store. Errors are also
                    /// logged to Cloud Logging. For more information, see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging). The metadata field type is
                    /// OperationMetadata.
                    /// </summary>
                    public class ExportRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Export request.</summary>
                        public ExportRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ExportDicomDataRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The DICOM store resource name from which to export the data. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ExportDicomDataRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "export";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:export";

                        /// <summary>Initializes Export parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets the specified DICOM store.</summary>
                    /// <param name="name">Required. The resource name of the DICOM store to get.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets the specified DICOM store.</summary>
                    public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.DicomStore>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the DICOM store to get.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets metrics associated with the DICOM store.</summary>
                    /// <param name="name">Required. The resource name of the DICOM store to get metrics for.</param>
                    public virtual GetDICOMStoreMetricsRequest GetDICOMStoreMetrics(string name)
                    {
                        return new GetDICOMStoreMetricsRequest(this.service, name);
                    }

                    /// <summary>Gets metrics associated with the DICOM store.</summary>
                    public class GetDICOMStoreMetricsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.DicomStoreMetrics>
                    {
                        /// <summary>Constructs a new GetDICOMStoreMetrics request.</summary>
                        public GetDICOMStoreMetricsRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the DICOM store to get metrics for.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getDICOMStoreMetrics";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:getDICOMStoreMetrics";

                        /// <summary>Initializes GetDICOMStoreMetrics parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual GetIamPolicyRequest GetIamPolicy(string resource)
                    {
                        return new GetIamPolicyRequest(this.service, resource);
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    public class GetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new GetIamPolicy request.</summary>
                        public GetIamPolicyRequest(Google.Apis.Services.IClientService service, string resource) : base(service)
                        {
                            Resource = resource;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>
                        /// Optional. The maximum policy version that will be used to format the policy. Valid values
                        /// are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
                        /// policies with any conditional role bindings must specify version 3. Policies with no
                        /// conditional role bindings may specify any valid value or leave the field unset. The policy
                        /// in the response might use the policy version that you specified, or it might use a lower
                        /// policy version. For example, if you specify version 3, but the policy has no conditional
                        /// role bindings, the response uses version 1. To learn which resources support conditions in
                        /// their IAM policies, see the [IAM
                        /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("options.requestedPolicyVersion", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> OptionsRequestedPolicyVersion { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:getIamPolicy";

                        /// <summary>Initializes GetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                            RequestParameters.Add("options.requestedPolicyVersion", new Google.Apis.Discovery.Parameter
                            {
                                Name = "options.requestedPolicyVersion",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Imports data into the DICOM store by copying it from the specified source. Errors are logged to
                    /// Cloud Logging. For more information, see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging). The metadata field type is
                    /// OperationMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the DICOM store resource into which the data is imported. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                    /// </param>
                    public virtual ImportRequest Import(Google.Apis.CloudHealthcare.v1.Data.ImportDicomDataRequest body, string name)
                    {
                        return new ImportRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Imports data into the DICOM store by copying it from the specified source. Errors are logged to
                    /// Cloud Logging. For more information, see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging). The metadata field type is
                    /// OperationMetadata.
                    /// </summary>
                    public class ImportRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Import request.</summary>
                        public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ImportDicomDataRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the DICOM store resource into which the data is imported. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ImportDicomDataRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "import";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:import";

                        /// <summary>Initializes Import parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Lists the DICOM stores in the given dataset.</summary>
                    /// <param name="parent">Required. Name of the dataset.</param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists the DICOM stores in the given dataset.</summary>
                    public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListDicomStoresResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>Required. Name of the dataset.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Restricts stores returned to those matching a filter. The following syntax is available: * A
                        /// string field value can be written as text inside quotation marks, for example `"query
                        /// text"`. The only valid relational operation for text fields is equality (`=`), where text is
                        /// searched within the field, rather than having the field be equal to the text. For example,
                        /// `"Comment = great"` returns messages with `great` in the comment field. * A number field
                        /// value can be written as an integer, a decimal, or an exponential. The valid relational
                        /// operators for number fields are the equality operator (`=`), along with the less
                        /// than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that
                        /// there is no inequality (`!=`) operator. You can prepend the `NOT` operator to an expression
                        /// to negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with date
                        /// and time use the RFC3339 time format. Leading zeros are required for one-digit months and
                        /// days. The valid relational operators for date fields are the equality operator (`=`) , along
                        /// with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`,
                        /// `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
                        /// operator to an expression to negate it. * Multiple field query expressions can be combined
                        /// in one query by adding `AND` or `OR` operators between the expressions. If a boolean
                        /// operator appears within a quoted string, it is not treated as special, it's just another
                        /// part of the character string to be matched. You can prepend the `NOT` operator to an
                        /// expression to negate it. Only filtering on labels is supported. For example,
                        /// `labels.key=value`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// Limit on the number of DICOM stores to return in a single response. If not specified, 100 is
                        /// used. May not be larger than 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// The next_page_token value returned from the previous List request, if any.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/dicomStores";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates the specified DICOM store.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Identifier. Resource name of the DICOM store, of the form
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.DicomStore body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates the specified DICOM store.</summary>
                    public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.DicomStore>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.DicomStore body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Identifier. Resource name of the DICOM store, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Required. The update mask applies to the resource. For the `FieldMask` definition, see
                        /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.DicomStore Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// SearchForInstances returns a list of matching instances. See [Search Transaction]
                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
                    /// the implementation of SearchForInstances, see [Search
                    /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                    /// Healthcare API conformance statement. For samples that show how to call SearchForInstances, see
                    /// [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                    /// </summary>
                    /// <param name="parent">
                    /// Required. The name of the DICOM store that is being accessed. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                    /// </param>
                    /// <param name="dicomWebPath">
                    /// Required. The path of the SearchForInstancesRequest DICOMweb request. For example, `instances`,
                    /// `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
                    /// </param>
                    public virtual SearchForInstancesRequest SearchForInstances(string parent, string dicomWebPath)
                    {
                        return new SearchForInstancesRequest(this.service, parent, dicomWebPath);
                    }

                    /// <summary>
                    /// SearchForInstances returns a list of matching instances. See [Search Transaction]
                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
                    /// the implementation of SearchForInstances, see [Search
                    /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                    /// Healthcare API conformance statement. For samples that show how to call SearchForInstances, see
                    /// [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                    /// </summary>
                    public class SearchForInstancesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                    {
                        /// <summary>Constructs a new SearchForInstances request.</summary>
                        public SearchForInstancesRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                        {
                            Parent = parent;
                            DicomWebPath = dicomWebPath;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The path of the SearchForInstancesRequest DICOMweb request. For example,
                        /// `instances`, `series/{series_uid}/instances`, or `studies/{study_uid}/instances`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string DicomWebPath { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "searchForInstances";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                        /// <summary>Initializes SearchForInstances parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                            RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                            {
                                Name = "dicomWebPath",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^instances$",
                            });
                        }
                    }

                    /// <summary>
                    /// SearchForSeries returns a list of matching series. See [Search Transaction]
                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
                    /// the implementation of SearchForSeries, see [Search
                    /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                    /// Healthcare API conformance statement. For samples that show how to call SearchForSeries, see
                    /// [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                    /// </summary>
                    /// <param name="parent">
                    /// Required. The name of the DICOM store that is being accessed. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                    /// </param>
                    /// <param name="dicomWebPath">
                    /// Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
                    /// `studies/{study_uid}/series`.
                    /// </param>
                    public virtual SearchForSeriesRequest SearchForSeries(string parent, string dicomWebPath)
                    {
                        return new SearchForSeriesRequest(this.service, parent, dicomWebPath);
                    }

                    /// <summary>
                    /// SearchForSeries returns a list of matching series. See [Search Transaction]
                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
                    /// the implementation of SearchForSeries, see [Search
                    /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                    /// Healthcare API conformance statement. For samples that show how to call SearchForSeries, see
                    /// [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                    /// </summary>
                    public class SearchForSeriesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                    {
                        /// <summary>Constructs a new SearchForSeries request.</summary>
                        public SearchForSeriesRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                        {
                            Parent = parent;
                            DicomWebPath = dicomWebPath;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The path of the SearchForSeries DICOMweb request. For example, `series` or
                        /// `studies/{study_uid}/series`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string DicomWebPath { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "searchForSeries";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                        /// <summary>Initializes SearchForSeries parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                            RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                            {
                                Name = "dicomWebPath",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^series$",
                            });
                        }
                    }

                    /// <summary>
                    /// SearchForStudies returns a list of matching studies. See [Search Transaction]
                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
                    /// the implementation of SearchForStudies, see [Search
                    /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                    /// Healthcare API conformance statement. For samples that show how to call SearchForStudies, see
                    /// [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                    /// </summary>
                    /// <param name="parent">
                    /// Required. The name of the DICOM store that is being accessed. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                    /// </param>
                    /// <param name="dicomWebPath">
                    /// Required. The path of the SearchForStudies DICOMweb request. For example, `studies`.
                    /// </param>
                    public virtual SearchForStudiesRequest SearchForStudies(string parent, string dicomWebPath)
                    {
                        return new SearchForStudiesRequest(this.service, parent, dicomWebPath);
                    }

                    /// <summary>
                    /// SearchForStudies returns a list of matching studies. See [Search Transaction]
                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.6). For details on
                    /// the implementation of SearchForStudies, see [Search
                    /// transaction](https://cloud.google.com/healthcare/docs/dicom#search_transaction) in the Cloud
                    /// Healthcare API conformance statement. For samples that show how to call SearchForStudies, see
                    /// [Search for DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#search-dicom).
                    /// </summary>
                    public class SearchForStudiesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                    {
                        /// <summary>Constructs a new SearchForStudies request.</summary>
                        public SearchForStudiesRequest(Google.Apis.Services.IClientService service, string parent, string dicomWebPath) : base(service)
                        {
                            Parent = parent;
                            DicomWebPath = dicomWebPath;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The path of the SearchForStudies DICOMweb request. For example, `studies`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string DicomWebPath { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "searchForStudies";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                        /// <summary>Initializes SearchForStudies parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                            RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                            {
                                Name = "dicomWebPath",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^studies$",
                            });
                        }
                    }

                    /// <summary>
                    /// SetBlobStorageSettings sets the blob storage settings of the specified resources.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// Required. The path of the resource to update the blob storage settings in the format of
                    /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}`,
                    /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`,
                    /// or
                    /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`.
                    /// If `filter_config` is specified, set the value of `resource` to the resource name of a DICOM
                    /// store in the format
                    /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
                    /// </param>
                    public virtual SetBlobStorageSettingsRequest SetBlobStorageSettings(Google.Apis.CloudHealthcare.v1.Data.SetBlobStorageSettingsRequest body, string resource)
                    {
                        return new SetBlobStorageSettingsRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// SetBlobStorageSettings sets the blob storage settings of the specified resources.
                    /// </summary>
                    public class SetBlobStorageSettingsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new SetBlobStorageSettings request.</summary>
                        public SetBlobStorageSettingsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SetBlobStorageSettingsRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The path of the resource to update the blob storage settings in the format of
                        /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}`,
                        /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/`,
                        /// or
                        /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`.
                        /// If `filter_config` is specified, set the value of `resource` to the resource name of a DICOM
                        /// store in the format
                        /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.SetBlobStorageSettingsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "setBlobStorageSettings";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:setBlobStorageSettings";

                        /// <summary>Initializes SetBlobStorageSettings parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being specified. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual SetIamPolicyRequest SetIamPolicy(Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource)
                    {
                        return new SetIamPolicyRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    public class SetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new SetIamPolicy request.</summary>
                        public SetIamPolicyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being specified. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "setIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:setIamPolicy";

                        /// <summary>Initializes SetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// StoreInstances stores DICOM instances associated with study instance unique identifiers (SUID).
                    /// See [Store Transaction]
                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5). For details on
                    /// the implementation of StoreInstances, see [Store
                    /// transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction) in the Cloud
                    /// Healthcare API conformance statement. For samples that show how to call StoreInstances, see
                    /// [Store DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#store-dicom).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the DICOM store that is being accessed. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                    /// </param>
                    /// <param name="dicomWebPath">
                    /// Required. The path of the StoreInstances DICOMweb request. For example, `studies/[{study_uid}]`.
                    /// Note that the `study_uid` is optional.
                    /// </param>
                    public virtual StoreInstancesRequest StoreInstances(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string dicomWebPath)
                    {
                        return new StoreInstancesRequest(this.service, body, parent, dicomWebPath);
                    }

                    /// <summary>
                    /// StoreInstances stores DICOM instances associated with study instance unique identifiers (SUID).
                    /// See [Store Transaction]
                    /// (http://dicom.nema.org/medical/dicom/current/output/html/part18.html#sect_10.5). For details on
                    /// the implementation of StoreInstances, see [Store
                    /// transaction](https://cloud.google.com/healthcare/docs/dicom#store_transaction) in the Cloud
                    /// Healthcare API conformance statement. For samples that show how to call StoreInstances, see
                    /// [Store DICOM data](https://cloud.google.com/healthcare/docs/how-tos/dicomweb#store-dicom).
                    /// </summary>
                    public class StoreInstancesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                    {
                        /// <summary>Constructs a new StoreInstances request.</summary>
                        public StoreInstancesRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string dicomWebPath) : base(service)
                        {
                            Parent = parent;
                            DicomWebPath = dicomWebPath;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the DICOM store that is being accessed. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The path of the StoreInstances DICOMweb request. For example,
                        /// `studies/[{study_uid}]`. Note that the `study_uid` is optional.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("dicomWebPath", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string DicomWebPath { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "storeInstances";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/dicomWeb/{+dicomWebPath}";

                        /// <summary>Initializes StoreInstances parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                            RequestParameters.Add("dicomWebPath", new Google.Apis.Discovery.Parameter
                            {
                                Name = "dicomWebPath",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^studies$",
                            });
                        }
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual TestIamPermissionsRequest TestIamPermissions(Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource)
                    {
                        return new TestIamPermissionsRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    public class TestIamPermissionsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsResponse>
                    {
                        /// <summary>Constructs a new TestIamPermissions request.</summary>
                        public TestIamPermissionsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "testIamPermissions";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:testIamPermissions";

                        /// <summary>Initializes TestIamPermissions parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/dicomStores/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the FhirStores resource.</summary>
                public virtual FhirStoresResource FhirStores { get; }

                /// <summary>The "fhirStores" collection of methods.</summary>
                public class FhirStoresResource
                {
                    private const string Resource = "fhirStores";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public FhirStoresResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Fhir = new FhirResource(service);
                    }

                    /// <summary>Gets the Fhir resource.</summary>
                    public virtual FhirResource Fhir { get; }

                    /// <summary>The "fhir" collection of methods.</summary>
                    public class FhirResource
                    {
                        private const string Resource = "fhir";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public FhirResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Creates a FHIR Binary resource. This method can be used to create a Binary resource either
                        /// by using one of the accepted FHIR JSON content types, or as a raw data stream. If a resource
                        /// is created with this method using the FHIR content type this method's behavior is the same
                        /// as
                        /// [`fhir.create`](https://cloud.google.com/healthcare-api/docs/reference/rest/v1/projects.locations.datasets.fhirStores.fhir/create).
                        /// If a resource type other than Binary is used in the request it's treated in the same way as
                        /// non-FHIR data (e.g., images, zip archives, pdf files, documents). When a non-FHIR content
                        /// type is used in the request, a Binary resource will be generated, and the uploaded data will
                        /// be stored in the `content` field (`DSTU2` and `STU3`), or the `data` field (`R4`). The
                        /// Binary resource's `contentType` will be filled in using the value of the `Content-Type`
                        /// header, and the `securityContext` field (not present in `DSTU2`) will be populated from the
                        /// `X-Security-Context` header if it exists. At this time `securityContext` has no special
                        /// behavior in the Cloud Healthcare API. Note: the limit on data ingested through this method
                        /// is 1 GB. For best performance, use a non-FHIR data type instead of wrapping the data in a
                        /// Binary resource. Some of the Healthcare API features, such as [exporting to
                        /// BigQuery](https://cloud.google.com/healthcare-api/docs/how-tos/fhir-export-bigquery) or
                        /// [Pub/Sub
                        /// notifications](https://cloud.google.com/healthcare-api/docs/fhir-pubsub#behavior_when_a_fhir_resource_is_too_large_or_traffic_is_high)
                        /// with full resource content, do not support Binary resources that are larger than 10 MB. In
                        /// these cases the resource's `data` field will be omitted. Instead, the
                        /// "http://hl7.org/fhir/StructureDefinition/data-absent-reason" extension will be present to
                        /// indicate that including the data is `unsupported`. On success, an empty `201 Created`
                        /// response is returned. The newly created resource's ID and version are returned in the
                        /// Location header. Using `Prefer: representation=resource` is not allowed for this method. The
                        /// definition of the Binary REST API can be found at https://hl7.org/fhir/binary.html#rest.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. The name of the FHIR store this resource belongs to.</param>
                        public virtual BinaryCreateRequest BinaryCreate(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent)
                        {
                            return new BinaryCreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a FHIR Binary resource. This method can be used to create a Binary resource either
                        /// by using one of the accepted FHIR JSON content types, or as a raw data stream. If a resource
                        /// is created with this method using the FHIR content type this method's behavior is the same
                        /// as
                        /// [`fhir.create`](https://cloud.google.com/healthcare-api/docs/reference/rest/v1/projects.locations.datasets.fhirStores.fhir/create).
                        /// If a resource type other than Binary is used in the request it's treated in the same way as
                        /// non-FHIR data (e.g., images, zip archives, pdf files, documents). When a non-FHIR content
                        /// type is used in the request, a Binary resource will be generated, and the uploaded data will
                        /// be stored in the `content` field (`DSTU2` and `STU3`), or the `data` field (`R4`). The
                        /// Binary resource's `contentType` will be filled in using the value of the `Content-Type`
                        /// header, and the `securityContext` field (not present in `DSTU2`) will be populated from the
                        /// `X-Security-Context` header if it exists. At this time `securityContext` has no special
                        /// behavior in the Cloud Healthcare API. Note: the limit on data ingested through this method
                        /// is 1 GB. For best performance, use a non-FHIR data type instead of wrapping the data in a
                        /// Binary resource. Some of the Healthcare API features, such as [exporting to
                        /// BigQuery](https://cloud.google.com/healthcare-api/docs/how-tos/fhir-export-bigquery) or
                        /// [Pub/Sub
                        /// notifications](https://cloud.google.com/healthcare-api/docs/fhir-pubsub#behavior_when_a_fhir_resource_is_too_large_or_traffic_is_high)
                        /// with full resource content, do not support Binary resources that are larger than 10 MB. In
                        /// these cases the resource's `data` field will be omitted. Instead, the
                        /// "http://hl7.org/fhir/StructureDefinition/data-absent-reason" extension will be present to
                        /// indicate that including the data is `unsupported`. On success, an empty `201 Created`
                        /// response is returned. The newly created resource's ID and version are returned in the
                        /// Location header. Using `Prefer: representation=resource` is not allowed for this method. The
                        /// definition of the Binary REST API can be found at https://hl7.org/fhir/binary.html#rest.
                        /// </summary>
                        public class BinaryCreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new BinaryCreate request.</summary>
                            public BinaryCreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the FHIR store this resource belongs to.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Binary-create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir/Binary";

                            /// <summary>Initializes BinaryCreate parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets the contents of a FHIR Binary resource. This method can be used to retrieve a Binary
                        /// resource either by using the FHIR JSON mimetype as the value for the Accept header, or as a
                        /// raw data stream. If the FHIR Accept type is used this method will return a Binary resource
                        /// with the data base64-encoded, regardless of how the resource was created. The resource data
                        /// can be retrieved in base64-decoded form if the Accept type of the request matches the value
                        /// of the resource's `contentType` field. The definition of the Binary REST API can be found at
                        /// https://hl7.org/fhir/binary.html#rest.
                        /// </summary>
                        /// <param name="name">Required. The name of the Binary resource to retrieve.</param>
                        public virtual BinaryReadRequest BinaryRead(string name)
                        {
                            return new BinaryReadRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the contents of a FHIR Binary resource. This method can be used to retrieve a Binary
                        /// resource either by using the FHIR JSON mimetype as the value for the Accept header, or as a
                        /// raw data stream. If the FHIR Accept type is used this method will return a Binary resource
                        /// with the data base64-encoded, regardless of how the resource was created. The resource data
                        /// can be retrieved in base64-decoded form if the Accept type of the request matches the value
                        /// of the resource's `contentType` field. The definition of the Binary REST API can be found at
                        /// https://hl7.org/fhir/binary.html#rest.
                        /// </summary>
                        public class BinaryReadRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new BinaryRead request.</summary>
                            public BinaryReadRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the Binary resource to retrieve.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Binary-read";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes BinaryRead parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Updates the entire contents of a Binary resource. If the specified resource does not exist
                        /// and the FHIR store has enable_update_create set, creates the resource with the
                        /// client-specified ID. It is strongly advised not to include or encode any sensitive data such
                        /// as patient identifiers in client-specified resource IDs. Those IDs are part of the FHIR
                        /// resource path recorded in Cloud Audit Logs and Pub/Sub notifications. Those IDs can also be
                        /// contained in reference fields within other resources. This method can be used to update a
                        /// Binary resource either by using one of the accepted FHIR JSON content types, or as a raw
                        /// data stream. If a resource is updated with this method using the FHIR content type this
                        /// method's behavior is the same as `update`. If a resource type other than Binary is used in
                        /// the request it will be treated in the same way as non-FHIR data. When a non-FHIR content
                        /// type is used in the request, a Binary resource will be generated using the ID from the
                        /// resource path, and the uploaded data will be stored in the `content` field (`DSTU2` and
                        /// `STU3`), or the `data` field (`R4`). The Binary resource's `contentType` will be filled in
                        /// using the value of the `Content-Type` header, and the `securityContext` field (not present
                        /// in `DSTU2`) will be populated from the `X-Security-Context` header if it exists. At this
                        /// time `securityContext` has no special behavior in the Cloud Healthcare API. Note: the limit
                        /// on data ingested through this method is 2 GB. For best performance, use a non-FHIR data type
                        /// instead of wrapping the data in a Binary resource. Some of the Healthcare API features, such
                        /// as [exporting to
                        /// BigQuery](https://cloud.google.com/healthcare-api/docs/how-tos/fhir-export-bigquery) or
                        /// [Pub/Sub
                        /// notifications](https://cloud.google.com/healthcare-api/docs/fhir-pubsub#behavior_when_a_fhir_resource_is_too_large_or_traffic_is_high)
                        /// with full resource content, do not support Binary resources that are larger than 10 MB. In
                        /// these cases the resource's `data` field will be omitted. Instead, the
                        /// "http://hl7.org/fhir/StructureDefinition/data-absent-reason" extension will be present to
                        /// indicate that including the data is `unsupported`. On success, an empty 200 OK response will
                        /// be returned, or a 201 Created if the resource did not exit. The resource's ID and version
                        /// are returned in the Location header. Using `Prefer: representation=resource` is not allowed
                        /// for this method. The definition of the Binary REST API can be found at
                        /// https://hl7.org/fhir/binary.html#rest.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">Required. The name of the resource to update.</param>
                        public virtual BinaryUpdateRequest BinaryUpdate(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string name)
                        {
                            return new BinaryUpdateRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates the entire contents of a Binary resource. If the specified resource does not exist
                        /// and the FHIR store has enable_update_create set, creates the resource with the
                        /// client-specified ID. It is strongly advised not to include or encode any sensitive data such
                        /// as patient identifiers in client-specified resource IDs. Those IDs are part of the FHIR
                        /// resource path recorded in Cloud Audit Logs and Pub/Sub notifications. Those IDs can also be
                        /// contained in reference fields within other resources. This method can be used to update a
                        /// Binary resource either by using one of the accepted FHIR JSON content types, or as a raw
                        /// data stream. If a resource is updated with this method using the FHIR content type this
                        /// method's behavior is the same as `update`. If a resource type other than Binary is used in
                        /// the request it will be treated in the same way as non-FHIR data. When a non-FHIR content
                        /// type is used in the request, a Binary resource will be generated using the ID from the
                        /// resource path, and the uploaded data will be stored in the `content` field (`DSTU2` and
                        /// `STU3`), or the `data` field (`R4`). The Binary resource's `contentType` will be filled in
                        /// using the value of the `Content-Type` header, and the `securityContext` field (not present
                        /// in `DSTU2`) will be populated from the `X-Security-Context` header if it exists. At this
                        /// time `securityContext` has no special behavior in the Cloud Healthcare API. Note: the limit
                        /// on data ingested through this method is 2 GB. For best performance, use a non-FHIR data type
                        /// instead of wrapping the data in a Binary resource. Some of the Healthcare API features, such
                        /// as [exporting to
                        /// BigQuery](https://cloud.google.com/healthcare-api/docs/how-tos/fhir-export-bigquery) or
                        /// [Pub/Sub
                        /// notifications](https://cloud.google.com/healthcare-api/docs/fhir-pubsub#behavior_when_a_fhir_resource_is_too_large_or_traffic_is_high)
                        /// with full resource content, do not support Binary resources that are larger than 10 MB. In
                        /// these cases the resource's `data` field will be omitted. Instead, the
                        /// "http://hl7.org/fhir/StructureDefinition/data-absent-reason" extension will be present to
                        /// indicate that including the data is `unsupported`. On success, an empty 200 OK response will
                        /// be returned, or a 201 Created if the resource did not exit. The resource's ID and version
                        /// are returned in the Location header. Using `Prefer: representation=resource` is not allowed
                        /// for this method. The definition of the Binary REST API can be found at
                        /// https://hl7.org/fhir/binary.html#rest.
                        /// </summary>
                        public class BinaryUpdateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new BinaryUpdate request.</summary>
                            public BinaryUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the resource to update.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Binary-update";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PUT";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes BinaryUpdate parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets the contents of a version (current or historical) of a FHIR Binary resource by version
                        /// ID. This method can be used to retrieve a Binary resource version either by using the FHIR
                        /// JSON mimetype as the value for the Accept header, or as a raw data stream. If the FHIR
                        /// Accept type is used this method will return a Binary resource with the data base64-encoded,
                        /// regardless of how the resource version was created. The resource data can be retrieved in
                        /// base64-decoded form if the Accept type of the request matches the value of the resource
                        /// version's `contentType` field. The definition of the Binary REST API can be found at
                        /// https://hl7.org/fhir/binary.html#rest.
                        /// </summary>
                        /// <param name="name">Required. The name of the Binary resource version to retrieve.</param>
                        public virtual BinaryVreadRequest BinaryVread(string name)
                        {
                            return new BinaryVreadRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the contents of a version (current or historical) of a FHIR Binary resource by version
                        /// ID. This method can be used to retrieve a Binary resource version either by using the FHIR
                        /// JSON mimetype as the value for the Accept header, or as a raw data stream. If the FHIR
                        /// Accept type is used this method will return a Binary resource with the data base64-encoded,
                        /// regardless of how the resource version was created. The resource data can be retrieved in
                        /// base64-decoded form if the Accept type of the request matches the value of the resource
                        /// version's `contentType` field. The definition of the Binary REST API can be found at
                        /// https://hl7.org/fhir/binary.html#rest.
                        /// </summary>
                        public class BinaryVreadRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new BinaryVread request.</summary>
                            public BinaryVreadRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the Binary resource version to retrieve.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Binary-vread";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes BinaryVread parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Binary/[^/]+/_history/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Returns the consent enforcement status of a single consent resource. On success, the
                        /// response body contains a JSON-encoded representation of a `Parameters`
                        /// (http://hl7.org/fhir/parameters.html) FHIR resource, containing the current enforcement
                        /// status. Does not support DSTU2.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The name of the consent resource to find enforcement status, in the format
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{consent_id}`
                        /// </param>
                        public virtual ConsentEnforcementStatusRequest ConsentEnforcementStatus(string name)
                        {
                            return new ConsentEnforcementStatusRequest(this.service, name);
                        }

                        /// <summary>
                        /// Returns the consent enforcement status of a single consent resource. On success, the
                        /// response body contains a JSON-encoded representation of a `Parameters`
                        /// (http://hl7.org/fhir/parameters.html) FHIR resource, containing the current enforcement
                        /// status. Does not support DSTU2.
                        /// </summary>
                        public class ConsentEnforcementStatusRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new ConsentEnforcementStatus request.</summary>
                            public ConsentEnforcementStatusRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the consent resource to find enforcement status, in the format
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{consent_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Consent-enforcement-status";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}/$consent-enforcement-status";

                            /// <summary>Initializes ConsentEnforcementStatus parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Consent/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Returns the consent enforcement status of all consent resources for a patient. On success,
                        /// the response body contains a JSON-encoded representation of a bundle of `Parameters`
                        /// (http://hl7.org/fhir/parameters.html) FHIR resources, containing the current enforcement
                        /// status for each consent resource of the patient. Does not support DSTU2.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The name of the patient to find enforcement statuses, in the format
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Patient/{patient_id}`
                        /// </param>
                        public virtual PatientConsentEnforcementStatusRequest PatientConsentEnforcementStatus(string name)
                        {
                            return new PatientConsentEnforcementStatusRequest(this.service, name);
                        }

                        /// <summary>
                        /// Returns the consent enforcement status of all consent resources for a patient. On success,
                        /// the response body contains a JSON-encoded representation of a bundle of `Parameters`
                        /// (http://hl7.org/fhir/parameters.html) FHIR resources, containing the current enforcement
                        /// status for each consent resource of the patient. Does not support DSTU2.
                        /// </summary>
                        public class PatientConsentEnforcementStatusRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new PatientConsentEnforcementStatus request.</summary>
                            public PatientConsentEnforcementStatusRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the patient to find enforcement statuses, in the format
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Patient/{patient_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Optional. The maximum number of results on a page. If not specified, 100 is used. May
                            /// not be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_count", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> Count { get; set; }

                            /// <summary>
                            /// Optional. Used to retrieve the first, previous, next, or last page of consent
                            /// enforcement statuses when using pagination. Value should be set to the value of
                            /// `_page_token` set in next or previous page links' URLs. Next and previous page are
                            /// returned in the response bundle's links field, where `link.relation` is "previous" or
                            /// "next". Omit `_page_token` if no previous request has been made.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_page_token", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Patient-consent-enforcement-status";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}/$consent-enforcement-status";

                            /// <summary>Initializes PatientConsentEnforcementStatus parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$",
                                });
                                RequestParameters.Add("_count", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_count",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("_page_token", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_page_token",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Retrieves a Patient resource and resources related to that patient. Implements the FHIR
                        /// extended operation Patient-everything
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/patient-operations.html#everything),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/patient-operations.html#everything),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/patient-operations.html#everything)). On
                        /// success, the response body contains a JSON-encoded representation of a `Bundle` resource of
                        /// type `searchset`, containing the results of the operation. Errors generated by the FHIR
                        /// store contain a JSON-encoded `OperationOutcome` resource describing the reason for the
                        /// error. If the request cannot be mapped to a valid API method on a FHIR store, a generic GCP
                        /// error might be returned instead. The resources in scope for the response are: * The patient
                        /// resource itself. * All the resources directly referenced by the patient resource. *
                        /// Resources directly referencing the patient resource that meet the inclusion criteria. The
                        /// inclusion criteria are based on the membership rules in the patient compartment definition
                        /// ([DSTU2](http://hl7.org/fhir/DSTU2/compartment-patient.html),
                        /// [STU3](http://www.hl7.org/fhir/stu3/compartmentdefinition-patient.html),
                        /// [R4](http://hl7.org/fhir/R4/compartmentdefinition-patient.html)), which details the eligible
                        /// resource types and referencing search parameters. For samples that show how to call
                        /// `Patient-everything`, see [Getting all patient compartment
                        /// resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#getting_all_patient_compartment_resources).
                        /// </summary>
                        /// <param name="name">
                        /// Required. Name of the `Patient` resource for which the information is required.
                        /// </param>
                        public virtual PatientEverythingRequest PatientEverything(string name)
                        {
                            return new PatientEverythingRequest(this.service, name);
                        }

                        /// <summary>
                        /// Retrieves a Patient resource and resources related to that patient. Implements the FHIR
                        /// extended operation Patient-everything
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/patient-operations.html#everything),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/patient-operations.html#everything),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/patient-operations.html#everything)). On
                        /// success, the response body contains a JSON-encoded representation of a `Bundle` resource of
                        /// type `searchset`, containing the results of the operation. Errors generated by the FHIR
                        /// store contain a JSON-encoded `OperationOutcome` resource describing the reason for the
                        /// error. If the request cannot be mapped to a valid API method on a FHIR store, a generic GCP
                        /// error might be returned instead. The resources in scope for the response are: * The patient
                        /// resource itself. * All the resources directly referenced by the patient resource. *
                        /// Resources directly referencing the patient resource that meet the inclusion criteria. The
                        /// inclusion criteria are based on the membership rules in the patient compartment definition
                        /// ([DSTU2](http://hl7.org/fhir/DSTU2/compartment-patient.html),
                        /// [STU3](http://www.hl7.org/fhir/stu3/compartmentdefinition-patient.html),
                        /// [R4](http://hl7.org/fhir/R4/compartmentdefinition-patient.html)), which details the eligible
                        /// resource types and referencing search parameters. For samples that show how to call
                        /// `Patient-everything`, see [Getting all patient compartment
                        /// resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#getting_all_patient_compartment_resources).
                        /// </summary>
                        public class PatientEverythingRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new PatientEverything request.</summary>
                            public PatientEverythingRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Name of the `Patient` resource for which the information is required.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Optional. Maximum number of resources in a page. If not specified, 100 is used. May not
                            /// be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_count", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> Count { get; set; }

                            /// <summary>
                            /// Used to retrieve the next or previous page of results when using pagination. Set
                            /// `_page_token` to the value of _page_token set in next or previous page links' url. Next
                            /// and previous page are returned in the response bundle's links field, where
                            /// `link.relation` is "previous" or "next". Omit `_page_token` if no previous request has
                            /// been made.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_page_token", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>
                            /// Optional. If provided, only resources updated after this time are returned. The time
                            /// uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz. For example,
                            /// `2015-02-07T13:28:17.239+02:00` or `2017-01-01T00:00:00Z`. The time must be specified to
                            /// the second and include a time zone.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_since", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Since { get; set; }

                            /// <summary>
                            /// Optional. String of comma-delimited FHIR resource types. If provided, only resources of
                            /// the specified resource type(s) are returned. Specifying multiple `_type` parameters
                            /// isn't supported. For example, the result of `_type=Observation&amp;amp;_type=Encounter`
                            /// is undefined. Use `_type=Observation,Encounter` instead.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_type", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Type { get; set; }

                            /// <summary>
                            /// Optional. The response includes records prior to the end date. The date uses the format
                            /// YYYY-MM-DD. If no end date is provided, all records subsequent to the start date are in
                            /// scope.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("end", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string End { get; set; }

                            /// <summary>
                            /// Optional. The response includes records subsequent to the start date. The date uses the
                            /// format YYYY-MM-DD. If no start date is provided, all records prior to the end date are
                            /// in scope.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("start", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Start { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Patient-everything";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}/$everything";

                            /// <summary>Initializes PatientEverything parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/Patient/[^/]+$",
                                });
                                RequestParameters.Add("_count", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_count",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("_page_token", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_page_token",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("_since", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_since",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("_type", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_type",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("end", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "end",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("start", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "start",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes all the historical versions of a resource (excluding the current version) from the
                        /// FHIR store. To remove all versions of a resource, first delete the current version and then
                        /// call this method. This is not a FHIR standard operation. For samples that show how to call
                        /// `Resource-purge`, see [Deleting historical versions of a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#deleting_historical_versions_of_a_fhir_resource).
                        /// </summary>
                        /// <param name="name">Required. The name of the resource to purge.</param>
                        public virtual ResourcePurgeRequest ResourcePurge(string name)
                        {
                            return new ResourcePurgeRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes all the historical versions of a resource (excluding the current version) from the
                        /// FHIR store. To remove all versions of a resource, first delete the current version and then
                        /// call this method. This is not a FHIR standard operation. For samples that show how to call
                        /// `Resource-purge`, see [Deleting historical versions of a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#deleting_historical_versions_of_a_fhir_resource).
                        /// </summary>
                        public class ResourcePurgeRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                        {
                            /// <summary>Constructs a new ResourcePurge request.</summary>
                            public ResourcePurgeRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the resource to purge.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Resource-purge";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}/$purge";

                            /// <summary>Initializes ResourcePurge parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Validates an input FHIR resource's conformance to its profiles and the profiles configured
                        /// on the FHIR store. Implements the FHIR extended operation $validate
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resource-operations.html#validate),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resource-operations.html#validate), or
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/resource-operation-validate.html)). The
                        /// request body must contain a JSON-encoded FHIR resource, and the request headers must contain
                        /// `Content-Type: application/fhir+json`. The `Parameters` input syntax is not supported. The
                        /// `profile` query parameter can be used to request that the resource only be validated against
                        /// a specific profile. If a profile with the given URL cannot be found in the FHIR store then
                        /// an error is returned. Errors generated by validation contain a JSON-encoded
                        /// `OperationOutcome` resource describing the reason for the error. If the request cannot be
                        /// mapped to a valid API method on a FHIR store, a generic GCP error might be returned instead.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the FHIR store that holds the profiles being used for validation.
                        /// </param>
                        /// <param name="type">
                        /// Required. The FHIR resource type of the resource being validated. For a complete list, see
                        /// the FHIR Resource Index
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html), or
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the resource
                        /// type in the provided content.
                        /// </param>
                        public virtual ResourceValidateRequest ResourceValidate(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string type)
                        {
                            return new ResourceValidateRequest(this.service, body, parent, type);
                        }

                        /// <summary>
                        /// Validates an input FHIR resource's conformance to its profiles and the profiles configured
                        /// on the FHIR store. Implements the FHIR extended operation $validate
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resource-operations.html#validate),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resource-operations.html#validate), or
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/resource-operation-validate.html)). The
                        /// request body must contain a JSON-encoded FHIR resource, and the request headers must contain
                        /// `Content-Type: application/fhir+json`. The `Parameters` input syntax is not supported. The
                        /// `profile` query parameter can be used to request that the resource only be validated against
                        /// a specific profile. If a profile with the given URL cannot be found in the FHIR store then
                        /// an error is returned. Errors generated by validation contain a JSON-encoded
                        /// `OperationOutcome` resource describing the reason for the error. If the request cannot be
                        /// mapped to a valid API method on a FHIR store, a generic GCP error might be returned instead.
                        /// </summary>
                        public class ResourceValidateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new ResourceValidate request.</summary>
                            public ResourceValidateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string type) : base(service)
                            {
                                Parent = parent;
                                Type = type;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the FHIR store that holds the profiles being used for validation.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The FHIR resource type of the resource being validated. For a complete list,
                            /// see the FHIR Resource Index
                            /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                            /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html), or
                            /// [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
                            /// resource type in the provided content.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Type { get; private set; }

                            /// <summary>
                            /// Optional. The canonical URL of a profile that this resource should be validated against.
                            /// For example, to validate a Patient resource against the US Core Patient profile this
                            /// parameter would be `http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient`. A
                            /// StructureDefinition with this canonical URL must exist in the FHIR store.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("profile", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Profile { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "Resource-validate";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir/{+type}/$validate";

                            /// <summary>Initializes ResourceValidate parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                                RequestParameters.Add("type", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "type",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^[^/]+$",
                                });
                                RequestParameters.Add("profile", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "profile",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Gets the FHIR capability statement
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/capabilitystatement.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/capabilitystatement.html)), or the
                        /// [conformance statement](http://hl7.org/implement/standards/fhir/DSTU2/conformance.html) in
                        /// the DSTU2 case for the store, which contains a description of functionality supported by the
                        /// server. Implements the FHIR standard capabilities interaction
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#capabilities),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#capabilities)), or the
                        /// [conformance
                        /// interaction](http://hl7.org/implement/standards/fhir/DSTU2/http.html#conformance) in the
                        /// DSTU2 case. On success, the response body contains a JSON-encoded representation of a
                        /// `CapabilityStatement` resource.
                        /// </summary>
                        /// <param name="name">
                        /// Required. Name of the FHIR store to retrieve the capabilities for.
                        /// </param>
                        public virtual CapabilitiesRequest Capabilities(string name)
                        {
                            return new CapabilitiesRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the FHIR capability statement
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/capabilitystatement.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/capabilitystatement.html)), or the
                        /// [conformance statement](http://hl7.org/implement/standards/fhir/DSTU2/conformance.html) in
                        /// the DSTU2 case for the store, which contains a description of functionality supported by the
                        /// server. Implements the FHIR standard capabilities interaction
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#capabilities),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#capabilities)), or the
                        /// [conformance
                        /// interaction](http://hl7.org/implement/standards/fhir/DSTU2/http.html#conformance) in the
                        /// DSTU2 case. On success, the response body contains a JSON-encoded representation of a
                        /// `CapabilityStatement` resource.
                        /// </summary>
                        public class CapabilitiesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new Capabilities request.</summary>
                            public CapabilitiesRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. Name of the FHIR store to retrieve the capabilities for.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "capabilities";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}/fhir/metadata";

                            /// <summary>Initializes Capabilities parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes a FHIR resource that match an identifier search query. Implements the FHIR standard
                        /// conditional delete interaction, limited to searching by resource identifier. If multiple
                        /// resources match, 412 Precondition Failed error will be returned. Search term for identifier
                        /// should be in the pattern `identifier=system|value` or `identifier=value` - similar to the
                        /// `search` method on resources with a specific identifier. Note: Unless resource versioning is
                        /// disabled by setting the disable_resource_versioning flag on the FHIR store, the deleted
                        /// resource is moved to a history repository that can still be retrieved through vread and
                        /// related methods, unless they are removed by the purge method. For samples that show how to
                        /// call `conditionalDelete`, see [Conditionally deleting a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#conditionally_deleting_a_fhir_resource).
                        /// </summary>
                        /// <param name="parent">Required. The name of the FHIR store this resource belongs to.</param>
                        /// <param name="type">
                        /// Required. The FHIR resource type to delete, such as Patient or Observation. For a complete
                        /// list, see the FHIR Resource Index
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
                        /// </param>
                        public virtual ConditionalDeleteRequest ConditionalDelete(string parent, string type)
                        {
                            return new ConditionalDeleteRequest(this.service, parent, type);
                        }

                        /// <summary>
                        /// Deletes a FHIR resource that match an identifier search query. Implements the FHIR standard
                        /// conditional delete interaction, limited to searching by resource identifier. If multiple
                        /// resources match, 412 Precondition Failed error will be returned. Search term for identifier
                        /// should be in the pattern `identifier=system|value` or `identifier=value` - similar to the
                        /// `search` method on resources with a specific identifier. Note: Unless resource versioning is
                        /// disabled by setting the disable_resource_versioning flag on the FHIR store, the deleted
                        /// resource is moved to a history repository that can still be retrieved through vread and
                        /// related methods, unless they are removed by the purge method. For samples that show how to
                        /// call `conditionalDelete`, see [Conditionally deleting a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#conditionally_deleting_a_fhir_resource).
                        /// </summary>
                        public class ConditionalDeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                        {
                            /// <summary>Constructs a new ConditionalDelete request.</summary>
                            public ConditionalDeleteRequest(Google.Apis.Services.IClientService service, string parent, string type) : base(service)
                            {
                                Parent = parent;
                                Type = type;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the FHIR store this resource belongs to.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The FHIR resource type to delete, such as Patient or Observation. For a
                            /// complete list, see the FHIR Resource Index
                            /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                            /// [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                            /// [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Type { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "conditionalDelete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir/{+type}";

                            /// <summary>Initializes ConditionalDelete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                                RequestParameters.Add("type", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "type",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// If a resource is found with the identifier specified in the query parameters, updates part
                        /// of that resource by applying the operations specified in a [JSON
                        /// Patch](http://jsonpatch.com/) document. Implements the FHIR standard conditional patch
                        /// interaction, limited to searching by resource identifier. DSTU2 doesn't define a conditional
                        /// patch method, but the server supports it in the same way it supports STU3. Search term for
                        /// identifier should be in the pattern `identifier=system|value` or `identifier=value` -
                        /// similar to the `search` method on resources with a specific identifier. If the search
                        /// criteria identify more than one match, the request returns a `412 Precondition Failed`
                        /// error. The request body must contain a JSON Patch document, and the request headers must
                        /// contain `Content-Type: application/json-patch+json`. On success, the response body contains
                        /// a JSON-encoded representation of the updated resource, including the server-assigned version
                        /// ID. Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
                        /// describing the reason for the error. If the request cannot be mapped to a valid API method
                        /// on a FHIR store, a generic GCP error might be returned instead. For samples that show how to
                        /// call `conditionalPatch`, see [Conditionally patching a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#conditionally_patching_a_fhir_resource).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. The name of the FHIR store this resource belongs to.</param>
                        /// <param name="type">
                        /// Required. The FHIR resource type to update, such as Patient or Observation. For a complete
                        /// list, see the FHIR Resource Index
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
                        /// </param>
                        public virtual ConditionalPatchRequest ConditionalPatch(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string type)
                        {
                            return new ConditionalPatchRequest(this.service, body, parent, type);
                        }

                        /// <summary>
                        /// If a resource is found with the identifier specified in the query parameters, updates part
                        /// of that resource by applying the operations specified in a [JSON
                        /// Patch](http://jsonpatch.com/) document. Implements the FHIR standard conditional patch
                        /// interaction, limited to searching by resource identifier. DSTU2 doesn't define a conditional
                        /// patch method, but the server supports it in the same way it supports STU3. Search term for
                        /// identifier should be in the pattern `identifier=system|value` or `identifier=value` -
                        /// similar to the `search` method on resources with a specific identifier. If the search
                        /// criteria identify more than one match, the request returns a `412 Precondition Failed`
                        /// error. The request body must contain a JSON Patch document, and the request headers must
                        /// contain `Content-Type: application/json-patch+json`. On success, the response body contains
                        /// a JSON-encoded representation of the updated resource, including the server-assigned version
                        /// ID. Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
                        /// describing the reason for the error. If the request cannot be mapped to a valid API method
                        /// on a FHIR store, a generic GCP error might be returned instead. For samples that show how to
                        /// call `conditionalPatch`, see [Conditionally patching a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#conditionally_patching_a_fhir_resource).
                        /// </summary>
                        public class ConditionalPatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new ConditionalPatch request.</summary>
                            public ConditionalPatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string type) : base(service)
                            {
                                Parent = parent;
                                Type = type;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the FHIR store this resource belongs to.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The FHIR resource type to update, such as Patient or Observation. For a
                            /// complete list, see the FHIR Resource Index
                            /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                            /// [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                            /// [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Type { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "conditionalPatch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir/{+type}";

                            /// <summary>Initializes ConditionalPatch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                                RequestParameters.Add("type", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "type",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// If a resource is found with the identifier specified in the query parameters, updates the
                        /// entire contents of that resource. Implements the FHIR standard conditional update
                        /// interaction, limited to searching by resource identifier. Search term for identifier should
                        /// be in the pattern `identifier=system|value` or `identifier=value` - similar to the `search`
                        /// method on resources with a specific identifier. If the search criteria identify more than
                        /// one match, the request returns a `412 Precondition Failed` error. If the search criteria
                        /// identify zero matches, and the supplied resource body contains an `id`, and the FHIR store
                        /// has enable_update_create set, creates the resource with the client-specified ID. It is
                        /// strongly advised not to include or encode any sensitive data such as patient identifiers in
                        /// client-specified resource IDs. Those IDs are part of the FHIR resource path recorded in
                        /// Cloud Audit Logs and Pub/Sub notifications. Those IDs can also be contained in reference
                        /// fields within other resources. If the search criteria identify zero matches, and the
                        /// supplied resource body does not contain an `id`, the resource is created with a
                        /// server-assigned ID as per the create method. The request body must contain a JSON-encoded
                        /// FHIR resource, and the request headers must contain `Content-Type: application/fhir+json`.
                        /// On success, the response body contains a JSON-encoded representation of the updated
                        /// resource, including the server-assigned version ID. Errors generated by the FHIR store
                        /// contain a JSON-encoded `OperationOutcome` resource describing the reason for the error. If
                        /// the request cannot be mapped to a valid API method on a FHIR store, a generic GCP error
                        /// might be returned instead. For samples that show how to call `conditionalUpdate`, see
                        /// [Conditionally updating a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#conditionally_updating_a_fhir_resource).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. The name of the FHIR store this resource belongs to.</param>
                        /// <param name="type">
                        /// Required. The FHIR resource type to update, such as Patient or Observation. For a complete
                        /// list, see the FHIR Resource Index
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
                        /// resource type in the provided content.
                        /// </param>
                        public virtual ConditionalUpdateRequest ConditionalUpdate(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string type)
                        {
                            return new ConditionalUpdateRequest(this.service, body, parent, type);
                        }

                        /// <summary>
                        /// If a resource is found with the identifier specified in the query parameters, updates the
                        /// entire contents of that resource. Implements the FHIR standard conditional update
                        /// interaction, limited to searching by resource identifier. Search term for identifier should
                        /// be in the pattern `identifier=system|value` or `identifier=value` - similar to the `search`
                        /// method on resources with a specific identifier. If the search criteria identify more than
                        /// one match, the request returns a `412 Precondition Failed` error. If the search criteria
                        /// identify zero matches, and the supplied resource body contains an `id`, and the FHIR store
                        /// has enable_update_create set, creates the resource with the client-specified ID. It is
                        /// strongly advised not to include or encode any sensitive data such as patient identifiers in
                        /// client-specified resource IDs. Those IDs are part of the FHIR resource path recorded in
                        /// Cloud Audit Logs and Pub/Sub notifications. Those IDs can also be contained in reference
                        /// fields within other resources. If the search criteria identify zero matches, and the
                        /// supplied resource body does not contain an `id`, the resource is created with a
                        /// server-assigned ID as per the create method. The request body must contain a JSON-encoded
                        /// FHIR resource, and the request headers must contain `Content-Type: application/fhir+json`.
                        /// On success, the response body contains a JSON-encoded representation of the updated
                        /// resource, including the server-assigned version ID. Errors generated by the FHIR store
                        /// contain a JSON-encoded `OperationOutcome` resource describing the reason for the error. If
                        /// the request cannot be mapped to a valid API method on a FHIR store, a generic GCP error
                        /// might be returned instead. For samples that show how to call `conditionalUpdate`, see
                        /// [Conditionally updating a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#conditionally_updating_a_fhir_resource).
                        /// </summary>
                        public class ConditionalUpdateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new ConditionalUpdate request.</summary>
                            public ConditionalUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string type) : base(service)
                            {
                                Parent = parent;
                                Type = type;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the FHIR store this resource belongs to.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The FHIR resource type to update, such as Patient or Observation. For a
                            /// complete list, see the FHIR Resource Index
                            /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                            /// [STU3](https://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                            /// [R4](https://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
                            /// resource type in the provided content.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Type { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "conditionalUpdate";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PUT";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir/{+type}";

                            /// <summary>Initializes ConditionalUpdate parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                                RequestParameters.Add("type", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "type",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Creates a FHIR resource. Implements the FHIR standard create interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#create),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#create),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#create)), which creates a new
                        /// resource with a server-assigned resource ID. Also supports the FHIR standard conditional
                        /// create interaction
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#ccreate),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#ccreate),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/http.html#ccreate)), specified by supplying
                        /// an `If-None-Exist` header containing a FHIR search query, limited to searching by resource
                        /// identifier. If no resources match this search query, the server processes the create
                        /// operation as normal. When using conditional create, the search term for identifier should be
                        /// in the pattern `identifier=system|value` or `identifier=value` - similar to the `search`
                        /// method on resources with a specific identifier. The request body must contain a JSON-encoded
                        /// FHIR resource, and the request headers must contain `Content-Type: application/fhir+json`.
                        /// On success, the response body contains a JSON-encoded representation of the resource as it
                        /// was created on the server, including the server-assigned resource ID and version ID. Errors
                        /// generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing
                        /// the reason for the error. If the request cannot be mapped to a valid API method on a FHIR
                        /// store, a generic GCP error might be returned instead. For samples that show how to call
                        /// `create`, see [Creating a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#creating_a_fhir_resource).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. The name of the FHIR store this resource belongs to.</param>
                        /// <param name="type">
                        /// Required. The FHIR resource type to create, such as Patient or Observation. For a complete
                        /// list, see the FHIR Resource Index
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the resource
                        /// type in the provided content.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string type)
                        {
                            return new CreateRequest(this.service, body, parent, type);
                        }

                        /// <summary>
                        /// Creates a FHIR resource. Implements the FHIR standard create interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#create),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#create),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#create)), which creates a new
                        /// resource with a server-assigned resource ID. Also supports the FHIR standard conditional
                        /// create interaction
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#ccreate),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#ccreate),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/http.html#ccreate)), specified by supplying
                        /// an `If-None-Exist` header containing a FHIR search query, limited to searching by resource
                        /// identifier. If no resources match this search query, the server processes the create
                        /// operation as normal. When using conditional create, the search term for identifier should be
                        /// in the pattern `identifier=system|value` or `identifier=value` - similar to the `search`
                        /// method on resources with a specific identifier. The request body must contain a JSON-encoded
                        /// FHIR resource, and the request headers must contain `Content-Type: application/fhir+json`.
                        /// On success, the response body contains a JSON-encoded representation of the resource as it
                        /// was created on the server, including the server-assigned resource ID and version ID. Errors
                        /// generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing
                        /// the reason for the error. If the request cannot be mapped to a valid API method on a FHIR
                        /// store, a generic GCP error might be returned instead. For samples that show how to call
                        /// `create`, see [Creating a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#creating_a_fhir_resource).
                        /// </summary>
                        public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent, string type) : base(service)
                            {
                                Parent = parent;
                                Type = type;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the FHIR store this resource belongs to.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The FHIR resource type to create, such as Patient or Observation. For a
                            /// complete list, see the FHIR Resource Index
                            /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                            /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                            /// [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)). Must match the
                            /// resource type in the provided content.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Type { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir/{+type}";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                                RequestParameters.Add("type", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "type",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes a FHIR resource. Implements the FHIR standard delete interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#delete),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#delete),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#delete)). Note: Unless resource
                        /// versioning is disabled by setting the disable_resource_versioning flag on the FHIR store,
                        /// the deleted resources will be moved to a history repository that can still be retrieved
                        /// through vread and related methods, unless they are removed by the purge method. For samples
                        /// that show how to call `delete`, see [Deleting a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#deleting_a_fhir_resource).
                        /// </summary>
                        /// <param name="name">Required. The name of the resource to delete.</param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes a FHIR resource. Implements the FHIR standard delete interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#delete),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#delete),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#delete)). Note: Unless resource
                        /// versioning is disabled by setting the disable_resource_versioning flag on the FHIR store,
                        /// the deleted resources will be moved to a history repository that can still be retrieved
                        /// through vread and related methods, unless they are removed by the purge method. For samples
                        /// that show how to call `delete`, see [Deleting a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#deleting_a_fhir_resource).
                        /// </summary>
                        public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the resource to delete.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Executes all the requests in the given Bundle. Implements the FHIR standard
                        /// batch/transaction interaction
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#transaction),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#transaction),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/http.html#transaction)). Supports all
                        /// interactions within a bundle, except search. This method accepts Bundles of type `batch` and
                        /// `transaction`, processing them according to the batch processing rules
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.1),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.1),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/http.html#brules)) and transaction
                        /// processing rules
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.2),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.2),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/http.html#trules)). The request body must
                        /// contain a JSON-encoded FHIR `Bundle` resource, and the request headers must contain
                        /// `Content-Type: application/fhir+json`. For a batch bundle or a successful transaction, the
                        /// response body contains a JSON-encoded representation of a `Bundle` resource of type
                        /// `batch-response` or `transaction-response` containing one entry for each entry in the
                        /// request, with the outcome of processing the entry. In the case of an error for a transaction
                        /// bundle, the response body contains a JSON-encoded `OperationOutcome` resource describing the
                        /// reason for the error. If the request cannot be mapped to a valid API method on a FHIR store,
                        /// a generic GCP error might be returned instead. This method checks permissions for each
                        /// request in the bundle. The `executeBundle` permission is required to call this method, but
                        /// you must also grant sufficient permissions to execute the individual requests in the bundle.
                        /// For example, if the bundle contains a request to create a FHIR resource, the caller must
                        /// also have been granted the `healthcare.fhirResources.create` permission. You can use audit
                        /// logs to view the permissions for `executeBundle` and each request in the bundle. For more
                        /// information, see [Viewing Cloud Audit
                        /// logs](https://cloud.google.com/healthcare-api/docs/how-tos/audit-logging). For samples that
                        /// show how to call `executeBundle`, see [Managing FHIR resources using FHIR
                        /// bundles](https://cloud.google.com/healthcare/docs/how-tos/fhir-bundles).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Name of the FHIR store in which this bundle will be executed.
                        /// </param>
                        public virtual ExecuteBundleRequest ExecuteBundle(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent)
                        {
                            return new ExecuteBundleRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Executes all the requests in the given Bundle. Implements the FHIR standard
                        /// batch/transaction interaction
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#transaction),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#transaction),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/http.html#transaction)). Supports all
                        /// interactions within a bundle, except search. This method accepts Bundles of type `batch` and
                        /// `transaction`, processing them according to the batch processing rules
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.1),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.1),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/http.html#brules)) and transaction
                        /// processing rules
                        /// ([DSTU2](https://hl7.org/implement/standards/fhir/DSTU2/http.html#2.1.0.16.2),
                        /// [STU3](https://hl7.org/implement/standards/fhir/STU3/http.html#2.21.0.17.2),
                        /// [R4](https://hl7.org/implement/standards/fhir/R4/http.html#trules)). The request body must
                        /// contain a JSON-encoded FHIR `Bundle` resource, and the request headers must contain
                        /// `Content-Type: application/fhir+json`. For a batch bundle or a successful transaction, the
                        /// response body contains a JSON-encoded representation of a `Bundle` resource of type
                        /// `batch-response` or `transaction-response` containing one entry for each entry in the
                        /// request, with the outcome of processing the entry. In the case of an error for a transaction
                        /// bundle, the response body contains a JSON-encoded `OperationOutcome` resource describing the
                        /// reason for the error. If the request cannot be mapped to a valid API method on a FHIR store,
                        /// a generic GCP error might be returned instead. This method checks permissions for each
                        /// request in the bundle. The `executeBundle` permission is required to call this method, but
                        /// you must also grant sufficient permissions to execute the individual requests in the bundle.
                        /// For example, if the bundle contains a request to create a FHIR resource, the caller must
                        /// also have been granted the `healthcare.fhirResources.create` permission. You can use audit
                        /// logs to view the permissions for `executeBundle` and each request in the bundle. For more
                        /// information, see [Viewing Cloud Audit
                        /// logs](https://cloud.google.com/healthcare-api/docs/how-tos/audit-logging). For samples that
                        /// show how to call `executeBundle`, see [Managing FHIR resources using FHIR
                        /// bundles](https://cloud.google.com/healthcare/docs/how-tos/fhir-bundles).
                        /// </summary>
                        public class ExecuteBundleRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new ExecuteBundle request.</summary>
                            public ExecuteBundleRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Name of the FHIR store in which this bundle will be executed.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "executeBundle";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir";

                            /// <summary>Initializes ExecuteBundle parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Lists all the versions of a resource (including the current version and deleted versions)
                        /// from the FHIR store. Implements the per-resource form of the FHIR standard history
                        /// interaction ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#history),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#history),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#history)). On success, the
                        /// response body contains a JSON-encoded representation of a `Bundle` resource of type
                        /// `history`, containing the version history sorted from most recent to oldest versions. Errors
                        /// generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing
                        /// the reason for the error. If the request cannot be mapped to a valid API method on a FHIR
                        /// store, a generic GCP error might be returned instead. For samples that show how to call
                        /// `history`, see [Listing FHIR resource
                        /// versions](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#listing_fhir_resource_versions).
                        /// </summary>
                        /// <param name="name">Required. The name of the resource to retrieve.</param>
                        public virtual HistoryRequest History(string name)
                        {
                            return new HistoryRequest(this.service, name);
                        }

                        /// <summary>
                        /// Lists all the versions of a resource (including the current version and deleted versions)
                        /// from the FHIR store. Implements the per-resource form of the FHIR standard history
                        /// interaction ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#history),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#history),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#history)). On success, the
                        /// response body contains a JSON-encoded representation of a `Bundle` resource of type
                        /// `history`, containing the version history sorted from most recent to oldest versions. Errors
                        /// generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing
                        /// the reason for the error. If the request cannot be mapped to a valid API method on a FHIR
                        /// store, a generic GCP error might be returned instead. For samples that show how to call
                        /// `history`, see [Listing FHIR resource
                        /// versions](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#listing_fhir_resource_versions).
                        /// </summary>
                        public class HistoryRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new History request.</summary>
                            public HistoryRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the resource to retrieve.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Only include resource versions that were current at some point during the time period
                            /// specified in the date time value. The date parameter format is
                            /// yyyy-mm-ddThh:mm:ss[Z|(+|-)hh:mm] Clients may specify any of the following: * An entire
                            /// year: `_at=2019` * An entire month: `_at=2019-01` * A specific day: `_at=2019-01-20` * A
                            /// specific second: `_at=2018-12-31T23:59:58Z`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_at", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string At { get; set; }

                            /// <summary>
                            /// The maximum number of search results on a page. If not specified, 100 is used. May not
                            /// be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_count", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> Count { get; set; }

                            /// <summary>
                            /// Used to retrieve the first, previous, next, or last page of resource versions when using
                            /// pagination. Value should be set to the value of `_page_token` set in next or previous
                            /// page links' URLs. Next and previous page are returned in the response bundle's links
                            /// field, where `link.relation` is "previous" or "next". Omit `_page_token` if no previous
                            /// request has been made.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_page_token", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>
                            /// Only include resource versions that were created at or after the given instant in time.
                            /// The instant in time uses the format YYYY-MM-DDThh:mm:ss.sss+zz:zz (for example
                            /// 2015-02-07T13:28:17.239+02:00 or 2017-01-01T00:00:00Z). The time must be specified to
                            /// the second and include a time zone.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("_since", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Since { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "history";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}/_history";

                            /// <summary>Initializes History parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                                });
                                RequestParameters.Add("_at", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_at",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("_count", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_count",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("_page_token", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_page_token",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("_since", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "_since",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates part of an existing resource by applying the operations specified in a [JSON
                        /// Patch](http://jsonpatch.com/) document. Implements the FHIR standard patch interaction
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#patch),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#patch)). DSTU2 doesn't define a
                        /// patch method, but the server supports it in the same way it supports STU3. The request body
                        /// must contain a JSON Patch document, and the request headers must contain `Content-Type:
                        /// application/json-patch+json`. On success, the response body contains a JSON-encoded
                        /// representation of the updated resource, including the server-assigned version ID. Errors
                        /// generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing
                        /// the reason for the error. If the request cannot be mapped to a valid API method on a FHIR
                        /// store, a generic GCP error might be returned instead. For samples that show how to call
                        /// `patch`, see [Patching a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#patching_a_fhir_resource).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">Required. The name of the resource to update.</param>
                        public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates part of an existing resource by applying the operations specified in a [JSON
                        /// Patch](http://jsonpatch.com/) document. Implements the FHIR standard patch interaction
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#patch),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#patch)). DSTU2 doesn't define a
                        /// patch method, but the server supports it in the same way it supports STU3. The request body
                        /// must contain a JSON Patch document, and the request headers must contain `Content-Type:
                        /// application/json-patch+json`. On success, the response body contains a JSON-encoded
                        /// representation of the updated resource, including the server-assigned version ID. Errors
                        /// generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource describing
                        /// the reason for the error. If the request cannot be mapped to a valid API method on a FHIR
                        /// store, a generic GCP error might be returned instead. For samples that show how to call
                        /// `patch`, see [Patching a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#patching_a_fhir_resource).
                        /// </summary>
                        public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the resource to update.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets the contents of a FHIR resource. Implements the FHIR standard read interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#read),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#read),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#read)). Also supports the FHIR
                        /// standard conditional read interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#cread),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#cread),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#cread)) specified by supplying an
                        /// `If-Modified-Since` header with a date/time value or an `If-None-Match` header with an ETag
                        /// value. On success, the response body contains a JSON-encoded representation of the resource.
                        /// Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
                        /// describing the reason for the error. If the request cannot be mapped to a valid API method
                        /// on a FHIR store, a generic GCP error might be returned instead. For samples that show how to
                        /// call `read`, see [Getting a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#getting_a_fhir_resource).
                        /// </summary>
                        /// <param name="name">Required. The name of the resource to retrieve.</param>
                        public virtual ReadRequest Read(string name)
                        {
                            return new ReadRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the contents of a FHIR resource. Implements the FHIR standard read interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#read),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#read),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#read)). Also supports the FHIR
                        /// standard conditional read interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#cread),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#cread),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#cread)) specified by supplying an
                        /// `If-Modified-Since` header with a date/time value or an `If-None-Match` header with an ETag
                        /// value. On success, the response body contains a JSON-encoded representation of the resource.
                        /// Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
                        /// describing the reason for the error. If the request cannot be mapped to a valid API method
                        /// on a FHIR store, a generic GCP error might be returned instead. For samples that show how to
                        /// call `read`, see [Getting a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#getting_a_fhir_resource).
                        /// </summary>
                        public class ReadRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new Read request.</summary>
                            public ReadRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the resource to retrieve.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "read";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Read parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Searches for resources in the given FHIR store according to criteria specified as query
                        /// parameters. Implements the FHIR standard search interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#search),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#search),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#search)) using the search
                        /// semantics described in the FHIR Search specification
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/search.html),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/search.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/search.html)). Supports four methods of
                        /// search defined by the specification: * `GET [base]?[parameters]` to search across all
                        /// resources. * `GET [base]/[type]?[parameters]` to search resources of a specified type. *
                        /// `POST [base]/_search?[parameters]` as an alternate form having the same semantics as the
                        /// `GET` method across all resources. * `POST [base]/[type]/_search?[parameters]` as an
                        /// alternate form having the same semantics as the `GET` method for the specified type. The
                        /// `GET` and `POST` methods do not support compartment searches. The `POST` method does not
                        /// support `application/x-www-form-urlencoded` search parameters. On success, the response body
                        /// contains a JSON-encoded representation of a `Bundle` resource of type `searchset`,
                        /// containing the results of the search. Errors generated by the FHIR store contain a
                        /// JSON-encoded `OperationOutcome` resource describing the reason for the error. If the request
                        /// cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
                        /// returned instead. The server's capability statement, retrieved through capabilities,
                        /// indicates what search parameters are supported on each FHIR resource. A list of all search
                        /// parameters defined by the specification can be found in the FHIR Search Parameter Registry
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/searchparameter-registry.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)). FHIR search
                        /// parameters for DSTU2 can be found on each resource's definition page. Supported search
                        /// modifiers: `:missing`, `:exact`, `:contains`, `:text`, `:in`, `:not-in`, `:above`, `:below`,
                        /// `:[type]`, `:not`, and `recurse` (DSTU2 and STU3) or `:iterate` (R4). Supported search
                        /// result parameters: `_sort`, `_count`, `_include`, `_revinclude`, `_summary=text`,
                        /// `_summary=data`, and `_elements`. The maximum number of search results returned defaults to
                        /// 100, which can be overridden by the `_count` parameter up to a maximum limit of 1000. The
                        /// server might return fewer resources than requested to prevent excessively large responses.
                        /// If there are additional results, the returned `Bundle` contains a link of `relation` "next",
                        /// which has a `_page_token` parameter for an opaque pagination token that can be used to
                        /// retrieve the next page. Resources with a total size larger than 5MB or a field count larger
                        /// than 50,000 might not be fully searchable as the server might trim its generated search
                        /// index in those cases. Note: FHIR resources are indexed asynchronously, so there might be a
                        /// slight delay between the time a resource is created or changed, and the time when the change
                        /// reflects in search results. The only exception is resource identifier data, which is indexed
                        /// synchronously as a special index. As a result, searching using resource identifier is not
                        /// subject to indexing delay. To use the special synchronous index, the search term for
                        /// identifier should be in the pattern `identifier=[system]|[value]` or `identifier=[value]`,
                        /// and any of the following search result parameters can be used: * `_count` * `_include` *
                        /// `_revinclude` * `_summary` * `_elements` If your query contains any other search parameters,
                        /// the standard asynchronous index will be used instead. Note that searching against the
                        /// special index is optimized for resolving a small number of matches. The search isn't
                        /// optimized if your identifier search criteria matches a large number (i.e. more than 2,000)
                        /// of resources. For a search query that will match a large number of resources, you can
                        /// avoiding using the special synchronous index by including an additional `_sort` parameter in
                        /// your query. Use `_sort=-_lastUpdated` if you want to keep the default sorting order. Note:
                        /// The special synchronous identifier index are currently disabled for DocumentReference and
                        /// DocumentManifest searches. For samples and detailed information, see [Searching for FHIR
                        /// resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-search) and [Advanced FHIR
                        /// search features](https://cloud.google.com/healthcare/docs/how-tos/fhir-advanced-search).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. Name of the FHIR store to retrieve resources from.</param>
                        public virtual SearchRequest Search(Google.Apis.CloudHealthcare.v1.Data.SearchResourcesRequest body, string parent)
                        {
                            return new SearchRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Searches for resources in the given FHIR store according to criteria specified as query
                        /// parameters. Implements the FHIR standard search interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#search),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#search),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#search)) using the search
                        /// semantics described in the FHIR Search specification
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/search.html),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/search.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/search.html)). Supports four methods of
                        /// search defined by the specification: * `GET [base]?[parameters]` to search across all
                        /// resources. * `GET [base]/[type]?[parameters]` to search resources of a specified type. *
                        /// `POST [base]/_search?[parameters]` as an alternate form having the same semantics as the
                        /// `GET` method across all resources. * `POST [base]/[type]/_search?[parameters]` as an
                        /// alternate form having the same semantics as the `GET` method for the specified type. The
                        /// `GET` and `POST` methods do not support compartment searches. The `POST` method does not
                        /// support `application/x-www-form-urlencoded` search parameters. On success, the response body
                        /// contains a JSON-encoded representation of a `Bundle` resource of type `searchset`,
                        /// containing the results of the search. Errors generated by the FHIR store contain a
                        /// JSON-encoded `OperationOutcome` resource describing the reason for the error. If the request
                        /// cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
                        /// returned instead. The server's capability statement, retrieved through capabilities,
                        /// indicates what search parameters are supported on each FHIR resource. A list of all search
                        /// parameters defined by the specification can be found in the FHIR Search Parameter Registry
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/searchparameter-registry.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)). FHIR search
                        /// parameters for DSTU2 can be found on each resource's definition page. Supported search
                        /// modifiers: `:missing`, `:exact`, `:contains`, `:text`, `:in`, `:not-in`, `:above`, `:below`,
                        /// `:[type]`, `:not`, and `recurse` (DSTU2 and STU3) or `:iterate` (R4). Supported search
                        /// result parameters: `_sort`, `_count`, `_include`, `_revinclude`, `_summary=text`,
                        /// `_summary=data`, and `_elements`. The maximum number of search results returned defaults to
                        /// 100, which can be overridden by the `_count` parameter up to a maximum limit of 1000. The
                        /// server might return fewer resources than requested to prevent excessively large responses.
                        /// If there are additional results, the returned `Bundle` contains a link of `relation` "next",
                        /// which has a `_page_token` parameter for an opaque pagination token that can be used to
                        /// retrieve the next page. Resources with a total size larger than 5MB or a field count larger
                        /// than 50,000 might not be fully searchable as the server might trim its generated search
                        /// index in those cases. Note: FHIR resources are indexed asynchronously, so there might be a
                        /// slight delay between the time a resource is created or changed, and the time when the change
                        /// reflects in search results. The only exception is resource identifier data, which is indexed
                        /// synchronously as a special index. As a result, searching using resource identifier is not
                        /// subject to indexing delay. To use the special synchronous index, the search term for
                        /// identifier should be in the pattern `identifier=[system]|[value]` or `identifier=[value]`,
                        /// and any of the following search result parameters can be used: * `_count` * `_include` *
                        /// `_revinclude` * `_summary` * `_elements` If your query contains any other search parameters,
                        /// the standard asynchronous index will be used instead. Note that searching against the
                        /// special index is optimized for resolving a small number of matches. The search isn't
                        /// optimized if your identifier search criteria matches a large number (i.e. more than 2,000)
                        /// of resources. For a search query that will match a large number of resources, you can
                        /// avoiding using the special synchronous index by including an additional `_sort` parameter in
                        /// your query. Use `_sort=-_lastUpdated` if you want to keep the default sorting order. Note:
                        /// The special synchronous identifier index are currently disabled for DocumentReference and
                        /// DocumentManifest searches. For samples and detailed information, see [Searching for FHIR
                        /// resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-search) and [Advanced FHIR
                        /// search features](https://cloud.google.com/healthcare/docs/how-tos/fhir-advanced-search).
                        /// </summary>
                        public class SearchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new Search request.</summary>
                            public SearchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SearchResourcesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. Name of the FHIR store to retrieve resources from.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.SearchResourcesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "search";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir/_search";

                            /// <summary>Initializes Search parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Searches for resources in the given FHIR store according to criteria specified as query
                        /// parameters. Implements the FHIR standard search interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#search),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#search),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#search)) using the search
                        /// semantics described in the FHIR Search specification
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/search.html),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/search.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/search.html)). Supports four methods of
                        /// search defined by the specification: * `GET [base]?[parameters]` to search across all
                        /// resources. * `GET [base]/[type]?[parameters]` to search resources of a specified type. *
                        /// `POST [base]/_search?[parameters]` as an alternate form having the same semantics as the
                        /// `GET` method across all resources. * `POST [base]/[type]/_search?[parameters]` as an
                        /// alternate form having the same semantics as the `GET` method for the specified type. The
                        /// `GET` and `POST` methods do not support compartment searches. The `POST` method does not
                        /// support `application/x-www-form-urlencoded` search parameters. On success, the response body
                        /// contains a JSON-encoded representation of a `Bundle` resource of type `searchset`,
                        /// containing the results of the search. Errors generated by the FHIR store contain a
                        /// JSON-encoded `OperationOutcome` resource describing the reason for the error. If the request
                        /// cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
                        /// returned instead. The server's capability statement, retrieved through capabilities,
                        /// indicates what search parameters are supported on each FHIR resource. A list of all search
                        /// parameters defined by the specification can be found in the FHIR Search Parameter Registry
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/searchparameter-registry.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)). FHIR search
                        /// parameters for DSTU2 can be found on each resource's definition page. Supported search
                        /// modifiers: `:missing`, `:exact`, `:contains`, `:text`, `:in`, `:not-in`, `:above`, `:below`,
                        /// `:[type]`, `:not`, and `recurse` (DSTU2 and STU3) or `:iterate` (R4). Supported search
                        /// result parameters: `_sort`, `_count`, `_include`, `_revinclude`, `_summary=text`,
                        /// `_summary=data`, and `_elements`. The maximum number of search results returned defaults to
                        /// 100, which can be overridden by the `_count` parameter up to a maximum limit of 1000. The
                        /// server might return fewer resources than requested to prevent excessively large responses.
                        /// If there are additional results, the returned `Bundle` contains a link of `relation` "next",
                        /// which has a `_page_token` parameter for an opaque pagination token that can be used to
                        /// retrieve the next page. Resources with a total size larger than 5MB or a field count larger
                        /// than 50,000 might not be fully searchable as the server might trim its generated search
                        /// index in those cases. Note: FHIR resources are indexed asynchronously, so there might be a
                        /// slight delay between the time a resource is created or changed, and the time when the change
                        /// reflects in search results. The only exception is resource identifier data, which is indexed
                        /// synchronously as a special index. As a result, searching using resource identifier is not
                        /// subject to indexing delay. To use the special synchronous index, the search term for
                        /// identifier should be in the pattern `identifier=[system]|[value]` or `identifier=[value]`,
                        /// and any of the following search result parameters can be used: * `_count` * `_include` *
                        /// `_revinclude` * `_summary` * `_elements` If your query contains any other search parameters,
                        /// the standard asynchronous index will be used instead. Note that searching against the
                        /// special index is optimized for resolving a small number of matches. The search isn't
                        /// optimized if your identifier search criteria matches a large number (i.e. more than 2,000)
                        /// of resources. For a search query that will match a large number of resources, you can
                        /// avoiding using the special synchronous index by including an additional `_sort` parameter in
                        /// your query. Use `_sort=-_lastUpdated` if you want to keep the default sorting order. Note:
                        /// The special synchronous identifier index are currently disabled for DocumentReference and
                        /// DocumentManifest searches. For samples and detailed information, see [Searching for FHIR
                        /// resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-search) and [Advanced FHIR
                        /// search features](https://cloud.google.com/healthcare/docs/how-tos/fhir-advanced-search).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. Name of the FHIR store to retrieve resources from.</param>
                        /// <param name="resourceType">
                        /// Optional. The FHIR resource type to search, such as Patient or Observation. For a complete
                        /// list, see the FHIR Resource Index
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
                        /// </param>
                        public virtual SearchTypeRequest SearchType(Google.Apis.CloudHealthcare.v1.Data.SearchResourcesRequest body, string parent, string resourceType)
                        {
                            return new SearchTypeRequest(this.service, body, parent, resourceType);
                        }

                        /// <summary>
                        /// Searches for resources in the given FHIR store according to criteria specified as query
                        /// parameters. Implements the FHIR standard search interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#search),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#search),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#search)) using the search
                        /// semantics described in the FHIR Search specification
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/search.html),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/search.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/search.html)). Supports four methods of
                        /// search defined by the specification: * `GET [base]?[parameters]` to search across all
                        /// resources. * `GET [base]/[type]?[parameters]` to search resources of a specified type. *
                        /// `POST [base]/_search?[parameters]` as an alternate form having the same semantics as the
                        /// `GET` method across all resources. * `POST [base]/[type]/_search?[parameters]` as an
                        /// alternate form having the same semantics as the `GET` method for the specified type. The
                        /// `GET` and `POST` methods do not support compartment searches. The `POST` method does not
                        /// support `application/x-www-form-urlencoded` search parameters. On success, the response body
                        /// contains a JSON-encoded representation of a `Bundle` resource of type `searchset`,
                        /// containing the results of the search. Errors generated by the FHIR store contain a
                        /// JSON-encoded `OperationOutcome` resource describing the reason for the error. If the request
                        /// cannot be mapped to a valid API method on a FHIR store, a generic GCP error might be
                        /// returned instead. The server's capability statement, retrieved through capabilities,
                        /// indicates what search parameters are supported on each FHIR resource. A list of all search
                        /// parameters defined by the specification can be found in the FHIR Search Parameter Registry
                        /// ([STU3](http://hl7.org/implement/standards/fhir/STU3/searchparameter-registry.html),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/searchparameter-registry.html)). FHIR search
                        /// parameters for DSTU2 can be found on each resource's definition page. Supported search
                        /// modifiers: `:missing`, `:exact`, `:contains`, `:text`, `:in`, `:not-in`, `:above`, `:below`,
                        /// `:[type]`, `:not`, and `recurse` (DSTU2 and STU3) or `:iterate` (R4). Supported search
                        /// result parameters: `_sort`, `_count`, `_include`, `_revinclude`, `_summary=text`,
                        /// `_summary=data`, and `_elements`. The maximum number of search results returned defaults to
                        /// 100, which can be overridden by the `_count` parameter up to a maximum limit of 1000. The
                        /// server might return fewer resources than requested to prevent excessively large responses.
                        /// If there are additional results, the returned `Bundle` contains a link of `relation` "next",
                        /// which has a `_page_token` parameter for an opaque pagination token that can be used to
                        /// retrieve the next page. Resources with a total size larger than 5MB or a field count larger
                        /// than 50,000 might not be fully searchable as the server might trim its generated search
                        /// index in those cases. Note: FHIR resources are indexed asynchronously, so there might be a
                        /// slight delay between the time a resource is created or changed, and the time when the change
                        /// reflects in search results. The only exception is resource identifier data, which is indexed
                        /// synchronously as a special index. As a result, searching using resource identifier is not
                        /// subject to indexing delay. To use the special synchronous index, the search term for
                        /// identifier should be in the pattern `identifier=[system]|[value]` or `identifier=[value]`,
                        /// and any of the following search result parameters can be used: * `_count` * `_include` *
                        /// `_revinclude` * `_summary` * `_elements` If your query contains any other search parameters,
                        /// the standard asynchronous index will be used instead. Note that searching against the
                        /// special index is optimized for resolving a small number of matches. The search isn't
                        /// optimized if your identifier search criteria matches a large number (i.e. more than 2,000)
                        /// of resources. For a search query that will match a large number of resources, you can
                        /// avoiding using the special synchronous index by including an additional `_sort` parameter in
                        /// your query. Use `_sort=-_lastUpdated` if you want to keep the default sorting order. Note:
                        /// The special synchronous identifier index are currently disabled for DocumentReference and
                        /// DocumentManifest searches. For samples and detailed information, see [Searching for FHIR
                        /// resources](https://cloud.google.com/healthcare/docs/how-tos/fhir-search) and [Advanced FHIR
                        /// search features](https://cloud.google.com/healthcare/docs/how-tos/fhir-advanced-search).
                        /// </summary>
                        public class SearchTypeRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new SearchType request.</summary>
                            public SearchTypeRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SearchResourcesRequest body, string parent, string resourceType) : base(service)
                            {
                                Parent = parent;
                                ResourceType = resourceType;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. Name of the FHIR store to retrieve resources from.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. The FHIR resource type to search, such as Patient or Observation. For a
                            /// complete list, see the FHIR Resource Index
                            /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
                            /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
                            /// [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("resourceType", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ResourceType { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.SearchResourcesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "search-type";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/fhir/{resourceType}/_search";

                            /// <summary>Initializes SearchType parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                                });
                                RequestParameters.Add("resourceType", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "resourceType",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates the entire contents of a resource. Implements the FHIR standard update interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#update),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#update),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#update)). If the specified
                        /// resource does not exist and the FHIR store has enable_update_create set, creates the
                        /// resource with the client-specified ID. It is strongly advised not to include or encode any
                        /// sensitive data such as patient identifiers in client-specified resource IDs. Those IDs are
                        /// part of the FHIR resource path recorded in Cloud Audit Logs and Pub/Sub notifications. Those
                        /// IDs can also be contained in reference fields within other resources. The request body must
                        /// contain a JSON-encoded FHIR resource, and the request headers must contain `Content-Type:
                        /// application/fhir+json`. The resource must contain an `id` element having an identical value
                        /// to the ID in the REST path of the request. On success, the response body contains a
                        /// JSON-encoded representation of the updated resource, including the server-assigned version
                        /// ID. Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
                        /// describing the reason for the error. If the request cannot be mapped to a valid API method
                        /// on a FHIR store, a generic GCP error might be returned instead. For samples that show how to
                        /// call `update`, see [Updating a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#updating_a_fhir_resource).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">Required. The name of the resource to update.</param>
                        public virtual UpdateRequest Update(Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string name)
                        {
                            return new UpdateRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates the entire contents of a resource. Implements the FHIR standard update interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#update),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#update),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#update)). If the specified
                        /// resource does not exist and the FHIR store has enable_update_create set, creates the
                        /// resource with the client-specified ID. It is strongly advised not to include or encode any
                        /// sensitive data such as patient identifiers in client-specified resource IDs. Those IDs are
                        /// part of the FHIR resource path recorded in Cloud Audit Logs and Pub/Sub notifications. Those
                        /// IDs can also be contained in reference fields within other resources. The request body must
                        /// contain a JSON-encoded FHIR resource, and the request headers must contain `Content-Type:
                        /// application/fhir+json`. The resource must contain an `id` element having an identical value
                        /// to the ID in the REST path of the request. On success, the response body contains a
                        /// JSON-encoded representation of the updated resource, including the server-assigned version
                        /// ID. Errors generated by the FHIR store contain a JSON-encoded `OperationOutcome` resource
                        /// describing the reason for the error. If the request cannot be mapped to a valid API method
                        /// on a FHIR store, a generic GCP error might be returned instead. For samples that show how to
                        /// call `update`, see [Updating a FHIR
                        /// resource](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#updating_a_fhir_resource).
                        /// </summary>
                        public class UpdateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new Update request.</summary>
                            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.HttpBody body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the resource to update.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.HttpBody Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "update";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PUT";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Update parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets the contents of a version (current or historical) of a FHIR resource by version ID.
                        /// Implements the FHIR standard vread interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#vread),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#vread),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#vread)). On success, the response
                        /// body contains a JSON-encoded representation of the resource. Errors generated by the FHIR
                        /// store contain a JSON-encoded `OperationOutcome` resource describing the reason for the
                        /// error. If the request cannot be mapped to a valid API method on a FHIR store, a generic GCP
                        /// error might be returned instead. For samples that show how to call `vread`, see [Retrieving
                        /// a FHIR resource
                        /// version](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#retrieving_a_fhir_resource_version).
                        /// </summary>
                        /// <param name="name">Required. The name of the resource version to retrieve.</param>
                        public virtual VreadRequest Vread(string name)
                        {
                            return new VreadRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the contents of a version (current or historical) of a FHIR resource by version ID.
                        /// Implements the FHIR standard vread interaction
                        /// ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/http.html#vread),
                        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/http.html#vread),
                        /// [R4](http://hl7.org/implement/standards/fhir/R4/http.html#vread)). On success, the response
                        /// body contains a JSON-encoded representation of the resource. Errors generated by the FHIR
                        /// store contain a JSON-encoded `OperationOutcome` resource describing the reason for the
                        /// error. If the request cannot be mapped to a valid API method on a FHIR store, a generic GCP
                        /// error might be returned instead. For samples that show how to call `vread`, see [Retrieving
                        /// a FHIR resource
                        /// version](https://cloud.google.com/healthcare/docs/how-tos/fhir-resources#retrieving_a_fhir_resource_version).
                        /// </summary>
                        public class VreadRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.HttpBody>
                        {
                            /// <summary>Constructs a new Vread request.</summary>
                            public VreadRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the resource version to retrieve.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "vread";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Vread parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+/fhir/[^/]+/[^/]+/_history/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>
                    /// Applies the admin Consent resources for the FHIR store and reindexes the underlying resources in
                    /// the FHIR store according to the aggregate consents. This method also updates the
                    /// `consent_config.enforced_admin_consents` field of the FhirStore unless `validate_only=true` in
                    /// ApplyAdminConsentsRequest. Any admin Consent resource change after this operation execution
                    /// (including deletion) requires you to call ApplyAdminConsents again for the change to take
                    /// effect. This method returns an Operation that can be used to track the progress of the resources
                    /// that were reindexed, by calling GetOperation. Upon completion, the ApplyAdminConsentsResponse
                    /// additionally contains the number of resources that were reindexed. If at least one Consent
                    /// resource contains an error or fails be be enforced for any reason, the method returns an error
                    /// instead of an Operation. No resources will be reindexed and the
                    /// `consent_config.enforced_admin_consents` field will be unchanged. To enforce a consent check for
                    /// data access, `consent_config.access_enforced` must be set to true for the FhirStore.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the FHIR store to enforce, in the format
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                    /// </param>
                    public virtual ApplyAdminConsentsRequest ApplyAdminConsents(Google.Apis.CloudHealthcare.v1.Data.ApplyAdminConsentsRequest body, string name)
                    {
                        return new ApplyAdminConsentsRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Applies the admin Consent resources for the FHIR store and reindexes the underlying resources in
                    /// the FHIR store according to the aggregate consents. This method also updates the
                    /// `consent_config.enforced_admin_consents` field of the FhirStore unless `validate_only=true` in
                    /// ApplyAdminConsentsRequest. Any admin Consent resource change after this operation execution
                    /// (including deletion) requires you to call ApplyAdminConsents again for the change to take
                    /// effect. This method returns an Operation that can be used to track the progress of the resources
                    /// that were reindexed, by calling GetOperation. Upon completion, the ApplyAdminConsentsResponse
                    /// additionally contains the number of resources that were reindexed. If at least one Consent
                    /// resource contains an error or fails be be enforced for any reason, the method returns an error
                    /// instead of an Operation. No resources will be reindexed and the
                    /// `consent_config.enforced_admin_consents` field will be unchanged. To enforce a consent check for
                    /// data access, `consent_config.access_enforced` must be set to true for the FhirStore.
                    /// </summary>
                    public class ApplyAdminConsentsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new ApplyAdminConsents request.</summary>
                        public ApplyAdminConsentsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ApplyAdminConsentsRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the FHIR store to enforce, in the format
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ApplyAdminConsentsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "applyAdminConsents";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:applyAdminConsents";

                        /// <summary>Initializes ApplyAdminConsents parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Apply the Consent resources for the FHIR store and reindex the underlying resources in the FHIR
                    /// store according to the aggregate consent. The aggregate consent of the patient in scope in this
                    /// request replaces any previous call of this method. Any Consent resource change after this
                    /// operation execution (including deletion) requires you to call ApplyConsents again to have
                    /// effect. This method returns an Operation that can be used to track the progress of the consent
                    /// resources that were processed by calling GetOperation. Upon completion, the
                    /// ApplyConsentsResponse additionally contains the number of resources that was reindexed. Errors
                    /// are logged to Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). To enforce consent check
                    /// for data access, `consent_config.access_enforced` must be set to true for the FhirStore.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the FHIR store to enforce, in the format
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                    /// </param>
                    public virtual ApplyConsentsRequest ApplyConsents(Google.Apis.CloudHealthcare.v1.Data.ApplyConsentsRequest body, string name)
                    {
                        return new ApplyConsentsRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Apply the Consent resources for the FHIR store and reindex the underlying resources in the FHIR
                    /// store according to the aggregate consent. The aggregate consent of the patient in scope in this
                    /// request replaces any previous call of this method. Any Consent resource change after this
                    /// operation execution (including deletion) requires you to call ApplyConsents again to have
                    /// effect. This method returns an Operation that can be used to track the progress of the consent
                    /// resources that were processed by calling GetOperation. Upon completion, the
                    /// ApplyConsentsResponse additionally contains the number of resources that was reindexed. Errors
                    /// are logged to Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). To enforce consent check
                    /// for data access, `consent_config.access_enforced` must be set to true for the FhirStore.
                    /// </summary>
                    public class ApplyConsentsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new ApplyConsents request.</summary>
                        public ApplyConsentsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ApplyConsentsRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the FHIR store to enforce, in the format
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ApplyConsentsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "applyConsents";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:applyConsents";

                        /// <summary>Initializes ApplyConsents parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Creates a new FHIR store within the parent dataset.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">Required. The name of the dataset this FHIR store belongs to.</param>
                    public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.FhirStore body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates a new FHIR store within the parent dataset.</summary>
                    public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.FhirStore>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.FhirStore body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>Required. The name of the dataset this FHIR store belongs to.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The ID of the FHIR store that is being created. The string must match the
                        /// following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("fhirStoreId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string FhirStoreId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.FhirStore Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/fhirStores";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("fhirStoreId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "fhirStoreId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// De-identifies data from the source store and writes it to the destination store. The metadata
                    /// field type is OperationMetadata. If the request is successful, the response field type is
                    /// DeidentifyFhirStoreSummary. If errors occur, error is set. Error details are also logged to
                    /// Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="sourceStore">
                    /// Required. Source FHIR store resource name. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                    /// </param>
                    public virtual DeidentifyRequest Deidentify(Google.Apis.CloudHealthcare.v1.Data.DeidentifyFhirStoreRequest body, string sourceStore)
                    {
                        return new DeidentifyRequest(this.service, body, sourceStore);
                    }

                    /// <summary>
                    /// De-identifies data from the source store and writes it to the destination store. The metadata
                    /// field type is OperationMetadata. If the request is successful, the response field type is
                    /// DeidentifyFhirStoreSummary. If errors occur, error is set. Error details are also logged to
                    /// Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
                    /// </summary>
                    public class DeidentifyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Deidentify request.</summary>
                        public DeidentifyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.DeidentifyFhirStoreRequest body, string sourceStore) : base(service)
                        {
                            SourceStore = sourceStore;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Source FHIR store resource name. For example,
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("sourceStore", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string SourceStore { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.DeidentifyFhirStoreRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "deidentify";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+sourceStore}:deidentify";

                        /// <summary>Initializes Deidentify parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("sourceStore", new Google.Apis.Discovery.Parameter
                            {
                                Name = "sourceStore",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Deletes the specified FHIR store and removes all resources within it.</summary>
                    /// <param name="name">Required. The resource name of the FHIR store to delete.</param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes the specified FHIR store and removes all resources within it.</summary>
                    public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the FHIR store to delete.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Explains all the permitted/denied actor, purpose and environment for a given resource.
                    /// </summary>
                    /// <param name="name">
                    /// Required. The name of the FHIR store to enforce, in the format
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                    /// </param>
                    public virtual ExplainDataAccessRequest ExplainDataAccess(string name)
                    {
                        return new ExplainDataAccessRequest(this.service, name);
                    }

                    /// <summary>
                    /// Explains all the permitted/denied actor, purpose and environment for a given resource.
                    /// </summary>
                    public class ExplainDataAccessRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ExplainDataAccessResponse>
                    {
                        /// <summary>Constructs a new ExplainDataAccess request.</summary>
                        public ExplainDataAccessRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the FHIR store to enforce, in the format
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Required. The ID (`{resourceType}/{id}`) of the resource to explain data access on.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resourceId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string ResourceId { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "explainDataAccess";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:explainDataAccess";

                        /// <summary>Initializes ExplainDataAccess parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                            RequestParameters.Add("resourceId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resourceId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Export resources from the FHIR store to the specified destination. This method returns an
                    /// Operation that can be used to track the status of the export by calling GetOperation. Immediate
                    /// fatal errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing
                    /// error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
                    /// Otherwise, when the operation finishes, a detailed response of type ExportResourcesResponse is
                    /// returned in the response field. The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the FHIR store to export resource from, in the format of
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                    /// </param>
                    public virtual ExportRequest Export(Google.Apis.CloudHealthcare.v1.Data.ExportResourcesRequest body, string name)
                    {
                        return new ExportRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Export resources from the FHIR store to the specified destination. This method returns an
                    /// Operation that can be used to track the status of the export by calling GetOperation. Immediate
                    /// fatal errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing
                    /// error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
                    /// Otherwise, when the operation finishes, a detailed response of type ExportResourcesResponse is
                    /// returned in the response field. The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    public class ExportRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Export request.</summary>
                        public ExportRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ExportResourcesRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the FHIR store to export resource from, in the format of
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ExportResourcesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "export";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:export";

                        /// <summary>Initializes Export parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets the configuration of the specified FHIR store.</summary>
                    /// <param name="name">Required. The resource name of the FHIR store to get.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets the configuration of the specified FHIR store.</summary>
                    public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.FhirStore>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the FHIR store to get.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets metrics associated with the FHIR store.</summary>
                    /// <param name="name">Required. The resource name of the FHIR store to get metrics for.</param>
                    public virtual GetFHIRStoreMetricsRequest GetFHIRStoreMetrics(string name)
                    {
                        return new GetFHIRStoreMetricsRequest(this.service, name);
                    }

                    /// <summary>Gets metrics associated with the FHIR store.</summary>
                    public class GetFHIRStoreMetricsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.FhirStoreMetrics>
                    {
                        /// <summary>Constructs a new GetFHIRStoreMetrics request.</summary>
                        public GetFHIRStoreMetricsRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the FHIR store to get metrics for.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getFHIRStoreMetrics";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:getFHIRStoreMetrics";

                        /// <summary>Initializes GetFHIRStoreMetrics parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual GetIamPolicyRequest GetIamPolicy(string resource)
                    {
                        return new GetIamPolicyRequest(this.service, resource);
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    public class GetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new GetIamPolicy request.</summary>
                        public GetIamPolicyRequest(Google.Apis.Services.IClientService service, string resource) : base(service)
                        {
                            Resource = resource;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>
                        /// Optional. The maximum policy version that will be used to format the policy. Valid values
                        /// are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
                        /// policies with any conditional role bindings must specify version 3. Policies with no
                        /// conditional role bindings may specify any valid value or leave the field unset. The policy
                        /// in the response might use the policy version that you specified, or it might use a lower
                        /// policy version. For example, if you specify version 3, but the policy has no conditional
                        /// role bindings, the response uses version 1. To learn which resources support conditions in
                        /// their IAM policies, see the [IAM
                        /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("options.requestedPolicyVersion", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> OptionsRequestedPolicyVersion { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:getIamPolicy";

                        /// <summary>Initializes GetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                            RequestParameters.Add("options.requestedPolicyVersion", new Google.Apis.Discovery.Parameter
                            {
                                Name = "options.requestedPolicyVersion",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Imports resources to the FHIR store by loading data from the specified sources. This method is
                    /// optimized to load large quantities of data using import semantics that ignore some FHIR store
                    /// configuration options and are not suitable for all use cases. It is primarily intended to load
                    /// data into an empty FHIR store that is not being used by other clients. In cases where this
                    /// method is not appropriate, consider using ExecuteBundle to load data. Every resource in the
                    /// input must contain a client-supplied ID. Each resource is stored using the supplied ID
                    /// regardless of the enable_update_create setting on the FHIR store. It is strongly advised not to
                    /// include or encode any sensitive data such as patient identifiers in client-specified resource
                    /// IDs. Those IDs are part of the FHIR resource path recorded in Cloud Audit Logs and Cloud Pub/Sub
                    /// notifications. Those IDs can also be contained in reference fields within other resources. The
                    /// import process does not enforce referential integrity, regardless of the
                    /// disable_referential_integrity setting on the FHIR store. This allows the import of resources
                    /// with arbitrary interdependencies without considering grouping or ordering, but if the input data
                    /// contains invalid references or if some resources fail to be imported, the FHIR store might be
                    /// left in a state that violates referential integrity. The import process does not trigger Pub/Sub
                    /// notification or BigQuery streaming update, regardless of how those are configured on the FHIR
                    /// store. If a resource with the specified ID already exists, the most recent version of the
                    /// resource is overwritten without creating a new historical version, regardless of the
                    /// disable_resource_versioning setting on the FHIR store. If transient failures occur during the
                    /// import, it's possible that successfully imported resources will be overwritten more than once.
                    /// The import operation is idempotent unless the input data contains multiple valid resources with
                    /// the same ID but different contents. In that case, after the import completes, the store contains
                    /// exactly one resource with that ID but there is no ordering guarantee on which version of the
                    /// contents it will have. The operation result counters do not count duplicate IDs as an error and
                    /// count one success for each resource in the input, which might result in a success count larger
                    /// than the number of resources in the FHIR store. This often occurs when importing data organized
                    /// in bundles produced by Patient-everything where each bundle contains its own copy of a resource
                    /// such as Practitioner that might be referred to by many patients. If some resources fail to
                    /// import, for example due to parsing errors, successfully imported resources are not rolled back.
                    /// The location and format of the input data is specified by the parameters in
                    /// ImportResourcesRequest. Note that if no format is specified, this method assumes the `BUNDLE`
                    /// format. When using the `BUNDLE` format this method ignores the `Bundle.type` field, except that
                    /// `history` bundles are rejected, and does not apply any of the bundle processing semantics for
                    /// batch or transaction bundles. Unlike in ExecuteBundle, transaction bundles are not executed as a
                    /// single transaction and bundle-internal references are not rewritten. The bundle is treated as a
                    /// collection of resources to be written as provided in `Bundle.entry.resource`, ignoring
                    /// `Bundle.entry.request`. As an example, this allows the import of `searchset` bundles produced by
                    /// a FHIR search or Patient-everything operation. This method returns an Operation that can be used
                    /// to track the status of the import by calling GetOperation. Immediate fatal errors appear in the
                    /// error field, errors are also logged to Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise, when the
                    /// operation finishes, a detailed response of type ImportResourcesResponse is returned in the
                    /// response field. The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the FHIR store to import FHIR resources to, in the format of
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                    /// </param>
                    public virtual ImportRequest Import(Google.Apis.CloudHealthcare.v1.Data.ImportResourcesRequest body, string name)
                    {
                        return new ImportRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Imports resources to the FHIR store by loading data from the specified sources. This method is
                    /// optimized to load large quantities of data using import semantics that ignore some FHIR store
                    /// configuration options and are not suitable for all use cases. It is primarily intended to load
                    /// data into an empty FHIR store that is not being used by other clients. In cases where this
                    /// method is not appropriate, consider using ExecuteBundle to load data. Every resource in the
                    /// input must contain a client-supplied ID. Each resource is stored using the supplied ID
                    /// regardless of the enable_update_create setting on the FHIR store. It is strongly advised not to
                    /// include or encode any sensitive data such as patient identifiers in client-specified resource
                    /// IDs. Those IDs are part of the FHIR resource path recorded in Cloud Audit Logs and Cloud Pub/Sub
                    /// notifications. Those IDs can also be contained in reference fields within other resources. The
                    /// import process does not enforce referential integrity, regardless of the
                    /// disable_referential_integrity setting on the FHIR store. This allows the import of resources
                    /// with arbitrary interdependencies without considering grouping or ordering, but if the input data
                    /// contains invalid references or if some resources fail to be imported, the FHIR store might be
                    /// left in a state that violates referential integrity. The import process does not trigger Pub/Sub
                    /// notification or BigQuery streaming update, regardless of how those are configured on the FHIR
                    /// store. If a resource with the specified ID already exists, the most recent version of the
                    /// resource is overwritten without creating a new historical version, regardless of the
                    /// disable_resource_versioning setting on the FHIR store. If transient failures occur during the
                    /// import, it's possible that successfully imported resources will be overwritten more than once.
                    /// The import operation is idempotent unless the input data contains multiple valid resources with
                    /// the same ID but different contents. In that case, after the import completes, the store contains
                    /// exactly one resource with that ID but there is no ordering guarantee on which version of the
                    /// contents it will have. The operation result counters do not count duplicate IDs as an error and
                    /// count one success for each resource in the input, which might result in a success count larger
                    /// than the number of resources in the FHIR store. This often occurs when importing data organized
                    /// in bundles produced by Patient-everything where each bundle contains its own copy of a resource
                    /// such as Practitioner that might be referred to by many patients. If some resources fail to
                    /// import, for example due to parsing errors, successfully imported resources are not rolled back.
                    /// The location and format of the input data is specified by the parameters in
                    /// ImportResourcesRequest. Note that if no format is specified, this method assumes the `BUNDLE`
                    /// format. When using the `BUNDLE` format this method ignores the `Bundle.type` field, except that
                    /// `history` bundles are rejected, and does not apply any of the bundle processing semantics for
                    /// batch or transaction bundles. Unlike in ExecuteBundle, transaction bundles are not executed as a
                    /// single transaction and bundle-internal references are not rewritten. The bundle is treated as a
                    /// collection of resources to be written as provided in `Bundle.entry.resource`, ignoring
                    /// `Bundle.entry.request`. As an example, this allows the import of `searchset` bundles produced by
                    /// a FHIR search or Patient-everything operation. This method returns an Operation that can be used
                    /// to track the status of the import by calling GetOperation. Immediate fatal errors appear in the
                    /// error field, errors are also logged to Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise, when the
                    /// operation finishes, a detailed response of type ImportResourcesResponse is returned in the
                    /// response field. The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    public class ImportRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Import request.</summary>
                        public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ImportResourcesRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the FHIR store to import FHIR resources to, in the format of
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ImportResourcesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "import";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:import";

                        /// <summary>Initializes Import parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Lists the FHIR stores in the given dataset.</summary>
                    /// <param name="parent">Required. Name of the dataset.</param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists the FHIR stores in the given dataset.</summary>
                    public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListFhirStoresResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>Required. Name of the dataset.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Restricts stores returned to those matching a filter. The following syntax is available: * A
                        /// string field value can be written as text inside quotation marks, for example `"query
                        /// text"`. The only valid relational operation for text fields is equality (`=`), where text is
                        /// searched within the field, rather than having the field be equal to the text. For example,
                        /// `"Comment = great"` returns messages with `great` in the comment field. * A number field
                        /// value can be written as an integer, a decimal, or an exponential. The valid relational
                        /// operators for number fields are the equality operator (`=`), along with the less
                        /// than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that
                        /// there is no inequality (`!=`) operator. You can prepend the `NOT` operator to an expression
                        /// to negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with date
                        /// and time use the RFC3339 time format. Leading zeros are required for one-digit months and
                        /// days. The valid relational operators for date fields are the equality operator (`=`) , along
                        /// with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`,
                        /// `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
                        /// operator to an expression to negate it. * Multiple field query expressions can be combined
                        /// in one query by adding `AND` or `OR` operators between the expressions. If a boolean
                        /// operator appears within a quoted string, it is not treated as special, it's just another
                        /// part of the character string to be matched. You can prepend the `NOT` operator to an
                        /// expression to negate it. Only filtering on labels is supported, for example
                        /// `labels.key=value`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// Limit on the number of FHIR stores to return in a single response. If not specified, 100 is
                        /// used. May not be larger than 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// The next_page_token value returned from the previous List request, if any.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/fhirStores";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates the configuration of the specified FHIR store.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Output only. Identifier. Resource name of the FHIR store, of the form
                    /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.FhirStore body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates the configuration of the specified FHIR store.</summary>
                    public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.FhirStore>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.FhirStore body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Output only. Identifier. Resource name of the FHIR store, of the form
                        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Required. The update mask applies to the resource. For the `FieldMask` definition, see
                        /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.FhirStore Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Rolls back resources from the FHIR store to the specified time. This method returns an Operation
                    /// that can be used to track the status of the rollback by calling GetOperation. Immediate fatal
                    /// errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing error
                    /// logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise,
                    /// when the operation finishes, a detailed response of type RollbackFhirResourcesResponse is
                    /// returned in the response field. The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the FHIR store to rollback, in the format of
                    /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
                    /// /fhirStores/{fhir_store_id}".
                    /// </param>
                    public virtual RollbackRequest Rollback(Google.Apis.CloudHealthcare.v1.Data.RollbackFhirResourcesRequest body, string name)
                    {
                        return new RollbackRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Rolls back resources from the FHIR store to the specified time. This method returns an Operation
                    /// that can be used to track the status of the rollback by calling GetOperation. Immediate fatal
                    /// errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing error
                    /// logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise,
                    /// when the operation finishes, a detailed response of type RollbackFhirResourcesResponse is
                    /// returned in the response field. The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    public class RollbackRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Rollback request.</summary>
                        public RollbackRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.RollbackFhirResourcesRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the FHIR store to rollback, in the format of
                        /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
                        /// /fhirStores/{fhir_store_id}".
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.RollbackFhirResourcesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "rollback";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:rollback";

                        /// <summary>Initializes Rollback parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being specified. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual SetIamPolicyRequest SetIamPolicy(Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource)
                    {
                        return new SetIamPolicyRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    public class SetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new SetIamPolicy request.</summary>
                        public SetIamPolicyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being specified. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "setIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:setIamPolicy";

                        /// <summary>Initializes SetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual TestIamPermissionsRequest TestIamPermissions(Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource)
                    {
                        return new TestIamPermissionsRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    public class TestIamPermissionsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsResponse>
                    {
                        /// <summary>Constructs a new TestIamPermissions request.</summary>
                        public TestIamPermissionsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "testIamPermissions";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:testIamPermissions";

                        /// <summary>Initializes TestIamPermissions parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/fhirStores/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the Hl7V2Stores resource.</summary>
                public virtual Hl7V2StoresResource Hl7V2Stores { get; }

                /// <summary>The "hl7V2Stores" collection of methods.</summary>
                public class Hl7V2StoresResource
                {
                    private const string Resource = "hl7V2Stores";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public Hl7V2StoresResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Messages = new MessagesResource(service);
                    }

                    /// <summary>Gets the Messages resource.</summary>
                    public virtual MessagesResource Messages { get; }

                    /// <summary>The "messages" collection of methods.</summary>
                    public class MessagesResource
                    {
                        private const string Resource = "messages";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public MessagesResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any
                        /// Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the
                        /// message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter
                        /// transmits the message when a notification is received.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. The name of the HL7v2 store this message belongs to.</param>
                        public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.CreateMessageRequest body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any
                        /// Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the
                        /// message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter
                        /// transmits the message when a notification is received.
                        /// </summary>
                        public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Message>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.CreateMessageRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the HL7v2 store this message belongs to.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.CreateMessageRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/messages";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Deletes an HL7v2 message.</summary>
                        /// <param name="name">Required. The resource name of the HL7v2 message to delete.</param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>Deletes an HL7v2 message.</summary>
                        public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The resource name of the HL7v2 message to delete.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets an HL7v2 message.</summary>
                        /// <param name="name">Required. The resource name of the HL7v2 message to retrieve.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets an HL7v2 message.</summary>
                        public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Message>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>Required. The resource name of the HL7v2 message to retrieve.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Specifies which parts of the Message resource to return in the response. When
                            /// unspecified, equivalent to FULL.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("view", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<ViewEnum> View { get; set; }

                            /// <summary>
                            /// Specifies which parts of the Message resource to return in the response. When
                            /// unspecified, equivalent to FULL.
                            /// </summary>
                            public enum ViewEnum
                            {
                                /// <summary>Not specified, equivalent to FULL.</summary>
                                [Google.Apis.Util.StringValueAttribute("MESSAGE_VIEW_UNSPECIFIED")]
                                MESSAGEVIEWUNSPECIFIED = 0,

                                /// <summary>
                                /// Server responses include all the message fields except parsed_data field, and
                                /// schematized_data fields.
                                /// </summary>
                                [Google.Apis.Util.StringValueAttribute("RAW_ONLY")]
                                RAWONLY = 1,

                                /// <summary>
                                /// Server responses include all the message fields except data field, and
                                /// schematized_data fields.
                                /// </summary>
                                [Google.Apis.Util.StringValueAttribute("PARSED_ONLY")]
                                PARSEDONLY = 2,

                                /// <summary>Server responses include all the message fields.</summary>
                                [Google.Apis.Util.StringValueAttribute("FULL")]
                                FULL = 3,

                                /// <summary>
                                /// Server responses include all the message fields except data and parsed_data fields.
                                /// </summary>
                                [Google.Apis.Util.StringValueAttribute("SCHEMATIZED_ONLY")]
                                SCHEMATIZEDONLY = 5,

                                /// <summary>Server responses include only the name field.</summary>
                                [Google.Apis.Util.StringValueAttribute("BASIC")]
                                BASIC = 4,
                            }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$",
                                });
                                RequestParameters.Add("view", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "view",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any
                        /// Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the
                        /// message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter
                        /// transmits the message when a notification is received. If the method is successful, it
                        /// generates a response containing an HL7v2 acknowledgment (`ACK`) message. If the method
                        /// encounters an error, it returns a negative acknowledgment (`NACK`) message. This behavior is
                        /// suitable for replying to HL7v2 interface systems that expect these acknowledgments.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">Required. The name of the HL7v2 store this message belongs to.</param>
                        public virtual IngestRequest Ingest(Google.Apis.CloudHealthcare.v1.Data.IngestMessageRequest body, string parent)
                        {
                            return new IngestRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Parses and stores an HL7v2 message. This method triggers an asynchronous notification to any
                        /// Pub/Sub topic configured in Hl7V2Store.Hl7V2NotificationConfig, if the filtering matches the
                        /// message. If an MLLP adapter is configured to listen to a Pub/Sub topic, the adapter
                        /// transmits the message when a notification is received. If the method is successful, it
                        /// generates a response containing an HL7v2 acknowledgment (`ACK`) message. If the method
                        /// encounters an error, it returns a negative acknowledgment (`NACK`) message. This behavior is
                        /// suitable for replying to HL7v2 interface systems that expect these acknowledgments.
                        /// </summary>
                        public class IngestRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.IngestMessageResponse>
                        {
                            /// <summary>Constructs a new Ingest request.</summary>
                            public IngestRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.IngestMessageRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>Required. The name of the HL7v2 store this message belongs to.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.IngestMessageRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "ingest";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/messages:ingest";

                            /// <summary>Initializes Ingest parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Lists all the messages in the given HL7v2 store with support for filtering. Note: HL7v2
                        /// messages are indexed asynchronously, so there might be a slight delay between the time a
                        /// message is created and when it can be found through a filter.
                        /// </summary>
                        /// <param name="parent">Required. Name of the HL7v2 store to retrieve messages from.</param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>
                        /// Lists all the messages in the given HL7v2 store with support for filtering. Note: HL7v2
                        /// messages are indexed asynchronously, so there might be a slight delay between the time a
                        /// message is created and when it can be found through a filter.
                        /// </summary>
                        public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListMessagesResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>Required. Name of the HL7v2 store to retrieve messages from.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Restricts messages returned to those matching a filter. The following syntax is
                            /// available: * A string field value can be written as text inside quotation marks, for
                            /// example `"query text"`. The only valid relational operation for text fields is equality
                            /// (`=`), where text is searched within the field, rather than having the field be equal to
                            /// the text. For example, `"Comment = great"` returns messages with `great` in the comment
                            /// field. * A number field value can be written as an integer, a decimal, or an
                            /// exponential. The valid relational operators for number fields are the equality operator
                            /// (`=`), along with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`,
                            /// `&amp;gt;`, `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can
                            /// prepend the `NOT` operator to an expression to negate it. * A date field value must be
                            /// written in `yyyy-mm-dd` form. Fields with date and time use the RFC3339 time format.
                            /// Leading zeros are required for one-digit months and days. The valid relational operators
                            /// for date fields are the equality operator (`=`) , along with the less than/greater than
                            /// operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that there is no
                            /// inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to
                            /// negate it. * Multiple field query expressions can be combined in one query by adding
                            /// `AND` or `OR` operators between the expressions. If a boolean operator appears within a
                            /// quoted string, it is not treated as special, it's just another part of the character
                            /// string to be matched. You can prepend the `NOT` operator to an expression to negate it.
                            /// Fields/functions available for filtering are: * `message_type`, from the MSH-9.1 field.
                            /// For example, `NOT message_type = "ADT"`. * `send_date` or `sendDate`, the YYYY-MM-DD
                            /// date the message was sent in the dataset's time_zone, from the MSH-7 segment. For
                            /// example, `send_date &amp;lt; "2017-01-02"`. * `send_time`, the timestamp when the
                            /// message was sent, using the RFC3339 time format for comparisons, from the MSH-7 segment.
                            /// For example, `send_time &amp;lt; "2017-01-02T00:00:00-05:00"`. * `create_time`, the
                            /// timestamp when the message was created in the HL7v2 store. Use the RFC3339 time format
                            /// for comparisons. For example, `create_time &amp;lt; "2017-01-02T00:00:00-05:00"`. *
                            /// `send_facility`, the care center that the message came from, from the MSH-4 segment. For
                            /// example, `send_facility = "ABC"`. * `PatientId(value, type)`, which matches if the
                            /// message lists a patient having an ID of the given value and type in the PID-2, PID-3, or
                            /// PID-4 segments. For example, `PatientId("123456", "MRN")`. * `labels.x`, a string value
                            /// of the label with key `x` as set using the Message.labels map. For example,
                            /// `labels."priority"="high"`. The operator `:*` can be used to assert the existence of a
                            /// label. For example, `labels."priority":*`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// Orders messages returned by the specified order_by clause. Syntax:
                            /// https://cloud.google.com/apis/design/design_patterns#sorting_order Fields available for
                            /// ordering are: * `send_time`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string OrderBy { get; set; }

                            /// <summary>
                            /// Limit on the number of messages to return in a single response. If not specified, 100 is
                            /// used. May not be larger than 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// The next_page_token value returned from the previous List request, if any.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>
                            /// Specifies the parts of the Message to return in the response. When unspecified,
                            /// equivalent to BASIC. Setting this to anything other than BASIC with a `page_size` larger
                            /// than the default can generate a large response, which impacts the performance of this
                            /// method.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("view", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<ViewEnum> View { get; set; }

                            /// <summary>
                            /// Specifies the parts of the Message to return in the response. When unspecified,
                            /// equivalent to BASIC. Setting this to anything other than BASIC with a `page_size` larger
                            /// than the default can generate a large response, which impacts the performance of this
                            /// method.
                            /// </summary>
                            public enum ViewEnum
                            {
                                /// <summary>Not specified, equivalent to FULL.</summary>
                                [Google.Apis.Util.StringValueAttribute("MESSAGE_VIEW_UNSPECIFIED")]
                                MESSAGEVIEWUNSPECIFIED = 0,

                                /// <summary>
                                /// Server responses include all the message fields except parsed_data field, and
                                /// schematized_data fields.
                                /// </summary>
                                [Google.Apis.Util.StringValueAttribute("RAW_ONLY")]
                                RAWONLY = 1,

                                /// <summary>
                                /// Server responses include all the message fields except data field, and
                                /// schematized_data fields.
                                /// </summary>
                                [Google.Apis.Util.StringValueAttribute("PARSED_ONLY")]
                                PARSEDONLY = 2,

                                /// <summary>Server responses include all the message fields.</summary>
                                [Google.Apis.Util.StringValueAttribute("FULL")]
                                FULL = 3,

                                /// <summary>
                                /// Server responses include all the message fields except data and parsed_data fields.
                                /// </summary>
                                [Google.Apis.Util.StringValueAttribute("SCHEMATIZED_ONLY")]
                                SCHEMATIZEDONLY = 5,

                                /// <summary>Server responses include only the name field.</summary>
                                [Google.Apis.Util.StringValueAttribute("BASIC")]
                                BASIC = 4,
                            }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+parent}/messages";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("orderBy", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "orderBy",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("view", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "view",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Update the message. The contents of the message in Message.data and data extracted from the
                        /// contents such as Message.create_time cannot be altered. Only the Message.labels field is
                        /// allowed to be updated. The labels in the request are merged with the existing set of labels.
                        /// Existing labels with the same keys are updated.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Output only. Resource name of the Message, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.Message body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Update the message. The contents of the message in Message.data and data extracted from the
                        /// contents such as Message.create_time cannot be altered. Only the Message.labels field is
                        /// allowed to be updated. The labels in the request are merged with the existing set of labels.
                        /// Existing labels with the same keys are updated.
                        /// </summary>
                        public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Message>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.Message body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Output only. Resource name of the Message, of the form
                            /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Required. The update mask applies to the resource. For the `FieldMask` definition, see
                            /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.CloudHealthcare.v1.Data.Message Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+/messages/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Creates a new HL7v2 store within the parent dataset.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">Required. The name of the dataset this HL7v2 store belongs to.</param>
                    public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates a new HL7v2 store within the parent dataset.</summary>
                    public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>Required. The name of the dataset this HL7v2 store belongs to.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The ID of the HL7v2 store that is being created. The string must match the
                        /// following regex: `[\p{L}\p{N}_\-\.]{1,256}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("hl7V2StoreId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Hl7V2StoreId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/hl7V2Stores";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("hl7V2StoreId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "hl7V2StoreId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Deletes the specified HL7v2 store and removes all messages that it contains.</summary>
                    /// <param name="name">Required. The resource name of the HL7v2 store to delete.</param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes the specified HL7v2 store and removes all messages that it contains.</summary>
                    public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the HL7v2 store to delete.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Exports the messages to a destination. To filter messages to be exported, define a filter using
                    /// the start and end time, relative to the message generation time (MSH.7). This API returns an
                    /// Operation that can be used to track the status of the job by calling GetOperation. Immediate
                    /// fatal errors appear in the error field. Otherwise, when the operation finishes, a detailed
                    /// response of type ExportMessagesResponse is returned in the response field. The metadata field
                    /// type for this operation is OperationMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the source HL7v2 store, in the format
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
                    /// </param>
                    public virtual ExportRequest Export(Google.Apis.CloudHealthcare.v1.Data.ExportMessagesRequest body, string name)
                    {
                        return new ExportRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Exports the messages to a destination. To filter messages to be exported, define a filter using
                    /// the start and end time, relative to the message generation time (MSH.7). This API returns an
                    /// Operation that can be used to track the status of the job by calling GetOperation. Immediate
                    /// fatal errors appear in the error field. Otherwise, when the operation finishes, a detailed
                    /// response of type ExportMessagesResponse is returned in the response field. The metadata field
                    /// type for this operation is OperationMetadata.
                    /// </summary>
                    public class ExportRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Export request.</summary>
                        public ExportRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ExportMessagesRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the source HL7v2 store, in the format
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ExportMessagesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "export";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:export";

                        /// <summary>Initializes Export parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets the specified HL7v2 store.</summary>
                    /// <param name="name">Required. The resource name of the HL7v2 store to get.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets the specified HL7v2 store.</summary>
                    public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The resource name of the HL7v2 store to get.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets metrics associated with the HL7v2 store.</summary>
                    /// <param name="name">
                    /// Required. The resource name of the HL7v2 store to get metrics for, in the format
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
                    /// </param>
                    public virtual GetHL7v2StoreMetricsRequest GetHL7v2StoreMetrics(string name)
                    {
                        return new GetHL7v2StoreMetricsRequest(this.service, name);
                    }

                    /// <summary>Gets metrics associated with the HL7v2 store.</summary>
                    public class GetHL7v2StoreMetricsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Hl7V2StoreMetrics>
                    {
                        /// <summary>Constructs a new GetHL7v2StoreMetrics request.</summary>
                        public GetHL7v2StoreMetricsRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the HL7v2 store to get metrics for, in the format
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getHL7v2StoreMetrics";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:getHL7v2StoreMetrics";

                        /// <summary>Initializes GetHL7v2StoreMetrics parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual GetIamPolicyRequest GetIamPolicy(string resource)
                    {
                        return new GetIamPolicyRequest(this.service, resource);
                    }

                    /// <summary>
                    /// Gets the access control policy for a resource. Returns an empty policy if the resource exists
                    /// and does not have a policy set.
                    /// </summary>
                    public class GetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new GetIamPolicy request.</summary>
                        public GetIamPolicyRequest(Google.Apis.Services.IClientService service, string resource) : base(service)
                        {
                            Resource = resource;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>
                        /// Optional. The maximum policy version that will be used to format the policy. Valid values
                        /// are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for
                        /// policies with any conditional role bindings must specify version 3. Policies with no
                        /// conditional role bindings may specify any valid value or leave the field unset. The policy
                        /// in the response might use the policy version that you specified, or it might use a lower
                        /// policy version. For example, if you specify version 3, but the policy has no conditional
                        /// role bindings, the response uses version 1. To learn which resources support conditions in
                        /// their IAM policies, see the [IAM
                        /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("options.requestedPolicyVersion", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> OptionsRequestedPolicyVersion { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:getIamPolicy";

                        /// <summary>Initializes GetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                            RequestParameters.Add("options.requestedPolicyVersion", new Google.Apis.Discovery.Parameter
                            {
                                Name = "options.requestedPolicyVersion",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Import messages to the HL7v2 store by loading data from the specified sources. This method is
                    /// optimized to load large quantities of data using import semantics that ignore some HL7v2 store
                    /// configuration options and are not suitable for all use cases. It is primarily intended to load
                    /// data into an empty HL7v2 store that is not being used by other clients. An existing message will
                    /// be overwritten if a duplicate message is imported. A duplicate message is a message with the
                    /// same raw bytes as a message that already exists in this HL7v2 store. When a message is
                    /// overwritten, its labels will also be overwritten. The import operation is idempotent unless the
                    /// input data contains multiple valid messages with the same raw bytes but different labels. In
                    /// that case, after the import completes, the store contains exactly one message with those raw
                    /// bytes but there is no ordering guarantee on which version of the labels it has. The operation
                    /// result counters do not count duplicated raw bytes as an error and count one success for each
                    /// message in the input, which might result in a success count larger than the number of messages
                    /// in the HL7v2 store. If some messages fail to import, for example due to parsing errors,
                    /// successfully imported messages are not rolled back. This method returns an Operation that can be
                    /// used to track the status of the import by calling GetOperation. Immediate fatal errors appear in
                    /// the error field, errors are also logged to Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise, when the
                    /// operation finishes, a response of type ImportMessagesResponse is returned in the response field.
                    /// The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the target HL7v2 store, in the format
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
                    /// </param>
                    public virtual ImportRequest Import(Google.Apis.CloudHealthcare.v1.Data.ImportMessagesRequest body, string name)
                    {
                        return new ImportRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Import messages to the HL7v2 store by loading data from the specified sources. This method is
                    /// optimized to load large quantities of data using import semantics that ignore some HL7v2 store
                    /// configuration options and are not suitable for all use cases. It is primarily intended to load
                    /// data into an empty HL7v2 store that is not being used by other clients. An existing message will
                    /// be overwritten if a duplicate message is imported. A duplicate message is a message with the
                    /// same raw bytes as a message that already exists in this HL7v2 store. When a message is
                    /// overwritten, its labels will also be overwritten. The import operation is idempotent unless the
                    /// input data contains multiple valid messages with the same raw bytes but different labels. In
                    /// that case, after the import completes, the store contains exactly one message with those raw
                    /// bytes but there is no ordering guarantee on which version of the labels it has. The operation
                    /// result counters do not count duplicated raw bytes as an error and count one success for each
                    /// message in the input, which might result in a success count larger than the number of messages
                    /// in the HL7v2 store. If some messages fail to import, for example due to parsing errors,
                    /// successfully imported messages are not rolled back. This method returns an Operation that can be
                    /// used to track the status of the import by calling GetOperation. Immediate fatal errors appear in
                    /// the error field, errors are also logged to Cloud Logging (see [Viewing error logs in Cloud
                    /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise, when the
                    /// operation finishes, a response of type ImportMessagesResponse is returned in the response field.
                    /// The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    public class ImportRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Import request.</summary>
                        public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.ImportMessagesRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the target HL7v2 store, in the format
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7v2Stores/{hl7v2_store_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.ImportMessagesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "import";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:import";

                        /// <summary>Initializes Import parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Lists the HL7v2 stores in the given dataset.</summary>
                    /// <param name="parent">Required. Name of the dataset.</param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists the HL7v2 stores in the given dataset.</summary>
                    public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListHl7V2StoresResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>Required. Name of the dataset.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Restricts stores returned to those matching a filter. The following syntax is available: * A
                        /// string field value can be written as text inside quotation marks, for example `"query
                        /// text"`. The only valid relational operation for text fields is equality (`=`), where text is
                        /// searched within the field, rather than having the field be equal to the text. For example,
                        /// `"Comment = great"` returns messages with `great` in the comment field. * A number field
                        /// value can be written as an integer, a decimal, or an exponential. The valid relational
                        /// operators for number fields are the equality operator (`=`), along with the less
                        /// than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that
                        /// there is no inequality (`!=`) operator. You can prepend the `NOT` operator to an expression
                        /// to negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields with date
                        /// and time use the RFC3339 time format. Leading zeros are required for one-digit months and
                        /// days. The valid relational operators for date fields are the equality operator (`=`) , along
                        /// with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`,
                        /// `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
                        /// operator to an expression to negate it. * Multiple field query expressions can be combined
                        /// in one query by adding `AND` or `OR` operators between the expressions. If a boolean
                        /// operator appears within a quoted string, it is not treated as special, it's just another
                        /// part of the character string to be matched. You can prepend the `NOT` operator to an
                        /// expression to negate it. Only filtering on labels is supported. For example,
                        /// `labels.key=value`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// Limit on the number of HL7v2 stores to return in a single response. If not specified, 100 is
                        /// used. May not be larger than 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// The next_page_token value returned from the previous List request, if any.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+parent}/hl7V2Stores";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates the HL7v2 store.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Identifier. Resource name of the HL7v2 store, of the form
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates the HL7v2 store.</summary>
                    public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Identifier. Resource name of the HL7v2 store, of the form
                        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Required. The update mask applies to the resource. For the `FieldMask` definition, see
                        /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.Hl7V2Store Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Rolls back messages from the HL7v2 store to the specified time. This method returns an Operation
                    /// that can be used to track the status of the rollback by calling GetOperation. Immediate fatal
                    /// errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing error
                    /// logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise,
                    /// when the operation finishes, a detailed response of type RollbackHl7V2MessagesResponse is
                    /// returned in the response field. The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the HL7v2 store to rollback, in the format of
                    /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
                    /// /hl7V2Stores/{hl7v2_store_id}".
                    /// </param>
                    public virtual RollbackRequest Rollback(Google.Apis.CloudHealthcare.v1.Data.RollbackHl7V2MessagesRequest body, string name)
                    {
                        return new RollbackRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Rolls back messages from the HL7v2 store to the specified time. This method returns an Operation
                    /// that can be used to track the status of the rollback by calling GetOperation. Immediate fatal
                    /// errors appear in the error field, errors are also logged to Cloud Logging (see [Viewing error
                    /// logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). Otherwise,
                    /// when the operation finishes, a detailed response of type RollbackHl7V2MessagesResponse is
                    /// returned in the response field. The metadata field type for this operation is OperationMetadata.
                    /// </summary>
                    public class RollbackRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Rollback request.</summary>
                        public RollbackRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.RollbackHl7V2MessagesRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the HL7v2 store to rollback, in the format of
                        /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id}
                        /// /hl7V2Stores/{hl7v2_store_id}".
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.RollbackHl7V2MessagesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "rollback";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:rollback";

                        /// <summary>Initializes Rollback parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy is being specified. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual SetIamPolicyRequest SetIamPolicy(Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource)
                    {
                        return new SetIamPolicyRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Sets the access control policy on the specified resource. Replaces any existing policy. Can
                    /// return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                    /// </summary>
                    public class SetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                    {
                        /// <summary>Constructs a new SetIamPolicy request.</summary>
                        public SetIamPolicyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy is being specified. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "setIamPolicy";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:setIamPolicy";

                        /// <summary>Initializes SetIamPolicy parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="resource">
                    /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </param>
                    public virtual TestIamPermissionsRequest TestIamPermissions(Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource)
                    {
                        return new TestIamPermissionsRequest(this.service, body, resource);
                    }

                    /// <summary>
                    /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                    /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                    /// designed to be used for building permission-aware UIs and command-line tools, not for
                    /// authorization checking. This operation may "fail open" without warning.
                    /// </summary>
                    public class TestIamPermissionsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsResponse>
                    {
                        /// <summary>Constructs a new TestIamPermissions request.</summary>
                        public TestIamPermissionsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource) : base(service)
                        {
                            Resource = resource;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                        /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for
                        /// this field.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Resource { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "testIamPermissions";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+resource}:testIamPermissions";

                        /// <summary>Initializes TestIamPermissions parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                            {
                                Name = "resource",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/hl7V2Stores/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the Operations resource.</summary>
                public virtual OperationsResource Operations { get; }

                /// <summary>The "operations" collection of methods.</summary>
                public class OperationsResource
                {
                    private const string Resource = "operations";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public OperationsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                    /// cancel the operation, but success is not guaranteed. If the server doesn't support this method,
                    /// it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
                    /// methods to check whether the cancellation succeeded or whether the operation completed despite
                    /// cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                    /// operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
                    /// `Code.CANCELLED`.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">The name of the operation resource to be cancelled.</param>
                    public virtual CancelRequest Cancel(Google.Apis.CloudHealthcare.v1.Data.CancelOperationRequest body, string name)
                    {
                        return new CancelRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                    /// cancel the operation, but success is not guaranteed. If the server doesn't support this method,
                    /// it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other
                    /// methods to check whether the cancellation succeeded or whether the operation completed despite
                    /// cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
                    /// operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to
                    /// `Code.CANCELLED`.
                    /// </summary>
                    public class CancelRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                    {
                        /// <summary>Constructs a new Cancel request.</summary>
                        public CancelRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.CancelOperationRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>The name of the operation resource to be cancelled.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.CancelOperationRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "cancel";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}:cancel";

                        /// <summary>Initializes Cancel parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    /// <param name="name">The name of the operation resource.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+/operations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Lists operations that match the specified filter in the request. If the server doesn't support
                    /// this method, it returns `UNIMPLEMENTED`.
                    /// </summary>
                    /// <param name="name">The name of the operation's parent resource.</param>
                    public virtual ListRequest List(string name)
                    {
                        return new ListRequest(this.service, name);
                    }

                    /// <summary>
                    /// Lists operations that match the specified filter in the request. If the server doesn't support
                    /// this method, it returns `UNIMPLEMENTED`.
                    /// </summary>
                    public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListOperationsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation's parent resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>The standard list filter.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>The standard list page size.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>The standard list page token.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+name}/operations";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>
                /// Creates a new health dataset. Results are returned through the Operation interface which returns
                /// either an `Operation.response` which contains a Dataset or `Operation.error`. The metadata field
                /// type is OperationMetadata.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The name of the project where the server creates the dataset. For example,
                /// `projects/{project_id}/locations/{location_id}`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.CloudHealthcare.v1.Data.Dataset body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates a new health dataset. Results are returned through the Operation interface which returns
                /// either an `Operation.response` which contains a Dataset or `Operation.error`. The metadata field
                /// type is OperationMetadata.
                /// </summary>
                public class CreateRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.Dataset body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the project where the server creates the dataset. For example,
                    /// `projects/{project_id}/locations/{location_id}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Required. The ID of the dataset that is being created. The string must match the following
                    /// regex: `[\p{L}\p{N}_\-\.]{1,256}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("datasetId", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string DatasetId { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.CloudHealthcare.v1.Data.Dataset Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+parent}/datasets";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("datasetId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "datasetId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Creates a new dataset containing de-identified data from the source dataset. The metadata field type
                /// is OperationMetadata. If the request is successful, the response field type is DeidentifySummary. If
                /// errors occur, error is set. The LRO result may still be successful if de-identification fails for
                /// some DICOM instances. The new de-identified dataset will not contain these failed resources. Failed
                /// resource totals are tracked in Operation.metadata. Error details are also logged to Cloud Logging.
                /// For more information, see [Viewing error logs in Cloud
                /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="sourceDataset">
                /// Required. Source dataset resource name. For example,
                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
                /// </param>
                public virtual DeidentifyRequest Deidentify(Google.Apis.CloudHealthcare.v1.Data.DeidentifyDatasetRequest body, string sourceDataset)
                {
                    return new DeidentifyRequest(this.service, body, sourceDataset);
                }

                /// <summary>
                /// Creates a new dataset containing de-identified data from the source dataset. The metadata field type
                /// is OperationMetadata. If the request is successful, the response field type is DeidentifySummary. If
                /// errors occur, error is set. The LRO result may still be successful if de-identification fails for
                /// some DICOM instances. The new de-identified dataset will not contain these failed resources. Failed
                /// resource totals are tracked in Operation.metadata. Error details are also logged to Cloud Logging.
                /// For more information, see [Viewing error logs in Cloud
                /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).
                /// </summary>
                public class DeidentifyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Operation>
                {
                    /// <summary>Constructs a new Deidentify request.</summary>
                    public DeidentifyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.DeidentifyDatasetRequest body, string sourceDataset) : base(service)
                    {
                        SourceDataset = sourceDataset;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Source dataset resource name. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("sourceDataset", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string SourceDataset { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.CloudHealthcare.v1.Data.DeidentifyDatasetRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "deidentify";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+sourceDataset}:deidentify";

                    /// <summary>Initializes Deidentify parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("sourceDataset", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sourceDataset",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Deletes the specified health dataset and all data contained in the dataset. Deleting a dataset does
                /// not affect the sources from which the dataset was imported (if any).
                /// </summary>
                /// <param name="name">
                /// Required. The name of the dataset to delete. For example,
                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>
                /// Deletes the specified health dataset and all data contained in the dataset. Deleting a dataset does
                /// not affect the sources from which the dataset was imported (if any).
                /// </summary>
                public class DeleteRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Empty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the dataset to delete. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets any metadata associated with a dataset.</summary>
                /// <param name="name">
                /// Required. The name of the dataset to read. For example,
                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Gets any metadata associated with a dataset.</summary>
                public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Dataset>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the dataset to read. For example,
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Gets the access control policy for a resource. Returns an empty policy if the resource exists and
                /// does not have a policy set.
                /// </summary>
                /// <param name="resource">
                /// REQUIRED: The resource for which the policy is being requested. See [Resource
                /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                /// field.
                /// </param>
                public virtual GetIamPolicyRequest GetIamPolicy(string resource)
                {
                    return new GetIamPolicyRequest(this.service, resource);
                }

                /// <summary>
                /// Gets the access control policy for a resource. Returns an empty policy if the resource exists and
                /// does not have a policy set.
                /// </summary>
                public class GetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                {
                    /// <summary>Constructs a new GetIamPolicy request.</summary>
                    public GetIamPolicyRequest(Google.Apis.Services.IClientService service, string resource) : base(service)
                    {
                        Resource = resource;
                        InitParameters();
                    }

                    /// <summary>
                    /// REQUIRED: The resource for which the policy is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Resource { get; private set; }

                    /// <summary>
                    /// Optional. The maximum policy version that will be used to format the policy. Valid values are 0,
                    /// 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any
                    /// conditional role bindings must specify version 3. Policies with no conditional role bindings may
                    /// specify any valid value or leave the field unset. The policy in the response might use the
                    /// policy version that you specified, or it might use a lower policy version. For example, if you
                    /// specify version 3, but the policy has no conditional role bindings, the response uses version 1.
                    /// To learn which resources support conditions in their IAM policies, see the [IAM
                    /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("options.requestedPolicyVersion", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> OptionsRequestedPolicyVersion { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "getIamPolicy";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+resource}:getIamPolicy";

                    /// <summary>Initializes GetIamPolicy parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                        {
                            Name = "resource",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                        });
                        RequestParameters.Add("options.requestedPolicyVersion", new Google.Apis.Discovery.Parameter
                        {
                            Name = "options.requestedPolicyVersion",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Lists the health datasets in the current project.</summary>
                /// <param name="parent">
                /// Required. The name of the project whose datasets should be listed. For example,
                /// `projects/{project_id}/locations/{location_id}`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Lists the health datasets in the current project.</summary>
                public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListDatasetsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the project whose datasets should be listed. For example,
                    /// `projects/{project_id}/locations/{location_id}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// The maximum number of items to return. If not specified, 100 is used. May not be larger than
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The next_page_token value returned from a previous List request, if any.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+parent}/datasets";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Updates dataset metadata.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Identifier. Resource name of the dataset, of the form
                /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.CloudHealthcare.v1.Data.Dataset body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>Updates dataset metadata.</summary>
                public class PatchRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Dataset>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.Dataset body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Identifier. Resource name of the dataset, of the form
                    /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Required. The update mask applies to the resource. For the `FieldMask` definition, see
                    /// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.CloudHealthcare.v1.Data.Dataset Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Sets the access control policy on the specified resource. Replaces any existing policy. Can return
                /// `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="resource">
                /// REQUIRED: The resource for which the policy is being specified. See [Resource
                /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                /// field.
                /// </param>
                public virtual SetIamPolicyRequest SetIamPolicy(Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource)
                {
                    return new SetIamPolicyRequest(this.service, body, resource);
                }

                /// <summary>
                /// Sets the access control policy on the specified resource. Replaces any existing policy. Can return
                /// `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
                /// </summary>
                public class SetIamPolicyRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Policy>
                {
                    /// <summary>Constructs a new SetIamPolicy request.</summary>
                    public SetIamPolicyRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest body, string resource) : base(service)
                    {
                        Resource = resource;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// REQUIRED: The resource for which the policy is being specified. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Resource { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.CloudHealthcare.v1.Data.SetIamPolicyRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "setIamPolicy";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+resource}:setIamPolicy";

                    /// <summary>Initializes SetIamPolicy parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                        {
                            Name = "resource",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                /// designed to be used for building permission-aware UIs and command-line tools, not for authorization
                /// checking. This operation may "fail open" without warning.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="resource">
                /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                /// field.
                /// </param>
                public virtual TestIamPermissionsRequest TestIamPermissions(Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource)
                {
                    return new TestIamPermissionsRequest(this.service, body, resource);
                }

                /// <summary>
                /// Returns permissions that a caller has on the specified resource. If the resource does not exist,
                /// this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is
                /// designed to be used for building permission-aware UIs and command-line tools, not for authorization
                /// checking. This operation may "fail open" without warning.
                /// </summary>
                public class TestIamPermissionsRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsResponse>
                {
                    /// <summary>Constructs a new TestIamPermissions request.</summary>
                    public TestIamPermissionsRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest body, string resource) : base(service)
                    {
                        Resource = resource;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// REQUIRED: The resource for which the policy detail is being requested. See [Resource
                    /// names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this
                    /// field.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("resource", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Resource { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.CloudHealthcare.v1.Data.TestIamPermissionsRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "testIamPermissions";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1/{+resource}:testIamPermissions";

                    /// <summary>Initializes TestIamPermissions parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("resource", new Google.Apis.Discovery.Parameter
                        {
                            Name = "resource",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Gets the Services resource.</summary>
            public virtual ServicesResource Services { get; }

            /// <summary>The "services" collection of methods.</summary>
            public class ServicesResource
            {
                private const string Resource = "services";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public ServicesResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Nlp = new NlpResource(service);
                }

                /// <summary>Gets the Nlp resource.</summary>
                public virtual NlpResource Nlp { get; }

                /// <summary>The "nlp" collection of methods.</summary>
                public class NlpResource
                {
                    private const string Resource = "nlp";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public NlpResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Analyze heathcare entity in a document. Its response includes the recognized entity mentions and
                    /// the relationships between them. AnalyzeEntities uses context aware models to detect entities.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="nlpService">
                    /// The resource name of the service of the form:
                    /// "projects/{project_id}/locations/{location_id}/services/nlp".
                    /// </param>
                    public virtual AnalyzeEntitiesRequest AnalyzeEntities(Google.Apis.CloudHealthcare.v1.Data.AnalyzeEntitiesRequest body, string nlpService)
                    {
                        return new AnalyzeEntitiesRequest(this.service, body, nlpService);
                    }

                    /// <summary>
                    /// Analyze heathcare entity in a document. Its response includes the recognized entity mentions and
                    /// the relationships between them. AnalyzeEntities uses context aware models to detect entities.
                    /// </summary>
                    public class AnalyzeEntitiesRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.AnalyzeEntitiesResponse>
                    {
                        /// <summary>Constructs a new AnalyzeEntities request.</summary>
                        public AnalyzeEntitiesRequest(Google.Apis.Services.IClientService service, Google.Apis.CloudHealthcare.v1.Data.AnalyzeEntitiesRequest body, string nlpService) : base(service)
                        {
                            NlpService = nlpService;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// The resource name of the service of the form:
                        /// "projects/{project_id}/locations/{location_id}/services/nlp".
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("nlpService", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string NlpService { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.CloudHealthcare.v1.Data.AnalyzeEntitiesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "analyzeEntities";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1/{+nlpService}:analyzeEntities";

                        /// <summary>Initializes AnalyzeEntities parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("nlpService", new Google.Apis.Discovery.Parameter
                            {
                                Name = "nlpService",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/services/nlp$",
                            });
                        }
                    }
                }
            }

            /// <summary>Gets information about a location.</summary>
            /// <param name="name">Resource name for the location.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>Gets information about a location.</summary>
            public class GetRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.Location>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>Resource name for the location.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v1/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                }
            }

            /// <summary>Lists information about the supported locations for this service.</summary>
            /// <param name="name">The resource that owns the locations collection, if applicable.</param>
            public virtual ListRequest List(string name)
            {
                return new ListRequest(this.service, name);
            }

            /// <summary>Lists information about the supported locations for this service.</summary>
            public class ListRequest : CloudHealthcareBaseServiceRequest<Google.Apis.CloudHealthcare.v1.Data.ListLocationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>The resource that owns the locations collection, if applicable.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>
                /// A filter to narrow down results to a preferred subset. The filtering language accepts strings like
                /// `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>
                /// The maximum number of results to return. If not set, the service selects a default.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>
                /// A page token received from the `next_page_token` field in the response. Send that page token to
                /// receive the subsequent page.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v1/{+name}/locations";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }
    }
}
namespace Google.Apis.CloudHealthcare.v1.Data
{
    /// <summary>
    /// Configures consent audit log config for FHIR create, read, update, and delete (CRUD) operations. Cloud audit log
    /// for healthcare API must be
    /// [enabled](https://cloud.google.com/logging/docs/audit/configure-data-access#config-console-enable). The
    /// consent-related logs are included as part of `protoPayload.metadata`.
    /// </summary>
    public class AccessDeterminationLogConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Controls the amount of detail to include as part of the audit logs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logLevel")]
        public virtual string LogLevel { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Activates the latest revision of the specified Consent by committing a new revision with `state` updated to
    /// `ACTIVE`. If the latest revision of the given Consent is in the `ACTIVE` state, no new revision is committed. A
    /// FAILED_PRECONDITION error occurs if the latest revision of the given consent is in the `REJECTED` or `REVOKED`
    /// state.
    /// </summary>
    public class ActivateConsentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The resource name of the Consent artifact that contains documentation of the user's consent, of
        /// the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.
        /// If the draft Consent had a Consent artifact, this Consent artifact overwrites it.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentArtifact")]
        public virtual string ConsentArtifact { get; set; }

        private string _expireTimeRaw;

        private object _expireTime;

        /// <summary>Timestamp in UTC of when this Consent is considered expired.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expireTime")]
        public virtual string ExpireTimeRaw
        {
            get => _expireTimeRaw;
            set
            {
                _expireTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _expireTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="ExpireTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use ExpireTimeDateTimeOffset instead.")]
        public virtual object ExpireTime
        {
            get => _expireTime;
            set
            {
                _expireTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _expireTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="ExpireTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? ExpireTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(ExpireTimeRaw);
            set => ExpireTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The time to live for this Consent from when it is marked as active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ttl")]
        public virtual object Ttl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>List of admin Consent resources to be applied.</summary>
    public class AdminConsents : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The versioned names of the admin Consent resource(s), in the format
        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{resource_id}/_history/{version_id}`.
        /// For FHIR stores with `disable_resource_versioning=true`, the format is
        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{resource_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("names")]
        public virtual System.Collections.Generic.IList<string> Names { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request to analyze healthcare entities in a document.</summary>
    public class AnalyzeEntitiesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Alternative output format to be generated based on the results of analysis.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alternativeOutputFormat")]
        public virtual string AlternativeOutputFormat { get; set; }

        /// <summary>document_content is a document to be annotated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentContent")]
        public virtual string DocumentContent { get; set; }

        /// <summary>
        /// A list of licensed vocabularies to use in the request, in addition to the default unlicensed vocabularies.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("licensedVocabularies")]
        public virtual System.Collections.Generic.IList<string> LicensedVocabularies { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Includes recognized entity mentions and relationships between them.</summary>
    public class AnalyzeEntitiesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The union of all the candidate entities that the entity_mentions in this response could link to. These are
        /// UMLS concepts or normalized mention content.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<Entity> Entities { get; set; }

        /// <summary>
        /// The `entity_mentions` field contains all the annotated medical entities that were mentioned in the provided
        /// document.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityMentions")]
        public virtual System.Collections.Generic.IList<EntityMention> EntityMentions { get; set; }

        /// <summary>
        /// The FHIR bundle ([`R4`](http://hl7.org/fhir/R4/bundle.html)) that includes all the entities, the entity
        /// mentions, and the relationships in JSON format.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fhirBundle")]
        public virtual string FhirBundle { get; set; }

        /// <summary>
        /// relationships contains all the binary relationships that were identified between entity mentions within the
        /// provided document.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relationships")]
        public virtual System.Collections.Generic.IList<EntityMentionRelationship> Relationships { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains the error details of the unsupported admin Consent resources for when the ApplyAdminConsents method
    /// fails to apply one or more Consent resources.
    /// </summary>
    public class ApplyAdminConsentsErrorDetail : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of Consent resources that are unsupported or cannot be applied and the error associated with each
        /// of them.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentErrors")]
        public virtual System.Collections.Generic.IList<ConsentErrors> ConsentErrors { get; set; }

        /// <summary>The currently in progress non-validate-only ApplyAdminConsents operation ID if exist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("existingOperationId")]
        public virtual System.Nullable<ulong> ExistingOperationId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request to apply the admin Consent resources for the specified FHIR store.</summary>
    public class ApplyAdminConsentsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A new list of admin Consent resources to be applied. Any existing enforced Consents, which are specified in
        /// `consent_config.enforced_admin_consents` of the FhirStore, that are not part of this list will be disabled.
        /// An empty list is equivalent to clearing or disabling all Consents enforced on the FHIR store. When a FHIR
        /// store has `disable_resource_versioning=true` and this list contains a Consent resource that exists in
        /// `consent_config.enforced_admin_consents`, the method enforces any updates to the existing resource since the
        /// last enforcement. If the existing resource hasn't been updated since the last enforcement, the resource is
        /// unaffected. After the method finishes, the resulting consent enforcement model is determined by the contents
        /// of the Consent resource(s) when the method was called: * When `disable_resource_versioning=true`, the result
        /// is identical to the current resource(s) in the FHIR store. * When `disable_resource_versioning=false`, the
        /// result is based on the historical version(s) of the Consent resource(s) at the point in time when the method
        /// was called. At most 200 Consents can be specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newConsentsList")]
        public virtual AdminConsents NewConsentsList { get; set; }

        /// <summary>
        /// Optional. If true, the method only validates Consent resources to make sure they are supported. Otherwise,
        /// the method applies the aggregate consent information to update the enforcement model and reindex the FHIR
        /// resources. If all Consent resources can be applied successfully, the ApplyAdminConsentsResponse is returned
        /// containing the following fields: * `consent_apply_success` to indicate the number of Consent resources
        /// applied. * `affected_resources` to indicate the number of resources that might have had their consent access
        /// changed. If, however, one or more Consent resources are unsupported or cannot be applied, the method fails
        /// and ApplyAdminConsentsErrorDetail is is returned with details about the unsupported Consent resources.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validateOnly")]
        public virtual System.Nullable<bool> ValidateOnly { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response when all admin Consent resources in scope were processed and all affected resources were reindexed
    /// successfully. This structure will be included in the response when the operation finishes successfully.
    /// </summary>
    public class ApplyAdminConsentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The number of resources (including the Consent resources) that may have consent access change.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("affectedResources")]
        public virtual System.Nullable<long> AffectedResources { get; set; }

        /// <summary>
        /// If `validate_only=false` in ApplyAdminConsentsRequest, this counter contains the number of Consent resources
        /// that were successfully applied. Otherwise, it is the number of Consent resources that are supported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentApplySuccess")]
        public virtual System.Nullable<long> ConsentApplySuccess { get; set; }

        /// <summary>
        /// The number of resources (including the Consent resources) that ApplyAdminConsents failed to re-index.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failedResources")]
        public virtual System.Nullable<long> FailedResources { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request to apply the Consent resources for the specified FHIR store.</summary>
    public class ApplyConsentsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Scope down to a list of patients.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("patientScope")]
        public virtual PatientScope PatientScope { get; set; }

        /// <summary>
        /// Optional. Scope down to patients whose most recent consent changes are in the time range. Can only be used
        /// with a versioning store (i.e. when disable_resource_versioning is set to false).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeRange")]
        public virtual TimeRange TimeRange { get; set; }

        /// <summary>
        /// Optional. If true, the method only validates Consent resources to make sure they are supported. When the
        /// operation completes, ApplyConsentsResponse is returned where `consent_apply_success` and
        /// `consent_apply_failure` indicate supported and unsupported (or invalid) Consent resources, respectively.
        /// Otherwise, the method propagates the aggregate consensual information to the patient's resources. Upon
        /// success, `affected_resources` in the ApplyConsentsResponse indicates the number of resources that may have
        /// consensual access changed.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validateOnly")]
        public virtual System.Nullable<bool> ValidateOnly { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response when all Consent resources in scope were processed and all affected resources were reindexed
    /// successfully. This structure is included in the response when the operation finishes successfully.
    /// </summary>
    public class ApplyConsentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The number of resources (including the Consent resources) that may have consensual access change.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("affectedResources")]
        public virtual System.Nullable<long> AffectedResources { get; set; }

        /// <summary>
        /// If `validate_only = false` in ApplyConsentsRequest, this counter is the number of Consent resources that
        /// were failed to apply. Otherwise, it is the number of Consent resources that are not supported or invalid.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentApplyFailure")]
        public virtual System.Nullable<long> ConsentApplyFailure { get; set; }

        /// <summary>
        /// If `validate_only = false` in ApplyConsentsRequest, this counter is the number of Consent resources that
        /// were successfully applied. Otherwise, it is the number of Consent resources that are supported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentApplySuccess")]
        public virtual System.Nullable<long> ConsentApplySuccess { get; set; }

        /// <summary>
        /// The number of resources (including the Consent resources) that ApplyConsents failed to re-index.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failedResources")]
        public virtual System.Nullable<long> FailedResources { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Archives the specified User data mapping.</summary>
    public class ArchiveUserDataMappingRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Archives the specified User data mapping.</summary>
    public class ArchiveUserDataMappingResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An attribute value for a Consent or User data mapping. Each Attribute must have a corresponding
    /// AttributeDefinition in the consent store that defines the default and allowed values.
    /// </summary>
    public class Attribute : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates the name of an attribute defined in the consent store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeDefinitionId")]
        public virtual string AttributeDefinitionId { get; set; }

        /// <summary>
        /// Required. The value of the attribute. Must be an acceptable value as defined in the consent store. For
        /// example, if the consent store defines "data type" with acceptable values "questionnaire" and "step-count",
        /// when the attribute name is data type, this field must contain one of those values.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("values")]
        public virtual System.Collections.Generic.IList<string> Values { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A client-defined consent attribute.</summary>
    public class AttributeDefinition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Possible values for the attribute. The number of allowed values must not exceed 500. An empty list
        /// is invalid. The list can only be expanded after creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowedValues")]
        public virtual System.Collections.Generic.IList<string> AllowedValues { get; set; }

        /// <summary>
        /// Required. The category of the attribute. The value of this field cannot be changed after creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category { get; set; }

        /// <summary>
        /// Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an
        /// empty value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentDefaultValues")]
        public virtual System.Collections.Generic.IList<string> ConsentDefaultValues { get; set; }

        /// <summary>
        /// Optional. Default value of the attribute in User data mappings. If no default value is specified, it
        /// defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataMappingDefaultValue")]
        public virtual string DataMappingDefaultValue { get; set; }

        /// <summary>Optional. A description of the attribute.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Identifier. Resource name of the Attribute definition, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`.
        /// Cannot be changed after creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies the audit configuration for a service. The configuration determines which permission types are logged,
    /// and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If
    /// there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used
    /// for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each
    /// AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service":
    /// "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ]
    /// }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
    /// "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [
    /// "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
    /// logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE
    /// logging.
    /// </summary>
    public class AuditConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The configuration for logging of each type of permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("auditLogConfigs")]
        public virtual System.Collections.Generic.IList<AuditLogConfig> AuditLogConfigs { get; set; }

        /// <summary>
        /// Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`,
        /// `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Provides the configuration for logging a type of permissions. Example: { "audit_log_configs": [ { "log_type":
    /// "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
    /// 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.
    /// </summary>
    public class AuditLogConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies the identities that do not cause logging for this type of permission. Follows the same format of
        /// Binding.members.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exemptedMembers")]
        public virtual System.Collections.Generic.IList<string> ExemptedMembers { get; set; }

        /// <summary>The log type that this config enables.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logType")]
        public virtual string LogType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Associates `members`, or principals, with a `role`.</summary>
    public class Binding : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The condition that is associated with this binding. If the condition evaluates to `true`, then this binding
        /// applies to the current request. If the condition evaluates to `false`, then this binding does not apply to
        /// the current request. However, a different role binding might grant the same role to one or more of the
        /// principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM
        /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual Expr Condition { get; set; }

        /// <summary>
        /// Specifies the principals requesting access for a Google Cloud resource. `members` can have the following
        /// values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a
        /// Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated
        /// with a Google account or a service account. Does not include identities that come from external identity
        /// providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a
        /// specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address
        /// that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. *
        /// `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes
        /// service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For
        /// example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that
        /// represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain
        /// (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. *
        /// `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
        /// A single identity in a workforce identity pool. *
        /// `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All
        /// workforce identities in a group. *
        /// `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
        /// All workforce identities with a specific attribute value. *
        /// `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a
        /// workforce identity pool. *
        /// `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
        /// A single identity in a workload identity pool. *
        /// `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
        /// A workload identity pool group. *
        /// `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
        /// All identities in a workload identity pool with a certain attribute. *
        /// `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`:
        /// All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address
        /// (plus unique identifier) representing a user that has been recently deleted. For example,
        /// `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to
        /// `user:{emailid}` and the recovered user retains the role in the binding. *
        /// `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a
        /// service account that has been recently deleted. For example,
        /// `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted,
        /// this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the
        /// binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing
        /// a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`.
        /// If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role
        /// in the binding. *
        /// `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
        /// Deleted single identity in a workforce identity pool. For example,
        /// `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("members")]
        public virtual System.Collections.Generic.IList<string> Members { get; set; }

        /// <summary>
        /// Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`,
        /// or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM
        /// documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined
        /// roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// BlobStorageInfo contains details about the data stored in Blob Storage for the referenced resource. Note:
    /// Storage class is only valid for DICOM and hence will only be populated for DICOM resources.
    /// </summary>
    public class BlobStorageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Size in bytes of data stored in Blob Storage.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sizeBytes")]
        public virtual System.Nullable<long> SizeBytes { get; set; }

        /// <summary>The storage class in which the Blob data is stored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storageClass")]
        public virtual string StorageClass { get; set; }

        private string _storageClassUpdateTimeRaw;

        private object _storageClassUpdateTime;

        /// <summary>
        /// The time at which the storage class was updated. This is used to compute early deletion fees of the
        /// resource.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storageClassUpdateTime")]
        public virtual string StorageClassUpdateTimeRaw
        {
            get => _storageClassUpdateTimeRaw;
            set
            {
                _storageClassUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _storageClassUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StorageClassUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StorageClassUpdateTimeDateTimeOffset instead.")]
        public virtual object StorageClassUpdateTime
        {
            get => _storageClassUpdateTime;
            set
            {
                _storageClassUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _storageClassUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="StorageClassUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StorageClassUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StorageClassUpdateTimeRaw);
            set => StorageClassUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Settings for data stored in Blob storage.</summary>
    public class BlobStorageSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Storage class in which the Blob data is stored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobStorageClass")]
        public virtual string BlobStorageClass { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Operations.CancelOperation.</summary>
    public class CancelOperationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Mask a string by replacing its characters with a fixed character.</summary>
    public class CharacterMaskConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Character to mask the sensitive values. If not supplied, defaults to "*".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maskingCharacter")]
        public virtual string MaskingCharacter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Checks if a particular data_id of a User data mapping in the given consent store is consented for a given use.
    /// </summary>
    public class CheckDataAccessRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Specific Consents to evaluate the access request against. These Consents must have the same
        /// `user_id` as the evaluated User data mapping, must exist in the current `consent_store`, and have a `state`
        /// of either `ACTIVE` or `DRAFT`. A maximum of 100 Consents can be provided here. If no selection is specified,
        /// the access request is evaluated against all `ACTIVE` unexpired Consents with the same `user_id` as the
        /// evaluated User data mapping.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentList")]
        public virtual ConsentList ConsentList { get; set; }

        /// <summary>
        /// Required. The unique identifier of the resource to check access for. This identifier must correspond to a
        /// User data mapping in the given consent store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataId")]
        public virtual string DataId { get; set; }

        /// <summary>The values of request attributes associated with this access request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestAttributes")]
        public virtual System.Collections.Generic.IDictionary<string, string> RequestAttributes { get; set; }

        /// <summary>
        /// Optional. The view for CheckDataAccessResponse. If unspecified, defaults to `BASIC` and returns `consented`
        /// as `TRUE` or `FALSE`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseView")]
        public virtual string ResponseView { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Checks if a particular data_id of a User data mapping in the given consent store is consented for a given use.
    /// </summary>
    public class CheckDataAccessResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource names of all evaluated Consents mapped to their evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentDetails")]
        public virtual System.Collections.Generic.IDictionary<string, ConsentEvaluation> ConsentDetails { get; set; }

        /// <summary>Whether the requested resource is consented for the given use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consented")]
        public virtual System.Nullable<bool> Consented { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a user's consent.</summary>
    public class Consent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The resource name of the Consent artifact that contains proof of the end user's consent, of the
        /// form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentArtifact")]
        public virtual string ConsentArtifact { get; set; }

        private string _expireTimeRaw;

        private object _expireTime;

        /// <summary>Timestamp in UTC of when this Consent is considered expired.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expireTime")]
        public virtual string ExpireTimeRaw
        {
            get => _expireTimeRaw;
            set
            {
                _expireTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _expireTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="ExpireTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use ExpireTimeDateTimeOffset instead.")]
        public virtual object ExpireTime
        {
            get => _expireTime;
            set
            {
                _expireTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _expireTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="ExpireTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? ExpireTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(ExpireTimeRaw);
            set => ExpireTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Optional. User-supplied key-value pairs used to organize Consent resources. Metadata keys must: - be between
        /// 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - begin with a letter - consist of up
        /// to 63 characters including lowercase letters, numeric characters, underscores, and dashes Metadata values
        /// must be: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - consist of up
        /// to 63 characters including lowercase letters, numeric characters, underscores, and dashes No more than 64
        /// metadata entries can be associated with a given consent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>
        /// Identifier. Resource name of the Consent, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
        /// Cannot be changed after creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. Represents a user's consent in terms of the resources that can be accessed and under what
        /// conditions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("policies")]
        public virtual System.Collections.Generic.IList<GoogleCloudHealthcareV1ConsentPolicy> Policies { get; set; }

        private string _revisionCreateTimeRaw;

        private object _revisionCreateTime;

        /// <summary>Output only. The timestamp that the revision was created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("revisionCreateTime")]
        public virtual string RevisionCreateTimeRaw
        {
            get => _revisionCreateTimeRaw;
            set
            {
                _revisionCreateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _revisionCreateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="RevisionCreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use RevisionCreateTimeDateTimeOffset instead.")]
        public virtual object RevisionCreateTime
        {
            get => _revisionCreateTime;
            set
            {
                _revisionCreateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _revisionCreateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="RevisionCreateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? RevisionCreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(RevisionCreateTimeRaw);
            set => RevisionCreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The revision ID of the Consent. The format is an 8-character hexadecimal string. Refer to a
        /// specific revision of a Consent by appending `@{revision_id}` to the Consent's resource name.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("revisionId")]
        public virtual string RevisionId { get; set; }

        /// <summary>Required. Indicates the current state of this Consent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>Input only. The time to live for this Consent from when it is created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ttl")]
        public virtual object Ttl { get; set; }

        /// <summary>Required. User's UUID provided by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The accessor scope that describes who can access, for what purpose, in which environment.</summary>
    public class ConsentAccessorScope : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// An individual, group, or access role that identifies the accessor or a characteristic of the accessor. This
        /// can be a resource ID (such as `{resourceType}/{id}`) or an external URI. This value must be present.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actor")]
        public virtual string Actor { get; set; }

        /// <summary>
        /// An abstract identifier that describes the environment or conditions under which the accessor is acting. Can
        /// be "*" if it applies to all environments.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("environment")]
        public virtual string Environment { get; set; }

        /// <summary>The intent of data use. Can be "*" if it applies to all purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purpose")]
        public virtual string Purpose { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Documentation of a user's consent.</summary>
    public class ConsentArtifact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Screenshots, PDFs, or other binary information documenting the user's consent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentContentScreenshots")]
        public virtual System.Collections.Generic.IList<Image> ConsentContentScreenshots { get; set; }

        /// <summary>Optional. An string indicating the version of the consent information shown to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentContentVersion")]
        public virtual string ConsentContentVersion { get; set; }

        /// <summary>Optional. A signature from a guardian.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("guardianSignature")]
        public virtual Signature GuardianSignature { get; set; }

        /// <summary>
        /// Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent
        /// version.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>
        /// Identifier. Resource name of the Consent artifact, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.
        /// Cannot be changed after creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Required. User's UUID provided by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; }

        /// <summary>Optional. User's signature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userSignature")]
        public virtual Signature UserSignature { get; set; }

        /// <summary>Optional. A signature from a witness.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("witnessSignature")]
        public virtual Signature WitnessSignature { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configures whether to enforce consent for the FHIR store and which consent enforcement version is being used.
    /// </summary>
    public class ConsentConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Specifies how the server logs the consent-aware requests. If not specified, the
        /// `AccessDeterminationLogConfig.LogLevel.MINIMUM` option is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessDeterminationLogConfig")]
        public virtual AccessDeterminationLogConfig AccessDeterminationLogConfig { get; set; }

        /// <summary>
        /// Optional. The default value is false. If set to true, when accessing FHIR resources, the consent headers
        /// will be verified against consents given by patients. See the ConsentEnforcementVersion for the supported
        /// consent headers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessEnforced")]
        public virtual System.Nullable<bool> AccessEnforced { get; set; }

        /// <summary>
        /// Optional. Different options to configure the behaviour of the server when handling the `X-Consent-Scope`
        /// header.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentHeaderHandling")]
        public virtual ConsentHeaderHandling ConsentHeaderHandling { get; set; }

        /// <summary>
        /// Output only. The versioned names of the enforced admin Consent resource(s), in the format
        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{resource_id}/_history/{version_id}`.
        /// For FHIR stores with `disable_resource_versioning=true`, the format is
        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{resource_id}`.
        /// This field can only be updated using ApplyAdminConsents.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enforcedAdminConsents")]
        public virtual System.Collections.Generic.IList<string> EnforcedAdminConsents { get; set; }

        /// <summary>
        /// Required. Specifies which consent enforcement version is being used for this FHIR store. This field can only
        /// be set once by either CreateFhirStore or UpdateFhirStore. After that, you must call ApplyConsents to change
        /// the version.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The Consent resource name and error.</summary>
    public class ConsentErrors : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The error code and message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Status Error { get; set; }

        /// <summary>
        /// The versioned name of the admin Consent resource, in the format
        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{resource_id}/_history/{version_id}`.
        /// For FHIR stores with `disable_resource_versioning=true`, the format is
        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{resource_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The detailed evaluation of a particular Consent.</summary>
    public class ConsentEvaluation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The evaluation result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("evaluationResult")]
        public virtual string EvaluationResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>How the server handles the consent header.</summary>
    public class ConsentHeaderHandling : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Specifies the default server behavior when the header is empty. If not specified, the
        /// `ScopeProfile.PERMIT_EMPTY_SCOPE` option is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profile")]
        public virtual string Profile { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>List of resource names of Consent resources.</summary>
    public class ConsentList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource names of the Consents to evaluate against, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consents")]
        public virtual System.Collections.Generic.IList<string> Consents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a consent store.</summary>
    public class ConsentStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this
        /// field will not affect the expiration time of existing consents.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultConsentTtl")]
        public virtual object DefaultConsentTtl { get; set; }

        /// <summary>
        /// Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified,
        /// defaults to `false`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableConsentCreateOnUpdate")]
        public virtual System.Nullable<bool> EnableConsentCreateOnUpdate { get; set; }

        /// <summary>
        /// Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63
        /// characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular
        /// expression: \p{Ll}\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding
        /// of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// [\p{Ll}\p{Lo}\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more
        /// information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// Identifier. Resource name of the consent store, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`.
        /// Cannot be changed after creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creates a new message.</summary>
    public class CreateMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. HL7v2 message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual Message Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. Outputs a
    /// base64-encoded representation of the hashed output (for example,
    /// `L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=`).
    /// </summary>
    public class CryptoHashConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// An AES 128/192/256 bit key. Causes the hash to be computed based on this key. A default key is generated for
        /// each Deidentify operation and is used when neither `crypto_key` nor `kms_wrapped` is specified. Must not be
        /// set if `kms_wrapped` is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cryptoKey")]
        public virtual string CryptoKey { get; set; }

        /// <summary>KMS wrapped key. Must not be set if `crypto_key` is set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsWrapped")]
        public virtual KmsWrappedCryptoKey KmsWrapped { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A message representing a health dataset. A health dataset represents a collection of healthcare data pertaining
    /// to one or more patients. This may include multiple modalities of healthcare data, such as electronic medical
    /// records or medical imaging data.
    /// </summary>
    public class Dataset : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Customer-managed encryption key spec for a Dataset. If set, this Dataset and all of its
        /// sub-resources will be secured by this key. If empty, the Dataset is secured by the default Google encryption
        /// key.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptionSpec")]
        public virtual EncryptionSpec EncryptionSpec { get; set; }

        /// <summary>
        /// Identifier. Resource name of the dataset, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The default timezone used by this dataset. Must be a either a valid IANA time zone name such as
        /// "America/New_York" or empty, which defaults to UTC. This is used for parsing times in resources, such as HL7
        /// messages, where no explicit timezone is specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Shift a date forward or backward in time by a random amount which is consistent for a given patient and crypto
    /// key combination.
    /// </summary>
    public class DateShiftConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// An AES 128/192/256 bit key. The date shift is computed based on this key and the patient ID. If the patient
        /// ID is empty for a DICOM resource, the date shift is computed based on this key and the study instance UID.
        /// If `crypto_key` is not set, then `kms_wrapped` is used to calculate the date shift. If neither is set, a
        /// default key is generated for each de-identify operation. Must not be set if `kms_wrapped` is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cryptoKey")]
        public virtual string CryptoKey { get; set; }

        /// <summary>
        /// KMS wrapped key. If `kms_wrapped` is not set, then `crypto_key` is used to calculate the date shift. If
        /// neither is set, a default key is generated for each de-identify operation. Must not be set if `crypto_key`
        /// is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsWrapped")]
        public virtual KmsWrappedCryptoKey KmsWrapped { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains configuration for streaming de-identified FHIR export.</summary>
    public class DeidentifiedStoreDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The configuration to use when de-identifying resources that are added to this store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("config")]
        public virtual DeidentifyConfig Config { get; set; }

        /// <summary>
        /// Optional. The full resource name of a Cloud Healthcare FHIR store, for example,
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("store")]
        public virtual string Store { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configures de-id options specific to different types of content. Each submessage customizes the handling of an
    /// https://tools.ietf.org/html/rfc6838 media type or subtype. Configs are applied in a nested manner at runtime.
    /// </summary>
    public class DeidentifyConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Configures de-id of application/DICOM content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dicom")]
        public virtual DicomConfig Dicom { get; set; }

        /// <summary>Optional. Configures de-id of application/FHIR content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fhir")]
        public virtual FhirConfig Fhir { get; set; }

        /// <summary>
        /// Optional. Configures de-identification of image pixels wherever they are found in the source_dataset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual ImageConfig Image { get; set; }

        /// <summary>
        /// Optional. Configures de-identification of text wherever it is found in the source_dataset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual TextConfig Text { get; set; }

        /// <summary>
        /// Optional. Ensures in-flight data remains in the region of origin during de-identification. The default value
        /// is false. Using this option results in a significant reduction of throughput, and is not compatible with
        /// `LOCATION` or `ORGANIZATION_NAME` infoTypes. `LOCATION` must be excluded within TextConfig, and must also be
        /// excluded within ImageConfig if image redaction is required.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useRegionalDataProcessing")]
        public virtual System.Nullable<bool> UseRegionalDataProcessing { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Redacts identifying information from the specified dataset.</summary>
    public class DeidentifyDatasetRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Deidentify configuration. Only one of `config` and `gcs_config_uri` can be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("config")]
        public virtual DeidentifyConfig Config { get; set; }

        /// <summary>
        /// Required. The name of the dataset resource to create and write the redacted data to. * The destination
        /// dataset must not exist. * The destination dataset must be in the same location as the source dataset.
        /// De-identifying data across multiple locations is not supported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationDataset")]
        public virtual string DestinationDataset { get; set; }

        /// <summary>
        /// Cloud Storage location to read the JSON cloud.healthcare.deidentify.DeidentifyConfig from, overriding the
        /// default config. Must be of the form `gs://{bucket_id}/path/to/object`. The Cloud Storage location must grant
        /// the Cloud IAM role `roles/storage.objectViewer` to the project's Cloud Healthcare Service Agent service
        /// account. Only one of `config` and `gcs_config_uri` can be specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsConfigUri")]
        public virtual string GcsConfigUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creates a new DICOM store with sensitive information de-identified.</summary>
    public class DeidentifyDicomStoreRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Deidentify configuration. Only one of `config` and `gcs_config_uri` can be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("config")]
        public virtual DeidentifyConfig Config { get; set; }

        /// <summary>
        /// Required. The name of the DICOM store to create and write the redacted data to. For example,
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`. * The
        /// destination dataset must exist. * The source dataset and destination dataset must both reside in the same
        /// location. De-identifying data across multiple locations is not supported. * The destination DICOM store must
        /// not exist. * The caller must have the necessary permissions to create the destination DICOM store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationStore")]
        public virtual string DestinationStore { get; set; }

        /// <summary>Filter configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterConfig")]
        public virtual DicomFilterConfig FilterConfig { get; set; }

        /// <summary>
        /// Cloud Storage location to read the JSON cloud.healthcare.deidentify.DeidentifyConfig from, overriding the
        /// default config. Must be of the form `gs://{bucket_id}/path/to/object`. The Cloud Storage location must grant
        /// the Cloud IAM role `roles/storage.objectViewer` to the project's Cloud Healthcare Service Agent service
        /// account. Only one of `config` and `gcs_config_uri` can be specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsConfigUri")]
        public virtual string GcsConfigUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creates a new FHIR store with sensitive information de-identified.</summary>
    public class DeidentifyFhirStoreRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Deidentify configuration. Only one of `config` and `gcs_config_uri` can be specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("config")]
        public virtual DeidentifyConfig Config { get; set; }

        /// <summary>
        /// Required. The name of the FHIR store to create and write the redacted data to. For example,
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`. * The
        /// destination dataset must exist. * The source dataset and destination dataset must both reside in the same
        /// location. De-identifying data across multiple locations is not supported. * The destination FHIR store must
        /// exist. * The caller must have the healthcare.fhirResources.update permission to write to the destination
        /// FHIR store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationStore")]
        public virtual string DestinationStore { get; set; }

        /// <summary>
        /// Cloud Storage location to read the JSON cloud.healthcare.deidentify.DeidentifyConfig from, overriding the
        /// default config. Must be of the form `gs://{bucket_id}/path/to/object`. The Cloud Storage location must grant
        /// the Cloud IAM role `roles/storage.objectViewer` to the project's Cloud Healthcare Service Agent service
        /// account. Only one of `config` and `gcs_config_uri` can be specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsConfigUri")]
        public virtual string GcsConfigUri { get; set; }

        /// <summary>
        /// A filter specifying the resources to include in the output. If not specified, all resources are included in
        /// the output.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceFilter")]
        public virtual FhirFilter ResourceFilter { get; set; }

        /// <summary>
        /// If true, skips resources that are created or modified after the de-identify operation is created.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skipModifiedResources")]
        public virtual System.Nullable<bool> SkipModifiedResources { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains a summary of the Deidentify operation.</summary>
    public class DeidentifySummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies the parameters needed for de-identification of DICOM stores.</summary>
    public class DicomConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Tag filtering profile that determines which tags to keep/remove.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterProfile")]
        public virtual string FilterProfile { get; set; }

        /// <summary>List of tags to keep. Remove all other tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keepList")]
        public virtual TagFilterList KeepList { get; set; }

        /// <summary>List of tags to remove. Keep all other tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("removeList")]
        public virtual TagFilterList RemoveList { get; set; }

        /// <summary>
        /// Optional. If true, skip replacing StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, and
        /// MediaStorageSOPInstanceUID and leave them untouched. The Cloud Healthcare API regenerates these UIDs by
        /// default based on the DICOM Standard's reasoning: "Whilst these UIDs cannot be mapped directly to an
        /// individual out of context, given access to the original images, or to a database of the original images
        /// containing the UIDs, it would be possible to recover the individual's identity."
        /// http://dicom.nema.org/medical/dicom/current/output/chtml/part15/sect_E.3.9.html
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skipIdRedaction")]
        public virtual System.Nullable<bool> SkipIdRedaction { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies the filter configuration for DICOM resources.</summary>
    public class DicomFilterConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Cloud Storage location of the filter configuration file. The `gcs_uri` must be in the format
        /// `gs://bucket/path/to/object`. The filter configuration file must contain a list of resource paths separated
        /// by newline characters (\n or \r\n). Each resource path must be in the format
        /// "/studies/{studyUID}[/series/{seriesUID}[/instances/{instanceUID}]]" The Cloud Healthcare API service
        /// account must have the `roles/storage.objectViewer` Cloud IAM role for this Cloud Storage location.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourcePathsGcsUri")]
        public virtual string ResourcePathsGcsUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a DICOM store.</summary>
    public class DicomStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// User-supplied key-value pairs used to organize DICOM stores. Label keys must be between 1 and 63 characters
        /// long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8
        /// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// Identifier. Resource name of the DICOM store, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Optional. Notification destination for new DICOM instances. Supplied by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notificationConfig")]
        public virtual NotificationConfig NotificationConfig { get; set; }

        /// <summary>
        /// Optional. A list of streaming configs used to configure the destination of streaming exports for every DICOM
        /// instance insertion in this DICOM store. After a new config is added to `stream_configs`, DICOM instance
        /// insertions are streamed to the new destination. When a config is removed from `stream_configs`, the server
        /// stops streaming to that destination. Each config must contain a unique destination.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("streamConfigs")]
        public virtual System.Collections.Generic.IList<GoogleCloudHealthcareV1DicomStreamConfig> StreamConfigs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>DicomStoreMetrics contains metrics describing a DICOM store.</summary>
    public class DicomStoreMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Total blob storage bytes for all instances in the store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobStorageSizeBytes")]
        public virtual System.Nullable<long> BlobStorageSizeBytes { get; set; }

        /// <summary>Number of instances in the store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceCount")]
        public virtual System.Nullable<long> InstanceCount { get; set; }

        /// <summary>
        /// Resource name of the DICOM store, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Number of series in the store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seriesCount")]
        public virtual System.Nullable<long> SeriesCount { get; set; }

        /// <summary>Total structured storage bytes for all instances in the store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredStorageSizeBytes")]
        public virtual System.Nullable<long> StructuredStorageSizeBytes { get; set; }

        /// <summary>Number of studies in the store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("studyCount")]
        public virtual System.Nullable<long> StudyCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical
    /// example is to use it as the request or the response type of an API method. For instance: service Foo { rpc
    /// Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    /// </summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a customer-managed encryption key spec that can be applied to a resource.</summary>
    public class EncryptionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The resource name of customer-managed encryption key that is used to secure a resource and its
        /// sub-resources. Only the key in the same location as this Dataset is allowed to be used for encryption.
        /// Format is: `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyName")]
        public virtual string KmsKeyName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The candidate entities that an entity mention could link to.</summary>
    public class Entity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// entity_id is a first class field entity_id uniquely identifies this concept and its meta-vocabulary. For
        /// example, "UMLS/C0000970".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityId")]
        public virtual string EntityId { get; set; }

        /// <summary>
        /// preferred_term is the preferred term for this concept. For example, "Acetaminophen". For ad hoc entities
        /// formed by normalization, this is the most popular unnormalized string.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("preferredTerm")]
        public virtual string PreferredTerm { get; set; }

        /// <summary>
        /// Vocabulary codes are first-class fields and differentiated from the concept unique identifier (entity_id).
        /// vocabulary_codes contains the representation of this concept in particular vocabularies, such as ICD-10,
        /// SNOMED-CT and RxNORM. These are prefixed by the name of the vocabulary, followed by the unique code within
        /// that vocabulary. For example, "RXNORM/A10334543".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vocabularyCodes")]
        public virtual System.Collections.Generic.IList<string> VocabularyCodes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An entity mention in the document.</summary>
    public class EntityMention : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The certainty assessment of the entity mention. Its value is one of: LIKELY, SOMEWHAT_LIKELY, UNCERTAIN,
        /// SOMEWHAT_UNLIKELY, UNLIKELY, CONDITIONAL
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("certaintyAssessment")]
        public virtual Feature CertaintyAssessment { get; set; }

        /// <summary>The model's confidence in this entity mention annotation. A number between 0 and 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<double> Confidence { get; set; }

        /// <summary>
        /// linked_entities are candidate ontological concepts that this entity mention may refer to. They are sorted by
        /// decreasing confidence.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkedEntities")]
        public virtual System.Collections.Generic.IList<LinkedEntity> LinkedEntities { get; set; }

        /// <summary>mention_id uniquely identifies each entity mention in a single response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mentionId")]
        public virtual string MentionId { get; set; }

        /// <summary>
        /// The subject this entity mention relates to. Its value is one of: PATIENT, FAMILY_MEMBER, OTHER
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subject")]
        public virtual Feature Subject { get; set; }

        /// <summary>
        /// How this entity mention relates to the subject temporally. Its value is one of: CURRENT, CLINICAL_HISTORY,
        /// FAMILY_HISTORY, UPCOMING, ALLERGY
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("temporalAssessment")]
        public virtual Feature TemporalAssessment { get; set; }

        /// <summary>text is the location of the entity mention in the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual TextSpan Text { get; set; }

        /// <summary>
        /// The semantic type of the entity: UNKNOWN_ENTITY_TYPE, ALONE, ANATOMICAL_STRUCTURE, ASSISTED_LIVING,
        /// BF_RESULT, BM_RESULT, BM_UNIT, BM_VALUE, BODY_FUNCTION, BODY_MEASUREMENT, COMPLIANT, DOESNOT_FOLLOWUP,
        /// FAMILY, FOLLOWSUP, LABORATORY_DATA, LAB_RESULT, LAB_UNIT, LAB_VALUE, MEDICAL_DEVICE, MEDICINE, MED_DOSE,
        /// MED_DURATION, MED_FORM, MED_FREQUENCY, MED_ROUTE, MED_STATUS, MED_STRENGTH, MED_TOTALDOSE, MED_UNIT,
        /// NON_COMPLIANT, OTHER_LIVINGSTATUS, PROBLEM, PROCEDURE, PROCEDURE_RESULT, PROC_METHOD,
        /// REASON_FOR_NONCOMPLIANCE, SEVERITY, SUBSTANCE_ABUSE, UNCLEAR_FOLLOWUP.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines directed relationship from one entity mention to another.</summary>
    public class EntityMentionRelationship : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The model's confidence in this annotation. A number between 0 and 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<double> Confidence { get; set; }

        /// <summary>object_id is the id of the object entity mention.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectId")]
        public virtual string ObjectId { get; set; }

        /// <summary>subject_id is the id of the subject entity mention.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subjectId")]
        public virtual string SubjectId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Evaluate a user's Consents for all matching User data mappings. Note: User data mappings are indexed
    /// asynchronously, causing slight delays between the time mappings are created or updated and when they are
    /// included in EvaluateUserConsents results.
    /// </summary>
    public class EvaluateUserConsentsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Specific Consents to evaluate the access request against. These Consents must have the same
        /// `user_id` as the User data mappings being evalauted, must exist in the current `consent_store`, and must
        /// have a `state` of either `ACTIVE` or `DRAFT`. A maximum of 100 Consents can be provided here. If
        /// unspecified, all `ACTIVE` unexpired Consents in the current `consent_store` will be evaluated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentList")]
        public virtual ConsentList ConsentList { get; set; }

        /// <summary>
        /// Optional. Limit on the number of User data mappings to return in a single response. If not specified, 100 is
        /// used. May not be larger than 1000.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageSize")]
        public virtual System.Nullable<int> PageSize { get; set; }

        /// <summary>Optional. Token to retrieve the next page of results, or empty to get the first page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageToken")]
        public virtual string PageToken { get; set; }

        /// <summary>Required. The values of request attributes associated with this access request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestAttributes")]
        public virtual System.Collections.Generic.IDictionary<string, string> RequestAttributes { get; set; }

        /// <summary>
        /// Optional. The values of resource attributes associated with the resources being requested. If no values are
        /// specified, then all resources are queried.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceAttributes")]
        public virtual System.Collections.Generic.IDictionary<string, string> ResourceAttributes { get; set; }

        /// <summary>
        /// Optional. The view for EvaluateUserConsentsResponse. If unspecified, defaults to `BASIC` and returns
        /// `consented` as `TRUE` or `FALSE`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseView")]
        public virtual string ResponseView { get; set; }

        /// <summary>Required. User ID to evaluate consents for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class EvaluateUserConsentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list. This token is
        /// valid for 72 hours after it is created.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The consent evaluation result for each `data_id`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("results")]
        public virtual System.Collections.Generic.IList<Result> Results { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The enforcing consent's metadata.</summary>
    public class ExplainDataAccessConsentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The compartment base resources that matched a cascading policy. Each resource has the following format:
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/{resource_type}/{resource_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cascadeOrigins")]
        public virtual System.Collections.Generic.IList<string> CascadeOrigins { get; set; }

        /// <summary>
        /// The resource name of this consent resource, in the format:
        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Consent/{resource_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentResource")]
        public virtual string ConsentResource { get; set; }

        private string _enforcementTimeRaw;

        private object _enforcementTime;

        /// <summary>Last enforcement timestamp of this consent resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enforcementTime")]
        public virtual string EnforcementTimeRaw
        {
            get => _enforcementTimeRaw;
            set
            {
                _enforcementTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _enforcementTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EnforcementTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EnforcementTimeDateTimeOffset instead.")]
        public virtual object EnforcementTime
        {
            get => _enforcementTime;
            set
            {
                _enforcementTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _enforcementTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="EnforcementTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EnforcementTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EnforcementTimeRaw);
            set => EnforcementTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// A list of all the matching accessor scopes of this consent policy that enforced
        /// ExplainDataAccessConsentScope.accessor_scope.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchingAccessorScopes")]
        public virtual System.Collections.Generic.IList<ConsentAccessorScope> MatchingAccessorScopes { get; set; }

        /// <summary>
        /// The patient owning the consent (only applicable for patient consents), in the format:
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}/fhir/Patient/{patient_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("patientConsentOwner")]
        public virtual string PatientConsentOwner { get; set; }

        /// <summary>The policy type of consent resource (e.g. PATIENT, ADMIN).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The consent's variant combinations. A single consent may have multiple variants.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variants")]
        public virtual System.Collections.Generic.IList<string> Variants { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A single consent scope that provides info on who has access to the requested resource scope for a particular
    /// purpose and environment, enforced by which consent.
    /// </summary>
    public class ExplainDataAccessConsentScope : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The accessor scope that describes who can access, for what purpose, and in which environment.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessorScope")]
        public virtual ConsentAccessorScope AccessorScope { get; set; }

        /// <summary>
        /// Whether the current consent scope is permitted or denied access on the requested resource.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("decision")]
        public virtual string Decision { get; set; }

        /// <summary>Metadata of the consent resources that enforce the consent scope's access.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enforcingConsents")]
        public virtual System.Collections.Generic.IList<ExplainDataAccessConsentInfo> EnforcingConsents { get; set; }

        /// <summary>Other consent scopes that created exceptions within this scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exceptions")]
        public virtual System.Collections.Generic.IList<ExplainDataAccessConsentScope> Exceptions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>List of consent scopes that are applicable to the explained access on a given resource.</summary>
    public class ExplainDataAccessResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// List of applicable consent scopes. Sorted in order of actor such that scopes belonging to the same actor
        /// will be adjacent to each other in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentScopes")]
        public virtual System.Collections.Generic.IList<ExplainDataAccessConsentScope> ConsentScopes { get; set; }

        /// <summary>Warnings associated with this response. It inform user with exceeded scope limit errors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warning")]
        public virtual string Warning { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Exports data from the specified DICOM store. If a given resource, such as a DICOM object with the same
    /// SOPInstance UID, already exists in the output, it is overwritten with the version in the source dataset.
    /// Exported DICOM data persists when the DICOM store from which it was exported is deleted.
    /// </summary>
    public class ExportDicomDataRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The BigQuery output destination. You can only export to a BigQuery dataset that's in the same project as the
        /// DICOM store you're exporting from. The Cloud Healthcare Service Agent requires two IAM roles on the BigQuery
        /// location: `roles/bigquery.dataEditor` and `roles/bigquery.jobUser`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigqueryDestination")]
        public virtual GoogleCloudHealthcareV1DicomBigQueryDestination BigqueryDestination { get; set; }

        /// <summary>
        /// The Cloud Storage output destination. The Cloud Healthcare Service Agent requires the
        /// `roles/storage.objectAdmin` Cloud IAM roles on the Cloud Storage location.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsDestination")]
        public virtual GoogleCloudHealthcareV1DicomGcsDestination GcsDestination { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Returns additional information in regards to a completed DICOM store export.</summary>
    public class ExportDicomDataResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request to schedule an export.</summary>
    public class ExportMessagesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _endTimeRaw;

        private object _endTime;

        /// <summary>
        /// The end of the range in `send_time` (MSH.7,
        /// https://www.hl7.org/documentcenter/public_temp_2E58C1F9-1C23-BA17-0C6126475344DA9D/wg/conf/HL7MSH.htm) to
        /// process. If not specified, the time when the export is scheduled is used. This value has to come after the
        /// `start_time` defined below. Only messages whose `send_time` lies in the range `start_time` (inclusive) to
        /// `end_time` (exclusive) are exported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Restricts messages exported to those matching a filter, only applicable to PubsubDestination and
        /// GcsDestination. The following syntax is available: * A string field value can be written as text inside
        /// quotation marks, for example `"query text"`. The only valid relational operation for text fields is equality
        /// (`=`), where text is searched within the field, rather than having the field be equal to the text. For
        /// example, `"Comment = great"` returns messages with `great` in the comment field. * A number field value can
        /// be written as an integer, a decimal, or an exponential. The valid relational operators for number fields are
        /// the equality operator (`=`), along with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`,
        /// `&amp;gt;`, `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
        /// operator to an expression to negate it. * A date field value must be written in the `yyyy-mm-dd` format.
        /// Fields with date and time use the RFC3339 time format. Leading zeros are required for one-digit months and
        /// days. The valid relational operators for date fields are the equality operator (`=`) , along with the less
        /// than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that there is no
        /// inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple
        /// field query expressions can be combined in one query by adding `AND` or `OR` operators between the
        /// expressions. If a boolean operator appears within a quoted string, it is not treated as special, and is just
        /// another part of the character string to be matched. You can prepend the `NOT` operator to an expression to
        /// negate it. The following fields and functions are available for filtering: * `message_type`, from the
        /// MSH-9.1 field. For example, `NOT message_type = "ADT"`. * `send_date` or `sendDate`, the `yyyy-mm-dd` date
        /// the message was sent in the dataset's time_zone, from the MSH-7 segment. For example, `send_date &amp;lt;
        /// "2017-01-02"`. * `send_time`, the timestamp when the message was sent, using the RFC3339 time format for
        /// comparisons, from the MSH-7 segment. For example, `send_time &amp;lt; "2017-01-02T00:00:00-05:00"`. *
        /// `create_time`, the timestamp when the message was created in the HL7v2 store. Use the RFC3339 time format
        /// for comparisons. For example, `create_time &amp;lt; "2017-01-02T00:00:00-05:00"`. * `send_facility`, the
        /// care center that the message came from, from the MSH-4 segment. For example, `send_facility = "ABC"`. Note:
        /// The filter will be applied to every message in the HL7v2 store whose `send_time` lies in the range defined
        /// by the `start_time` and the `end_time`. Even if the filter only matches a small set of messages, the export
        /// operation can still take a long time to finish when a lot of messages are between the specified `start_time`
        /// and `end_time` range.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>Export to a Cloud Storage destination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsDestination")]
        public virtual GcsDestination GcsDestination { get; set; }

        /// <summary>Export messages to a Pub/Sub topic.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pubsubDestination")]
        public virtual PubsubDestination PubsubDestination { get; set; }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>
        /// The start of the range in `send_time` (MSH.7,
        /// https://www.hl7.org/documentcenter/public_temp_2E58C1F9-1C23-BA17-0C6126475344DA9D/wg/conf/HL7MSH.htm) to
        /// process. If not specified, the UNIX epoch (1970-01-01T00:00:00Z) is used. This value has to come before the
        /// `end_time` defined below. Only messages whose `send_time` lies in the range `start_time` (inclusive) to
        /// `end_time` (exclusive) are exported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Final response for the export operation. This structure is included in the response to describe the detailed
    /// outcome.
    /// </summary>
    public class ExportMessagesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request to export resources.</summary>
    public class ExportResourcesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If provided, only resources updated after this time are exported. The time uses the format
        /// YYYY-MM-DDThh:mm:ss.sss+zz:zz. For example, `2015-02-07T13:28:17.239+02:00` or `2017-01-01T00:00:00Z`. The
        /// time must be specified to the second and include a time zone.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("_since")]
        public virtual string Since { get; set; }

        /// <summary>
        /// String of comma-delimited FHIR resource types. If provided, only resources of the specified resource type(s)
        /// are exported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("_type")]
        public virtual string Type { get; set; }

        /// <summary>
        /// The BigQuery output destination. The Cloud Healthcare Service Agent requires two IAM roles on the BigQuery
        /// location: `roles/bigquery.dataEditor` and `roles/bigquery.jobUser`. The output is one BigQuery table per
        /// resource type. Unlike when setting `BigQueryDestination` for `StreamConfig`, `ExportResources` does not
        /// create BigQuery views.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigqueryDestination")]
        public virtual GoogleCloudHealthcareV1FhirBigQueryDestination BigqueryDestination { get; set; }

        /// <summary>
        /// The Cloud Storage output destination. The Healthcare Service Agent account requires the
        /// `roles/storage.objectAdmin` role on the Cloud Storage location. The exported outputs are organized by FHIR
        /// resource types. The server creates one object per resource type. Each object contains newline delimited
        /// JSON, and each line is a FHIR resource.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsDestination")]
        public virtual GoogleCloudHealthcareV1FhirGcsDestination GcsDestination { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response when all resources export successfully. This structure is included in the response to describe the
    /// detailed outcome after the operation finishes successfully.
    /// </summary>
    public class ExportResourcesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression
    /// language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example
    /// (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars"
    /// expression: "document.summary.size() &amp;lt; 100" Example (Equality): title: "Requestor is owner" description:
    /// "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email"
    /// Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly
    /// visible" expression: "document.type != 'private' &amp;amp;&amp;amp; document.type != 'internal'" Example (Data
    /// Manipulation): title: "Notification string" description: "Create a notification string with a timestamp."
    /// expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that
    /// may be referenced within an expression are determined by the service that evaluates it. See the service
    /// documentation for additional information.
    /// </summary>
    public class Expr : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Description of the expression. This is a longer text which describes the expression, e.g. when
        /// hovered over it in a UI.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Textual representation of an expression in Common Expression Language syntax.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expression")]
        public virtual string Expression { get; set; }

        /// <summary>
        /// Optional. String indicating the location of the expression for error reporting, e.g. a file name and a
        /// position in the file.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location { get; set; }

        /// <summary>
        /// Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs
        /// which allow to enter the expression.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A feature of an entity mention.</summary>
    public class Feature : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The model's confidence in this feature annotation. A number between 0 and 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<double> Confidence { get; set; }

        /// <summary>The value of this feature annotation. Its range depends on the type of the feature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies how to handle de-identification of a FHIR store.</summary>
    public class FhirConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The behaviour for handling FHIR extensions that aren't otherwise specified for de-identification.
        /// If true, all extensions are preserved during de-identification by default. If false or unspecified, all
        /// extensions are removed during de-identification by default.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultKeepExtensions")]
        public virtual System.Nullable<bool> DefaultKeepExtensions { get; set; }

        /// <summary>
        /// Optional. Specifies FHIR paths to match and how to transform them. Any field that is not matched by a
        /// FieldMetadata is passed through to the output dataset unmodified. All extensions will be processed according
        /// to `default_keep_extensions`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldMetadataList")]
        public virtual System.Collections.Generic.IList<FieldMetadata> FieldMetadataList { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Filter configuration.</summary>
    public class FhirFilter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// List of resources to include in the output. If this list is empty or not specified, all resources are
        /// included in the output.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual Resources Resources { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains the configuration for FHIR notifications.</summary>
    public class FhirNotificationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The [Pub/Sub](https://cloud.google.com/pubsub/docs/) topic that notifications of changes are
        /// published on. Supplied by the client. The notification is a `PubsubMessage` with the following fields: *
        /// `PubsubMessage.Data` contains the resource name. * `PubsubMessage.MessageId` is the ID of this notification.
        /// It is guaranteed to be unique within the topic. * `PubsubMessage.PublishTime` is the time when the message
        /// was published. Note that notifications are only sent if the topic is non-empty. [Topic
        /// names](https://cloud.google.com/pubsub/docs/overview#names) must be scoped to a project. The Cloud
        /// Healthcare API service account, service-@gcp-sa-healthcare.iam.gserviceaccount.com, must have publisher
        /// permissions on the given Pub/Sub topic. Not having adequate permissions causes the calls that send
        /// notifications to fail
        /// (https://cloud.google.com/healthcare-api/docs/permissions-healthcare-api-gcp-products#dicom_fhir_and_hl7v2_store_cloud_pubsub_permissions).
        /// If a notification can't be published to Pub/Sub, errors are logged to Cloud Logging. For more information,
        /// see [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare-api/docs/how-tos/logging).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pubsubTopic")]
        public virtual string PubsubTopic { get; set; }

        /// <summary>
        /// Optional. Whether to send full FHIR resource to this Pub/Sub topic. The default value is false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendFullResource")]
        public virtual System.Nullable<bool> SendFullResource { get; set; }

        /// <summary>
        /// Optional. Whether to send full FHIR resource to this Pub/Sub topic for deleting FHIR resource. The default
        /// value is false. Note that setting this to true does not guarantee that all previous resources will be sent
        /// in the format of full FHIR resource. When a resource change is too large or during heavy traffic, only the
        /// resource name will be sent. Clients should always check the "payloadType" label from a Pub/Sub message to
        /// determine whether it needs to fetch the full previous resource as a separate operation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendPreviousResourceOnDelete")]
        public virtual System.Nullable<bool> SendPreviousResourceOnDelete { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a FHIR store.</summary>
    public class FhirStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Enable parsing of references within complex FHIR data types such as Extensions. If this value is
        /// set to ENABLED, then features like referential integrity and Bundle reference rewriting apply to all
        /// references. If this flag has not been specified the behavior of the FHIR store will not change, references
        /// in complex data types will not be parsed. New stores will have this value set to ENABLED after a
        /// notification period. Warning: turning on this flag causes processing existing resources to fail if they
        /// contain references to non-existent resources.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("complexDataTypeReferenceParsing")]
        public virtual string ComplexDataTypeReferenceParsing { get; set; }

        /// <summary>
        /// Optional. Specifies whether this store has consent enforcement. Not available for DSTU2 FHIR version due to
        /// absence of Consent resources.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentConfig")]
        public virtual ConsentConfig ConsentConfig { get; set; }

        /// <summary>
        /// Optional. If true, overrides the default search behavior for this FHIR store to `handling=strict` which
        /// returns an error for unrecognized search parameters. If false, uses the FHIR specification default
        /// `handling=lenient` which ignores unrecognized search parameters. The handling can always be changed from the
        /// default on an individual API call by setting the HTTP header `Prefer: handling=strict` or `Prefer:
        /// handling=lenient`. Defaults to false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultSearchHandlingStrict")]
        public virtual System.Nullable<bool> DefaultSearchHandlingStrict { get; set; }

        /// <summary>
        /// Immutable. Whether to disable referential integrity in this FHIR store. This field is immutable after FHIR
        /// store creation. The default value is false, meaning that the API enforces referential integrity and fails
        /// the requests that result in inconsistent state in the FHIR store. When this field is set to true, the API
        /// skips referential integrity checks. Consequently, operations that rely on references, such as
        /// GetPatientEverything, do not return all the results if broken references exist.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableReferentialIntegrity")]
        public virtual System.Nullable<bool> DisableReferentialIntegrity { get; set; }

        /// <summary>
        /// Immutable. Whether to disable resource versioning for this FHIR store. This field can not be changed after
        /// the creation of FHIR store. If set to false, all write operations cause historical versions to be recorded
        /// automatically. The historical versions can be fetched through the history APIs, but cannot be updated. If
        /// set to true, no historical versions are kept. The server sends errors for attempts to read the historical
        /// versions. Defaults to false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableResourceVersioning")]
        public virtual System.Nullable<bool> DisableResourceVersioning { get; set; }

        /// <summary>
        /// Optional. Whether this FHIR store has the [updateCreate
        /// capability](https://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.resource.updateCreate).
        /// This determines if the client can use an Update operation to create a new resource with a client-specified
        /// ID. If false, all IDs are server-assigned through the Create operation and attempts to update a non-existent
        /// resource return errors. It is strongly advised not to include or encode any sensitive data such as patient
        /// identifiers in client-specified resource IDs. Those IDs are part of the FHIR resource path recorded in Cloud
        /// audit logs and Pub/Sub notifications. Those IDs can also be contained in reference fields within other
        /// resources. Defaults to false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableUpdateCreate")]
        public virtual System.Nullable<bool> EnableUpdateCreate { get; set; }

        /// <summary>
        /// User-supplied key-value pairs used to organize FHIR stores. Label keys must be between 1 and 63 characters
        /// long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8
        /// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// Output only. Identifier. Resource name of the FHIR store, of the form
        /// `projects/{project_id}/locations/{location}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Deprecated. Use `notification_configs` instead. If non-empty, publish all resource modifications of this
        /// FHIR store to this destination. The Pub/Sub message attributes contain a map with a string describing the
        /// action that has triggered the notification. For example, "action":"CreateResource".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notificationConfig")]
        public virtual NotificationConfig NotificationConfig { get; set; }

        /// <summary>Optional. Specifies where and whether to send notifications upon changes to a FHIR store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notificationConfigs")]
        public virtual System.Collections.Generic.IList<FhirNotificationConfig> NotificationConfigs { get; set; }

        /// <summary>
        /// Optional. A list of streaming configs that configure the destinations of streaming export for every resource
        /// mutation in this FHIR store. Each store is allowed to have up to 10 streaming configs. After a new config is
        /// added, the next resource mutation is streamed to the new location in addition to the existing ones. When a
        /// location is removed from the list, the server stops streaming to that location. Before adding a new config,
        /// you must add the required
        /// [`bigquery.dataEditor`](https://cloud.google.com/bigquery/docs/access-control#bigquery.dataEditor) role to
        /// your project's **Cloud Healthcare Service Agent** [service
        /// account](https://cloud.google.com/iam/docs/service-accounts). Some lag (typically on the order of dozens of
        /// seconds) is expected before the results show up in the streaming destination.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("streamConfigs")]
        public virtual System.Collections.Generic.IList<StreamConfig> StreamConfigs { get; set; }

        /// <summary>
        /// Optional. Configuration for how to validate incoming FHIR resources against configured profiles.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validationConfig")]
        public virtual ValidationConfig ValidationConfig { get; set; }

        /// <summary>
        /// Required. Immutable. The FHIR specification version that this FHIR store supports natively. This field is
        /// immutable after store creation. Requests are rejected if they contain FHIR resources of a different version.
        /// Version is required for every FHIR store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Count of resources and total storage size by type for a given FHIR store.</summary>
    public class FhirStoreMetric : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The total count of FHIR resources in the store of this resource type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<long> Count { get; set; }

        /// <summary>The FHIR resource type this metric applies to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceType")]
        public virtual string ResourceType { get; set; }

        /// <summary>
        /// The total amount of structured storage used by FHIR resources of this resource type in the store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredStorageSizeBytes")]
        public virtual System.Nullable<long> StructuredStorageSizeBytes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>List of metrics for a given FHIR store.</summary>
    public class FhirStoreMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of FhirStoreMetric by resource type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<FhirStoreMetric> Metrics { get; set; }

        /// <summary>
        /// The resource name of the FHIR store to get metrics for, in the format
        /// `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A (sub) field of a type.</summary>
    public class Field : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The maximum number of times this field can be repeated. 0 or -1 means unbounded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxOccurs")]
        public virtual System.Nullable<int> MaxOccurs { get; set; }

        /// <summary>The minimum number of times this field must be present/repeated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minOccurs")]
        public virtual System.Nullable<int> MinOccurs { get; set; }

        /// <summary>The name of the field. For example, "PID-1" or just "1".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The HL7v2 table this field refers to. For example, PID-15 (Patient's Primary Language) usually refers to
        /// table "0296".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("table")]
        public virtual string Table { get; set; }

        /// <summary>The type of this field. A Type with this name must be defined in an Hl7TypesConfig.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies FHIR paths to match, and how to handle de-identification of matching fields.</summary>
    public class FieldMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Deidentify action for one field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>
        /// Optional. List of paths to FHIR fields to be redacted. Each path is a period-separated list where each
        /// component is either a field name or FHIR type name, for example: Patient, HumanName. For "choice" types
        /// (those defined in the FHIR spec with the form: field[x]) we use two separate components. For example,
        /// "deceasedAge.unit" is matched by "Deceased.Age.unit". Supported types are: AdministrativeGenderCode,
        /// Base64Binary, Boolean, Code, Date, DateTime, Decimal, HumanName, Id, Instant, Integer, LanguageCode,
        /// Markdown, Oid, PositiveInt, String, UnsignedInt, Uri, Uuid, Xhtml.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paths")]
        public virtual System.Collections.Generic.IList<string> Paths { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The Cloud Storage output destination. The Cloud Healthcare Service Agent requires the
    /// `roles/storage.objectAdmin` Cloud IAM roles on the Cloud Storage location.
    /// </summary>
    public class GcsDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The format of the exported HL7v2 message files.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentStructure")]
        public virtual string ContentStructure { get; set; }

        /// <summary>
        /// Specifies the parts of the Message resource to include in the export. If not specified, FULL is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageView")]
        public virtual string MessageView { get; set; }

        /// <summary>
        /// URI of an existing Cloud Storage directory where the server writes result files, in the format
        /// `gs://{bucket-id}/{path/to/destination/dir}`. If there is no trailing slash, the service appends one when
        /// composing the object path.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uriPrefix")]
        public virtual string UriPrefix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies the configuration for importing data from Cloud Storage.</summary>
    public class GcsSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Points to a Cloud Storage URI containing file(s) to import. The URI must be in the following format:
        /// `gs://{bucket_id}/{object_id}`. The URI can include wildcards in `object_id` and thus identify multiple
        /// files. Supported wildcards: * `*` to match 0 or more non-separator characters * `**` to match 0 or more
        /// characters (including separators). Must be used at the end of a path and with no other wildcards in the
        /// path. Can also be used with a file extension (such as .ndjson), which imports all files with the extension
        /// in the specified directory and its sub-directories. For example, `gs://my-bucket/my-directory/**.ndjson`
        /// imports all files with `.ndjson` extensions in `my-directory/` and its sub-directories. * `?` to match 1
        /// character Files matching the wildcard are expected to contain content only, no metadata.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The Cloud Storage location for export.</summary>
    public class GoogleCloudHealthcareV1ConsentGcsDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// URI for a Cloud Storage directory where the server writes result files, in the format
        /// `gs://{bucket-id}/{path/to/destination/dir}`. If there is no trailing slash, the service appends one when
        /// composing the object path. The user is responsible for creating the Cloud Storage bucket and directory
        /// referenced in `uri_prefix`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uriPrefix")]
        public virtual string UriPrefix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a user's consent in terms of the resources that can be accessed and under what conditions.
    /// </summary>
    public class GoogleCloudHealthcareV1ConsentPolicy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The request conditions to meet to grant access. In addition to any supported comparison operators,
        /// authorization rules may have `IN` operator as well as at most 10 logical operators that are limited to `AND`
        /// (`&amp;amp;&amp;amp;`), `OR` (`||`).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authorizationRule")]
        public virtual Expr AuthorizationRule { get; set; }

        /// <summary>
        /// The resources that this policy applies to. A resource is a match if it matches all the attributes listed
        /// here. If empty, this policy applies to all User data mappings for the given user.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceAttributes")]
        public virtual System.Collections.Generic.IList<Attribute> ResourceAttributes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains a summary of the DeidentifyDicomStore operation.</summary>
    public class GoogleCloudHealthcareV1DeidentifyDeidentifyDicomStoreSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains a summary of the DeidentifyFhirStore operation.</summary>
    public class GoogleCloudHealthcareV1DeidentifyDeidentifyFhirStoreSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The BigQuery table where the server writes the output.</summary>
    public class GoogleCloudHealthcareV1DicomBigQueryDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Use `write_disposition` instead. If `write_disposition` is specified, this parameter is ignored.
        /// force=false is equivalent to write_disposition=WRITE_EMPTY and force=true is equivalent to
        /// write_disposition=WRITE_TRUNCATE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("force")]
        public virtual System.Nullable<bool> Force { get; set; }

        /// <summary>
        /// Optional. BigQuery URI to a table, up to 2000 characters long, in the format
        /// `bq://projectId.bqDatasetId.tableId`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableUri")]
        public virtual string TableUri { get; set; }

        /// <summary>
        /// Optional. Determines whether the existing table in the destination is to be overwritten or appended to. If a
        /// write_disposition is specified, the `force` parameter is ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writeDisposition")]
        public virtual string WriteDisposition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The Cloud Storage location where the server writes the output and the export configuration.</summary>
    public class GoogleCloudHealthcareV1DicomGcsDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// MIME types supported by DICOM spec. Each file is written in the following format:
        /// `.../{study_id}/{series_id}/{instance_id}[/{frame_number}].{extension}` The frame_number component exists
        /// only for multi-frame instances. Supported MIME types are consistent with supported formats in DICOMweb:
        /// https://cloud.google.com/healthcare/docs/dicom#retrieve_transaction. Specifically, the following are
        /// supported: - application/dicom; transfer-syntax=1.2.840.10008.1.2.1 (uncompressed DICOM) -
        /// application/dicom; transfer-syntax=1.2.840.10008.1.2.4.50 (DICOM with embedded JPEG Baseline) -
        /// application/dicom; transfer-syntax=1.2.840.10008.1.2.4.90 (DICOM with embedded JPEG 2000 Lossless Only) -
        /// application/dicom; transfer-syntax=1.2.840.10008.1.2.4.91 (DICOM with embedded JPEG 2000) -
        /// application/dicom; transfer-syntax=* (DICOM with no transcoding) - application/octet-stream;
        /// transfer-syntax=1.2.840.10008.1.2.1 (raw uncompressed PixelData) - application/octet-stream;
        /// transfer-syntax=* (raw PixelData in whatever format it was uploaded in) - image/jpeg;
        /// transfer-syntax=1.2.840.10008.1.2.4.50 (Consumer JPEG) - image/png The following extensions are used for
        /// output files: - application/dicom -&amp;gt; .dcm - image/jpeg -&amp;gt; .jpg - image/png -&amp;gt; .png -
        /// application/octet-stream -&amp;gt; no extension If unspecified, the instances are exported in the original
        /// DICOM format they were uploaded in.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; }

        /// <summary>
        /// The Cloud Storage destination to export to. URI for a Cloud Storage directory where the server writes the
        /// result files, in the format `gs://{bucket-id}/{path/to/destination/dir}`). If there is no trailing slash,
        /// the service appends one when composing the object path. The user is responsible for creating the Cloud
        /// Storage bucket referenced in `uri_prefix`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uriPrefix")]
        public virtual string UriPrefix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies the configuration for importing data from Cloud Storage.</summary>
    public class GoogleCloudHealthcareV1DicomGcsSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Points to a Cloud Storage URI containing file(s) with content only. The URI must be in the following format:
        /// `gs://{bucket_id}/{object_id}`. The URI can include wildcards in `object_id` and thus identify multiple
        /// files. Supported wildcards: * '*' to match 0 or more non-separator characters * '**' to match 0 or more
        /// characters (including separators). Must be used at the end of a path and with no other wildcards in the
        /// path. Can also be used with a file extension (such as .dcm), which imports all files with the extension in
        /// the specified directory and its sub-directories. For example, `gs://my-bucket/my-directory/**.dcm` imports
        /// all files with .dcm extensions in `my-directory/` and its sub-directories. * '?' to match 1 character. All
        /// other URI formats are invalid. Files matching the wildcard are expected to contain content only, no
        /// metadata.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>StreamConfig specifies configuration for a streaming DICOM export.</summary>
    public class GoogleCloudHealthcareV1DicomStreamConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Results are appended to this table. The server creates a new table in the given BigQuery dataset if the
        /// specified table does not exist. To enable the Cloud Healthcare API to write to your BigQuery table, you must
        /// give the Cloud Healthcare API service account the bigquery.dataEditor role. The service account is:
        /// `service-{PROJECT_NUMBER}@gcp-sa-healthcare.iam.gserviceaccount.com`. The PROJECT_NUMBER identifies the
        /// project that the DICOM store resides in. To get the project number, go to the Cloud Console Dashboard. It is
        /// recommended to not have a custom schema in the destination table which could conflict with the schema
        /// created by the Cloud Healthcare API. Instance deletions are not applied to the destination table. The
        /// destination's table schema will be automatically updated in case a new instance's data is incompatible with
        /// the current schema. The schema should not be updated manually as this can cause incompatibilies that cannot
        /// be resolved automatically. One resolution in this case is to delete the incompatible table and let the
        /// server recreate one, though the newly created table only contains data after the table recreation. BigQuery
        /// imposes a 1 MB limit on streaming insert row size, therefore any instance that generates more than 1 MB of
        /// BigQuery data will not be streamed. If an instance cannot be streamed to BigQuery, errors will be logged to
        /// Cloud Logging (see [Viewing error logs in Cloud
        /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigqueryDestination")]
        public virtual GoogleCloudHealthcareV1DicomBigQueryDestination BigqueryDestination { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The configuration for exporting to BigQuery.</summary>
    public class GoogleCloudHealthcareV1FhirBigQueryDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. BigQuery URI to an existing dataset, up to 2000 characters long, in the format
        /// `bq://projectId.bqDatasetId`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasetUri")]
        public virtual string DatasetUri { get; set; }

        /// <summary>
        /// Optional. The default value is false. If this flag is `TRUE`, all tables are deleted from the dataset before
        /// the new exported tables are written. If the flag is not set and the destination dataset contains tables, the
        /// export call returns an error. If `write_disposition` is specified, this parameter is ignored. force=false is
        /// equivalent to write_disposition=WRITE_EMPTY and force=true is equivalent to
        /// write_disposition=WRITE_TRUNCATE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("force")]
        public virtual System.Nullable<bool> Force { get; set; }

        /// <summary>Optional. The configuration for the exported BigQuery schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schemaConfig")]
        public virtual SchemaConfig SchemaConfig { get; set; }

        /// <summary>
        /// Optional. Determines if existing data in the destination dataset is overwritten, appended to, or not written
        /// if the tables contain data. If a write_disposition is specified, the `force` parameter is ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writeDisposition")]
        public virtual string WriteDisposition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The configuration for exporting to Cloud Storage.</summary>
    public class GoogleCloudHealthcareV1FhirGcsDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// URI for a Cloud Storage directory where result files should be written, in the format of
        /// `gs://{bucket-id}/{path/to/destination/dir}`. If there is no trailing slash, the service appends one when
        /// composing the object path. The user is responsible for creating the Cloud Storage bucket referenced in
        /// `uri_prefix`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uriPrefix")]
        public virtual string UriPrefix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies the configuration for importing data from Cloud Storage.</summary>
    public class GoogleCloudHealthcareV1FhirGcsSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Points to a Cloud Storage URI containing file(s) to import. The URI must be in the following format:
        /// `gs://{bucket_id}/{object_id}`. The URI can include wildcards in `object_id` and thus identify multiple
        /// files. Supported wildcards: * `*` to match 0 or more non-separator characters * `**` to match 0 or more
        /// characters (including separators). Must be used at the end of a path and with no other wildcards in the
        /// path. Can also be used with a file extension (such as .ndjson), which imports all files with the extension
        /// in the specified directory and its sub-directories. For example, `gs://my-bucket/my-directory/**.ndjson`
        /// imports all files with `.ndjson` extensions in `my-directory/` and its sub-directories. * `?` to match 1
        /// character Files matching the wildcard are expected to contain content only, no metadata.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Construct representing a logical group or a segment.</summary>
    public class GroupOrSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("group")]
        public virtual SchemaGroup Group { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("segment")]
        public virtual SchemaSegment Segment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Root config message for HL7v2 schema. This contains a schema structure of groups and segments, and filters that
    /// determine which messages to apply the schema structure to.
    /// </summary>
    public class Hl7SchemaConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Map from each HL7v2 message type and trigger event pair, such as ADT_A04, to its schema configuration root
        /// group.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageSchemaConfigs")]
        public virtual System.Collections.Generic.IDictionary<string, SchemaGroup> MessageSchemaConfigs { get; set; }

        /// <summary>
        /// Each VersionSource is tested and only if they all match is the schema used for the message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Collections.Generic.IList<VersionSource> Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Root config for HL7v2 datatype definitions for a specific HL7v2 version.</summary>
    public class Hl7TypesConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The HL7v2 type definitions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual System.Collections.Generic.IList<Type> Type { get; set; }

        /// <summary>
        /// The version selectors that this config applies to. A message must match ALL version sources to apply.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Collections.Generic.IList<VersionSource> Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies where and whether to send notifications upon changes to a data store.</summary>
    public class Hl7V2NotificationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Restricts notifications sent for messages matching a filter. If this is empty, all messages are
        /// matched. The following syntax is available: * A string field value can be written as text inside quotation
        /// marks, for example `"query text"`. The only valid relational operation for text fields is equality (`=`),
        /// where text is searched within the field, rather than having the field be equal to the text. For example,
        /// `"Comment = great"` returns messages with `great` in the comment field. * A number field value can be
        /// written as an integer, a decimal, or an exponential. The valid relational operators for number fields are
        /// the equality operator (`=`), along with the less than/greater than operators (`&amp;lt;`, `&amp;lt;=`,
        /// `&amp;gt;`, `&amp;gt;=`). Note that there is no inequality (`!=`) operator. You can prepend the `NOT`
        /// operator to an expression to negate it. * A date field value must be written in `yyyy-mm-dd` form. Fields
        /// with date and time use the RFC3339 time format. Leading zeros are required for one-digit months and days.
        /// The valid relational operators for date fields are the equality operator (`=`) , along with the less
        /// than/greater than operators (`&amp;lt;`, `&amp;lt;=`, `&amp;gt;`, `&amp;gt;=`). Note that there is no
        /// inequality (`!=`) operator. You can prepend the `NOT` operator to an expression to negate it. * Multiple
        /// field query expressions can be combined in one query by adding `AND` or `OR` operators between the
        /// expressions. If a boolean operator appears within a quoted string, it is not treated as special, it's just
        /// another part of the character string to be matched. You can prepend the `NOT` operator to an expression to
        /// negate it. The following fields and functions are available for filtering: * `message_type`, from the
        /// MSH-9.1 field. For example, `NOT message_type = "ADT"`. * `send_date` or `sendDate`, the YYYY-MM-DD date the
        /// message was sent in the dataset's time_zone, from the MSH-7 segment. For example, `send_date &amp;lt;
        /// "2017-01-02"`. * `send_time`, the timestamp when the message was sent, using the RFC3339 time format for
        /// comparisons, from the MSH-7 segment. For example, `send_time &amp;lt; "2017-01-02T00:00:00-05:00"`. *
        /// `create_time`, the timestamp when the message was created in the HL7v2 store. Use the RFC3339 time format
        /// for comparisons. For example, `create_time &amp;lt; "2017-01-02T00:00:00-05:00"`. * `send_facility`, the
        /// care center that the message came from, from the MSH-4 segment. For example, `send_facility = "ABC"`. *
        /// `PatientId(value, type)`, which matches if the message lists a patient having an ID of the given value and
        /// type in the PID-2, PID-3, or PID-4 segments. For example, `PatientId("123456", "MRN")`. * `labels.x`, a
        /// string value of the label with key `x` as set using the Message.labels map. For example,
        /// `labels."priority"="high"`. The operator `:*` can be used to assert the existence of a label. For example,
        /// `labels."priority":*`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// The [Pub/Sub](https://cloud.google.com/pubsub/docs/) topic that notifications of changes are published on.
        /// Supplied by the client. The notification is a `PubsubMessage` with the following fields: *
        /// `PubsubMessage.Data` contains the resource name. * `PubsubMessage.MessageId` is the ID of this notification.
        /// It's guaranteed to be unique within the topic. * `PubsubMessage.PublishTime` is the time when the message
        /// was published. Note that notifications are only sent if the topic is non-empty. [Topic
        /// names](https://cloud.google.com/pubsub/docs/overview#names) must be scoped to a project. The Cloud
        /// Healthcare API service account, service-PROJECT_NUMBER@gcp-sa-healthcare.iam.gserviceaccount.com, must have
        /// publisher permissions on the given Pub/Sub topic. Not having adequate permissions causes the calls that send
        /// notifications to fail. If a notification cannot be published to Pub/Sub, errors are logged to Cloud Logging.
        /// For more information, see [Viewing error logs in Cloud
        /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pubsubTopic")]
        public virtual string PubsubTopic { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an HL7v2 store.</summary>
    public class Hl7V2Store : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters
        /// long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8
        /// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// Identifier. Resource name of the HL7v2 store, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. A list of notification configs. Each configuration uses a filter to determine whether to publish a
        /// message (both Ingest &amp;amp; Create) on the corresponding notification destination. Only the message name
        /// is sent as part of the notification. Supplied by the client.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notificationConfigs")]
        public virtual System.Collections.Generic.IList<Hl7V2NotificationConfig> NotificationConfigs { get; set; }

        /// <summary>
        /// Optional. The configuration for the parser. It determines how the server parses the messages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parserConfig")]
        public virtual ParserConfig ParserConfig { get; set; }

        /// <summary>
        /// Optional. Determines whether to reject duplicate messages. A duplicate message is a message with the same
        /// raw bytes as a message that has already been ingested/created in this HL7v2 store. The default value is
        /// false, meaning that the store accepts the duplicate messages and it also returns the same ACK message in the
        /// IngestMessageResponse as has been returned previously. Note that only one resource is created in the store.
        /// When this field is set to true, CreateMessage/IngestMessage requests with a duplicate message will be
        /// rejected by the store, and IngestMessageErrorDetail returns a NACK message upon rejection.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rejectDuplicateMessage")]
        public virtual System.Nullable<bool> RejectDuplicateMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Count of messages and total storage size by type for a given HL7 store.</summary>
    public class Hl7V2StoreMetric : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The total count of HL7v2 messages in the store for the given message type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<long> Count { get; set; }

        /// <summary>The Hl7v2 message type this metric applies to, such as `ADT` or `ORU`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageType")]
        public virtual string MessageType { get; set; }

        /// <summary>
        /// The total amount of structured storage used by HL7v2 messages of this message type in the store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredStorageSizeBytes")]
        public virtual System.Nullable<long> StructuredStorageSizeBytes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>List of metrics for a given HL7v2 store.</summary>
    public class Hl7V2StoreMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of HL7v2 store metrics by message type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Hl7V2StoreMetric> Metrics { get; set; }

        /// <summary>
        /// The resource name of the HL7v2 store to get metrics for, in the format
        /// `projects/{project_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be
    /// represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and
    /// non-streaming API methods in the request as well as the response. It can be used as a top-level request field,
    /// which is convenient if one wants to extract parameters from either the URL or HTTP template into the request
    /// fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id.
    /// string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service
    /// ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
    /// UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service
    /// CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc
    /// UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes
    /// how the request and response bodies are handled, all other features will continue to work unchanged.
    /// </summary>
    public class HttpBody : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The HTTP Content-Type header value specifying the content type of the body.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType { get; set; }

        /// <summary>The HTTP request/response body as raw binary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("data")]
        public virtual string Data { get; set; }

        /// <summary>
        /// Application specific response metadata. Must be set in the first response for streaming APIs.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extensions")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, object>> Extensions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Raw bytes representing consent artifact content.</summary>
    public class Image : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Input only. Points to a Cloud Storage URI containing the consent artifact content. The URI must be in the
        /// following format: `gs://{bucket_id}/{object_id}`. The Cloud Healthcare API service account must have the
        /// `roles/storage.objectViewer` Cloud IAM role for this Cloud Storage location. The consent artifact content at
        /// this URI is copied to a Cloud Storage location managed by the Cloud Healthcare API. Responses to fetching
        /// requests return the consent artifact content in raw_bytes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsUri")]
        public virtual string GcsUri { get; set; }

        /// <summary>
        /// Consent artifact content represented as a stream of bytes. This field is populated when returned in
        /// GetConsentArtifact response, but not included in CreateConsentArtifact and ListConsentArtifact response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawBytes")]
        public virtual string RawBytes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies how to handle de-identification of image pixels.</summary>
    public class ImageConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Determines how to redact text from image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textRedactionMode")]
        public virtual string TextRedactionMode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Imports data into the specified DICOM store. Returns an error if any of the files to import are not DICOM files.
    /// This API accepts duplicate DICOM instances by ignoring the newly-pushed instance. It does not overwrite.
    /// </summary>
    public class ImportDicomDataRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The blob storage settings for the data imported by this operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobStorageSettings")]
        public virtual BlobStorageSettings BlobStorageSettings { get; set; }

        /// <summary>
        /// Cloud Storage source data location and import configuration. The Cloud Healthcare Service Agent requires the
        /// `roles/storage.objectViewer` Cloud IAM roles on the Cloud Storage location.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudHealthcareV1DicomGcsSource GcsSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Returns additional information in regards to a completed DICOM store import.</summary>
    public class ImportDicomDataResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request to import messages.</summary>
    public class ImportMessagesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Cloud Storage source data location and import configuration. The Cloud Healthcare Service Agent requires the
        /// `roles/storage.objectViewer` Cloud IAM roles on the Cloud Storage location.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GcsSource GcsSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Final response of importing messages. This structure is included in the response to describe the detailed
    /// outcome. It is only included when the operation finishes successfully.
    /// </summary>
    public class ImportMessagesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request to import resources.</summary>
    public class ImportResourcesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The content structure in the source location. If not specified, the server treats the input source files as
        /// BUNDLE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentStructure")]
        public virtual string ContentStructure { get; set; }

        /// <summary>
        /// Cloud Storage source data location and import configuration. The Healthcare Service Agent account requires
        /// the `roles/storage.objectAdmin` role on the Cloud Storage location. Each Cloud Storage object should be a
        /// text file that contains the format specified in ContentStructure.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudHealthcareV1FhirGcsSource GcsSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Final response of importing resources. This structure is included in the response to describe the detailed
    /// outcome after the operation finishes successfully.
    /// </summary>
    public class ImportResourcesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A transformation to apply to text that is identified as a specific info_type.</summary>
    public class InfoTypeTransformation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Config for character mask.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("characterMaskConfig")]
        public virtual CharacterMaskConfig CharacterMaskConfig { get; set; }

        /// <summary>Config for crypto hash.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cryptoHashConfig")]
        public virtual CryptoHashConfig CryptoHashConfig { get; set; }

        /// <summary>Config for date shift.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateShiftConfig")]
        public virtual DateShiftConfig DateShiftConfig { get; set; }

        /// <summary>
        /// Optional. InfoTypes to apply this transformation to. If this is not specified, the transformation applies to
        /// any info_type.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoTypes")]
        public virtual System.Collections.Generic.IList<string> InfoTypes { get; set; }

        /// <summary>Config for text redaction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redactConfig")]
        public virtual RedactConfig RedactConfig { get; set; }

        /// <summary>Config for replace with InfoType.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replaceWithInfoTypeConfig")]
        public virtual ReplaceWithInfoTypeConfig ReplaceWithInfoTypeConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Ingests a message into the specified HL7v2 store.</summary>
    public class IngestMessageRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. HL7v2 message to ingest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual Message Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Acknowledges that a message has been ingested into the specified HL7v2 store.</summary>
    public class IngestMessageResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>HL7v2 ACK message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hl7Ack")]
        public virtual string Hl7Ack { get; set; }

        /// <summary>Created message resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual Message Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key.
    /// The key must grant the Cloud IAM permission `cloudkms.cryptoKeyVersions.useToDecrypt` to the project's Cloud
    /// Healthcare Service Agent service account. For more information, see [Creating a wrapped key]
    /// (https://cloud.google.com/dlp/docs/create-wrapped-key).
    /// </summary>
    public class KmsWrappedCryptoKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The resource name of the KMS CryptoKey to use for unwrapping. For example,
        /// `projects/{project_id}/locations/{location_id}/keyRings/{keyring}/cryptoKeys/{key}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cryptoKey")]
        public virtual string CryptoKey { get; set; }

        /// <summary>Required. The wrapped data crypto key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("wrappedKey")]
        public virtual string WrappedKey { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// EntityMentions can be linked to multiple entities using a LinkedEntity message lets us add other fields, e.g.
    /// confidence.
    /// </summary>
    public class LinkedEntity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// entity_id is a concept unique identifier. These are prefixed by a string that identifies the entity coding
        /// system, followed by the unique identifier within that system. For example, "UMLS/C0000970". This also
        /// supports ad hoc entities, which are formed by normalizing entity mention content.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityId")]
        public virtual string EntityId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class ListAttributeDefinitionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned Attribute definitions. The maximum number of attributes returned is determined by the value of
        /// page_size in the ListAttributeDefinitionsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeDefinitions")]
        public virtual System.Collections.Generic.IList<AttributeDefinition> AttributeDefinitions { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class ListConsentArtifactsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned Consent artifacts. The maximum number of artifacts returned is determined by the value of
        /// page_size in the ListConsentArtifactsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentArtifacts")]
        public virtual System.Collections.Generic.IList<ConsentArtifact> ConsentArtifacts { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class ListConsentRevisionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned Consent revisions. The maximum number of revisions returned is determined by the value of
        /// `page_size` in the ListConsentRevisionsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consents")]
        public virtual System.Collections.Generic.IList<Consent> Consents { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class ListConsentStoresResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned consent stores. The maximum number of stores returned is determined by the value of page_size
        /// in the ListConsentStoresRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentStores")]
        public virtual System.Collections.Generic.IList<ConsentStore> ConsentStores { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class ListConsentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned Consents. The maximum number of Consents returned is determined by the value of page_size in
        /// the ListConsentsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consents")]
        public virtual System.Collections.Generic.IList<Consent> Consents { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Lists the available datasets.</summary>
    public class ListDatasetsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The first page of datasets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasets")]
        public virtual System.Collections.Generic.IList<Dataset> Datasets { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Lists the DICOM stores in the given dataset.</summary>
    public class ListDicomStoresResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned DICOM stores. Won't be more DICOM stores than the value of page_size in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dicomStores")]
        public virtual System.Collections.Generic.IList<DicomStore> DicomStores { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Lists the FHIR stores in the given dataset.</summary>
    public class ListFhirStoresResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned FHIR stores. Won't be more FHIR stores than the value of page_size in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fhirStores")]
        public virtual System.Collections.Generic.IList<FhirStore> FhirStores { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Lists the HL7v2 stores in the given dataset.</summary>
    public class ListHl7V2StoresResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned HL7v2 stores. Won't be more HL7v2 stores than the value of page_size in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hl7V2Stores")]
        public virtual System.Collections.Generic.IList<Hl7V2Store> Hl7V2Stores { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Locations.ListLocations.</summary>
    public class ListLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of locations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<Location> Locations { get; set; }

        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Lists the messages in the specified HL7v2 store.</summary>
    public class ListMessagesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The returned Messages. Won't be more Messages than the value of page_size in the request. See view for
        /// populated fields.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hl7V2Messages")]
        public virtual System.Collections.Generic.IList<Message> Hl7V2Messages { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Operations.ListOperations.</summary>
    public class ListOperationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>A list of operations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operations")]
        public virtual System.Collections.Generic.IList<Operation> Operations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class ListUserDataMappingsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>
        /// The returned User data mappings. The maximum number of User data mappings returned is determined by the
        /// value of page_size in the ListUserDataMappingsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDataMappings")]
        public virtual System.Collections.Generic.IList<UserDataMapping> UserDataMappings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A resource that represents a Google Cloud location.</summary>
    public class Location : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The friendly name for this location, typically a nearby city name. For example, "Tokyo".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>The canonical id for this location. For example: `"us-east1"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; }

        /// <summary>Service-specific metadata. For example the available capacity at the given location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>
        /// Resource name for the location, which may vary between implementations. For example:
        /// `"projects/example-project/locations/us-east1"`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A complete HL7v2 message. See [Introduction to HL7 Standards]
    /// (https://www.hl7.org/implement/standards/index.cfm?ref=common) for details on the standard.
    /// </summary>
    public class Message : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The datetime when the message was created. Set by the server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Required. Raw message bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("data")]
        public virtual string Data { get; set; }

        /// <summary>
        /// User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters
        /// long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// \p{Ll}\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8
        /// encoding of maximum 128 bytes, and must conform to the following PCRE regular expression:
        /// [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>Output only. The message type for this message. MSH-9.1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageType")]
        public virtual string MessageType { get; set; }

        /// <summary>
        /// Output only. Resource name of the Message, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Output only. The parsed version of the raw message data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parsedData")]
        public virtual ParsedData ParsedData { get; set; }

        /// <summary>
        /// Output only. All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("patientIds")]
        public virtual System.Collections.Generic.IList<PatientId> PatientIds { get; set; }

        /// <summary>
        /// Output only. The parsed version of the raw message data schematized according to this store's schemas and
        /// type definitions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schematizedData")]
        public virtual SchematizedData SchematizedData { get; set; }

        /// <summary>Output only. The hospital that this message came from. MSH-4.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendFacility")]
        public virtual string SendFacility { get; set; }

        private string _sendTimeRaw;

        private object _sendTime;

        /// <summary>Output only. The datetime the sending application sent this message. MSH-7.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendTime")]
        public virtual string SendTimeRaw
        {
            get => _sendTimeRaw;
            set
            {
                _sendTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _sendTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="SendTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use SendTimeDateTimeOffset instead.")]
        public virtual object SendTime
        {
            get => _sendTime;
            set
            {
                _sendTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _sendTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="SendTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? SendTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(SendTimeRaw);
            set => SendTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies where to send notifications upon changes to a data store.</summary>
    public class NotificationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The [Pub/Sub](https://cloud.google.com/pubsub/docs/) topic that notifications of changes are published on.
        /// Supplied by the client. PubsubMessage.Data contains the resource name. PubsubMessage.MessageId is the ID of
        /// this message. It is guaranteed to be unique within the topic. PubsubMessage.PublishTime is the time at which
        /// the message was published. Notifications are only sent if the topic is non-empty. [Topic
        /// names](https://cloud.google.com/pubsub/docs/overview#names) must be scoped to a project. Cloud Healthcare
        /// API service account must have publisher permissions on the given Pub/Sub topic. Not having adequate
        /// permissions causes the calls that send notifications to fail. If a notification can't be published to
        /// Pub/Sub, errors are logged to Cloud Logging (see [Viewing error logs in Cloud
        /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)). If the number of errors exceeds a
        /// certain rate, some aren't submitted. Note that not all operations trigger notifications, see [Configuring
        /// Pub/Sub notifications](https://cloud.google.com/healthcare/docs/how-tos/pubsub) for specific details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pubsubTopic")]
        public virtual string PubsubTopic { get; set; }

        /// <summary>
        /// Indicates whether or not to send Pub/Sub notifications on bulk import. Only supported for DICOM imports.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendForBulkImport")]
        public virtual System.Nullable<bool> SendForBulkImport { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class Operation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed,
        /// and either `error` or `response` is available.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; }

        /// <summary>The error result of the operation in case of failure or cancellation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Status Error { get; set; }

        /// <summary>
        /// Service-specific metadata associated with the operation. It typically contains progress information and
        /// common metadata such as create time. Some services might not provide such metadata. Any method that returns
        /// a long-running operation should document the metadata type, if any.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>
        /// The server-assigned name, which is only unique within the same service that originally returns it. If you
        /// use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The normal, successful response of the operation. If the original method returns no data on success, such as
        /// `Delete`, the response is `google.protobuf.Empty`. If the original method is standard
        /// `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have
        /// the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is
        /// `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string, object> Response { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// OperationMetadata provides information about the operation execution. Returned in the long-running operation's
    /// metadata field.
    /// </summary>
    public class OperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the API method that initiated the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apiMethodName")]
        public virtual string ApiMethodName { get; set; }

        /// <summary>Specifies if cancellation was requested for the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cancelRequested")]
        public virtual System.Nullable<bool> CancelRequested { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("counter")]
        public virtual ProgressCounter Counter { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>The time at which the operation was created by the API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _endTimeRaw;

        private object _endTime;

        /// <summary>The time at which execution was completed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// A link to audit and error logs in the log viewer. Error logs are generated only by some operations, listed
        /// at [Viewing error logs in Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("logsUrl")]
        public virtual string LogsUrl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The content of a HL7v2 message in a structured format.</summary>
    public class ParsedData : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("segments")]
        public virtual System.Collections.Generic.IList<Segment> Segments { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The configuration for the parser. It determines how the server parses the messages.</summary>
    public class ParserConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Determines whether messages with no header are allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowNullHeader")]
        public virtual System.Nullable<bool> AllowNullHeader { get; set; }

        /// <summary>
        /// Optional. Schemas used to parse messages in this store, if schematized parsing is desired.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schema")]
        public virtual SchemaPackage Schema { get; set; }

        /// <summary>
        /// Optional. Byte(s) to use as the segment terminator. If this is unset, '\r' is used as segment terminator,
        /// matching the HL7 version 2 specification.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segmentTerminator")]
        public virtual string SegmentTerminator { get; set; }

        /// <summary>
        /// Immutable. Determines the version of both the default parser to be used when `schema` is not given, as well
        /// as the schematized parser used when `schema` is specified. This field is immutable after HL7v2 store
        /// creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A patient identifier and associated type.</summary>
    public class PatientId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID type. For example, MRN or NHS.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The patient's unique identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Apply consents given by a list of patients.</summary>
    public class PatientScope : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The list of patient IDs whose Consent resources will be enforced. At most 10,000 patients can be
        /// specified. An empty list is equivalent to all patients (meaning the entire FHIR store).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("patientIds")]
        public virtual System.Collections.Generic.IList<string> PatientIds { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A
    /// `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single
    /// `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A
    /// `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role.
    /// For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical
    /// expression that allows access to a resource only if the expression evaluates to `true`. A condition can add
    /// constraints based on attributes of the request, the resource, or both. To learn which resources support
    /// conditions in their IAM policies, see the [IAM
    /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:**
    /// ```
    /// {
    /// "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com",
    /// "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] },
    /// { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": {
    /// "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time
    /// &amp;lt; timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 }
    /// ```
    /// **YAML
    /// example:**
    /// ```
    /// bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com -
    /// serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin -
    /// members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable
    /// access description: Does not grant access after Sep 2020 expression: request.time &amp;lt;
    /// timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3
    /// ```
    /// For a description of IAM and its
    /// features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
    /// </summary>
    public class Policy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specifies cloud audit logging configuration for this policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("auditConfigs")]
        public virtual System.Collections.Generic.IList<AuditConfig> AuditConfigs { get; set; }

        /// <summary>
        /// Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that
        /// determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one
        /// principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals
        /// can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the
        /// `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you
        /// can add another 1,450 principals to the `bindings` in the `Policy`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bindings")]
        public virtual System.Collections.Generic.IList<Binding> Bindings { get; set; }

        /// <summary>
        /// `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy
        /// from overwriting each other. It is strongly suggested that systems make use of the `etag` in the
        /// read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned
        /// in the response to `getIamPolicy`, and systems are expected to put that etag in the request to
        /// `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:**
        /// If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit
        /// this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the
        /// conditions in the version `3` policy are lost.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>
        /// Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid
        /// value are rejected. Any operation that affects conditional role bindings must specify version `3`. This
        /// requirement applies to the following operations: * Getting a policy that includes a conditional role binding
        /// * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing
        /// any role binding, with or without a condition, from a policy that includes conditions **Important:** If you
        /// use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this
        /// field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the
        /// conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on
        /// that policy may specify any valid version or leave the field unset. To learn which resources support
        /// conditions in their IAM policies, see the [IAM
        /// documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<int> Version { get; set; }
    }

    /// <summary>ProgressCounter provides counters to describe an operation's progress.</summary>
    public class ProgressCounter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of units that failed in the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failure")]
        public virtual System.Nullable<long> Failure { get; set; }

        /// <summary>The number of units that are pending in the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pending")]
        public virtual System.Nullable<long> Pending { get; set; }

        /// <summary>The number of units that succeeded in the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("success")]
        public virtual System.Nullable<long> Success { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The Pub/Sub output destination. The Cloud Healthcare Service Agent requires the `roles/pubsub.publisher` Cloud
    /// IAM role on the Pub/Sub topic.
    /// </summary>
    public class PubsubDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The [Pub/Sub](https://cloud.google.com/pubsub/docs/) topic that Pub/Sub messages are published on. Supplied
        /// by the client. The `PubsubMessage` contains the following fields: * `PubsubMessage.Data` contains the
        /// resource name. * `PubsubMessage.MessageId` is the ID of this notification. It is guaranteed to be unique
        /// within the topic. * `PubsubMessage.PublishTime` is the time when the message was published. [Topic
        /// names](https://cloud.google.com/pubsub/docs/overview#names) must be scoped to a project. The Cloud
        /// Healthcare API service account, service-PROJECT_NUMBER@gcp-sa-healthcare.iam.gserviceaccount.com, must have
        /// publisher permissions on the given Pub/Sub topic. Not having adequate permissions causes the calls that send
        /// notifications to fail.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pubsubTopic")]
        public virtual string PubsubTopic { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Queries all data_ids that are consented for a given use in the given consent store and writes them to a
    /// specified destination. The returned Operation includes a progress counter for the number of User data mappings
    /// processed. Errors are logged to Cloud Logging (see [Viewing error logs in Cloud Logging]
    /// (https://cloud.google.com/healthcare/docs/how-tos/logging) and [QueryAccessibleData] for a sample log entry).
    /// </summary>
    public class QueryAccessibleDataRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Cloud Storage destination. The Cloud Healthcare API service account must have the
        /// `roles/storage.objectAdmin` Cloud IAM role for this Cloud Storage location.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsDestination")]
        public virtual GoogleCloudHealthcareV1ConsentGcsDestination GcsDestination { get; set; }

        /// <summary>The values of request attributes associated with this access request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestAttributes")]
        public virtual System.Collections.Generic.IDictionary<string, string> RequestAttributes { get; set; }

        /// <summary>
        /// Optional. The values of resource attributes associated with the type of resources being requested. If no
        /// values are specified, then all resource types are included in the output.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceAttributes")]
        public virtual System.Collections.Generic.IDictionary<string, string> ResourceAttributes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response for successful QueryAccessibleData operations. This structure is included in the response upon
    /// operation completion.
    /// </summary>
    public class QueryAccessibleDataResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// List of files, each of which contains a list of data_id(s) that are consented for a specified use in the
        /// request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsUris")]
        public virtual System.Collections.Generic.IList<string> GcsUris { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Define how to redact sensitive values. Default behaviour is erase. For example, "My name is Jane." becomes "My
    /// name is ."
    /// </summary>
    public class RedactConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Rejects the latest revision of the specified Consent by committing a new revision with `state` updated to
    /// `REJECTED`. If the latest revision of the given Consent is in the `REJECTED` state, no new revision is
    /// committed.
    /// </summary>
    public class RejectConsentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The resource name of the Consent artifact that contains documentation of the user's rejection of
        /// the draft Consent, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.
        /// If the draft Consent had a Consent artifact, this Consent artifact overwrites it.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentArtifact")]
        public virtual string ConsentArtifact { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// When using the INSPECT_AND_TRANSFORM action, each match is replaced with the name of the info_type. For example,
    /// "My name is Jane" becomes "My name is [PERSON_NAME]." The TRANSFORM action is equivalent to redacting.
    /// </summary>
    public class ReplaceWithInfoTypeConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A list of FHIR resources.</summary>
    public class Resources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of resources IDs. For example, "Patient/1234".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual System.Collections.Generic.IList<string> ResourcesValue { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The consent evaluation result for a single `data_id`.</summary>
    public class Result : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource names of all evaluated Consents mapped to their evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentDetails")]
        public virtual System.Collections.Generic.IDictionary<string, ConsentEvaluation> ConsentDetails { get; set; }

        /// <summary>Whether the resource is consented for the given use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consented")]
        public virtual System.Nullable<bool> Consented { get; set; }

        /// <summary>The unique identifier of the evaluated resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataId")]
        public virtual string DataId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Revokes the latest revision of the specified Consent by committing a new revision with `state` updated to
    /// `REVOKED`. If the latest revision of the given Consent is in the `REVOKED` state, no new revision is committed.
    /// </summary>
    public class RevokeConsentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The resource name of the Consent artifact that contains proof of the user's revocation of the
        /// Consent, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consentArtifact")]
        public virtual string ConsentArtifact { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class RollbackFhirResourceFilteringFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. A filter expression that matches data in the `Resource.meta` element. Supports all filters in
        /// [AIP-160](https://google.aip.dev/160) except the "has" (`:`) operator. Supports the following custom
        /// functions: * `tag("") = ""` for tag filtering. * `extension_value_ts("") = ` for filtering extensions with a
        /// timestamp, where `` is a Unix timestamp. Supports the `&amp;gt;`, `&amp;lt;`, `&amp;lt;=`, `&amp;gt;=`, and
        /// `!=` comparison operators.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadataFilter")]
        public virtual string MetadataFilter { get; set; }

        /// <summary>Optional. A list of operation IDs to roll back.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<ulong>> OperationIds { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class RollbackFhirResourcesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. CREATE/UPDATE/DELETE/ALL for reverting all txns of a certain type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("changeType")]
        public virtual string ChangeType { get; set; }

        /// <summary>Optional. Specifies whether to exclude earlier rollbacks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludeRollbacks")]
        public virtual System.Nullable<bool> ExcludeRollbacks { get; set; }

        /// <summary>Optional. Parameters for filtering resources</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filteringFields")]
        public virtual RollbackFhirResourceFilteringFields FilteringFields { get; set; }

        /// <summary>Optional. When enabled, changes will be reverted without explicit confirmation</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("force")]
        public virtual System.Nullable<bool> Force { get; set; }

        /// <summary>
        /// Optional. Cloud Storage object containing list of {resourceType}/{resourceId} lines, identifying resources
        /// to be reverted
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputGcsObject")]
        public virtual string InputGcsObject { get; set; }

        /// <summary>Required. Bucket to deposit result</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resultGcsBucket")]
        public virtual string ResultGcsBucket { get; set; }

        private string _rollbackTimeRaw;

        private object _rollbackTime;

        /// <summary>Required. Time point to rollback to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rollbackTime")]
        public virtual string RollbackTimeRaw
        {
            get => _rollbackTimeRaw;
            set
            {
                _rollbackTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _rollbackTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="RollbackTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use RollbackTimeDateTimeOffset instead.")]
        public virtual object RollbackTime
        {
            get => _rollbackTime;
            set
            {
                _rollbackTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _rollbackTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="RollbackTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? RollbackTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(RollbackTimeRaw);
            set => RollbackTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Optional. If specified, revert only resources of these types</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual System.Collections.Generic.IList<string> Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Final response of rollback FIHR resources request.</summary>
    public class RollbackFhirResourcesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The name of the FHIR store to rollback, in the format of
        /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id} /fhirStores/{fhir_store_id}".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fhirStore")]
        public virtual string FhirStore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Filtering fields for an HL7v2 rollback. Currently only supports a list of operation ids to roll back.
    /// </summary>
    public class RollbackHL7MessagesFilteringFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. A list of operation IDs to roll back.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operationIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<ulong>> OperationIds { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Point in time recovery rollback request.</summary>
    public class RollbackHl7V2MessagesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. CREATE/UPDATE/DELETE/ALL for reverting all txns of a certain type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("changeType")]
        public virtual string ChangeType { get; set; }

        /// <summary>Optional. Specifies whether to exclude earlier rollbacks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludeRollbacks")]
        public virtual System.Nullable<bool> ExcludeRollbacks { get; set; }

        /// <summary>Optional. Parameters for filtering.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filteringFields")]
        public virtual RollbackHL7MessagesFilteringFields FilteringFields { get; set; }

        /// <summary>Optional. When enabled, changes will be reverted without explicit confirmation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("force")]
        public virtual System.Nullable<bool> Force { get; set; }

        /// <summary>
        /// Optional. Cloud storage object containing list of {resourceId} lines, identifying resources to be reverted
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputGcsObject")]
        public virtual string InputGcsObject { get; set; }

        /// <summary>Required. Bucket to deposit result</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resultGcsBucket")]
        public virtual string ResultGcsBucket { get; set; }

        private string _rollbackTimeRaw;

        private object _rollbackTime;

        /// <summary>Required. Times point to rollback to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rollbackTime")]
        public virtual string RollbackTimeRaw
        {
            get => _rollbackTimeRaw;
            set
            {
                _rollbackTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _rollbackTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="RollbackTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use RollbackTimeDateTimeOffset instead.")]
        public virtual object RollbackTime
        {
            get => _rollbackTime;
            set
            {
                _rollbackTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _rollbackTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="RollbackTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? RollbackTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(RollbackTimeRaw);
            set => RollbackTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Final response of rollback HL7v2 messages request.</summary>
    public class RollbackHl7V2MessagesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The name of the HL7v2 store to rollback, in the format of
        /// "projects/{project_id}/locations/{location_id}/datasets/{dataset_id} /hl7v2Stores/{hl7v2_store_id}".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hl7v2Store")]
        public virtual string Hl7v2Store { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for the FHIR BigQuery schema. Determines how the server generates the schema.</summary>
    public class SchemaConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The configuration for exported BigQuery tables to be partitioned by FHIR resource's last updated time
        /// column.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastUpdatedPartitionConfig")]
        public virtual TimePartitioning LastUpdatedPartitionConfig { get; set; }

        /// <summary>
        /// The depth for all recursive structures in the output analytics schema. For example, `concept` in the
        /// CodeSystem resource is a recursive structure; when the depth is 2, the CodeSystem table will have a column
        /// called `concept.concept` but not `concept.concept.concept`. If not specified or set to 0, the server will
        /// use the default value 2. The maximum depth allowed is 5.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recursiveStructureDepth")]
        public virtual System.Nullable<long> RecursiveStructureDepth { get; set; }

        /// <summary>Specifies the output schema type. Schema type is required.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schemaType")]
        public virtual string SchemaType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An HL7v2 logical group construct.</summary>
    public class SchemaGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// True indicates that this is a choice group, meaning that only one of its segments can exist in a given
        /// message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("choice")]
        public virtual System.Nullable<bool> Choice { get; set; }

        /// <summary>The maximum number of times this group can be repeated. 0 or -1 means unbounded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxOccurs")]
        public virtual System.Nullable<int> MaxOccurs { get; set; }

        /// <summary>Nested groups and/or segments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("members")]
        public virtual System.Collections.Generic.IList<GroupOrSegment> Members { get; set; }

        /// <summary>The minimum number of times this group must be present/repeated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minOccurs")]
        public virtual System.Nullable<int> MinOccurs { get; set; }

        /// <summary>The name of this group. For example, "ORDER_DETAIL".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A schema package contains a set of schemas and type definitions.</summary>
    public class SchemaPackage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Flag to ignore all min_occurs restrictions in the schema. This means that incoming messages can
        /// omit any group, segment, field, component, or subcomponent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreMinOccurs")]
        public virtual System.Nullable<bool> IgnoreMinOccurs { get; set; }

        /// <summary>
        /// Optional. Schema configs that are layered based on their VersionSources that match the incoming message.
        /// Schema configs present in higher indices override those in lower indices with the same message type and
        /// trigger event if their VersionSources all match an incoming message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schemas")]
        public virtual System.Collections.Generic.IList<Hl7SchemaConfig> Schemas { get; set; }

        /// <summary>Optional. Determines how messages that fail to parse are handled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schematizedParsingType")]
        public virtual string SchematizedParsingType { get; set; }

        /// <summary>
        /// Optional. Schema type definitions that are layered based on their VersionSources that match the incoming
        /// message. Type definitions present in higher indices override those in lower indices with the same type name
        /// if their VersionSources all match an incoming message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("types")]
        public virtual System.Collections.Generic.IList<Hl7TypesConfig> Types { get; set; }

        /// <summary>
        /// Optional. Determines how unexpected segments (segments not matched to the schema) are handled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unexpectedSegmentHandling")]
        public virtual string UnexpectedSegmentHandling { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An HL7v2 Segment.</summary>
    public class SchemaSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The maximum number of times this segment can be present in this group. 0 or -1 means unbounded.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxOccurs")]
        public virtual System.Nullable<int> MaxOccurs { get; set; }

        /// <summary>The minimum number of times this segment can be present in this group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minOccurs")]
        public virtual System.Nullable<int> MinOccurs { get; set; }

        /// <summary>The Segment type. For example, "PID".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The content of an HL7v2 message in a structured format as specified by a schema.</summary>
    public class SchematizedData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>JSON output of the parser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("data")]
        public virtual string Data { get; set; }

        /// <summary>The error output of the parser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual string Error { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request to search the resources in the specified FHIR store.</summary>
    public class SearchResourcesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The FHIR resource type to search, such as Patient or Observation. For a complete list, see the
        /// FHIR Resource Index ([DSTU2](http://hl7.org/implement/standards/fhir/DSTU2/resourcelist.html),
        /// [STU3](http://hl7.org/implement/standards/fhir/STU3/resourcelist.html),
        /// [R4](http://hl7.org/implement/standards/fhir/R4/resourcelist.html)).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceType")]
        public virtual string ResourceType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A segment in a structured format.</summary>
    public class Segment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A mapping from the positional location to the value. The key string uses zero-based indexes separated by
        /// dots to identify Fields, components and sub-components. A bracket notation is also used to identify
        /// different instances of a repeated field. Regex for key: (\d+)(\[\d+\])?(.\d+)?(.\d+)? Examples of (key,
        /// value) pairs: * (0.1, "hemoglobin") denotes that the first component of Field 0 has the value "hemoglobin".
        /// * (1.1.2, "CBC") denotes that the second sub-component of the first component of Field 1 has the value
        /// "CBC". * (1[0].1, "HbA1c") denotes that the first component of the first Instance of Field 1, which is
        /// repeated, has the value "HbA1c".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IDictionary<string, string> Fields { get; set; }

        /// <summary>A string that indicates the type of segment. For example, EVN or PID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segmentId")]
        public virtual string SegmentId { get; set; }

        /// <summary>
        /// Set ID for segments that can be in a set. This can be empty if it's missing or isn't applicable.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("setId")]
        public virtual string SetId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>SeriesMetrics contains metrics describing a DICOM series.</summary>
    public class SeriesMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Total blob storage bytes for all instances in the series.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobStorageSizeBytes")]
        public virtual System.Nullable<long> BlobStorageSizeBytes { get; set; }

        /// <summary>Number of instances in the series.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceCount")]
        public virtual System.Nullable<long> InstanceCount { get; set; }

        /// <summary>
        /// The series resource path. For example,
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}/series/{series_uid}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("series")]
        public virtual string Series { get; set; }

        /// <summary>Total structured storage bytes for all instances in the series.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredStorageSizeBytes")]
        public virtual System.Nullable<long> StructuredStorageSizeBytes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for `SetBlobStorageSettings` method.</summary>
    public class SetBlobStorageSettingsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The blob storage settings to update for the specified resources. Only fields listed in `update_mask` are
        /// applied.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobStorageSettings")]
        public virtual BlobStorageSettings BlobStorageSettings { get; set; }

        /// <summary>
        /// Optional. A filter configuration. If `filter_config` is specified, set the value of `resource` to the
        /// resource name of a DICOM store in the format
        /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterConfig")]
        public virtual DicomFilterConfig FilterConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Returns additional info in regards to a completed set blob storage settings API.</summary>
    public class SetBlobStorageSettingsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for `SetIamPolicy` method.</summary>
    public class SetIamPolicyRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few
        /// 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might
        /// reject them.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("policy")]
        public virtual Policy Policy { get; set; }

        /// <summary>
        /// OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be
        /// modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateMask")]
        public virtual object UpdateMask { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>User signature.</summary>
    public class Signature : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. An image of the user's signature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual Image Image { get; set; }

        /// <summary>
        /// Optional. Metadata associated with the user's signature. For example, the user's name or the user's title.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        private string _signatureTimeRaw;

        private object _signatureTime;

        /// <summary>Optional. Timestamp of the signature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("signatureTime")]
        public virtual string SignatureTimeRaw
        {
            get => _signatureTimeRaw;
            set
            {
                _signatureTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _signatureTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="SignatureTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use SignatureTimeDateTimeOffset instead.")]
        public virtual object SignatureTime
        {
            get => _signatureTime;
            set
            {
                _signatureTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _signatureTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="SignatureTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? SignatureTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(SignatureTimeRaw);
            set => SignatureTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Required. User's UUID provided by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The `Status` type defines a logical error model that is suitable for different programming environments,
    /// including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains
    /// three pieces of data: error code, error message, and error details. You can find out more about this error model
    /// and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
    /// </summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; }

        /// <summary>
        /// A list of messages that carry the error details. There is a common set of message types for APIs to use.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, object>> Details { get; set; }

        /// <summary>
        /// A developer-facing error message, which should be in English. Any user-facing error message should be
        /// localized and sent in the google.rpc.Status.details field, or localized by the client.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>StorageInfo encapsulates all the storage info of a resource.</summary>
    public class StorageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Info about the data stored in blob storage for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobStorageInfo")]
        public virtual BlobStorageInfo BlobStorageInfo { get; set; }

        /// <summary>
        /// The resource whose storage info is returned. For example:
        /// `projects/{projectID}/locations/{locationID}/datasets/{datasetID}/dicomStores/{dicomStoreID}/dicomWeb/studies/{studyUID}/series/{seriesUID}/instances/{instanceUID}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referencedResource")]
        public virtual string ReferencedResource { get; set; }

        /// <summary>Info about the data stored in structured storage for the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredStorageInfo")]
        public virtual StructuredStorageInfo StructuredStorageInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains configuration for streaming FHIR export.</summary>
    public class StreamConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The destination BigQuery structure that contains both the dataset location and corresponding
        /// schema config. The output is organized in one table per resource type. The server reuses the existing tables
        /// (if any) that are named after the resource types. For example, "Patient", "Observation". When there is no
        /// existing table for a given resource type, the server attempts to create one. When a table schema doesn't
        /// align with the schema config, either because of existing incompatible schema or out of band incompatible
        /// modification, the server does not stream in new data. BigQuery imposes a 1 MB limit on streaming insert row
        /// size, therefore any resource mutation that generates more than 1 MB of BigQuery data is not streamed. One
        /// resolution in this case is to delete the incompatible table and let the server recreate one, though the
        /// newly created table only contains data after the table recreation. Results are written to BigQuery tables
        /// according to the parameters in BigQueryDestination.WriteDisposition. Different versions of the same resource
        /// are distinguishable by the meta.versionId and meta.lastUpdated columns. The operation (CREATE/UPDATE/DELETE)
        /// that results in the new version is recorded in the meta.tag. The tables contain all historical resource
        /// versions since streaming was enabled. For query convenience, the server also creates one view per table of
        /// the same name containing only the current resource version. The streamed data in the BigQuery dataset is not
        /// guaranteed to be completely unique. The combination of the id and meta.versionId columns should ideally
        /// identify a single unique row. But in rare cases, duplicates may exist. At query time, users may use the SQL
        /// select statement to keep only one of the duplicate rows given an id and meta.versionId pair. Alternatively,
        /// the server created view mentioned above also filters out duplicates. If a resource mutation cannot be
        /// streamed to BigQuery, errors are logged to Cloud Logging. For more information, see [Viewing error logs in
        /// Cloud Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigqueryDestination")]
        public virtual GoogleCloudHealthcareV1FhirBigQueryDestination BigqueryDestination { get; set; }

        /// <summary>
        /// The destination FHIR store for de-identified resources. After this field is added, all subsequent
        /// creates/updates/patches to the source store will be de-identified using the provided configuration and
        /// applied to the destination store. Resources deleted from the source store will be deleted from the
        /// destination store. Importing resources to the source store will not trigger the streaming. If the source
        /// store already contains resources when this option is enabled, those resources will not be copied to the
        /// destination store unless they are subsequently updated. This may result in invalid references in the
        /// destination store. Before adding this config, you must grant the healthcare.fhirResources.update permission
        /// on the destination store to your project's **Cloud Healthcare Service Agent** [service
        /// account](https://cloud.google.com/healthcare/docs/how-tos/permissions-healthcare-api-gcp-products#the_cloud_healthcare_service_agent).
        /// The destination store must set enable_update_create to true. The destination store must have
        /// disable_referential_integrity set to true. If a resource cannot be de-identified, errors will be logged to
        /// Cloud Logging (see [Viewing error logs in Cloud
        /// Logging](https://cloud.google.com/healthcare/docs/how-tos/logging)).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deidentifiedStoreDestination")]
        public virtual DeidentifiedStoreDestination DeidentifiedStoreDestination { get; set; }

        /// <summary>
        /// Optional. Supply a FHIR resource type (such as "Patient" or "Observation"). See
        /// https://www.hl7.org/fhir/valueset-resource-types.html for a list of all FHIR resource types. The server
        /// treats an empty list as an intent to stream all the supported resource types in this FHIR store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceTypes")]
        public virtual System.Collections.Generic.IList<string> ResourceTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// StructuredStorageInfo contains details about the data stored in Structured Storage for the referenced resource.
    /// </summary>
    public class StructuredStorageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Size in bytes of data stored in structured storage.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sizeBytes")]
        public virtual System.Nullable<long> SizeBytes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>StudyMetrics contains metrics describing a DICOM study.</summary>
    public class StudyMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Total blob storage bytes for all instances in the study.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blobStorageSizeBytes")]
        public virtual System.Nullable<long> BlobStorageSizeBytes { get; set; }

        /// <summary>Number of instances in the study.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceCount")]
        public virtual System.Nullable<long> InstanceCount { get; set; }

        /// <summary>Number of series in the study.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seriesCount")]
        public virtual System.Nullable<long> SeriesCount { get; set; }

        /// <summary>Total structured storage bytes for all instances in the study.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredStorageSizeBytes")]
        public virtual System.Nullable<long> StructuredStorageSizeBytes { get; set; }

        /// <summary>
        /// The study resource path. For example,
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}/dicomWeb/studies/{study_uid}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("study")]
        public virtual string Study { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>List of tags to be filtered.</summary>
    public class TagFilterList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Tags to be filtered. Tags must be DICOM Data Elements, File Meta Elements, or Directory
        /// Structuring Elements, as defined at:
        /// http://dicom.nema.org/medical/dicom/current/output/html/part06.html#table_6-1,. They may be provided by
        /// "Keyword" or "Tag". For example "PatientID", "00100010".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for `TestIamPermissions` method.</summary>
    public class TestIamPermissionsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`)
        /// are not allowed. For more information see [IAM
        /// Overview](https://cloud.google.com/iam/docs/overview#permissions).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissions")]
        public virtual System.Collections.Generic.IList<string> Permissions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for `TestIamPermissions` method.</summary>
    public class TestIamPermissionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A subset of `TestPermissionsRequest.permissions` that the caller is allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissions")]
        public virtual System.Collections.Generic.IList<string> Permissions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class TextConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Transformations to apply to the detected data, overridden by `exclude_info_types`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalTransformations")]
        public virtual System.Collections.Generic.IList<InfoTypeTransformation> AdditionalTransformations { get; set; }

        /// <summary>Optional. InfoTypes to skip transforming, overriding `additional_transformations`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludeInfoTypes")]
        public virtual System.Collections.Generic.IList<string> ExcludeInfoTypes { get; set; }

        /// <summary>
        /// Optional. The transformations to apply to the detected data. Deprecated. Use `additional_transformations`
        /// instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transformations")]
        public virtual System.Collections.Generic.IList<InfoTypeTransformation> Transformations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A span of text in the provided document.</summary>
    public class TextSpan : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unicode codepoint index of the beginning of this span.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("beginOffset")]
        public virtual System.Nullable<int> BeginOffset { get; set; }

        /// <summary>The original text contained in this span.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for FHIR BigQuery time-partitioned tables.</summary>
    public class TimePartitioning : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Number of milliseconds for which to keep the storage for a partition.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expirationMs")]
        public virtual System.Nullable<long> ExpirationMs { get; set; }

        /// <summary>Type of partitioning.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Apply consents given by patients whose most recent consent changes are in the time range. Note that after
    /// identifying these patients, the server applies all Consent resources given by those patients, not just the
    /// Consent resources within the timestamp in the range.
    /// </summary>
    public class TimeRange : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The latest consent change time, in format YYYY-MM-DDThh:mm:ss.sss+zz:zz If not specified, the
        /// system uses the time when ApplyConsents was called.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("end")]
        public virtual string End { get; set; }

        /// <summary>
        /// Optional. The earliest consent change time, in format YYYY-MM-DDThh:mm:ss.sss+zz:zz If not specified, the
        /// system uses the FHIR store creation time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual string Start { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A type definition for some HL7v2 type (incl. Segments and Datatypes).</summary>
    public class Type : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The (sub) fields this type has (if not primitive).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fields")]
        public virtual System.Collections.Generic.IList<Field> Fields { get; set; }

        /// <summary>
        /// The name of this type. This would be the segment or datatype name. For example, "PID" or "XPN".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// If this is a primitive type then this field is the type of the primitive For example, STRING. Leave
        /// unspecified for composite types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primitive")]
        public virtual string Primitive { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Maps a resource to the associated user and Attributes.</summary>
    public class UserDataMapping : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _archiveTimeRaw;

        private object _archiveTime;

        /// <summary>Output only. Indicates the time when this mapping was archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archiveTime")]
        public virtual string ArchiveTimeRaw
        {
            get => _archiveTimeRaw;
            set
            {
                _archiveTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _archiveTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="ArchiveTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use ArchiveTimeDateTimeOffset instead.")]
        public virtual object ArchiveTime
        {
            get => _archiveTime;
            set
            {
                _archiveTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _archiveTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="ArchiveTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? ArchiveTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(ArchiveTimeRaw);
            set => ArchiveTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. Indicates whether this mapping is archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; }

        /// <summary>Required. A unique identifier for the mapped resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataId")]
        public virtual string DataId { get; set; }

        /// <summary>
        /// Resource name of the User data mapping, of the form
        /// `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Attributes of the resource. Only explicitly set attributes are displayed here. Attribute definitions with
        /// defaults set implicitly apply to these User data mappings. Attributes listed here must be single valued,
        /// that is, exactly one value is specified for the field "values" in each Attribute.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceAttributes")]
        public virtual System.Collections.Generic.IList<Attribute> ResourceAttributes { get; set; }

        /// <summary>Required. User's UUID provided by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains the configuration for FHIR profiles and validation.</summary>
    public class ValidationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Whether to disable FHIRPath validation for incoming resources. The default value is false. Set
        /// this to true to disable checking incoming resources for conformance against FHIRPath requirement defined in
        /// the FHIR specification. This property only affects resource types that do not have profiles configured for
        /// them, any rules in enabled implementation guides will still be enforced.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableFhirpathValidation")]
        public virtual System.Nullable<bool> DisableFhirpathValidation { get; set; }

        /// <summary>
        /// Optional. Whether to disable profile validation for this FHIR store. The default value is false. Set this to
        /// true to disable checking incoming resources for conformance against structure definitions in this FHIR
        /// store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableProfileValidation")]
        public virtual System.Nullable<bool> DisableProfileValidation { get; set; }

        /// <summary>
        /// Optional. Whether to disable reference type validation for incoming resources. The default value is false.
        /// Set this to true to disable checking incoming resources for conformance against reference type requirement
        /// defined in the FHIR specification. This property only affects resource types that do not have profiles
        /// configured for them, any rules in enabled implementation guides will still be enforced.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableReferenceTypeValidation")]
        public virtual System.Nullable<bool> DisableReferenceTypeValidation { get; set; }

        /// <summary>
        /// Optional. Whether to disable required fields validation for incoming resources. The default value is false.
        /// Set this to true to disable checking incoming resources for conformance against required fields requirement
        /// defined in the FHIR specification. This property only affects resource types that do not have profiles
        /// configured for them, any rules in enabled implementation guides will still be enforced.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableRequiredFieldValidation")]
        public virtual System.Nullable<bool> DisableRequiredFieldValidation { get; set; }

        /// <summary>
        /// Optional. A list of implementation guide URLs in this FHIR store that are used to configure the profiles to
        /// use for validation. For example, to use the US Core profiles for validation, set
        /// `enabled_implementation_guides` to `["http://hl7.org/fhir/us/core/ImplementationGuide/ig"]`. If
        /// `enabled_implementation_guides` is empty or omitted, then incoming resources are only required to conform to
        /// the base FHIR profiles. Otherwise, a resource must conform to at least one profile listed in the `global`
        /// property of one of the enabled ImplementationGuides. The Cloud Healthcare API does not currently enforce all
        /// of the rules in a StructureDefinition. The following rules are supported: - min/max - minValue/maxValue -
        /// maxLength - type - fixed[x] - pattern[x] on simple types - slicing, when using "value" as the discriminator
        /// type When a URL cannot be resolved (for example, in a type assertion), the server does not return an error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledImplementationGuides")]
        public virtual System.Collections.Generic.IList<string> EnabledImplementationGuides { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes a selector for extracting and matching an MSH field to a value.</summary>
    public class VersionSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The field to extract from the MSH segment. For example, "3.1" or "18[1].1".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mshField")]
        public virtual string MshField { get; set; }

        /// <summary>The value to match with the field. For example, "My Application Name" or "2.3".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
