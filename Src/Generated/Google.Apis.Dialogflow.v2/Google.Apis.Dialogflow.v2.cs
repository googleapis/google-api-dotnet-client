// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated code. DO NOT EDIT!

namespace Google.Apis.Dialogflow.v2
{
    /// <summary>The Dialogflow Service.</summary>
    public class DialogflowService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v2";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public DialogflowService() : this(new Google.Apis.Services.BaseClientService.Initializer())
        {
        }

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public DialogflowService(Google.Apis.Services.BaseClientService.Initializer initializer) : base(initializer)
        {
            Projects = new ProjectsResource(this);
            BaseUri = GetEffectiveUri(BaseUriOverride, "https://dialogflow.googleapis.com/");
            BatchUri = GetEffectiveUri(null, "https://dialogflow.googleapis.com/batch");
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features => new string[0];

        /// <summary>Gets the service name.</summary>
        public override string Name => "dialogflow";

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri { get; }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath => "";

        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri { get; }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath => "batch";

        /// <summary>Available OAuth 2.0 scopes for use with the Dialogflow API.</summary>
        public class Scope
        {
            /// <summary>
            /// See, edit, configure, and delete your Google Cloud data and see the email address for your Google
            /// Account.
            /// </summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View, manage and query your Dialogflow agents</summary>
            public static string Dialogflow = "https://www.googleapis.com/auth/dialogflow";
        }

        /// <summary>Available OAuth 2.0 scope constants for use with the Dialogflow API.</summary>
        public static class ScopeConstants
        {
            /// <summary>
            /// See, edit, configure, and delete your Google Cloud data and see the email address for your Google
            /// Account.
            /// </summary>
            public const string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View, manage and query your Dialogflow agents</summary>
            public const string Dialogflow = "https://www.googleapis.com/auth/dialogflow";
        }

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects { get; }
    }

    /// <summary>A base abstract class for Dialogflow requests.</summary>
    public abstract class DialogflowBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        /// <summary>Constructs a new DialogflowBaseServiceRequest instance.</summary>
        protected DialogflowBaseServiceRequest(Google.Apis.Services.IClientService service) : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1 = 0,

            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2 = 1,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json = 0,

            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media = 1,

            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto = 2,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>
        /// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required
        /// unless you provide an OAuth 2.0 token.
        /// </summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>
        /// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a
        /// user, but should not exceed 40 characters.
        /// </summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes Dialogflow parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();
            RequestParameters.Add("$.xgafv", new Google.Apis.Discovery.Parameter
            {
                Name = "$.xgafv",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("access_token", new Google.Apis.Discovery.Parameter
            {
                Name = "access_token",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("alt", new Google.Apis.Discovery.Parameter
            {
                Name = "alt",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = "json",
                Pattern = null,
            });
            RequestParameters.Add("callback", new Google.Apis.Discovery.Parameter
            {
                Name = "callback",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("fields", new Google.Apis.Discovery.Parameter
            {
                Name = "fields",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("key", new Google.Apis.Discovery.Parameter
            {
                Name = "key",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("oauth_token", new Google.Apis.Discovery.Parameter
            {
                Name = "oauth_token",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("prettyPrint", new Google.Apis.Discovery.Parameter
            {
                Name = "prettyPrint",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = "true",
                Pattern = null,
            });
            RequestParameters.Add("quotaUser", new Google.Apis.Discovery.Parameter
            {
                Name = "quotaUser",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("uploadType", new Google.Apis.Discovery.Parameter
            {
                Name = "uploadType",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("upload_protocol", new Google.Apis.Discovery.Parameter
            {
                Name = "upload_protocol",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            Agent = new AgentResource(service);
            AnswerRecords = new AnswerRecordsResource(service);
            ConversationDatasets = new ConversationDatasetsResource(service);
            ConversationModels = new ConversationModelsResource(service);
            ConversationProfiles = new ConversationProfilesResource(service);
            Conversations = new ConversationsResource(service);
            Generators = new GeneratorsResource(service);
            KnowledgeBases = new KnowledgeBasesResource(service);
            Locations = new LocationsResource(service);
            Operations = new OperationsResource(service);
            Suggestions = new SuggestionsResource(service);
        }

        /// <summary>Gets the Agent resource.</summary>
        public virtual AgentResource Agent { get; }

        /// <summary>The "agent" collection of methods.</summary>
        public class AgentResource
        {
            private const string Resource = "agent";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AgentResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                EntityTypes = new EntityTypesResource(service);
                Environments = new EnvironmentsResource(service);
                Intents = new IntentsResource(service);
                KnowledgeBases = new KnowledgeBasesResource(service);
                Sessions = new SessionsResource(service);
                Versions = new VersionsResource(service);
            }

            /// <summary>Gets the EntityTypes resource.</summary>
            public virtual EntityTypesResource EntityTypes { get; }

            /// <summary>The "entityTypes" collection of methods.</summary>
            public class EntityTypesResource
            {
                private const string Resource = "entityTypes";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public EntityTypesResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Entities = new EntitiesResource(service);
                }

                /// <summary>Gets the Entities resource.</summary>
                public virtual EntitiesResource Entities { get; }

                /// <summary>The "entities" collection of methods.</summary>
                public class EntitiesResource
                {
                    private const string Resource = "entities";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public EntitiesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Creates multiple new entities in the specified entity type. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the entity type to create entities in. Format:
                    /// `projects//agent/entityTypes/`.
                    /// </param>
                    public virtual BatchCreateRequest BatchCreate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchCreateEntitiesRequest body, string parent)
                    {
                        return new BatchCreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates multiple new entities in the specified entity type. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class BatchCreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new BatchCreate request.</summary>
                        public BatchCreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchCreateEntitiesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the entity type to create entities in. Format:
                        /// `projects//agent/entityTypes/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchCreateEntitiesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "batchCreate";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entities:batchCreate";

                        /// <summary>Initializes BatchCreate parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/entityTypes/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes entities in the specified entity type. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the entity type to delete entries for. Format:
                    /// `projects//agent/entityTypes/`.
                    /// </param>
                    public virtual BatchDeleteRequest BatchDelete(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntitiesRequest body, string parent)
                    {
                        return new BatchDeleteRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Deletes entities in the specified entity type. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class BatchDeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new BatchDelete request.</summary>
                        public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntitiesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the entity type to delete entries for. Format:
                        /// `projects//agent/entityTypes/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntitiesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "batchDelete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entities:batchDelete";

                        /// <summary>Initializes BatchDelete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/entityTypes/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Updates or creates multiple entities in the specified entity type. This method does not affect
                    /// entities in the entity type that aren't explicitly specified in the request. This method is a
                    /// [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the entity type to update or create entities in. Format:
                    /// `projects//agent/entityTypes/`.
                    /// </param>
                    public virtual BatchUpdateRequest BatchUpdate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntitiesRequest body, string parent)
                    {
                        return new BatchUpdateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Updates or creates multiple entities in the specified entity type. This method does not affect
                    /// entities in the entity type that aren't explicitly specified in the request. This method is a
                    /// [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class BatchUpdateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new BatchUpdate request.</summary>
                        public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntitiesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the entity type to update or create entities in. Format:
                        /// `projects//agent/entityTypes/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntitiesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "batchUpdate";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entities:batchUpdate";

                        /// <summary>Initializes BatchUpdate parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/entityTypes/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>
                /// Deletes entity types in the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note:
                /// You should always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
                /// </param>
                public virtual BatchDeleteRequest BatchDelete(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest body, string parent)
                {
                    return new BatchDeleteRequest(this.service, body, parent);
                }

                /// <summary>
                /// Deletes entity types in the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note:
                /// You should always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class BatchDeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new BatchDelete request.</summary>
                    public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "batchDelete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/entityTypes:batchDelete";

                    /// <summary>Initializes BatchDelete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                    }
                }

                /// <summary>
                /// Updates/Creates multiple entity types in the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to sending
                /// it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The name of the agent to update or create entity types in. Format: `projects//agent`.
                /// </param>
                public virtual BatchUpdateRequest BatchUpdate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest body, string parent)
                {
                    return new BatchUpdateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Updates/Creates multiple entity types in the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to sending
                /// it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class BatchUpdateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new BatchUpdate request.</summary>
                    public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the agent to update or create entity types in. Format: `projects//agent`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "batchUpdate";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/entityTypes:batchUpdate";

                    /// <summary>Initializes BatchUpdate parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                    }
                }

                /// <summary>
                /// Creates an entity type in the specified agent. Note: You should always train an agent prior to
                /// sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The agent to create a entity type for. Format: `projects//agent`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates an entity type in the specified agent. Note: You should always train an agent prior to
                /// sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>Required. The agent to create a entity type for. Format: `projects//agent`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The language used to access language-specific data. If not specified, the agent's
                    /// default language is used. For more information, see [Multilingual intent and entity
                    /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/entityTypes";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Deletes the specified entity type. Note: You should always train an agent prior to sending it
                /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="name">
                /// Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>
                /// Deletes the specified entity type. Note: You should always train an agent prior to sending it
                /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/entityTypes/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves the specified entity type.</summary>
                /// <param name="name">
                /// Required. The name of the entity type. Format: `projects//agent/entityTypes/`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified entity type.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the entity type. Format: `projects//agent/entityTypes/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Optional. The language used to access language-specific data. If not specified, the agent's
                    /// default language is used. For more information, see [Multilingual intent and entity
                    /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/entityTypes/[^/]+$",
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Returns the list of all entity types in the specified agent.</summary>
                /// <param name="parent">
                /// Required. The agent to list all entity types from. Format: `projects//agent`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all entity types in the specified agent.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListEntityTypesResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>Required. The agent to list all entity types from. Format: `projects//agent`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The language used to access language-specific data. If not specified, the agent's
                    /// default language is used. For more information, see [Multilingual intent and entity
                    /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/entityTypes";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Updates the specified entity type. Note: You should always train an agent prior to sending it
                /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
                /// EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>
                /// Updates the specified entity type. Note: You should always train an agent prior to sending it
                /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
                    /// EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Optional. The language used to access language-specific data. If not specified, the agent's
                    /// default language is used. For more information, see [Multilingual intent and entity
                    /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>Optional. The mask to control which fields get updated.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/entityTypes/[^/]+$",
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the Environments resource.</summary>
            public virtual EnvironmentsResource Environments { get; }

            /// <summary>The "environments" collection of methods.</summary>
            public class EnvironmentsResource
            {
                private const string Resource = "environments";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public EnvironmentsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Intents = new IntentsResource(service);
                    Users = new UsersResource(service);
                }

                /// <summary>Gets the Intents resource.</summary>
                public virtual IntentsResource Intents { get; }

                /// <summary>The "intents" collection of methods.</summary>
                public class IntentsResource
                {
                    private const string Resource = "intents";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public IntentsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Returns the list of all intents in the specified agent.</summary>
                    /// <param name="parent">
                    /// Required. The agent to list all intents from. Format: `projects//agent` or
                    /// `projects//locations//agent`. Alternatively, you can specify the environment to list intents
                    /// for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`.
                    /// Note: training phrases of the intents will not be returned for non-draft environment.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all intents in the specified agent.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListIntentsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The agent to list all intents from. Format: `projects//agent` or
                        /// `projects//locations//agent`. Alternatively, you can specify the environment to list intents
                        /// for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`.
                        /// Note: training phrases of the intents will not be returned for non-draft environment.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        public enum IntentViewEnum
                        {
                            /// <summary>Training phrases field is not populated in the response.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                            INTENTVIEWUNSPECIFIED = 0,

                            /// <summary>All fields are populated.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                            INTENTVIEWFULL = 1,
                        }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/intents";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/environments/[^/]+$",
                            });
                            RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                            {
                                Name = "intentView",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Users resource.</summary>
                public virtual UsersResource Users { get; }

                /// <summary>The "users" collection of methods.</summary>
                public class UsersResource
                {
                    private const string Resource = "users";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public UsersResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Sessions = new SessionsResource(service);
                    }

                    /// <summary>Gets the Sessions resource.</summary>
                    public virtual SessionsResource Sessions { get; }

                    /// <summary>The "sessions" collection of methods.</summary>
                    public class SessionsResource
                    {
                        private const string Resource = "sessions";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public SessionsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Contexts = new ContextsResource(service);
                            EntityTypes = new EntityTypesResource(service);
                        }

                        /// <summary>Gets the Contexts resource.</summary>
                        public virtual ContextsResource Contexts { get; }

                        /// <summary>The "contexts" collection of methods.</summary>
                        public class ContextsResource
                        {
                            private const string Resource = "contexts";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public ContextsResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>
                            /// Creates a context. If the specified context already exists, overrides the context.
                            /// </summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="parent">
                            /// Required. The session to create a context for. Format: `projects//agent/sessions/` or
                            /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified,
                            /// we assume default 'draft' environment. If `User ID` is not specified, we assume default
                            /// '-' user.
                            /// </param>
                            public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string parent)
                            {
                                return new CreateRequest(this.service, body, parent);
                            }

                            /// <summary>
                            /// Creates a context. If the specified context already exists, overrides the context.
                            /// </summary>
                            public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                            {
                                /// <summary>Constructs a new Create request.</summary>
                                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string parent) : base(service)
                                {
                                    Parent = parent;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The session to create a context for. Format: `projects//agent/sessions/`
                                /// or `projects//agent/environments//users//sessions/`. If `Environment ID` is not
                                /// specified, we assume default 'draft' environment. If `User ID` is not specified, we
                                /// assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "create";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+parent}/contexts";

                                /// <summary>Initializes Create parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>Deletes the specified context.</summary>
                            /// <param name="name">
                            /// Required. The name of the context to delete. Format:
                            /// `projects//agent/sessions//contexts/` or
                            /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                            /// specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user.
                            /// </param>
                            public virtual DeleteRequest Delete(string name)
                            {
                                return new DeleteRequest(this.service, name);
                            }

                            /// <summary>Deletes the specified context.</summary>
                            public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                            {
                                /// <summary>Constructs a new Delete request.</summary>
                                public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the context to delete. Format:
                                /// `projects//agent/sessions//contexts/` or
                                /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
                                /// not specified, we assume default 'draft' environment. If `User ID` is not specified,
                                /// we assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "delete";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "DELETE";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+name}";

                                /// <summary>Initializes Delete parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>Retrieves the specified context.</summary>
                            /// <param name="name">
                            /// Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
                            /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                            /// specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user.
                            /// </param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>Retrieves the specified context.</summary>
                            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
                                /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
                                /// not specified, we assume default 'draft' environment. If `User ID` is not specified,
                                /// we assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>Returns the list of all contexts in the specified session.</summary>
                            /// <param name="parent">
                            /// Required. The session to list all contexts from. Format: `projects//agent/sessions/` or
                            /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified,
                            /// we assume default 'draft' environment. If `User ID` is not specified, we assume default
                            /// '-' user.
                            /// </param>
                            public virtual ListRequest List(string parent)
                            {
                                return new ListRequest(this.service, parent);
                            }

                            /// <summary>Returns the list of all contexts in the specified session.</summary>
                            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListContextsResponse>
                            {
                                /// <summary>Constructs a new List request.</summary>
                                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                                {
                                    Parent = parent;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The session to list all contexts from. Format: `projects//agent/sessions/`
                                /// or `projects//agent/environments//users//sessions/`. If `Environment ID` is not
                                /// specified, we assume default 'draft' environment. If `User ID` is not specified, we
                                /// assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Optional. The maximum number of items to return in a single page. By default 100 and
                                /// at most 1000.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<int> PageSize { get; set; }

                                /// <summary>
                                /// Optional. The next_page_token value returned from a previous list request.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string PageToken { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "list";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+parent}/contexts";

                                /// <summary>Initializes List parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                    });
                                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageSize",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageToken",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }

                            /// <summary>Updates the specified context.</summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="name">
                            /// Required. The unique identifier of the context. Format:
                            /// `projects//agent/sessions//contexts/`, or
                            /// `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always
                            /// converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most
                            /// 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
                            /// environment. If `User ID` is not specified, we assume default '-' user. The following
                            /// context names are reserved for internal use by Dialogflow. You should not use these
                            /// contexts or create contexts with these names: * `__system_counters__` *
                            /// `*_id_dialog_context` * `*_dialog_params_size`
                            /// </param>
                            public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string name)
                            {
                                return new PatchRequest(this.service, body, name);
                            }

                            /// <summary>Updates the specified context.</summary>
                            public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                            {
                                /// <summary>Constructs a new Patch request.</summary>
                                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string name) : base(service)
                                {
                                    Name = name;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The unique identifier of the context. Format:
                                /// `projects//agent/sessions//contexts/`, or
                                /// `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
                                /// always converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may
                                /// be at most 250 bytes long. If `Environment ID` is not specified, we assume default
                                /// 'draft' environment. If `User ID` is not specified, we assume default '-' user. The
                                /// following context names are reserved for internal use by Dialogflow. You should not
                                /// use these contexts or create contexts with these names: * `__system_counters__` *
                                /// `*_id_dialog_context` * `*_dialog_params_size`
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Optional. The mask to control which fields get updated.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual object UpdateMask { get; set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "patch";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "PATCH";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+name}";

                                /// <summary>Initializes Patch parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                    });
                                    RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "updateMask",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }
                        }

                        /// <summary>Gets the EntityTypes resource.</summary>
                        public virtual EntityTypesResource EntityTypes { get; }

                        /// <summary>The "entityTypes" collection of methods.</summary>
                        public class EntityTypesResource
                        {
                            private const string Resource = "entityTypes";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public EntityTypesResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>
                            /// Creates a session entity type. If the specified session entity type already exists,
                            /// overrides the session entity type. This method doesn't work with Google Assistant
                            /// integration. Contact Dialogflow support if you need to use session entities with Google
                            /// Assistant integration.
                            /// </summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="parent">
                            /// Required. The session to create a session entity type for. Format:
                            /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                            /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID`
                            /// is not specified, we assume default '-' user.
                            /// </param>
                            public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string parent)
                            {
                                return new CreateRequest(this.service, body, parent);
                            }

                            /// <summary>
                            /// Creates a session entity type. If the specified session entity type already exists,
                            /// overrides the session entity type. This method doesn't work with Google Assistant
                            /// integration. Contact Dialogflow support if you need to use session entities with Google
                            /// Assistant integration.
                            /// </summary>
                            public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                            {
                                /// <summary>Constructs a new Create request.</summary>
                                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string parent) : base(service)
                                {
                                    Parent = parent;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The session to create a session entity type for. Format:
                                /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                                /// `Environment ID` is not specified, we assume default 'draft' environment. If `User
                                /// ID` is not specified, we assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "create";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+parent}/entityTypes";

                                /// <summary>Initializes Create parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Deletes the specified session entity type. This method doesn't work with Google
                            /// Assistant integration. Contact Dialogflow support if you need to use session entities
                            /// with Google Assistant integration.
                            /// </summary>
                            /// <param name="name">
                            /// Required. The name of the entity type to delete. Format:
                            /// `projects//agent/sessions//entityTypes/` or
                            /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
                            /// not specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user.
                            /// </param>
                            public virtual DeleteRequest Delete(string name)
                            {
                                return new DeleteRequest(this.service, name);
                            }

                            /// <summary>
                            /// Deletes the specified session entity type. This method doesn't work with Google
                            /// Assistant integration. Contact Dialogflow support if you need to use session entities
                            /// with Google Assistant integration.
                            /// </summary>
                            public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                            {
                                /// <summary>Constructs a new Delete request.</summary>
                                public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the entity type to delete. Format:
                                /// `projects//agent/sessions//entityTypes/` or
                                /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID`
                                /// is not specified, we assume default 'draft' environment. If `User ID` is not
                                /// specified, we assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "delete";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "DELETE";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+name}";

                                /// <summary>Initializes Delete parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Retrieves the specified session entity type. This method doesn't work with Google
                            /// Assistant integration. Contact Dialogflow support if you need to use session entities
                            /// with Google Assistant integration.
                            /// </summary>
                            /// <param name="name">
                            /// Required. The name of the session entity type. Format:
                            /// `projects//agent/sessions//entityTypes/` or
                            /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
                            /// not specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user.
                            /// </param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>
                            /// Retrieves the specified session entity type. This method doesn't work with Google
                            /// Assistant integration. Contact Dialogflow support if you need to use session entities
                            /// with Google Assistant integration.
                            /// </summary>
                            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the session entity type. Format:
                                /// `projects//agent/sessions//entityTypes/` or
                                /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID`
                                /// is not specified, we assume default 'draft' environment. If `User ID` is not
                                /// specified, we assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Returns the list of all session entity types in the specified session. This method
                            /// doesn't work with Google Assistant integration. Contact Dialogflow support if you need
                            /// to use session entities with Google Assistant integration.
                            /// </summary>
                            /// <param name="parent">
                            /// Required. The session to list all session entity types from. Format:
                            /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                            /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID`
                            /// is not specified, we assume default '-' user.
                            /// </param>
                            public virtual ListRequest List(string parent)
                            {
                                return new ListRequest(this.service, parent);
                            }

                            /// <summary>
                            /// Returns the list of all session entity types in the specified session. This method
                            /// doesn't work with Google Assistant integration. Contact Dialogflow support if you need
                            /// to use session entities with Google Assistant integration.
                            /// </summary>
                            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListSessionEntityTypesResponse>
                            {
                                /// <summary>Constructs a new List request.</summary>
                                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                                {
                                    Parent = parent;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The session to list all session entity types from. Format:
                                /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                                /// `Environment ID` is not specified, we assume default 'draft' environment. If `User
                                /// ID` is not specified, we assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Optional. The maximum number of items to return in a single page. By default 100 and
                                /// at most 1000.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<int> PageSize { get; set; }

                                /// <summary>
                                /// Optional. The next_page_token value returned from a previous list request.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string PageToken { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "list";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+parent}/entityTypes";

                                /// <summary>Initializes List parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                    });
                                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageSize",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageToken",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }

                            /// <summary>
                            /// Updates the specified session entity type. This method doesn't work with Google
                            /// Assistant integration. Contact Dialogflow support if you need to use session entities
                            /// with Google Assistant integration.
                            /// </summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="name">
                            /// Required. The unique identifier of this session entity type. Format:
                            /// `projects//agent/sessions//entityTypes/`, or
                            /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
                            /// not specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user. `` must be the display name of an existing entity type in the
                            /// same agent that will be overridden or supplemented.
                            /// </param>
                            public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string name)
                            {
                                return new PatchRequest(this.service, body, name);
                            }

                            /// <summary>
                            /// Updates the specified session entity type. This method doesn't work with Google
                            /// Assistant integration. Contact Dialogflow support if you need to use session entities
                            /// with Google Assistant integration.
                            /// </summary>
                            public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                            {
                                /// <summary>Constructs a new Patch request.</summary>
                                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string name) : base(service)
                                {
                                    Name = name;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The unique identifier of this session entity type. Format:
                                /// `projects//agent/sessions//entityTypes/`, or
                                /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID`
                                /// is not specified, we assume default 'draft' environment. If `User ID` is not
                                /// specified, we assume default '-' user. `` must be the display name of an existing
                                /// entity type in the same agent that will be overridden or supplemented.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Optional. The mask to control which fields get updated.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual object UpdateMask { get; set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "patch";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "PATCH";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+name}";

                                /// <summary>Initializes Patch parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                    });
                                    RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "updateMask",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }
                        }

                        /// <summary>Deletes all active contexts in the specified session.</summary>
                        /// <param name="parent">
                        /// Required. The name of the session to delete all contexts from. Format:
                        /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
                        /// `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not
                        /// specified, we assume default '-' user.
                        /// </param>
                        public virtual DeleteContextsRequest DeleteContexts(string parent)
                        {
                            return new DeleteContextsRequest(this.service, parent);
                        }

                        /// <summary>Deletes all active contexts in the specified session.</summary>
                        public class DeleteContextsRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new DeleteContexts request.</summary>
                            public DeleteContextsRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the session to delete all contexts from. Format:
                            /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
                            /// `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is
                            /// not specified, we assume default '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "deleteContexts";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/contexts";

                            /// <summary>Initializes DeleteContexts parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Processes a natural language query and returns structured, actionable data as a result. This
                        /// method is not idempotent, because it may cause contexts and session entity types to be
                        /// updated, which in turn might affect results of future queries. If you might use [Agent
                        /// Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
                        /// future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has
                        /// additional functionality for Agent Assist and other CCAI products. Note: Always use agent
                        /// versions for production traffic. See [Versions and
                        /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="session">
                        /// Required. The name of the session this query is sent to. Format:
                        /// `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If
                        /// `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID`
                        /// might be referred to as environment name at some places). If `User ID` is not specified, we
                        /// are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User
                        /// Id`. They can be a random number or some type of user and session identifiers (preferably
                        /// hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For
                        /// more information, see the [API interactions
                        /// guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent
                        /// versions for production traffic. See [Versions and
                        /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                        /// </param>
                        public virtual DetectIntentRequest DetectIntent(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest body, string session)
                        {
                            return new DetectIntentRequest(this.service, body, session);
                        }

                        /// <summary>
                        /// Processes a natural language query and returns structured, actionable data as a result. This
                        /// method is not idempotent, because it may cause contexts and session entity types to be
                        /// updated, which in turn might affect results of future queries. If you might use [Agent
                        /// Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
                        /// future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has
                        /// additional functionality for Agent Assist and other CCAI products. Note: Always use agent
                        /// versions for production traffic. See [Versions and
                        /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                        /// </summary>
                        public class DetectIntentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentResponse>
                        {
                            /// <summary>Constructs a new DetectIntent request.</summary>
                            public DetectIntentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest body, string session) : base(service)
                            {
                                Session = session;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the session this query is sent to. Format:
                            /// `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If
                            /// `Environment ID` is not specified, we assume default 'draft' environment (`Environment
                            /// ID` might be referred to as environment name at some places). If `User ID` is not
                            /// specified, we are using "-". It's up to the API caller to choose an appropriate `Session
                            /// ID` and `User Id`. They can be a random number or some type of user and session
                            /// identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not
                            /// exceed 36 characters. For more information, see the [API interactions
                            /// guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent
                            /// versions for production traffic. See [Versions and
                            /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("session", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Session { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "detectIntent";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+session}:detectIntent";

                            /// <summary>Initializes DetectIntent parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("session", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "session",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                });
                            }
                        }
                    }
                }

                /// <summary>Creates an agent environment.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The agent to create an environment for. Supported formats: - `projects//agent` -
                /// `projects//locations//agent`
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>Creates an agent environment.</summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The agent to create an environment for. Supported formats: - `projects//agent` -
                    /// `projects//locations//agent`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Required. The unique id of the new environment.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("environmentId", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string EnvironmentId { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/environments";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                        RequestParameters.Add("environmentId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "environmentId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Deletes the specified agent environment.</summary>
                /// <param name="name">
                /// Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
                /// `projects//locations//agent/environments/` The environment ID for the default environment is `-`.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Deletes the specified agent environment.</summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
                    /// `projects//locations//agent/environments/` The environment ID for the default environment is
                    /// `-`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/environments/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves the specified agent environment.</summary>
                /// <param name="name">
                /// Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
                /// `projects//locations//agent/environments/` The environment ID for the default environment is `-`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified agent environment.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
                    /// `projects//locations//agent/environments/` The environment ID for the default environment is
                    /// `-`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/environments/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets the history of the specified environment.</summary>
                /// <param name="parent">
                /// Required. The name of the environment to retrieve history for. Supported formats: -
                /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for
                /// the default environment is `-`.
                /// </param>
                public virtual GetHistoryRequest GetHistory(string parent)
                {
                    return new GetHistoryRequest(this.service, parent);
                }

                /// <summary>Gets the history of the specified environment.</summary>
                public class GetHistoryRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EnvironmentHistory>
                {
                    /// <summary>Constructs a new GetHistory request.</summary>
                    public GetHistoryRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the environment to retrieve history for. Supported formats: -
                    /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID
                    /// for the default environment is `-`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "getHistory";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/history";

                    /// <summary>Initializes GetHistory parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/environments/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Returns the list of all non-default environments of the specified agent.</summary>
                /// <param name="parent">
                /// Required. The agent to list all environments from. Format: - `projects//agent` -
                /// `projects//locations//agent`
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all non-default environments of the specified agent.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListEnvironmentsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The agent to list all environments from. Format: - `projects//agent` -
                    /// `projects//locations//agent`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/environments";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Updates the specified agent environment. This method allows you to deploy new agent versions into
                /// the environment. When an environment is pointed to a new agent version by setting
                /// `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During that
                /// time, the environment continues serving the previous version of the agent. After the new agent
                /// version is done loading, the environment is set back to the `RUNNING` state. You can use "-" as
                /// Environment ID in environment name to update an agent version in the default environment. WARNING:
                /// this will negate all recent changes to the draft agent and can't be undone. You may want to save the
                /// draft agent to a version before calling this method.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Output only. The unique identifier of this agent environment. Supported formats: -
                /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for
                /// the default environment is `-`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>
                /// Updates the specified agent environment. This method allows you to deploy new agent versions into
                /// the environment. When an environment is pointed to a new agent version by setting
                /// `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During that
                /// time, the environment continues serving the previous version of the agent. After the new agent
                /// version is done loading, the environment is set back to the `RUNNING` state. You can use "-" as
                /// Environment ID in environment name to update an agent version in the default environment. WARNING:
                /// this will negate all recent changes to the draft agent and can't be undone. You may want to save the
                /// draft agent to a version before calling this method.
                /// </summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Output only. The unique identifier of this agent environment. Supported formats: -
                    /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID
                    /// for the default environment is `-`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Optional. This field is used to prevent accidental overwrite of the default environment, which
                    /// is an operation that cannot be undone. To confirm that the caller desires this overwrite, this
                    /// field must be explicitly set to true when updating the default environment (environment ID =
                    /// `-`).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("allowLoadToDraftAndDiscardChanges", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> AllowLoadToDraftAndDiscardChanges { get; set; }

                    /// <summary>Required. The mask to control which fields get updated.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/environments/[^/]+$",
                        });
                        RequestParameters.Add("allowLoadToDraftAndDiscardChanges", new Google.Apis.Discovery.Parameter
                        {
                            Name = "allowLoadToDraftAndDiscardChanges",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the Intents resource.</summary>
            public virtual IntentsResource Intents { get; }

            /// <summary>The "intents" collection of methods.</summary>
            public class IntentsResource
            {
                private const string Resource = "intents";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public IntentsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Deletes intents in the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note:
                /// You should always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
                /// </param>
                public virtual BatchDeleteRequest BatchDelete(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteIntentsRequest body, string parent)
                {
                    return new BatchDeleteRequest(this.service, body, parent);
                }

                /// <summary>
                /// Deletes intents in the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note:
                /// You should always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class BatchDeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new BatchDelete request.</summary>
                    public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteIntentsRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteIntentsRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "batchDelete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/intents:batchDelete";

                    /// <summary>Initializes BatchDelete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                    }
                }

                /// <summary>
                /// Updates/Creates multiple intents in the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it
                /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The name of the agent to update or create intents in. Format: `projects//agent`.
                /// </param>
                public virtual BatchUpdateRequest BatchUpdate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateIntentsRequest body, string parent)
                {
                    return new BatchUpdateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Updates/Creates multiple intents in the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it
                /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class BatchUpdateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new BatchUpdate request.</summary>
                    public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateIntentsRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the agent to update or create intents in. Format: `projects//agent`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateIntentsRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "batchUpdate";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/intents:batchUpdate";

                    /// <summary>Initializes BatchUpdate parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                    }
                }

                /// <summary>
                /// Creates an intent in the specified agent. Note: You should always train an agent prior to sending it
                /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">Required. The agent to create a intent for. Format: `projects//agent`.</param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates an intent in the specified agent. Note: You should always train an agent prior to sending it
                /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>Required. The agent to create a intent for. Format: `projects//agent`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                    /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                    public enum IntentViewEnum
                    {
                        /// <summary>Training phrases field is not populated in the response.</summary>
                        [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                        INTENTVIEWUNSPECIFIED = 0,

                        /// <summary>All fields are populated.</summary>
                        [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                        INTENTVIEWFULL = 1,
                    }

                    /// <summary>
                    /// Optional. The language used to access language-specific data. If not specified, the agent's
                    /// default language is used. For more information, see [Multilingual intent and entity
                    /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/intents";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                        RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                        {
                            Name = "intentView",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Deletes the specified intent and its direct or indirect followup intents. Note: You should always
                /// train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="name">
                /// Required. The name of the intent to delete. If this intent has direct or indirect followup intents,
                /// we also delete them. Format: `projects//agent/intents/`.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>
                /// Deletes the specified intent and its direct or indirect followup intents. Note: You should always
                /// train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the intent to delete. If this intent has direct or indirect followup
                    /// intents, we also delete them. Format: `projects//agent/intents/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/intents/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves the specified intent.</summary>
                /// <param name="name">Required. The name of the intent. Format: `projects//agent/intents/`.</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified intent.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>Required. The name of the intent. Format: `projects//agent/intents/`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                    /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                    public enum IntentViewEnum
                    {
                        /// <summary>Training phrases field is not populated in the response.</summary>
                        [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                        INTENTVIEWUNSPECIFIED = 0,

                        /// <summary>All fields are populated.</summary>
                        [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                        INTENTVIEWFULL = 1,
                    }

                    /// <summary>
                    /// Optional. The language used to access language-specific data. If not specified, the agent's
                    /// default language is used. For more information, see [Multilingual intent and entity
                    /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/intents/[^/]+$",
                        });
                        RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                        {
                            Name = "intentView",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Returns the list of all intents in the specified agent.</summary>
                /// <param name="parent">
                /// Required. The agent to list all intents from. Format: `projects//agent` or
                /// `projects//locations//agent`. Alternatively, you can specify the environment to list intents for.
                /// Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note:
                /// training phrases of the intents will not be returned for non-draft environment.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all intents in the specified agent.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListIntentsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The agent to list all intents from. Format: `projects//agent` or
                    /// `projects//locations//agent`. Alternatively, you can specify the environment to list intents
                    /// for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`.
                    /// Note: training phrases of the intents will not be returned for non-draft environment.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                    /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                    public enum IntentViewEnum
                    {
                        /// <summary>Training phrases field is not populated in the response.</summary>
                        [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                        INTENTVIEWUNSPECIFIED = 0,

                        /// <summary>All fields are populated.</summary>
                        [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                        INTENTVIEWFULL = 1,
                    }

                    /// <summary>
                    /// Optional. The language used to access language-specific data. If not specified, the agent's
                    /// default language is used. For more information, see [Multilingual intent and entity
                    /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/intents";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                        RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                        {
                            Name = "intentView",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Updates the specified intent. Note: You should always train an agent prior to sending it queries.
                /// See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
                /// Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>
                /// Updates the specified intent. Note: You should always train an agent prior to sending it queries.
                /// See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
                    /// Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                    /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                    public enum IntentViewEnum
                    {
                        /// <summary>Training phrases field is not populated in the response.</summary>
                        [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                        INTENTVIEWUNSPECIFIED = 0,

                        /// <summary>All fields are populated.</summary>
                        [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                        INTENTVIEWFULL = 1,
                    }

                    /// <summary>
                    /// Optional. The language used to access language-specific data. If not specified, the agent's
                    /// default language is used. For more information, see [Multilingual intent and entity
                    /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>Optional. The mask to control which fields get updated.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/intents/[^/]+$",
                        });
                        RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                        {
                            Name = "intentView",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the KnowledgeBases resource.</summary>
            public virtual KnowledgeBasesResource KnowledgeBases { get; }

            /// <summary>The "knowledgeBases" collection of methods.</summary>
            public class KnowledgeBasesResource
            {
                private const string Resource = "knowledgeBases";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public KnowledgeBasesResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Documents = new DocumentsResource(service);
                }

                /// <summary>Gets the Documents resource.</summary>
                public virtual DocumentsResource Documents { get; }

                /// <summary>The "documents" collection of methods.</summary>
                public class DocumentsResource
                {
                    private const string Resource = "documents";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public DocumentsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Creates a new document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The knowledge base to create a document for. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a new document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The knowledge base to create a document for. Format:
                        /// `projects//locations//knowledgeBases/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/documents";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes the specified document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// </summary>
                    /// <param name="name">
                    /// Required. The name of the document to delete. Format:
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes the specified document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// </summary>
                    public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the document to delete. Format:
                        /// `projects//locations//knowledgeBases//documents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Retrieves the specified document.</summary>
                    /// <param name="name">
                    /// Required. The name of the document to retrieve. Format
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Retrieves the specified document.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the document to retrieve. Format
                        /// `projects//locations//knowledgeBases//documents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Returns the list of all documents of the knowledge base.</summary>
                    /// <param name="parent">
                    /// Required. The knowledge base to list all documents for. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all documents of the knowledge base.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListDocumentsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The knowledge base to list all documents for. Format:
                        /// `projects//locations//knowledgeBases/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// The filter expression used to filter documents returned by the list method. The expression
                        /// has the following syntax: [AND ] ... The following fields and operators are supported: *
                        /// knowledge_types with has(:) operator * display_name with has(:) operator * state with
                        /// equals(=) operator Examples: * "knowledge_types:FAQ" matches documents with FAQ knowledge
                        /// type. * "display_name:customer" matches documents whose display name contains "customer". *
                        /// "state=ACTIVE" matches documents with ACTIVE state. * "knowledge_types:FAQ AND state=ACTIVE"
                        /// matches all active FAQ documents. For more information about filtering, see [API
                        /// Filtering](https://aip.dev/160).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// The maximum number of items to return in a single page. By default 10 and at most 100.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>The next_page_token value returned from a previous list request.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/documents";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates the specified document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Optional. The document resource name. The name must be empty when creating a document. Format:
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates the specified document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Optional. The document resource name. The name must be empty when creating a document.
                        /// Format: `projects//locations//knowledgeBases//documents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Optional. Not specified means `update all`. Currently, only `display_name` can be updated,
                        /// an InvalidArgument will be returned for attempting to update other fields.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Reloads the specified document from its specified source, content_uri or content. The previously
                    /// loaded content of the document will be deleted. Note: Even when the content of the document has
                    /// not changed, there still may be side effects because of internal implementation changes. This
                    /// method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document Note: The
                    /// `projects.agent.knowledgeBases.documents` resource is deprecated; only use
                    /// `projects.knowledgeBases.documents`.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the document to reload. Format:
                    /// `projects//locations//knowledgeBases//documents/`
                    /// </param>
                    public virtual ReloadRequest Reload(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest body, string name)
                    {
                        return new ReloadRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Reloads the specified document from its specified source, content_uri or content. The previously
                    /// loaded content of the document will be deleted. Note: Even when the content of the document has
                    /// not changed, there still may be side effects because of internal implementation changes. This
                    /// method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document Note: The
                    /// `projects.agent.knowledgeBases.documents` resource is deprecated; only use
                    /// `projects.knowledgeBases.documents`.
                    /// </summary>
                    public class ReloadRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Reload request.</summary>
                        public ReloadRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the document to reload. Format:
                        /// `projects//locations//knowledgeBases//documents/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "reload";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}:reload";

                        /// <summary>Initializes Reload parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Creates a knowledge base.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project to create a knowledge base for. Format: `projects//locations/`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>Creates a knowledge base.</summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to create a knowledge base for. Format: `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/knowledgeBases";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                    }
                }

                /// <summary>Deletes the specified knowledge base.</summary>
                /// <param name="name">
                /// Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Deletes the specified knowledge base.</summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the knowledge base to delete. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge
                    /// base are also deleted.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("force", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> Force { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                        });
                        RequestParameters.Add("force", new Google.Apis.Discovery.Parameter
                        {
                            Name = "force",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Retrieves the specified knowledge base.</summary>
                /// <param name="name">
                /// Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified knowledge base.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the knowledge base to retrieve. Format
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                        });
                    }
                }

                /// <summary>Returns the list of all knowledge bases of the specified agent.</summary>
                /// <param name="parent">
                /// Required. The project to list of knowledge bases for. Format: `projects//locations/`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all knowledge bases of the specified agent.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListKnowledgeBasesResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to list of knowledge bases for. Format: `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// The filter expression used to filter knowledge bases returned by the list method. The expression
                    /// has the following syntax: [AND ] ... The following fields and operators are supported: *
                    /// display_name with has(:) operator * language_code with equals(=) operator Examples: *
                    /// 'language_code=en-us' matches knowledge bases with en-us language code. *
                    /// 'display_name:articles' matches knowledge bases whose display name contains "articles". *
                    /// 'display_name:"Best Articles"' matches knowledge bases whose display name contains "Best
                    /// Articles". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases whose
                    /// display name contains "articles" and whose language code is "en-gb". Note: An empty filter
                    /// string (i.e. "") is a no-op and will result in no filtering. For more information about
                    /// filtering, see [API Filtering](https://aip.dev/160).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>
                    /// The maximum number of items to return in a single page. By default 10 and at most 100.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/knowledgeBases";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Updates the specified knowledge base.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
                /// `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>Updates the specified knowledge base.</summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
                    /// InvalidArgument will be returned for attempting to update other fields.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the Sessions resource.</summary>
            public virtual SessionsResource Sessions { get; }

            /// <summary>The "sessions" collection of methods.</summary>
            public class SessionsResource
            {
                private const string Resource = "sessions";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public SessionsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Contexts = new ContextsResource(service);
                    EntityTypes = new EntityTypesResource(service);
                }

                /// <summary>Gets the Contexts resource.</summary>
                public virtual ContextsResource Contexts { get; }

                /// <summary>The "contexts" collection of methods.</summary>
                public class ContextsResource
                {
                    private const string Resource = "contexts";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public ContextsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Creates a context. If the specified context already exists, overrides the context.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The session to create a context for. Format: `projects//agent/sessions/` or
                    /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
                    /// assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a context. If the specified context already exists, overrides the context.
                    /// </summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The session to create a context for. Format: `projects//agent/sessions/` or
                        /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
                        /// assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                        /// user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/contexts";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Deletes the specified context.</summary>
                    /// <param name="name">
                    /// Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or
                    /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                    /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                    /// default '-' user.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes the specified context.</summary>
                    public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/`
                        /// or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Retrieves the specified context.</summary>
                    /// <param name="name">
                    /// Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
                    /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                    /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                    /// default '-' user.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Retrieves the specified context.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
                        /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Returns the list of all contexts in the specified session.</summary>
                    /// <param name="parent">
                    /// Required. The session to list all contexts from. Format: `projects//agent/sessions/` or
                    /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
                    /// assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all contexts in the specified session.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListContextsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The session to list all contexts from. Format: `projects//agent/sessions/` or
                        /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
                        /// assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                        /// user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/contexts";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates the specified context.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`,
                    /// or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always
                    /// converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250
                    /// bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If
                    /// `User ID` is not specified, we assume default '-' user. The following context names are reserved
                    /// for internal use by Dialogflow. You should not use these contexts or create contexts with these
                    /// names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates the specified context.</summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The unique identifier of the context. Format:
                        /// `projects//agent/sessions//contexts/`, or
                        /// `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always
                        /// converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250
                        /// bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If
                        /// `User ID` is not specified, we assume default '-' user. The following context names are
                        /// reserved for internal use by Dialogflow. You should not use these contexts or create
                        /// contexts with these names: * `__system_counters__` * `*_id_dialog_context` *
                        /// `*_dialog_params_size`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Optional. The mask to control which fields get updated.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the EntityTypes resource.</summary>
                public virtual EntityTypesResource EntityTypes { get; }

                /// <summary>The "entityTypes" collection of methods.</summary>
                public class EntityTypesResource
                {
                    private const string Resource = "entityTypes";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public EntityTypesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Creates a session entity type. If the specified session entity type already exists, overrides
                    /// the session entity type. This method doesn't work with Google Assistant integration. Contact
                    /// Dialogflow support if you need to use session entities with Google Assistant integration.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The session to create a session entity type for. Format: `projects//agent/sessions/`
                    /// or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we
                    /// assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a session entity type. If the specified session entity type already exists, overrides
                    /// the session entity type. This method doesn't work with Google Assistant integration. Contact
                    /// Dialogflow support if you need to use session entities with Google Assistant integration.
                    /// </summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The session to create a session entity type for. Format:
                        /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                        /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is
                        /// not specified, we assume default '-' user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entityTypes";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes the specified session entity type. This method doesn't work with Google Assistant
                    /// integration. Contact Dialogflow support if you need to use session entities with Google
                    /// Assistant integration.
                    /// </summary>
                    /// <param name="name">
                    /// Required. The name of the entity type to delete. Format:
                    /// `projects//agent/sessions//entityTypes/` or
                    /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                    /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                    /// default '-' user.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes the specified session entity type. This method doesn't work with Google Assistant
                    /// integration. Contact Dialogflow support if you need to use session entities with Google
                    /// Assistant integration.
                    /// </summary>
                    public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the entity type to delete. Format:
                        /// `projects//agent/sessions//entityTypes/` or
                        /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Retrieves the specified session entity type. This method doesn't work with Google Assistant
                    /// integration. Contact Dialogflow support if you need to use session entities with Google
                    /// Assistant integration.
                    /// </summary>
                    /// <param name="name">
                    /// Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/`
                    /// or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                    /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                    /// default '-' user.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>
                    /// Retrieves the specified session entity type. This method doesn't work with Google Assistant
                    /// integration. Contact Dialogflow support if you need to use session entities with Google
                    /// Assistant integration.
                    /// </summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the session entity type. Format:
                        /// `projects//agent/sessions//entityTypes/` or
                        /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Returns the list of all session entity types in the specified session. This method doesn't work
                    /// with Google Assistant integration. Contact Dialogflow support if you need to use session
                    /// entities with Google Assistant integration.
                    /// </summary>
                    /// <param name="parent">
                    /// Required. The session to list all session entity types from. Format: `projects//agent/sessions/`
                    /// or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we
                    /// assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>
                    /// Returns the list of all session entity types in the specified session. This method doesn't work
                    /// with Google Assistant integration. Contact Dialogflow support if you need to use session
                    /// entities with Google Assistant integration.
                    /// </summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListSessionEntityTypesResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The session to list all session entity types from. Format:
                        /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                        /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is
                        /// not specified, we assume default '-' user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entityTypes";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates the specified session entity type. This method doesn't work with Google Assistant
                    /// integration. Contact Dialogflow support if you need to use session entities with Google
                    /// Assistant integration.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The unique identifier of this session entity type. Format:
                    /// `projects//agent/sessions//entityTypes/`, or
                    /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                    /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                    /// default '-' user. `` must be the display name of an existing entity type in the same agent that
                    /// will be overridden or supplemented.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates the specified session entity type. This method doesn't work with Google Assistant
                    /// integration. Contact Dialogflow support if you need to use session entities with Google
                    /// Assistant integration.
                    /// </summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The unique identifier of this session entity type. Format:
                        /// `projects//agent/sessions//entityTypes/`, or
                        /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user. `` must be the display name of an existing entity type in the same agent
                        /// that will be overridden or supplemented.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Optional. The mask to control which fields get updated.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Deletes all active contexts in the specified session.</summary>
                /// <param name="parent">
                /// Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/`
                /// or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume
                /// default 'draft' environment. If `User ID` is not specified, we assume default '-' user.
                /// </param>
                public virtual DeleteContextsRequest DeleteContexts(string parent)
                {
                    return new DeleteContextsRequest(this.service, parent);
                }

                /// <summary>Deletes all active contexts in the specified session.</summary>
                public class DeleteContextsRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new DeleteContexts request.</summary>
                    public DeleteContextsRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the session to delete all contexts from. Format:
                    /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment
                    /// ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we
                    /// assume default '-' user.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "deleteContexts";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/contexts";

                    /// <summary>Initializes DeleteContexts parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/sessions/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Processes a natural language query and returns structured, actionable data as a result. This method
                /// is not idempotent, because it may cause contexts and session entity types to be updated, which in
                /// turn might affect results of future queries. If you might use [Agent
                /// Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future,
                /// consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional
                /// functionality for Agent Assist and other CCAI products. Note: Always use agent versions for
                /// production traffic. See [Versions and
                /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="session">
                /// Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or
                /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume
                /// default 'draft' environment (`Environment ID` might be referred to as environment name at some
                /// places). If `User ID` is not specified, we are using "-". It's up to the API caller to choose an
                /// appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session
                /// identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36
                /// characters. For more information, see the [API interactions
                /// guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for
                /// production traffic. See [Versions and
                /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                /// </param>
                public virtual DetectIntentRequest DetectIntent(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest body, string session)
                {
                    return new DetectIntentRequest(this.service, body, session);
                }

                /// <summary>
                /// Processes a natural language query and returns structured, actionable data as a result. This method
                /// is not idempotent, because it may cause contexts and session entity types to be updated, which in
                /// turn might affect results of future queries. If you might use [Agent
                /// Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future,
                /// consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional
                /// functionality for Agent Assist and other CCAI products. Note: Always use agent versions for
                /// production traffic. See [Versions and
                /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                /// </summary>
                public class DetectIntentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentResponse>
                {
                    /// <summary>Constructs a new DetectIntent request.</summary>
                    public DetectIntentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest body, string session) : base(service)
                    {
                        Session = session;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or
                    /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
                    /// assume default 'draft' environment (`Environment ID` might be referred to as environment name at
                    /// some places). If `User ID` is not specified, we are using "-". It's up to the API caller to
                    /// choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of
                    /// user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID`
                    /// must not exceed 36 characters. For more information, see the [API interactions
                    /// guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions
                    /// for production traffic. See [Versions and
                    /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("session", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Session { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "detectIntent";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+session}:detectIntent";

                    /// <summary>Initializes DetectIntent parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("session", new Google.Apis.Discovery.Parameter
                        {
                            Name = "session",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/sessions/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Gets the Versions resource.</summary>
            public virtual VersionsResource Versions { get; }

            /// <summary>The "versions" collection of methods.</summary>
            public class VersionsResource
            {
                private const string Resource = "versions";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public VersionsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Creates an agent version. The new version points to the agent instance in the "default" environment.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The agent to create a version for. Supported formats: - `projects//agent` -
                /// `projects//locations//agent`
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates an agent version. The new version points to the agent instance in the "default" environment.
                /// </summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The agent to create a version for. Supported formats: - `projects//agent` -
                    /// `projects//locations//agent`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/versions";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                    }
                }

                /// <summary>Delete the specified agent version.</summary>
                /// <param name="name">
                /// Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
                /// `projects//locations//agent/versions/`
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Delete the specified agent version.</summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
                    /// `projects//locations//agent/versions/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/versions/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves the specified agent version.</summary>
                /// <param name="name">
                /// Required. The name of the version. Supported formats: - `projects//agent/versions/` -
                /// `projects//locations//agent/versions/`
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified agent version.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the version. Supported formats: - `projects//agent/versions/` -
                    /// `projects//locations//agent/versions/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/versions/[^/]+$",
                        });
                    }
                }

                /// <summary>Returns the list of all versions of the specified agent.</summary>
                /// <param name="parent">
                /// Required. The agent to list all versions from. Supported formats: - `projects//agent` -
                /// `projects//locations//agent`
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all versions of the specified agent.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListVersionsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The agent to list all versions from. Supported formats: - `projects//agent` -
                    /// `projects//locations//agent`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/versions";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Updates the specified agent version. Note that this method does not allow you to update the state of
                /// the agent the given version points to. It allows you to update only mutable properties of the
                /// version resource.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Output only. The unique identifier of this agent version. Supported formats: -
                /// `projects//agent/versions/` - `projects//locations//agent/versions/`
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>
                /// Updates the specified agent version. Note that this method does not allow you to update the state of
                /// the agent the given version points to. It allows you to update only mutable properties of the
                /// version resource.
                /// </summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Output only. The unique identifier of this agent version. Supported formats: -
                    /// `projects//agent/versions/` - `projects//locations//agent/versions/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Required. The mask to control which fields get updated.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/agent/versions/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>
            /// Exports the specified agent to a ZIP file. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
            /// `response`: ExportAgentResponse
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The project that the agent to export is associated with. Format: `projects/`.
            /// </param>
            public virtual ExportRequest Export(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportAgentRequest body, string parent)
            {
                return new ExportRequest(this.service, body, parent);
            }

            /// <summary>
            /// Exports the specified agent to a ZIP file. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
            /// `response`: ExportAgentResponse
            /// </summary>
            public class ExportRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Export request.</summary>
                public ExportRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportAgentRequest body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project that the agent to export is associated with. Format: `projects/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportAgentRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "export";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent:export";

                /// <summary>Initializes Export parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }

            /// <summary>Retrieves the fulfillment.</summary>
            /// <param name="name">Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.</param>
            public virtual GetFulfillmentRequest GetFulfillment(string name)
            {
                return new GetFulfillmentRequest(this.service, name);
            }

            /// <summary>Retrieves the fulfillment.</summary>
            public class GetFulfillmentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment>
            {
                /// <summary>Constructs a new GetFulfillment request.</summary>
                public GetFulfillmentRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "getFulfillment";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes GetFulfillment parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/agent/fulfillment$",
                    });
                }
            }

            /// <summary>
            /// Gets agent validation result. Agent validation is performed during training time and is updated
            /// automatically when training is completed.
            /// </summary>
            /// <param name="parent">
            /// Required. The project that the agent is associated with. Format: `projects/`.
            /// </param>
            public virtual GetValidationResultRequest GetValidationResult(string parent)
            {
                return new GetValidationResultRequest(this.service, parent);
            }

            /// <summary>
            /// Gets agent validation result. Agent validation is performed during training time and is updated
            /// automatically when training is completed.
            /// </summary>
            public class GetValidationResultRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ValidationResult>
            {
                /// <summary>Constructs a new GetValidationResult request.</summary>
                public GetValidationResultRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>Required. The project that the agent is associated with. Format: `projects/`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. The language for which you want a validation result. If not specified, the agent's default
                /// language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are
                /// supported. Note: languages must be enabled in the agent before they can be used.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string LanguageCode { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "getValidationResult";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent/validationResult";

                /// <summary>Initializes GetValidationResult parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                    {
                        Name = "languageCode",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>
            /// Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the
            /// existing ones. Intents and entity types with the same name are replaced with the new versions from
            /// ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless
            /// disabled in agent settings). However, once the import is done, training may not be completed yet. Please
            /// call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a
            /// [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
            /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
            /// `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The
            /// operation only tracks when importing is complete, not when it is done training. Note: You should always
            /// train an agent prior to sending it queries. See the [training
            /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The project that the agent to import is associated with. Format: `projects/`.
            /// </param>
            public virtual ImportRequest Import(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportAgentRequest body, string parent)
            {
                return new ImportRequest(this.service, body, parent);
            }

            /// <summary>
            /// Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the
            /// existing ones. Intents and entity types with the same name are replaced with the new versions from
            /// ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless
            /// disabled in agent settings). However, once the import is done, training may not be completed yet. Please
            /// call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a
            /// [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
            /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
            /// `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The
            /// operation only tracks when importing is complete, not when it is done training. Note: You should always
            /// train an agent prior to sending it queries. See the [training
            /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
            /// </summary>
            public class ImportRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Import request.</summary>
                public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportAgentRequest body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project that the agent to import is associated with. Format: `projects/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportAgentRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "import";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent:import";

                /// <summary>Initializes Import parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the
            /// intents and entity types in the older version are deleted. After the restore, the restored draft agent
            /// will be trained automatically (unless disabled in agent settings). However, once the restore is done,
            /// training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order
            /// to train explicitly. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
            /// `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The
            /// operation only tracks when restoring is complete, not when it is done training. Note: You should always
            /// train an agent prior to sending it queries. See the [training
            /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The project that the agent to restore is associated with. Format: `projects/`.
            /// </param>
            public virtual RestoreRequest Restore(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2RestoreAgentRequest body, string parent)
            {
                return new RestoreRequest(this.service, body, parent);
            }

            /// <summary>
            /// Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the
            /// intents and entity types in the older version are deleted. After the restore, the restored draft agent
            /// will be trained automatically (unless disabled in agent settings). However, once the restore is done,
            /// training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order
            /// to train explicitly. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
            /// `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The
            /// operation only tracks when restoring is complete, not when it is done training. Note: You should always
            /// train an agent prior to sending it queries. See the [training
            /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
            /// </summary>
            public class RestoreRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Restore request.</summary>
                public RestoreRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2RestoreAgentRequest body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project that the agent to restore is associated with. Format: `projects/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2RestoreAgentRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "restore";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent:restore";

                /// <summary>Initializes Restore parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Returns the list of agents. Since there is at most one conversational agent per project, this method is
            /// useful primarily for listing all agents across projects the caller has access to. One can achieve that
            /// with a wildcard project collection id "-". Refer to [List
            /// Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
            /// </summary>
            /// <param name="parent">Required. The project to list agents from. Format: `projects/`.</param>
            public virtual SearchRequest Search(string parent)
            {
                return new SearchRequest(this.service, parent);
            }

            /// <summary>
            /// Returns the list of agents. Since there is at most one conversational agent per project, this method is
            /// useful primarily for listing all agents across projects the caller has access to. One can achieve that
            /// with a wildcard project collection id "-". Refer to [List
            /// Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
            /// </summary>
            public class SearchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchAgentsResponse>
            {
                /// <summary>Constructs a new Search request.</summary>
                public SearchRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>Required. The project to list agents from. Format: `projects/`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The next_page_token value returned from a previous list request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "search";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent:search";

                /// <summary>Initializes Search parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>
            /// Trains the specified agent. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
            /// `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You
            /// should always train an agent prior to sending it queries. See the [training
            /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The project that the agent to train is associated with. Format: `projects/`.
            /// </param>
            public virtual TrainRequest Train(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2TrainAgentRequest body, string parent)
            {
                return new TrainRequest(this.service, body, parent);
            }

            /// <summary>
            /// Trains the specified agent. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
            /// `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You
            /// should always train an agent prior to sending it queries. See the [training
            /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
            /// </summary>
            public class TrainRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Train request.</summary>
                public TrainRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2TrainAgentRequest body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project that the agent to train is associated with. Format: `projects/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2TrainAgentRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "train";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent:train";

                /// <summary>Initializes Train parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }

            /// <summary>Updates the fulfillment.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">
            /// Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` -
            /// `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.
            /// </param>
            public virtual UpdateFulfillmentRequest UpdateFulfillment(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment body, string name)
            {
                return new UpdateFulfillmentRequest(this.service, body, name);
            }

            /// <summary>Updates the fulfillment.</summary>
            public class UpdateFulfillmentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment>
            {
                /// <summary>Constructs a new UpdateFulfillment request.</summary>
                public UpdateFulfillmentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment body, string name) : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The unique identifier of the fulfillment. Supported formats: -
                /// `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
                /// Fulfillment in an Environment.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>
                /// Required. The mask to control which fields get updated. If the mask is not present, all fields will
                /// be updated.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "updateFulfillment";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "PATCH";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes UpdateFulfillment parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/agent/fulfillment$",
                    });
                    RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the AnswerRecords resource.</summary>
        public virtual AnswerRecordsResource AnswerRecords { get; }

        /// <summary>The "answerRecords" collection of methods.</summary>
        public class AnswerRecordsResource
        {
            private const string Resource = "answerRecords";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AnswerRecordsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>
            /// Returns the list of all answer records in the specified project in reverse chronological order.
            /// </summary>
            /// <param name="parent">
            /// Required. The project to list all answer records for in reverse chronological order. Format:
            /// `projects//locations/`.
            /// </param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(this.service, parent);
            }

            /// <summary>
            /// Returns the list of all answer records in the specified project in reverse chronological order.
            /// </summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListAnswerRecordsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project to list all answer records for in reverse chronological order. Format:
                /// `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. Filters to restrict results to specific answer records. The expression has the following
                /// syntax: [AND ] ... The following fields and operators are supported: * conversation_id with
                /// equals(=) operator Examples: * `conversation_id=bar` matches answer records in the
                /// `projects/foo/locations/global/conversations/bar` conversation (assuming the parent is
                /// `projects/foo/locations/global`). For more information about filtering, see [API
                /// Filtering](https://aip.dev/160).
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>
                /// Optional. The maximum number of records to return in a single page. The server may return fewer
                /// records than this. If unspecified, we use 10. The maximum is 100.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>
                /// Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request
                /// used to continue listing on the next page.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/answerRecords";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>Updates the specified answer record.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">
            /// The unique identifier of this answer record. Format: `projects//locations//answerRecords/`.
            /// </param>
            public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnswerRecord body, string name)
            {
                return new PatchRequest(this.service, body, name);
            }

            /// <summary>Updates the specified answer record.</summary>
            public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnswerRecord>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnswerRecord body, string name) : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// The unique identifier of this answer record. Format: `projects//locations//answerRecords/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Required. The mask to control which fields get updated.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnswerRecord Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "patch";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "PATCH";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/answerRecords/[^/]+$",
                    });
                    RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the ConversationDatasets resource.</summary>
        public virtual ConversationDatasetsResource ConversationDatasets { get; }

        /// <summary>The "conversationDatasets" collection of methods.</summary>
        public class ConversationDatasetsResource
        {
            private const string Resource = "conversationDatasets";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ConversationDatasetsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>Retrieves the specified conversation dataset.</summary>
            /// <param name="name">
            /// Required. The conversation dataset to retrieve. Format: `projects//locations//conversationDatasets/`
            /// </param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>Retrieves the specified conversation dataset.</summary>
            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationDataset>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>
                /// Required. The conversation dataset to retrieve. Format: `projects//locations//conversationDatasets/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationDatasets/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Import data into the specified conversation dataset. Note that it is not allowed to import data to a
            /// conversation dataset that already has data in it. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// ImportConversationDataOperationMetadata - `response`: ImportConversationDataOperationResponse
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">
            /// Required. Dataset resource name. Format: `projects//locations//conversationDatasets/`
            /// </param>
            public virtual ImportConversationDataRequest ImportConversationData(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportConversationDataRequest body, string name)
            {
                return new ImportConversationDataRequest(this.service, body, name);
            }

            /// <summary>
            /// Import data into the specified conversation dataset. Note that it is not allowed to import data to a
            /// conversation dataset that already has data in it. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// ImportConversationDataOperationMetadata - `response`: ImportConversationDataOperationResponse
            /// </summary>
            public class ImportConversationDataRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new ImportConversationData request.</summary>
                public ImportConversationDataRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportConversationDataRequest body, string name) : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. Dataset resource name. Format: `projects//locations//conversationDatasets/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportConversationDataRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "importConversationData";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}:importConversationData";

                /// <summary>Initializes ImportConversationData parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationDatasets/[^/]+$",
                    });
                }
            }

            /// <summary>Returns the list of all conversation datasets in the specified project and location.</summary>
            /// <param name="parent">
            /// Required. The project and location name to list all conversation datasets for. Format:
            /// `projects//locations/`
            /// </param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(this.service, parent);
            }

            /// <summary>Returns the list of all conversation datasets in the specified project and location.</summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationDatasetsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project and location name to list all conversation datasets for. Format:
                /// `projects//locations/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. Maximum number of conversation datasets to return in a single page. By default 100 and at
                /// most 1000.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/conversationDatasets";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the ConversationModels resource.</summary>
        public virtual ConversationModelsResource ConversationModels { get; }

        /// <summary>The "conversationModels" collection of methods.</summary>
        public class ConversationModelsResource
        {
            private const string Resource = "conversationModels";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ConversationModelsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                Evaluations = new EvaluationsResource(service);
            }

            /// <summary>Gets the Evaluations resource.</summary>
            public virtual EvaluationsResource Evaluations { get; }

            /// <summary>The "evaluations" collection of methods.</summary>
            public class EvaluationsResource
            {
                private const string Resource = "evaluations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public EvaluationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>Gets an evaluation of conversation model.</summary>
                /// <param name="name">
                /// Required. The conversation model evaluation resource name. Format:
                /// `projects//conversationModels//evaluations/`
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Gets an evaluation of conversation model.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModelEvaluation>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation model evaluation resource name. Format:
                    /// `projects//conversationModels//evaluations/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversationModels/[^/]+/evaluations/[^/]+$",
                        });
                    }
                }

                /// <summary>Lists evaluations of a conversation model.</summary>
                /// <param name="parent">
                /// Required. The conversation model resource name. Format: `projects//conversationModels/`
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Lists evaluations of a conversation model.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation model resource name. Format: `projects//conversationModels/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. Maximum number of evaluations to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/evaluations";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversationModels/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>
            /// Creates a model. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// CreateConversationModelOperationMetadata - `response`: ConversationModel
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The project to create conversation model for. Format: `projects/`</param>
            public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModel body, string parent)
            {
                return new CreateRequest(this.service, body, parent);
            }

            /// <summary>
            /// Creates a model. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// CreateConversationModelOperationMetadata - `response`: ConversationModel
            /// </summary>
            public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModel body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>The project to create conversation model for. Format: `projects/`</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModel Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "create";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/conversationModels";

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Deletes a model. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// DeleteConversationModelOperationMetadata - `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
            /// </summary>
            /// <param name="name">
            /// Required. The conversation model to delete. Format: `projects//conversationModels/`
            /// </param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(this.service, name);
            }

            /// <summary>
            /// Deletes a model. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// DeleteConversationModelOperationMetadata - `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
            /// </summary>
            public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>
                /// Required. The conversation model to delete. Format: `projects//conversationModels/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "delete";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "DELETE";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationModels/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Deploys a model. If a model is already deployed, deploying it has no effect. A model can only serve
            /// prediction requests after it gets deployed. For article suggestion, custom model will not be used unless
            /// it is deployed. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// DeployConversationModelOperationMetadata - `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">
            /// Required. The conversation model to deploy. Format: `projects//conversationModels/`
            /// </param>
            public virtual DeployRequest Deploy(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DeployConversationModelRequest body, string name)
            {
                return new DeployRequest(this.service, body, name);
            }

            /// <summary>
            /// Deploys a model. If a model is already deployed, deploying it has no effect. A model can only serve
            /// prediction requests after it gets deployed. For article suggestion, custom model will not be used unless
            /// it is deployed. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// DeployConversationModelOperationMetadata - `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
            /// </summary>
            public class DeployRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Deploy request.</summary>
                public DeployRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DeployConversationModelRequest body, string name) : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The conversation model to deploy. Format: `projects//conversationModels/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DeployConversationModelRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "deploy";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}:deploy";

                /// <summary>Initializes Deploy parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationModels/[^/]+$",
                    });
                }
            }

            /// <summary>Gets conversation model.</summary>
            /// <param name="name">
            /// Required. The conversation model to retrieve. Format: `projects//conversationModels/`
            /// </param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>Gets conversation model.</summary>
            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModel>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>
                /// Required. The conversation model to retrieve. Format: `projects//conversationModels/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationModels/[^/]+$",
                    });
                }
            }

            /// <summary>Lists conversation models.</summary>
            /// <param name="parent">
            /// Required. The project to list all conversation models for. Format: `projects/`
            /// </param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(this.service, parent);
            }

            /// <summary>Lists conversation models.</summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationModelsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>Required. The project to list all conversation models for. Format: `projects/`</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. Maximum number of conversation models to return in a single page. By default 100 and at
                /// most 1000.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/conversationModels";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>
            /// Undeploys a model. If the model is not deployed this method has no effect. If the model is currently
            /// being used: - For article suggestion, article suggestion will fallback to the default model if model is
            /// undeployed. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// UndeployConversationModelOperationMetadata - `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">
            /// Required. The conversation model to undeploy. Format: `projects//conversationModels/`
            /// </param>
            public virtual UndeployRequest Undeploy(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2UndeployConversationModelRequest body, string name)
            {
                return new UndeployRequest(this.service, body, name);
            }

            /// <summary>
            /// Undeploys a model. If the model is not deployed this method has no effect. If the model is currently
            /// being used: - For article suggestion, article suggestion will fallback to the default model if model is
            /// undeployed. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// UndeployConversationModelOperationMetadata - `response`: An [Empty
            /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
            /// </summary>
            public class UndeployRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Undeploy request.</summary>
                public UndeployRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2UndeployConversationModelRequest body, string name) : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The conversation model to undeploy. Format: `projects//conversationModels/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2UndeployConversationModelRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "undeploy";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}:undeploy";

                /// <summary>Initializes Undeploy parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationModels/[^/]+$",
                    });
                }
            }
        }

        /// <summary>Gets the ConversationProfiles resource.</summary>
        public virtual ConversationProfilesResource ConversationProfiles { get; }

        /// <summary>The "conversationProfiles" collection of methods.</summary>
        public class ConversationProfilesResource
        {
            private const string Resource = "conversationProfiles";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ConversationProfilesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>
            /// Clears a suggestion feature from a conversation profile for the given participant role. This method is a
            /// [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
            /// returned `Operation` type has the following method-specific fields: - `metadata`:
            /// ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="conversationProfile">
            /// Required. The Conversation Profile to add or update the suggestion feature config. Format:
            /// `projects//locations//conversationProfiles/`.
            /// </param>
            public virtual ClearSuggestionFeatureConfigRequest ClearSuggestionFeatureConfig(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest body, string conversationProfile)
            {
                return new ClearSuggestionFeatureConfigRequest(this.service, body, conversationProfile);
            }

            /// <summary>
            /// Clears a suggestion feature from a conversation profile for the given participant role. This method is a
            /// [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
            /// returned `Operation` type has the following method-specific fields: - `metadata`:
            /// ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
            /// </summary>
            public class ClearSuggestionFeatureConfigRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new ClearSuggestionFeatureConfig request.</summary>
                public ClearSuggestionFeatureConfigRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest body, string conversationProfile) : base(service)
                {
                    ConversationProfile = conversationProfile;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The Conversation Profile to add or update the suggestion feature config. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("conversationProfile", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ConversationProfile { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "clearSuggestionFeatureConfig";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+conversationProfile}:clearSuggestionFeatureConfig";

                /// <summary>Initializes ClearSuggestionFeatureConfig parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("conversationProfile", new Google.Apis.Discovery.Parameter
                    {
                        Name = "conversationProfile",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationProfiles/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Creates a conversation profile in the specified project. ConversationProfile.create_time and
            /// ConversationProfile.update_time aren't populated in the response. You can retrieve them via
            /// GetConversationProfile API.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The project to create a conversation profile for. Format: `projects//locations/`.
            /// </param>
            public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile body, string parent)
            {
                return new CreateRequest(this.service, body, parent);
            }

            /// <summary>
            /// Creates a conversation profile in the specified project. ConversationProfile.create_time and
            /// ConversationProfile.update_time aren't populated in the response. You can retrieve them via
            /// GetConversationProfile API.
            /// </summary>
            public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project to create a conversation profile for. Format: `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "create";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/conversationProfiles";

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }

            /// <summary>Deletes the specified conversation profile.</summary>
            /// <param name="name">
            /// Required. The name of the conversation profile to delete. Format:
            /// `projects//locations//conversationProfiles/`.
            /// </param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(this.service, name);
            }

            /// <summary>Deletes the specified conversation profile.</summary>
            public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>
                /// Required. The name of the conversation profile to delete. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "delete";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "DELETE";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationProfiles/[^/]+$",
                    });
                }
            }

            /// <summary>Retrieves the specified conversation profile.</summary>
            /// <param name="name">
            /// Required. The resource name of the conversation profile. Format:
            /// `projects//locations//conversationProfiles/`.
            /// </param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>Retrieves the specified conversation profile.</summary>
            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>
                /// Required. The resource name of the conversation profile. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationProfiles/[^/]+$",
                    });
                }
            }

            /// <summary>Returns the list of all conversation profiles in the specified project.</summary>
            /// <param name="parent">
            /// Required. The project to list all conversation profiles from. Format: `projects//locations/`.
            /// </param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(this.service, parent);
            }

            /// <summary>Returns the list of all conversation profiles in the specified project.</summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationProfilesResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project to list all conversation profiles from. Format: `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// The maximum number of items to return in a single page. By default 100 and at most 1000.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The next_page_token value returned from a previous list request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/conversationProfiles";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>
            /// Updates the specified conversation profile. ConversationProfile.create_time and
            /// ConversationProfile.update_time aren't populated in the response. You can retrieve them via
            /// GetConversationProfile API.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">
            /// The unique identifier of this conversation profile. Format:
            /// `projects//locations//conversationProfiles/`.
            /// </param>
            public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile body, string name)
            {
                return new PatchRequest(this.service, body, name);
            }

            /// <summary>
            /// Updates the specified conversation profile. ConversationProfile.create_time and
            /// ConversationProfile.update_time aren't populated in the response. You can retrieve them via
            /// GetConversationProfile API.
            /// </summary>
            public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile body, string name) : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// The unique identifier of this conversation profile. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Required. The mask to control which fields to update.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "patch";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "PATCH";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationProfiles/[^/]+$",
                    });
                    RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>
            /// Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains the
            /// type of suggestion feature for the participant role, it will update it. Otherwise it will insert the
            /// suggestion feature. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running
            /// operation to add or update suggestion feature config for the same conversation profile, participant role
            /// and suggestion feature type exists, please cancel the existing long running operation before sending
            /// such request, otherwise the request will be rejected.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="conversationProfile">
            /// Required. The Conversation Profile to add or update the suggestion feature config. Format:
            /// `projects//locations//conversationProfiles/`.
            /// </param>
            public virtual SetSuggestionFeatureConfigRequest SetSuggestionFeatureConfig(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest body, string conversationProfile)
            {
                return new SetSuggestionFeatureConfigRequest(this.service, body, conversationProfile);
            }

            /// <summary>
            /// Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains the
            /// type of suggestion feature for the participant role, it will update it. Otherwise it will insert the
            /// suggestion feature. This method is a [long-running
            /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
            /// `Operation` type has the following method-specific fields: - `metadata`:
            /// SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running
            /// operation to add or update suggestion feature config for the same conversation profile, participant role
            /// and suggestion feature type exists, please cancel the existing long running operation before sending
            /// such request, otherwise the request will be rejected.
            /// </summary>
            public class SetSuggestionFeatureConfigRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new SetSuggestionFeatureConfig request.</summary>
                public SetSuggestionFeatureConfigRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest body, string conversationProfile) : base(service)
                {
                    ConversationProfile = conversationProfile;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The Conversation Profile to add or update the suggestion feature config. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("conversationProfile", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string ConversationProfile { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "setSuggestionFeatureConfig";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+conversationProfile}:setSuggestionFeatureConfig";

                /// <summary>Initializes SetSuggestionFeatureConfig parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("conversationProfile", new Google.Apis.Discovery.Parameter
                    {
                        Name = "conversationProfile",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversationProfiles/[^/]+$",
                    });
                }
            }
        }

        /// <summary>Gets the Conversations resource.</summary>
        public virtual ConversationsResource Conversations { get; }

        /// <summary>The "conversations" collection of methods.</summary>
        public class ConversationsResource
        {
            private const string Resource = "conversations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public ConversationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                Messages = new MessagesResource(service);
                Participants = new ParticipantsResource(service);
                Suggestions = new SuggestionsResource(service);
            }

            /// <summary>Gets the Messages resource.</summary>
            public virtual MessagesResource Messages { get; }

            /// <summary>The "messages" collection of methods.</summary>
            public class MessagesResource
            {
                private const string Resource = "messages";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public MessagesResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in
                /// descending order. To fetch updates without duplication, send request with filter
                /// `create_time_epoch_microseconds &amp;gt; [first item's create_time of previous request]` and empty
                /// page_token.
                /// </summary>
                /// <param name="parent">
                /// Required. The name of the conversation to list messages for. Format:
                /// `projects//locations//conversations/`
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>
                /// Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in
                /// descending order. To fetch updates without duplication, send request with filter
                /// `create_time_epoch_microseconds &amp;gt; [first item's create_time of previous request]` and empty
                /// page_token.
                /// </summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListMessagesResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the conversation to list messages for. Format:
                    /// `projects//locations//conversations/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. Filter on message fields. Currently predicates on `create_time` and
                    /// `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds
                    /// accuracy. E.g., `create_time_epoch_microseconds &amp;gt; 1551790877964485` or `create_time
                    /// &amp;gt; 2017-01-15T01:30:15.01Z`. For more information about filtering, see [API
                    /// Filtering](https://aip.dev/160).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/messages";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the Participants resource.</summary>
            public virtual ParticipantsResource Participants { get; }

            /// <summary>The "participants" collection of methods.</summary>
            public class ParticipantsResource
            {
                private const string Resource = "participants";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public ParticipantsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Suggestions = new SuggestionsResource(service);
                }

                /// <summary>Gets the Suggestions resource.</summary>
                public virtual SuggestionsResource Suggestions { get; }

                /// <summary>The "suggestions" collection of methods.</summary>
                public class SuggestionsResource
                {
                    private const string Resource = "suggestions";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public SuggestionsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Gets suggested articles for a participant based on specific historical messages.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the participant to fetch suggestion for. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </param>
                    public virtual SuggestArticlesRequest SuggestArticles(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestArticlesRequest body, string parent)
                    {
                        return new SuggestArticlesRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Gets suggested articles for a participant based on specific historical messages.
                    /// </summary>
                    public class SuggestArticlesRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestArticlesResponse>
                    {
                        /// <summary>Constructs a new SuggestArticles request.</summary>
                        public SuggestArticlesRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestArticlesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the participant to fetch suggestion for. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestArticlesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "suggestArticles";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/suggestions:suggestArticles";

                        /// <summary>Initializes SuggestArticles parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Gets suggested faq answers for a participant based on specific historical messages.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the participant to fetch suggestion for. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </param>
                    public virtual SuggestFaqAnswersRequest SuggestFaqAnswers(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestFaqAnswersRequest body, string parent)
                    {
                        return new SuggestFaqAnswersRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Gets suggested faq answers for a participant based on specific historical messages.
                    /// </summary>
                    public class SuggestFaqAnswersRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestFaqAnswersResponse>
                    {
                        /// <summary>Constructs a new SuggestFaqAnswers request.</summary>
                        public SuggestFaqAnswersRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestFaqAnswersRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the participant to fetch suggestion for. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestFaqAnswersRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "suggestFaqAnswers";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/suggestions:suggestFaqAnswers";

                        /// <summary>Initializes SuggestFaqAnswers parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets knowledge assist suggestions based on historical messages.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the participant to fetch suggestions for. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </param>
                    public virtual SuggestKnowledgeAssistRequest SuggestKnowledgeAssist(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestKnowledgeAssistRequest body, string parent)
                    {
                        return new SuggestKnowledgeAssistRequest(this.service, body, parent);
                    }

                    /// <summary>Gets knowledge assist suggestions based on historical messages.</summary>
                    public class SuggestKnowledgeAssistRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestKnowledgeAssistResponse>
                    {
                        /// <summary>Constructs a new SuggestKnowledgeAssist request.</summary>
                        public SuggestKnowledgeAssistRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestKnowledgeAssistRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the participant to fetch suggestions for. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestKnowledgeAssistRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "suggestKnowledgeAssist";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/suggestions:suggestKnowledgeAssist";

                        /// <summary>Initializes SuggestKnowledgeAssist parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets smart replies for a participant based on specific historical messages.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the participant to fetch suggestion for. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </param>
                    public virtual SuggestSmartRepliesRequest SuggestSmartReplies(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestSmartRepliesRequest body, string parent)
                    {
                        return new SuggestSmartRepliesRequest(this.service, body, parent);
                    }

                    /// <summary>Gets smart replies for a participant based on specific historical messages.</summary>
                    public class SuggestSmartRepliesRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestSmartRepliesResponse>
                    {
                        /// <summary>Constructs a new SuggestSmartReplies request.</summary>
                        public SuggestSmartRepliesRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestSmartRepliesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the participant to fetch suggestion for. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestSmartRepliesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "suggestSmartReplies";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/suggestions:suggestSmartReplies";

                        /// <summary>Initializes SuggestSmartReplies parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>
                /// Adds a text (chat, for example), or audio (phone recording, for example) message from a participant
                /// into the conversation. Note: Always use agent versions for production traffic sent to virtual
                /// agents. See [Versions and
                /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="participant">
                /// Required. The name of the participant this text comes from. Format:
                /// `projects//locations//conversations//participants/`.
                /// </param>
                public virtual AnalyzeContentRequest AnalyzeContent(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnalyzeContentRequest body, string participant)
                {
                    return new AnalyzeContentRequest(this.service, body, participant);
                }

                /// <summary>
                /// Adds a text (chat, for example), or audio (phone recording, for example) message from a participant
                /// into the conversation. Note: Always use agent versions for production traffic sent to virtual
                /// agents. See [Versions and
                /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                /// </summary>
                public class AnalyzeContentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnalyzeContentResponse>
                {
                    /// <summary>Constructs a new AnalyzeContent request.</summary>
                    public AnalyzeContentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnalyzeContentRequest body, string participant) : base(service)
                    {
                        Participant = participant;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the participant this text comes from. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("participant", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Participant { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnalyzeContentRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "analyzeContent";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+participant}:analyzeContent";

                    /// <summary>Initializes AnalyzeContent parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("participant", new Google.Apis.Discovery.Parameter
                        {
                            Name = "participant",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                        });
                    }
                }

                /// <summary>Creates a new participant in a conversation.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. Resource identifier of the conversation adding the participant. Format:
                /// `projects//locations//conversations/`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>Creates a new participant in a conversation.</summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Resource identifier of the conversation adding the participant. Format:
                    /// `projects//locations//conversations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/participants";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves a conversation participant.</summary>
                /// <param name="name">
                /// Required. The name of the participant. Format: `projects//locations//conversations//participants/`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves a conversation participant.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the participant. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                        });
                    }
                }

                /// <summary>Returns the list of all participants in the specified conversation.</summary>
                /// <param name="parent">
                /// Required. The conversation to list all participants from. Format:
                /// `projects//locations//conversations/`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all participants in the specified conversation.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListParticipantsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation to list all participants from. Format:
                    /// `projects//locations//conversations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/participants";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Updates the specified participant.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Optional. The unique identifier of this participant. Format:
                /// `projects//locations//conversations//participants/`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>Updates the specified participant.</summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Optional. The unique identifier of this participant. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Required. The mask to specify which fields to update.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the Suggestions resource.</summary>
            public virtual SuggestionsResource Suggestions { get; }

            /// <summary>The "suggestions" collection of methods.</summary>
            public class SuggestionsResource
            {
                private const string Resource = "suggestions";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public SuggestionsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Generates all the suggestions using generators configured in the conversation profile. A generator
                /// is used only if its trigger event is matched.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="conversation">
                /// Required. The conversation for which the suggestions are generated. Format:
                /// `projects//locations//conversations/`. The conversation must be created with a conversation profile
                /// which has generators configured in it to be able to get suggestions.
                /// </param>
                public virtual GenerateRequest Generate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateSuggestionsRequest body, string conversation)
                {
                    return new GenerateRequest(this.service, body, conversation);
                }

                /// <summary>
                /// Generates all the suggestions using generators configured in the conversation profile. A generator
                /// is used only if its trigger event is matched.
                /// </summary>
                public class GenerateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateSuggestionsResponse>
                {
                    /// <summary>Constructs a new Generate request.</summary>
                    public GenerateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateSuggestionsRequest body, string conversation) : base(service)
                    {
                        Conversation = conversation;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation for which the suggestions are generated. Format:
                    /// `projects//locations//conversations/`. The conversation must be created with a conversation
                    /// profile which has generators configured in it to be able to get suggestions.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("conversation", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Conversation { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateSuggestionsRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "generate";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+conversation}/suggestions:generate";

                    /// <summary>Initializes Generate parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("conversation", new Google.Apis.Discovery.Parameter
                        {
                            Name = "conversation",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+$",
                        });
                    }
                }

                /// <summary>Get answers for the given query based on knowledge documents.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="conversation">
                /// Optional. The conversation (between human agent and end user) where the search request is triggered.
                /// Format: `projects//locations//conversations/`.
                /// </param>
                public virtual SearchKnowledgeRequest SearchKnowledge(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest body, string conversation)
                {
                    return new SearchKnowledgeRequest(this.service, body, conversation);
                }

                /// <summary>Get answers for the given query based on knowledge documents.</summary>
                public class SearchKnowledgeRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeResponse>
                {
                    /// <summary>Constructs a new SearchKnowledge request.</summary>
                    public SearchKnowledgeRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest body, string conversation) : base(service)
                    {
                        Conversation = conversation;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Optional. The conversation (between human agent and end user) where the search request is
                    /// triggered. Format: `projects//locations//conversations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("conversation", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Conversation { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "searchKnowledge";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+conversation}/suggestions:searchKnowledge";

                    /// <summary>Initializes SearchKnowledge parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("conversation", new Google.Apis.Discovery.Parameter
                        {
                            Name = "conversation",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Suggests summary for a conversation based on specific historical messages. The range of the messages
                /// to be used for summary can be specified in the request.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="conversation">
                /// Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`.
                /// </param>
                public virtual SuggestConversationSummaryRequest SuggestConversationSummary(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestConversationSummaryRequest body, string conversation)
                {
                    return new SuggestConversationSummaryRequest(this.service, body, conversation);
                }

                /// <summary>
                /// Suggests summary for a conversation based on specific historical messages. The range of the messages
                /// to be used for summary can be specified in the request.
                /// </summary>
                public class SuggestConversationSummaryRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestConversationSummaryResponse>
                {
                    /// <summary>Constructs a new SuggestConversationSummary request.</summary>
                    public SuggestConversationSummaryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestConversationSummaryRequest body, string conversation) : base(service)
                    {
                        Conversation = conversation;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation to fetch suggestion for. Format:
                    /// `projects//locations//conversations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("conversation", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Conversation { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestConversationSummaryRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "suggestConversationSummary";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+conversation}/suggestions:suggestConversationSummary";

                    /// <summary>Initializes SuggestConversationSummary parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("conversation", new Google.Apis.Discovery.Parameter
                        {
                            Name = "conversation",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/conversations/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>
            /// Completes the specified conversation. Finished conversations are purged from the database after 30 days.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">
            /// Required. Resource identifier of the conversation to close. Format:
            /// `projects//locations//conversations/`.
            /// </param>
            public virtual CompleteRequest Complete(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CompleteConversationRequest body, string name)
            {
                return new CompleteRequest(this.service, body, name);
            }

            /// <summary>
            /// Completes the specified conversation. Finished conversations are purged from the database after 30 days.
            /// </summary>
            public class CompleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation>
            {
                /// <summary>Constructs a new Complete request.</summary>
                public CompleteRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CompleteConversationRequest body, string name) : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. Resource identifier of the conversation to close. Format:
                /// `projects//locations//conversations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CompleteConversationRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "complete";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}:complete";

                /// <summary>Initializes Complete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversations/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle:
            /// There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent
            /// Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no
            /// dialogflow agent responding to user queries. But we will provide suggestions which are generated from
            /// conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation
            /// will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during
            /// `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will
            /// transfer to Assist Stage.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`.
            /// </param>
            public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation body, string parent)
            {
                return new CreateRequest(this.service, body, parent);
            }

            /// <summary>
            /// Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle:
            /// There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent
            /// Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no
            /// dialogflow agent responding to user queries. But we will provide suggestions which are generated from
            /// conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation
            /// will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during
            /// `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will
            /// transfer to Assist Stage.
            /// </summary>
            public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. Resource identifier of the project creating the conversation. Format:
                /// `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if
                /// you cannot wait for the response to return a auto-generated one to you. The conversation ID must be
                /// compliant with the regression formula `a-zA-Z*` with the characters length in range of [3,64]. If
                /// the field is provided, the caller is responsible for 1. the uniqueness of the ID, otherwise the
                /// request will be rejected. 2. the consistency for whether to use custom ID or not under a project to
                /// better ensure uniqueness.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("conversationId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string ConversationId { get; set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "create";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/conversations";

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("conversationId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "conversationId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>Retrieves the specific conversation.</summary>
            /// <param name="name">
            /// Required. The name of the conversation. Format: `projects//locations//conversations/`.
            /// </param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>Retrieves the specific conversation.</summary>
            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>
                /// Required. The name of the conversation. Format: `projects//locations//conversations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/conversations/[^/]+$",
                    });
                }
            }

            /// <summary>Returns the list of all conversations in the specified project.</summary>
            /// <param name="parent">
            /// Required. The project from which to list all conversation. Format: `projects//locations/`.
            /// </param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(this.service, parent);
            }

            /// <summary>Returns the list of all conversations in the specified project.</summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project from which to list all conversation. Format: `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. A filter expression that filters conversations listed in the response. Only
                /// `lifecycle_state` can be filtered on in this way. For example, the following expression only returns
                /// `COMPLETED` conversations: `lifecycle_state = "COMPLETED"` For more information about filtering, see
                /// [API Filtering](https://aip.dev/160).
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>
                /// Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/conversations";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the Generators resource.</summary>
        public virtual GeneratorsResource Generators { get; }

        /// <summary>The "generators" collection of methods.</summary>
        public class GeneratorsResource
        {
            private const string Resource = "generators";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public GeneratorsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>Creates a generator.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The project/location to create generator for. Format: `projects//locations/`
            /// </param>
            public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator body, string parent)
            {
                return new CreateRequest(this.service, body, parent);
            }

            /// <summary>Creates a generator.</summary>
            public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project/location to create generator for. Format: `projects//locations/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. The ID to use for the generator, which will become the final component of the generator's
                /// resource name. The generator ID must be compliant with the regression formula `a-zA-Z*` with the
                /// characters length in range of [3,64]. If the field is not provided, an Id will be auto-generated. If
                /// the field is provided, the caller is responsible for 1. the uniqueness of the ID, otherwise the
                /// request will be rejected. 2. the consistency for whether to use custom ID or not under a project to
                /// better ensure uniqueness.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("generatorId", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string GeneratorId { get; set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "create";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/generators";

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("generatorId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "generatorId",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>Lists generators.</summary>
            /// <param name="parent">
            /// Required. The project/location to list generators for. Format: `projects//locations/`
            /// </param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(this.service, parent);
            }

            /// <summary>Lists generators.</summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListGeneratorsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project/location to list generators for. Format: `projects//locations/`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// Optional. Maximum number of conversation models to return in a single page. Default to 10.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/generators";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the KnowledgeBases resource.</summary>
        public virtual KnowledgeBasesResource KnowledgeBases { get; }

        /// <summary>The "knowledgeBases" collection of methods.</summary>
        public class KnowledgeBasesResource
        {
            private const string Resource = "knowledgeBases";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public KnowledgeBasesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                Documents = new DocumentsResource(service);
            }

            /// <summary>Gets the Documents resource.</summary>
            public virtual DocumentsResource Documents { get; }

            /// <summary>The "documents" collection of methods.</summary>
            public class DocumentsResource
            {
                private const string Resource = "documents";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public DocumentsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Creates a new document. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata
                /// - `response`: Document
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The knowledge base to create a document for. Format:
                /// `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates a new document. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata
                /// - `response`: Document
                /// </summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The knowledge base to create a document for. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/documents";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Deletes the specified document. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata
                /// - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                /// <param name="name">
                /// Required. The name of the document to delete. Format:
                /// `projects//locations//knowledgeBases//documents/`.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>
                /// Deletes the specified document. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata
                /// - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the document to delete. Format:
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Exports a smart messaging candidate document into the specified destination. This method is a
                /// [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
                /// The returned `Operation` type has the following method-specific fields: - `metadata`:
                /// KnowledgeOperationMetadata - `response`: Document
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Required. The name of the document to export. Format:
                /// `projects//locations//knowledgeBases//documents/`.
                /// </param>
                public virtual ExportRequest Export(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportDocumentRequest body, string name)
                {
                    return new ExportRequest(this.service, body, name);
                }

                /// <summary>
                /// Exports a smart messaging candidate document into the specified destination. This method is a
                /// [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
                /// The returned `Operation` type has the following method-specific fields: - `metadata`:
                /// KnowledgeOperationMetadata - `response`: Document
                /// </summary>
                public class ExportRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Export request.</summary>
                    public ExportRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportDocumentRequest body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the document to export. Format:
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportDocumentRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "export";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}:export";

                    /// <summary>Initializes Export parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves the specified document.</summary>
                /// <param name="name">
                /// Required. The name of the document to retrieve. Format
                /// `projects//locations//knowledgeBases//documents/`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified document.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the document to retrieve. Format
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Creates documents by importing data from external sources. Dialogflow supports up to 350 documents
                /// in each request. If you try to import more, Dialogflow will return an error. This method is a
                /// [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
                /// The returned `Operation` type has the following method-specific fields: - `metadata`:
                /// KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The knowledge base to import documents into. Format:
                /// `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual ImportRequest Import(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportDocumentsRequest body, string parent)
                {
                    return new ImportRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates documents by importing data from external sources. Dialogflow supports up to 350 documents
                /// in each request. If you try to import more, Dialogflow will return an error. This method is a
                /// [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
                /// The returned `Operation` type has the following method-specific fields: - `metadata`:
                /// KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
                /// </summary>
                public class ImportRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Import request.</summary>
                    public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportDocumentsRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The knowledge base to import documents into. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportDocumentsRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "import";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/documents:import";

                    /// <summary>Initializes Import parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+$",
                        });
                    }
                }

                /// <summary>Returns the list of all documents of the knowledge base.</summary>
                /// <param name="parent">
                /// Required. The knowledge base to list all documents for. Format:
                /// `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all documents of the knowledge base.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListDocumentsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The knowledge base to list all documents for. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// The filter expression used to filter documents returned by the list method. The expression has
                    /// the following syntax: [AND ] ... The following fields and operators are supported: *
                    /// knowledge_types with has(:) operator * display_name with has(:) operator * state with equals(=)
                    /// operator Examples: * "knowledge_types:FAQ" matches documents with FAQ knowledge type. *
                    /// "display_name:customer" matches documents whose display name contains "customer". *
                    /// "state=ACTIVE" matches documents with ACTIVE state. * "knowledge_types:FAQ AND state=ACTIVE"
                    /// matches all active FAQ documents. For more information about filtering, see [API
                    /// Filtering](https://aip.dev/160).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>
                    /// The maximum number of items to return in a single page. By default 10 and at most 100.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/documents";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Updates the specified document. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata
                /// - `response`: Document
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Optional. The document resource name. The name must be empty when creating a document. Format:
                /// `projects//locations//knowledgeBases//documents/`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>
                /// Updates the specified document. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata
                /// - `response`: Document
                /// </summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Optional. The document resource name. The name must be empty when creating a document. Format:
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
                    /// InvalidArgument will be returned for attempting to update other fields.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Reloads the specified document from its specified source, content_uri or content. The previously
                /// loaded content of the document will be deleted. Note: Even when the content of the document has not
                /// changed, there still may be side effects because of internal implementation changes. This method is
                /// a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
                /// The returned `Operation` type has the following method-specific fields: - `metadata`:
                /// KnowledgeOperationMetadata - `response`: Document Note: The
                /// `projects.agent.knowledgeBases.documents` resource is deprecated; only use
                /// `projects.knowledgeBases.documents`.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Required. The name of the document to reload. Format:
                /// `projects//locations//knowledgeBases//documents/`
                /// </param>
                public virtual ReloadRequest Reload(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest body, string name)
                {
                    return new ReloadRequest(this.service, body, name);
                }

                /// <summary>
                /// Reloads the specified document from its specified source, content_uri or content. The previously
                /// loaded content of the document will be deleted. Note: Even when the content of the document has not
                /// changed, there still may be side effects because of internal implementation changes. This method is
                /// a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation).
                /// The returned `Operation` type has the following method-specific fields: - `metadata`:
                /// KnowledgeOperationMetadata - `response`: Document Note: The
                /// `projects.agent.knowledgeBases.documents` resource is deprecated; only use
                /// `projects.knowledgeBases.documents`.
                /// </summary>
                public class ReloadRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Reload request.</summary>
                    public ReloadRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the document to reload. Format:
                    /// `projects//locations//knowledgeBases//documents/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "reload";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}:reload";

                    /// <summary>Initializes Reload parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Creates a knowledge base.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The project to create a knowledge base for. Format: `projects//locations/`.
            /// </param>
            public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string parent)
            {
                return new CreateRequest(this.service, body, parent);
            }

            /// <summary>Creates a knowledge base.</summary>
            public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project to create a knowledge base for. Format: `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "create";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/knowledgeBases";

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }

            /// <summary>Deletes the specified knowledge base.</summary>
            /// <param name="name">
            /// Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
            /// </param>
            public virtual DeleteRequest Delete(string name)
            {
                return new DeleteRequest(this.service, name);
            }

            /// <summary>Deletes the specified knowledge base.</summary>
            public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new Delete request.</summary>
                public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>
                /// Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>
                /// Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base
                /// are also deleted.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("force", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<bool> Force { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "delete";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "DELETE";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Delete parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+$",
                    });
                    RequestParameters.Add("force", new Google.Apis.Discovery.Parameter
                    {
                        Name = "force",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>Retrieves the specified knowledge base.</summary>
            /// <param name="name">
            /// Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
            /// </param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>Retrieves the specified knowledge base.</summary>
            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>
                /// Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+$",
                    });
                }
            }

            /// <summary>Returns the list of all knowledge bases of the specified agent.</summary>
            /// <param name="parent">
            /// Required. The project to list of knowledge bases for. Format: `projects//locations/`.
            /// </param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(this.service, parent);
            }

            /// <summary>Returns the list of all knowledge bases of the specified agent.</summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListKnowledgeBasesResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project to list of knowledge bases for. Format: `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>
                /// The filter expression used to filter knowledge bases returned by the list method. The expression has
                /// the following syntax: [AND ] ... The following fields and operators are supported: * display_name
                /// with has(:) operator * language_code with equals(=) operator Examples: * 'language_code=en-us'
                /// matches knowledge bases with en-us language code. * 'display_name:articles' matches knowledge bases
                /// whose display name contains "articles". * 'display_name:"Best Articles"' matches knowledge bases
                /// whose display name contains "Best Articles". * 'language_code=en-gb AND display_name=articles'
                /// matches all knowledge bases whose display name contains "articles" and whose language code is
                /// "en-gb". Note: An empty filter string (i.e. "") is a no-op and will result in no filtering. For more
                /// information about filtering, see [API Filtering](https://aip.dev/160).
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>
                /// The maximum number of items to return in a single page. By default 10 and at most 100.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The next_page_token value returned from a previous list request.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/knowledgeBases";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>Updates the specified knowledge base.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">
            /// The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
            /// `projects//locations//knowledgeBases/`.
            /// </param>
            public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string name)
            {
                return new PatchRequest(this.service, body, name);
            }

            /// <summary>Updates the specified knowledge base.</summary>
            public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string name) : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
                /// `projects//locations//knowledgeBases/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>
                /// Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
                /// InvalidArgument will be returned for attempting to update other fields.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "patch";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "PATCH";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/knowledgeBases/[^/]+$",
                    });
                    RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the Locations resource.</summary>
        public virtual LocationsResource Locations { get; }

        /// <summary>The "locations" collection of methods.</summary>
        public class LocationsResource
        {
            private const string Resource = "locations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LocationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                Agent = new AgentResource(service);
                AnswerRecords = new AnswerRecordsResource(service);
                ConversationDatasets = new ConversationDatasetsResource(service);
                ConversationModels = new ConversationModelsResource(service);
                ConversationProfiles = new ConversationProfilesResource(service);
                Conversations = new ConversationsResource(service);
                EncryptionSpec = new EncryptionSpecResource(service);
                Generators = new GeneratorsResource(service);
                KnowledgeBases = new KnowledgeBasesResource(service);
                Operations = new OperationsResource(service);
                StatelessSuggestion = new StatelessSuggestionResource(service);
                Suggestions = new SuggestionsResource(service);
            }

            /// <summary>Gets the Agent resource.</summary>
            public virtual AgentResource Agent { get; }

            /// <summary>The "agent" collection of methods.</summary>
            public class AgentResource
            {
                private const string Resource = "agent";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public AgentResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    EntityTypes = new EntityTypesResource(service);
                    Environments = new EnvironmentsResource(service);
                    Intents = new IntentsResource(service);
                    Sessions = new SessionsResource(service);
                    Versions = new VersionsResource(service);
                }

                /// <summary>Gets the EntityTypes resource.</summary>
                public virtual EntityTypesResource EntityTypes { get; }

                /// <summary>The "entityTypes" collection of methods.</summary>
                public class EntityTypesResource
                {
                    private const string Resource = "entityTypes";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public EntityTypesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Entities = new EntitiesResource(service);
                    }

                    /// <summary>Gets the Entities resource.</summary>
                    public virtual EntitiesResource Entities { get; }

                    /// <summary>The "entities" collection of methods.</summary>
                    public class EntitiesResource
                    {
                        private const string Resource = "entities";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public EntitiesResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Creates multiple new entities in the specified entity type. This method is a [long-running
                        /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                        /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                        /// [Struct
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
                        /// - `response`: An [Empty
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                        /// Note: You should always train an agent prior to sending it queries. See the [training
                        /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the entity type to create entities in. Format:
                        /// `projects//agent/entityTypes/`.
                        /// </param>
                        public virtual BatchCreateRequest BatchCreate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchCreateEntitiesRequest body, string parent)
                        {
                            return new BatchCreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates multiple new entities in the specified entity type. This method is a [long-running
                        /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                        /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                        /// [Struct
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
                        /// - `response`: An [Empty
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                        /// Note: You should always train an agent prior to sending it queries. See the [training
                        /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                        /// </summary>
                        public class BatchCreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new BatchCreate request.</summary>
                            public BatchCreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchCreateEntitiesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the entity type to create entities in. Format:
                            /// `projects//agent/entityTypes/`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchCreateEntitiesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "batchCreate";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/entities:batchCreate";

                            /// <summary>Initializes BatchCreate parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes entities in the specified entity type. This method is a [long-running
                        /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                        /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                        /// [Struct
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
                        /// - `response`: An [Empty
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                        /// Note: You should always train an agent prior to sending it queries. See the [training
                        /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the entity type to delete entries for. Format:
                        /// `projects//agent/entityTypes/`.
                        /// </param>
                        public virtual BatchDeleteRequest BatchDelete(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntitiesRequest body, string parent)
                        {
                            return new BatchDeleteRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Deletes entities in the specified entity type. This method is a [long-running
                        /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                        /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                        /// [Struct
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
                        /// - `response`: An [Empty
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                        /// Note: You should always train an agent prior to sending it queries. See the [training
                        /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                        /// </summary>
                        public class BatchDeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new BatchDelete request.</summary>
                            public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntitiesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the entity type to delete entries for. Format:
                            /// `projects//agent/entityTypes/`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntitiesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "batchDelete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/entities:batchDelete";

                            /// <summary>Initializes BatchDelete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Updates or creates multiple entities in the specified entity type. This method does not
                        /// affect entities in the entity type that aren't explicitly specified in the request. This
                        /// method is a [long-running
                        /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                        /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                        /// [Struct
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
                        /// - `response`: An [Empty
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                        /// Note: You should always train an agent prior to sending it queries. See the [training
                        /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the entity type to update or create entities in. Format:
                        /// `projects//agent/entityTypes/`.
                        /// </param>
                        public virtual BatchUpdateRequest BatchUpdate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntitiesRequest body, string parent)
                        {
                            return new BatchUpdateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Updates or creates multiple entities in the specified entity type. This method does not
                        /// affect entities in the entity type that aren't explicitly specified in the request. This
                        /// method is a [long-running
                        /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                        /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                        /// [Struct
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct)
                        /// - `response`: An [Empty
                        /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                        /// Note: You should always train an agent prior to sending it queries. See the [training
                        /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                        /// </summary>
                        public class BatchUpdateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new BatchUpdate request.</summary>
                            public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntitiesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the entity type to update or create entities in. Format:
                            /// `projects//agent/entityTypes/`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntitiesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "batchUpdate";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/entities:batchUpdate";

                            /// <summary>Initializes BatchUpdate parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>
                    /// Deletes entity types in the specified agent. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
                    /// </param>
                    public virtual BatchDeleteRequest BatchDelete(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest body, string parent)
                    {
                        return new BatchDeleteRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Deletes entity types in the specified agent. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class BatchDeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new BatchDelete request.</summary>
                        public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "batchDelete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entityTypes:batchDelete";

                        /// <summary>Initializes BatchDelete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                        }
                    }

                    /// <summary>
                    /// Updates/Creates multiple entity types in the specified agent. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to
                    /// sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the agent to update or create entity types in. Format: `projects//agent`.
                    /// </param>
                    public virtual BatchUpdateRequest BatchUpdate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest body, string parent)
                    {
                        return new BatchUpdateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Updates/Creates multiple entity types in the specified agent. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to
                    /// sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class BatchUpdateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new BatchUpdate request.</summary>
                        public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the agent to update or create entity types in. Format:
                        /// `projects//agent`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "batchUpdate";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entityTypes:batchUpdate";

                        /// <summary>Initializes BatchUpdate parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                        }
                    }

                    /// <summary>
                    /// Creates an entity type in the specified agent. Note: You should always train an agent prior to
                    /// sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The agent to create a entity type for. Format: `projects//agent`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates an entity type in the specified agent. Note: You should always train an agent prior to
                    /// sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The agent to create a entity type for. Format: `projects//agent`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entityTypes";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes the specified entity type. Note: You should always train an agent prior to sending it
                    /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="name">
                    /// Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes the specified entity type. Note: You should always train an agent prior to sending it
                    /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Retrieves the specified entity type.</summary>
                    /// <param name="name">
                    /// Required. The name of the entity type. Format: `projects//agent/entityTypes/`.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Retrieves the specified entity type.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the entity type. Format: `projects//agent/entityTypes/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Returns the list of all entity types in the specified agent.</summary>
                    /// <param name="parent">
                    /// Required. The agent to list all entity types from. Format: `projects//agent`.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all entity types in the specified agent.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListEntityTypesResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The agent to list all entity types from. Format: `projects//agent`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/entityTypes";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates the specified entity type. Note: You should always train an agent prior to sending it
                    /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
                    /// EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates the specified entity type. Note: You should always train an agent prior to sending it
                    /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
                        /// EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>Optional. The mask to control which fields get updated.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EntityType Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Environments resource.</summary>
                public virtual EnvironmentsResource Environments { get; }

                /// <summary>The "environments" collection of methods.</summary>
                public class EnvironmentsResource
                {
                    private const string Resource = "environments";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public EnvironmentsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Intents = new IntentsResource(service);
                        Users = new UsersResource(service);
                    }

                    /// <summary>Gets the Intents resource.</summary>
                    public virtual IntentsResource Intents { get; }

                    /// <summary>The "intents" collection of methods.</summary>
                    public class IntentsResource
                    {
                        private const string Resource = "intents";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public IntentsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Returns the list of all intents in the specified agent.</summary>
                        /// <param name="parent">
                        /// Required. The agent to list all intents from. Format: `projects//agent` or
                        /// `projects//locations//agent`. Alternatively, you can specify the environment to list intents
                        /// for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`.
                        /// Note: training phrases of the intents will not be returned for non-draft environment.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Returns the list of all intents in the specified agent.</summary>
                        public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListIntentsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The agent to list all intents from. Format: `projects//agent` or
                            /// `projects//locations//agent`. Alternatively, you can specify the environment to list
                            /// intents for. Format: `projects//agent/environments/` or
                            /// `projects//locations//agent/environments/`. Note: training phrases of the intents will
                            /// not be returned for non-draft environment.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                            /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                            public enum IntentViewEnum
                            {
                                /// <summary>Training phrases field is not populated in the response.</summary>
                                [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                                INTENTVIEWUNSPECIFIED = 0,

                                /// <summary>All fields are populated.</summary>
                                [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                                INTENTVIEWFULL = 1,
                            }

                            /// <summary>
                            /// Optional. The language used to access language-specific data. If not specified, the
                            /// agent's default language is used. For more information, see [Multilingual intent and
                            /// entity
                            /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string LanguageCode { get; set; }

                            /// <summary>
                            /// Optional. The maximum number of items to return in a single page. By default 100 and at
                            /// most 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. The next_page_token value returned from a previous list request.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/intents";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                                });
                                RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "intentView",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "languageCode",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Users resource.</summary>
                    public virtual UsersResource Users { get; }

                    /// <summary>The "users" collection of methods.</summary>
                    public class UsersResource
                    {
                        private const string Resource = "users";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public UsersResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Sessions = new SessionsResource(service);
                        }

                        /// <summary>Gets the Sessions resource.</summary>
                        public virtual SessionsResource Sessions { get; }

                        /// <summary>The "sessions" collection of methods.</summary>
                        public class SessionsResource
                        {
                            private const string Resource = "sessions";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public SessionsResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                                Contexts = new ContextsResource(service);
                                EntityTypes = new EntityTypesResource(service);
                            }

                            /// <summary>Gets the Contexts resource.</summary>
                            public virtual ContextsResource Contexts { get; }

                            /// <summary>The "contexts" collection of methods.</summary>
                            public class ContextsResource
                            {
                                private const string Resource = "contexts";

                                /// <summary>The service which this resource belongs to.</summary>
                                private readonly Google.Apis.Services.IClientService service;

                                /// <summary>Constructs a new resource.</summary>
                                public ContextsResource(Google.Apis.Services.IClientService service)
                                {
                                    this.service = service;
                                }

                                /// <summary>
                                /// Creates a context. If the specified context already exists, overrides the context.
                                /// </summary>
                                /// <param name="body">The body of the request.</param>
                                /// <param name="parent">
                                /// Required. The session to create a context for. Format: `projects//agent/sessions/`
                                /// or `projects//agent/environments//users//sessions/`. If `Environment ID` is not
                                /// specified, we assume default 'draft' environment. If `User ID` is not specified, we
                                /// assume default '-' user.
                                /// </param>
                                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string parent)
                                {
                                    return new CreateRequest(this.service, body, parent);
                                }

                                /// <summary>
                                /// Creates a context. If the specified context already exists, overrides the context.
                                /// </summary>
                                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                                {
                                    /// <summary>Constructs a new Create request.</summary>
                                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string parent) : base(service)
                                    {
                                        Parent = parent;
                                        Body = body;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The session to create a context for. Format:
                                    /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`.
                                    /// If `Environment ID` is not specified, we assume default 'draft' environment. If
                                    /// `User ID` is not specified, we assume default '-' user.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Parent { get; private set; }

                                    /// <summary>Gets or sets the body of this request.</summary>
                                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context Body { get; set; }

                                    /// <summary>Returns the body of the request.</summary>
                                    protected override object GetBody() => Body;

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "create";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "POST";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+parent}/contexts";

                                    /// <summary>Initializes Create parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "parent",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>Deletes the specified context.</summary>
                                /// <param name="name">
                                /// Required. The name of the context to delete. Format:
                                /// `projects//agent/sessions//contexts/` or
                                /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
                                /// not specified, we assume default 'draft' environment. If `User ID` is not specified,
                                /// we assume default '-' user.
                                /// </param>
                                public virtual DeleteRequest Delete(string name)
                                {
                                    return new DeleteRequest(this.service, name);
                                }

                                /// <summary>Deletes the specified context.</summary>
                                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                                {
                                    /// <summary>Constructs a new Delete request.</summary>
                                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                    {
                                        Name = name;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The name of the context to delete. Format:
                                    /// `projects//agent/sessions//contexts/` or
                                    /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID`
                                    /// is not specified, we assume default 'draft' environment. If `User ID` is not
                                    /// specified, we assume default '-' user.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Name { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "delete";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "DELETE";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+name}";

                                    /// <summary>Initializes Delete parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "name",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>Retrieves the specified context.</summary>
                                /// <param name="name">
                                /// Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
                                /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is
                                /// not specified, we assume default 'draft' environment. If `User ID` is not specified,
                                /// we assume default '-' user.
                                /// </param>
                                public virtual GetRequest Get(string name)
                                {
                                    return new GetRequest(this.service, name);
                                }

                                /// <summary>Retrieves the specified context.</summary>
                                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                                {
                                    /// <summary>Constructs a new Get request.</summary>
                                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                    {
                                        Name = name;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The name of the context. Format: `projects//agent/sessions//contexts/`
                                    /// or `projects//agent/environments//users//sessions//contexts/`. If `Environment
                                    /// ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                                    /// specified, we assume default '-' user.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Name { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "get";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+name}";

                                    /// <summary>Initializes Get parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "name",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>Returns the list of all contexts in the specified session.</summary>
                                /// <param name="parent">
                                /// Required. The session to list all contexts from. Format: `projects//agent/sessions/`
                                /// or `projects//agent/environments//users//sessions/`. If `Environment ID` is not
                                /// specified, we assume default 'draft' environment. If `User ID` is not specified, we
                                /// assume default '-' user.
                                /// </param>
                                public virtual ListRequest List(string parent)
                                {
                                    return new ListRequest(this.service, parent);
                                }

                                /// <summary>Returns the list of all contexts in the specified session.</summary>
                                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListContextsResponse>
                                {
                                    /// <summary>Constructs a new List request.</summary>
                                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                                    {
                                        Parent = parent;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The session to list all contexts from. Format:
                                    /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`.
                                    /// If `Environment ID` is not specified, we assume default 'draft' environment. If
                                    /// `User ID` is not specified, we assume default '-' user.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Parent { get; private set; }

                                    /// <summary>
                                    /// Optional. The maximum number of items to return in a single page. By default 100
                                    /// and at most 1000.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual System.Nullable<int> PageSize { get; set; }

                                    /// <summary>
                                    /// Optional. The next_page_token value returned from a previous list request.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual string PageToken { get; set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "list";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+parent}/contexts";

                                    /// <summary>Initializes List parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "parent",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                        });
                                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "pageSize",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "pageToken",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                    }
                                }

                                /// <summary>Updates the specified context.</summary>
                                /// <param name="body">The body of the request.</param>
                                /// <param name="name">
                                /// Required. The unique identifier of the context. Format:
                                /// `projects//agent/sessions//contexts/`, or
                                /// `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
                                /// always converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may
                                /// be at most 250 bytes long. If `Environment ID` is not specified, we assume default
                                /// 'draft' environment. If `User ID` is not specified, we assume default '-' user. The
                                /// following context names are reserved for internal use by Dialogflow. You should not
                                /// use these contexts or create contexts with these names: * `__system_counters__` *
                                /// `*_id_dialog_context` * `*_dialog_params_size`
                                /// </param>
                                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string name)
                                {
                                    return new PatchRequest(this.service, body, name);
                                }

                                /// <summary>Updates the specified context.</summary>
                                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                                {
                                    /// <summary>Constructs a new Patch request.</summary>
                                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string name) : base(service)
                                    {
                                        Name = name;
                                        Body = body;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The unique identifier of the context. Format:
                                    /// `projects//agent/sessions//contexts/`, or
                                    /// `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is
                                    /// always converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and
                                    /// may be at most 250 bytes long. If `Environment ID` is not specified, we assume
                                    /// default 'draft' environment. If `User ID` is not specified, we assume default
                                    /// '-' user. The following context names are reserved for internal use by
                                    /// Dialogflow. You should not use these contexts or create contexts with these
                                    /// names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Name { get; private set; }

                                    /// <summary>Optional. The mask to control which fields get updated.</summary>
                                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual object UpdateMask { get; set; }

                                    /// <summary>Gets or sets the body of this request.</summary>
                                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context Body { get; set; }

                                    /// <summary>Returns the body of the request.</summary>
                                    protected override object GetBody() => Body;

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "patch";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "PATCH";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+name}";

                                    /// <summary>Initializes Patch parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "name",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                        });
                                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "updateMask",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                    }
                                }
                            }

                            /// <summary>Gets the EntityTypes resource.</summary>
                            public virtual EntityTypesResource EntityTypes { get; }

                            /// <summary>The "entityTypes" collection of methods.</summary>
                            public class EntityTypesResource
                            {
                                private const string Resource = "entityTypes";

                                /// <summary>The service which this resource belongs to.</summary>
                                private readonly Google.Apis.Services.IClientService service;

                                /// <summary>Constructs a new resource.</summary>
                                public EntityTypesResource(Google.Apis.Services.IClientService service)
                                {
                                    this.service = service;
                                }

                                /// <summary>
                                /// Creates a session entity type. If the specified session entity type already exists,
                                /// overrides the session entity type. This method doesn't work with Google Assistant
                                /// integration. Contact Dialogflow support if you need to use session entities with
                                /// Google Assistant integration.
                                /// </summary>
                                /// <param name="body">The body of the request.</param>
                                /// <param name="parent">
                                /// Required. The session to create a session entity type for. Format:
                                /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                                /// `Environment ID` is not specified, we assume default 'draft' environment. If `User
                                /// ID` is not specified, we assume default '-' user.
                                /// </param>
                                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string parent)
                                {
                                    return new CreateRequest(this.service, body, parent);
                                }

                                /// <summary>
                                /// Creates a session entity type. If the specified session entity type already exists,
                                /// overrides the session entity type. This method doesn't work with Google Assistant
                                /// integration. Contact Dialogflow support if you need to use session entities with
                                /// Google Assistant integration.
                                /// </summary>
                                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                                {
                                    /// <summary>Constructs a new Create request.</summary>
                                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string parent) : base(service)
                                    {
                                        Parent = parent;
                                        Body = body;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The session to create a session entity type for. Format:
                                    /// `projects//agent/sessions/` or `projects//agent/environments//users//
                                    /// sessions/`. If `Environment ID` is not specified, we assume default 'draft'
                                    /// environment. If `User ID` is not specified, we assume default '-' user.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Parent { get; private set; }

                                    /// <summary>Gets or sets the body of this request.</summary>
                                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType Body { get; set; }

                                    /// <summary>Returns the body of the request.</summary>
                                    protected override object GetBody() => Body;

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "create";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "POST";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+parent}/entityTypes";

                                    /// <summary>Initializes Create parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "parent",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>
                                /// Deletes the specified session entity type. This method doesn't work with Google
                                /// Assistant integration. Contact Dialogflow support if you need to use session
                                /// entities with Google Assistant integration.
                                /// </summary>
                                /// <param name="name">
                                /// Required. The name of the entity type to delete. Format:
                                /// `projects//agent/sessions//entityTypes/` or
                                /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID`
                                /// is not specified, we assume default 'draft' environment. If `User ID` is not
                                /// specified, we assume default '-' user.
                                /// </param>
                                public virtual DeleteRequest Delete(string name)
                                {
                                    return new DeleteRequest(this.service, name);
                                }

                                /// <summary>
                                /// Deletes the specified session entity type. This method doesn't work with Google
                                /// Assistant integration. Contact Dialogflow support if you need to use session
                                /// entities with Google Assistant integration.
                                /// </summary>
                                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                                {
                                    /// <summary>Constructs a new Delete request.</summary>
                                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                    {
                                        Name = name;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The name of the entity type to delete. Format:
                                    /// `projects//agent/sessions//entityTypes/` or
                                    /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                                    /// ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                                    /// specified, we assume default '-' user.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Name { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "delete";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "DELETE";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+name}";

                                    /// <summary>Initializes Delete parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "name",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>
                                /// Retrieves the specified session entity type. This method doesn't work with Google
                                /// Assistant integration. Contact Dialogflow support if you need to use session
                                /// entities with Google Assistant integration.
                                /// </summary>
                                /// <param name="name">
                                /// Required. The name of the session entity type. Format:
                                /// `projects//agent/sessions//entityTypes/` or
                                /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID`
                                /// is not specified, we assume default 'draft' environment. If `User ID` is not
                                /// specified, we assume default '-' user.
                                /// </param>
                                public virtual GetRequest Get(string name)
                                {
                                    return new GetRequest(this.service, name);
                                }

                                /// <summary>
                                /// Retrieves the specified session entity type. This method doesn't work with Google
                                /// Assistant integration. Contact Dialogflow support if you need to use session
                                /// entities with Google Assistant integration.
                                /// </summary>
                                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                                {
                                    /// <summary>Constructs a new Get request.</summary>
                                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                    {
                                        Name = name;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The name of the session entity type. Format:
                                    /// `projects//agent/sessions//entityTypes/` or
                                    /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                                    /// ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                                    /// specified, we assume default '-' user.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Name { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "get";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+name}";

                                    /// <summary>Initializes Get parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "name",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>
                                /// Returns the list of all session entity types in the specified session. This method
                                /// doesn't work with Google Assistant integration. Contact Dialogflow support if you
                                /// need to use session entities with Google Assistant integration.
                                /// </summary>
                                /// <param name="parent">
                                /// Required. The session to list all session entity types from. Format:
                                /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                                /// `Environment ID` is not specified, we assume default 'draft' environment. If `User
                                /// ID` is not specified, we assume default '-' user.
                                /// </param>
                                public virtual ListRequest List(string parent)
                                {
                                    return new ListRequest(this.service, parent);
                                }

                                /// <summary>
                                /// Returns the list of all session entity types in the specified session. This method
                                /// doesn't work with Google Assistant integration. Contact Dialogflow support if you
                                /// need to use session entities with Google Assistant integration.
                                /// </summary>
                                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListSessionEntityTypesResponse>
                                {
                                    /// <summary>Constructs a new List request.</summary>
                                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                                    {
                                        Parent = parent;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The session to list all session entity types from. Format:
                                    /// `projects//agent/sessions/` or `projects//agent/environments//users//
                                    /// sessions/`. If `Environment ID` is not specified, we assume default 'draft'
                                    /// environment. If `User ID` is not specified, we assume default '-' user.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Parent { get; private set; }

                                    /// <summary>
                                    /// Optional. The maximum number of items to return in a single page. By default 100
                                    /// and at most 1000.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual System.Nullable<int> PageSize { get; set; }

                                    /// <summary>
                                    /// Optional. The next_page_token value returned from a previous list request.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual string PageToken { get; set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "list";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+parent}/entityTypes";

                                    /// <summary>Initializes List parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "parent",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                        });
                                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "pageSize",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "pageToken",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                    }
                                }

                                /// <summary>
                                /// Updates the specified session entity type. This method doesn't work with Google
                                /// Assistant integration. Contact Dialogflow support if you need to use session
                                /// entities with Google Assistant integration.
                                /// </summary>
                                /// <param name="body">The body of the request.</param>
                                /// <param name="name">
                                /// Required. The unique identifier of this session entity type. Format:
                                /// `projects//agent/sessions//entityTypes/`, or
                                /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID`
                                /// is not specified, we assume default 'draft' environment. If `User ID` is not
                                /// specified, we assume default '-' user. `` must be the display name of an existing
                                /// entity type in the same agent that will be overridden or supplemented.
                                /// </param>
                                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string name)
                                {
                                    return new PatchRequest(this.service, body, name);
                                }

                                /// <summary>
                                /// Updates the specified session entity type. This method doesn't work with Google
                                /// Assistant integration. Contact Dialogflow support if you need to use session
                                /// entities with Google Assistant integration.
                                /// </summary>
                                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                                {
                                    /// <summary>Constructs a new Patch request.</summary>
                                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string name) : base(service)
                                    {
                                        Name = name;
                                        Body = body;
                                        InitParameters();
                                    }

                                    /// <summary>
                                    /// Required. The unique identifier of this session entity type. Format:
                                    /// `projects//agent/sessions//entityTypes/`, or
                                    /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment
                                    /// ID` is not specified, we assume default 'draft' environment. If `User ID` is not
                                    /// specified, we assume default '-' user. `` must be the display name of an
                                    /// existing entity type in the same agent that will be overridden or supplemented.
                                    /// </summary>
                                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Name { get; private set; }

                                    /// <summary>Optional. The mask to control which fields get updated.</summary>
                                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual object UpdateMask { get; set; }

                                    /// <summary>Gets or sets the body of this request.</summary>
                                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType Body { get; set; }

                                    /// <summary>Returns the body of the request.</summary>
                                    protected override object GetBody() => Body;

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "patch";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "PATCH";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v2/{+name}";

                                    /// <summary>Initializes Patch parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "name",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                        });
                                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "updateMask",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                    }
                                }
                            }

                            /// <summary>Deletes all active contexts in the specified session.</summary>
                            /// <param name="parent">
                            /// Required. The name of the session to delete all contexts from. Format:
                            /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
                            /// `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is
                            /// not specified, we assume default '-' user.
                            /// </param>
                            public virtual DeleteContextsRequest DeleteContexts(string parent)
                            {
                                return new DeleteContextsRequest(this.service, parent);
                            }

                            /// <summary>Deletes all active contexts in the specified session.</summary>
                            public class DeleteContextsRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                            {
                                /// <summary>Constructs a new DeleteContexts request.</summary>
                                public DeleteContextsRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                                {
                                    Parent = parent;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the session to delete all contexts from. Format:
                                /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
                                /// `Environment ID` is not specified we assume default 'draft' environment. If `User
                                /// ID` is not specified, we assume default '-' user.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "deleteContexts";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "DELETE";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+parent}/contexts";

                                /// <summary>Initializes DeleteContexts parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Processes a natural language query and returns structured, actionable data as a result.
                            /// This method is not idempotent, because it may cause contexts and session entity types to
                            /// be updated, which in turn might affect results of future queries. If you might use
                            /// [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now
                            /// or in the future, consider using AnalyzeContent instead of `DetectIntent`.
                            /// `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products.
                            /// Note: Always use agent versions for production traffic. See [Versions and
                            /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                            /// </summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="session">
                            /// Required. The name of the session this query is sent to. Format:
                            /// `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If
                            /// `Environment ID` is not specified, we assume default 'draft' environment (`Environment
                            /// ID` might be referred to as environment name at some places). If `User ID` is not
                            /// specified, we are using "-". It's up to the API caller to choose an appropriate `Session
                            /// ID` and `User Id`. They can be a random number or some type of user and session
                            /// identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not
                            /// exceed 36 characters. For more information, see the [API interactions
                            /// guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent
                            /// versions for production traffic. See [Versions and
                            /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                            /// </param>
                            public virtual DetectIntentRequest DetectIntent(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest body, string session)
                            {
                                return new DetectIntentRequest(this.service, body, session);
                            }

                            /// <summary>
                            /// Processes a natural language query and returns structured, actionable data as a result.
                            /// This method is not idempotent, because it may cause contexts and session entity types to
                            /// be updated, which in turn might affect results of future queries. If you might use
                            /// [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now
                            /// or in the future, consider using AnalyzeContent instead of `DetectIntent`.
                            /// `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products.
                            /// Note: Always use agent versions for production traffic. See [Versions and
                            /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                            /// </summary>
                            public class DetectIntentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentResponse>
                            {
                                /// <summary>Constructs a new DetectIntent request.</summary>
                                public DetectIntentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest body, string session) : base(service)
                                {
                                    Session = session;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The name of the session this query is sent to. Format:
                                /// `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If
                                /// `Environment ID` is not specified, we assume default 'draft' environment
                                /// (`Environment ID` might be referred to as environment name at some places). If `User
                                /// ID` is not specified, we are using "-". It's up to the API caller to choose an
                                /// appropriate `Session ID` and `User Id`. They can be a random number or some type of
                                /// user and session identifiers (preferably hashed). The length of the `Session ID` and
                                /// `User ID` must not exceed 36 characters. For more information, see the [API
                                /// interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note:
                                /// Always use agent versions for production traffic. See [Versions and
                                /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("session", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Session { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "detectIntent";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v2/{+session}:detectIntent";

                                /// <summary>Initializes DetectIntent parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("session", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "session",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                    });
                                }
                            }
                        }
                    }

                    /// <summary>Creates an agent environment.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The agent to create an environment for. Supported formats: - `projects//agent` -
                    /// `projects//locations//agent`
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates an agent environment.</summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The agent to create an environment for. Supported formats: - `projects//agent` -
                        /// `projects//locations//agent`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Required. The unique id of the new environment.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("environmentId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string EnvironmentId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/environments";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                            RequestParameters.Add("environmentId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "environmentId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Deletes the specified agent environment.</summary>
                    /// <param name="name">
                    /// Required. The name of the environment to delete. / Format: - `projects//agent/environments/` -
                    /// `projects//locations//agent/environments/` The environment ID for the default environment is
                    /// `-`.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes the specified agent environment.</summary>
                    public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the environment to delete. / Format: - `projects//agent/environments/`
                        /// - `projects//locations//agent/environments/` The environment ID for the default environment
                        /// is `-`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Retrieves the specified agent environment.</summary>
                    /// <param name="name">
                    /// Required. The name of the environment. Supported formats: - `projects//agent/environments/` -
                    /// `projects//locations//agent/environments/` The environment ID for the default environment is
                    /// `-`.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Retrieves the specified agent environment.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the environment. Supported formats: - `projects//agent/environments/`
                        /// - `projects//locations//agent/environments/` The environment ID for the default environment
                        /// is `-`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets the history of the specified environment.</summary>
                    /// <param name="parent">
                    /// Required. The name of the environment to retrieve history for. Supported formats: -
                    /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID
                    /// for the default environment is `-`.
                    /// </param>
                    public virtual GetHistoryRequest GetHistory(string parent)
                    {
                        return new GetHistoryRequest(this.service, parent);
                    }

                    /// <summary>Gets the history of the specified environment.</summary>
                    public class GetHistoryRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EnvironmentHistory>
                    {
                        /// <summary>Constructs a new GetHistory request.</summary>
                        public GetHistoryRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the environment to retrieve history for. Supported formats: -
                        /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment
                        /// ID for the default environment is `-`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getHistory";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/history";

                        /// <summary>Initializes GetHistory parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Returns the list of all non-default environments of the specified agent.</summary>
                    /// <param name="parent">
                    /// Required. The agent to list all environments from. Format: - `projects//agent` -
                    /// `projects//locations//agent`
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all non-default environments of the specified agent.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListEnvironmentsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The agent to list all environments from. Format: - `projects//agent` -
                        /// `projects//locations//agent`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/environments";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates the specified agent environment. This method allows you to deploy new agent versions
                    /// into the environment. When an environment is pointed to a new agent version by setting
                    /// `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During
                    /// that time, the environment continues serving the previous version of the agent. After the new
                    /// agent version is done loading, the environment is set back to the `RUNNING` state. You can use
                    /// "-" as Environment ID in environment name to update an agent version in the default environment.
                    /// WARNING: this will negate all recent changes to the draft agent and can't be undone. You may
                    /// want to save the draft agent to a version before calling this method.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Output only. The unique identifier of this agent environment. Supported formats: -
                    /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID
                    /// for the default environment is `-`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates the specified agent environment. This method allows you to deploy new agent versions
                    /// into the environment. When an environment is pointed to a new agent version by setting
                    /// `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During
                    /// that time, the environment continues serving the previous version of the agent. After the new
                    /// agent version is done loading, the environment is set back to the `RUNNING` state. You can use
                    /// "-" as Environment ID in environment name to update an agent version in the default environment.
                    /// WARNING: this will negate all recent changes to the draft agent and can't be undone. You may
                    /// want to save the draft agent to a version before calling this method.
                    /// </summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Output only. The unique identifier of this agent environment. Supported formats: -
                        /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment
                        /// ID for the default environment is `-`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Optional. This field is used to prevent accidental overwrite of the default environment,
                        /// which is an operation that cannot be undone. To confirm that the caller desires this
                        /// overwrite, this field must be explicitly set to true when updating the default environment
                        /// (environment ID = `-`).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("allowLoadToDraftAndDiscardChanges", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<bool> AllowLoadToDraftAndDiscardChanges { get; set; }

                        /// <summary>Required. The mask to control which fields get updated.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Environment Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                            });
                            RequestParameters.Add("allowLoadToDraftAndDiscardChanges", new Google.Apis.Discovery.Parameter
                            {
                                Name = "allowLoadToDraftAndDiscardChanges",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Intents resource.</summary>
                public virtual IntentsResource Intents { get; }

                /// <summary>The "intents" collection of methods.</summary>
                public class IntentsResource
                {
                    private const string Resource = "intents";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public IntentsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Deletes intents in the specified agent. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
                    /// </param>
                    public virtual BatchDeleteRequest BatchDelete(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteIntentsRequest body, string parent)
                    {
                        return new BatchDeleteRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Deletes intents in the specified agent. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// Note: You should always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class BatchDeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new BatchDelete request.</summary>
                        public BatchDeleteRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteIntentsRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the agent to delete all entities types for. Format: `projects//agent`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchDeleteIntentsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "batchDelete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/intents:batchDelete";

                        /// <summary>Initializes BatchDelete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                        }
                    }

                    /// <summary>
                    /// Updates/Creates multiple intents in the specified agent. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending
                    /// it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The name of the agent to update or create intents in. Format: `projects//agent`.
                    /// </param>
                    public virtual BatchUpdateRequest BatchUpdate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateIntentsRequest body, string parent)
                    {
                        return new BatchUpdateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Updates/Creates multiple intents in the specified agent. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The
                    /// returned `Operation` type has the following method-specific fields: - `metadata`: An empty
                    /// [Struct
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                    /// `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending
                    /// it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class BatchUpdateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new BatchUpdate request.</summary>
                        public BatchUpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateIntentsRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the agent to update or create intents in. Format: `projects//agent`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2BatchUpdateIntentsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "batchUpdate";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/intents:batchUpdate";

                        /// <summary>Initializes BatchUpdate parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                        }
                    }

                    /// <summary>
                    /// Creates an intent in the specified agent. Note: You should always train an agent prior to
                    /// sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The agent to create a intent for. Format: `projects//agent`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates an intent in the specified agent. Note: You should always train an agent prior to
                    /// sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>Required. The agent to create a intent for. Format: `projects//agent`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        public enum IntentViewEnum
                        {
                            /// <summary>Training phrases field is not populated in the response.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                            INTENTVIEWUNSPECIFIED = 0,

                            /// <summary>All fields are populated.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                            INTENTVIEWFULL = 1,
                        }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/intents";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                            RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                            {
                                Name = "intentView",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes the specified intent and its direct or indirect followup intents. Note: You should
                    /// always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="name">
                    /// Required. The name of the intent to delete. If this intent has direct or indirect followup
                    /// intents, we also delete them. Format: `projects//agent/intents/`.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes the specified intent and its direct or indirect followup intents. Note: You should
                    /// always train an agent prior to sending it queries. See the [training
                    /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the intent to delete. If this intent has direct or indirect followup
                        /// intents, we also delete them. Format: `projects//agent/intents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Retrieves the specified intent.</summary>
                    /// <param name="name">Required. The name of the intent. Format: `projects//agent/intents/`.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Retrieves the specified intent.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>Required. The name of the intent. Format: `projects//agent/intents/`.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        public enum IntentViewEnum
                        {
                            /// <summary>Training phrases field is not populated in the response.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                            INTENTVIEWUNSPECIFIED = 0,

                            /// <summary>All fields are populated.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                            INTENTVIEWFULL = 1,
                        }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$",
                            });
                            RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                            {
                                Name = "intentView",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Returns the list of all intents in the specified agent.</summary>
                    /// <param name="parent">
                    /// Required. The agent to list all intents from. Format: `projects//agent` or
                    /// `projects//locations//agent`. Alternatively, you can specify the environment to list intents
                    /// for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`.
                    /// Note: training phrases of the intents will not be returned for non-draft environment.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all intents in the specified agent.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListIntentsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The agent to list all intents from. Format: `projects//agent` or
                        /// `projects//locations//agent`. Alternatively, you can specify the environment to list intents
                        /// for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`.
                        /// Note: training phrases of the intents will not be returned for non-draft environment.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        public enum IntentViewEnum
                        {
                            /// <summary>Training phrases field is not populated in the response.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                            INTENTVIEWUNSPECIFIED = 0,

                            /// <summary>All fields are populated.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                            INTENTVIEWFULL = 1,
                        }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/intents";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                            RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                            {
                                Name = "intentView",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates the specified intent. Note: You should always train an agent prior to sending it
                    /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
                    /// Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates the specified intent. Note: You should always train an agent prior to sending it
                    /// queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
                    /// </summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
                        /// Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("intentView", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<IntentViewEnum> IntentView { get; set; }

                        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
                        public enum IntentViewEnum
                        {
                            /// <summary>Training phrases field is not populated in the response.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_UNSPECIFIED")]
                            INTENTVIEWUNSPECIFIED = 0,

                            /// <summary>All fields are populated.</summary>
                            [Google.Apis.Util.StringValueAttribute("INTENT_VIEW_FULL")]
                            INTENTVIEWFULL = 1,
                        }

                        /// <summary>
                        /// Optional. The language used to access language-specific data. If not specified, the agent's
                        /// default language is used. For more information, see [Multilingual intent and entity
                        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string LanguageCode { get; set; }

                        /// <summary>Optional. The mask to control which fields get updated.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Intent Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$",
                            });
                            RequestParameters.Add("intentView", new Google.Apis.Discovery.Parameter
                            {
                                Name = "intentView",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                            {
                                Name = "languageCode",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Sessions resource.</summary>
                public virtual SessionsResource Sessions { get; }

                /// <summary>The "sessions" collection of methods.</summary>
                public class SessionsResource
                {
                    private const string Resource = "sessions";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public SessionsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Contexts = new ContextsResource(service);
                        EntityTypes = new EntityTypesResource(service);
                    }

                    /// <summary>Gets the Contexts resource.</summary>
                    public virtual ContextsResource Contexts { get; }

                    /// <summary>The "contexts" collection of methods.</summary>
                    public class ContextsResource
                    {
                        private const string Resource = "contexts";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ContextsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Creates a context. If the specified context already exists, overrides the context.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The session to create a context for. Format: `projects//agent/sessions/` or
                        /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
                        /// assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                        /// user.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a context. If the specified context already exists, overrides the context.
                        /// </summary>
                        public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The session to create a context for. Format: `projects//agent/sessions/` or
                            /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified,
                            /// we assume default 'draft' environment. If `User ID` is not specified, we assume default
                            /// '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/contexts";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Deletes the specified context.</summary>
                        /// <param name="name">
                        /// Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/`
                        /// or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>Deletes the specified context.</summary>
                        public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the context to delete. Format:
                            /// `projects//agent/sessions//contexts/` or
                            /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                            /// specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Retrieves the specified context.</summary>
                        /// <param name="name">
                        /// Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
                        /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user.
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Retrieves the specified context.</summary>
                        public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the context. Format: `projects//agent/sessions//contexts/` or
                            /// `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not
                            /// specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Returns the list of all contexts in the specified session.</summary>
                        /// <param name="parent">
                        /// Required. The session to list all contexts from. Format: `projects//agent/sessions/` or
                        /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
                        /// assume default 'draft' environment. If `User ID` is not specified, we assume default '-'
                        /// user.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Returns the list of all contexts in the specified session.</summary>
                        public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListContextsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The session to list all contexts from. Format: `projects//agent/sessions/` or
                            /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified,
                            /// we assume default 'draft' environment. If `User ID` is not specified, we assume default
                            /// '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. The maximum number of items to return in a single page. By default 100 and at
                            /// most 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. The next_page_token value returned from a previous list request.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/contexts";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Updates the specified context.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Required. The unique identifier of the context. Format:
                        /// `projects//agent/sessions//contexts/`, or
                        /// `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always
                        /// converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250
                        /// bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If
                        /// `User ID` is not specified, we assume default '-' user. The following context names are
                        /// reserved for internal use by Dialogflow. You should not use these contexts or create
                        /// contexts with these names: * `__system_counters__` * `*_id_dialog_context` *
                        /// `*_dialog_params_size`
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>Updates the specified context.</summary>
                        public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The unique identifier of the context. Format:
                            /// `projects//agent/sessions//contexts/`, or
                            /// `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always
                            /// converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most
                            /// 250 bytes long. If `Environment ID` is not specified, we assume default 'draft'
                            /// environment. If `User ID` is not specified, we assume default '-' user. The following
                            /// context names are reserved for internal use by Dialogflow. You should not use these
                            /// contexts or create contexts with these names: * `__system_counters__` *
                            /// `*_id_dialog_context` * `*_dialog_params_size`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Optional. The mask to control which fields get updated.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Context Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the EntityTypes resource.</summary>
                    public virtual EntityTypesResource EntityTypes { get; }

                    /// <summary>The "entityTypes" collection of methods.</summary>
                    public class EntityTypesResource
                    {
                        private const string Resource = "entityTypes";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public EntityTypesResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Creates a session entity type. If the specified session entity type already exists,
                        /// overrides the session entity type. This method doesn't work with Google Assistant
                        /// integration. Contact Dialogflow support if you need to use session entities with Google
                        /// Assistant integration.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The session to create a session entity type for. Format:
                        /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                        /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is
                        /// not specified, we assume default '-' user.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a session entity type. If the specified session entity type already exists,
                        /// overrides the session entity type. This method doesn't work with Google Assistant
                        /// integration. Contact Dialogflow support if you need to use session entities with Google
                        /// Assistant integration.
                        /// </summary>
                        public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The session to create a session entity type for. Format:
                            /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                            /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID`
                            /// is not specified, we assume default '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/entityTypes";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes the specified session entity type. This method doesn't work with Google Assistant
                        /// integration. Contact Dialogflow support if you need to use session entities with Google
                        /// Assistant integration.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The name of the entity type to delete. Format:
                        /// `projects//agent/sessions//entityTypes/` or
                        /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes the specified session entity type. This method doesn't work with Google Assistant
                        /// integration. Contact Dialogflow support if you need to use session entities with Google
                        /// Assistant integration.
                        /// </summary>
                        public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the entity type to delete. Format:
                            /// `projects//agent/sessions//entityTypes/` or
                            /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
                            /// not specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Retrieves the specified session entity type. This method doesn't work with Google Assistant
                        /// integration. Contact Dialogflow support if you need to use session entities with Google
                        /// Assistant integration.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The name of the session entity type. Format:
                        /// `projects//agent/sessions//entityTypes/` or
                        /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user.
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Retrieves the specified session entity type. This method doesn't work with Google Assistant
                        /// integration. Contact Dialogflow support if you need to use session entities with Google
                        /// Assistant integration.
                        /// </summary>
                        public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the session entity type. Format:
                            /// `projects//agent/sessions//entityTypes/` or
                            /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
                            /// not specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Returns the list of all session entity types in the specified session. This method doesn't
                        /// work with Google Assistant integration. Contact Dialogflow support if you need to use
                        /// session entities with Google Assistant integration.
                        /// </summary>
                        /// <param name="parent">
                        /// Required. The session to list all session entity types from. Format:
                        /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                        /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is
                        /// not specified, we assume default '-' user.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>
                        /// Returns the list of all session entity types in the specified session. This method doesn't
                        /// work with Google Assistant integration. Contact Dialogflow support if you need to use
                        /// session entities with Google Assistant integration.
                        /// </summary>
                        public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListSessionEntityTypesResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The session to list all session entity types from. Format:
                            /// `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If
                            /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID`
                            /// is not specified, we assume default '-' user.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. The maximum number of items to return in a single page. By default 100 and at
                            /// most 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. The next_page_token value returned from a previous list request.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/entityTypes";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates the specified session entity type. This method doesn't work with Google Assistant
                        /// integration. Contact Dialogflow support if you need to use session entities with Google
                        /// Assistant integration.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Required. The unique identifier of this session entity type. Format:
                        /// `projects//agent/sessions//entityTypes/`, or
                        /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not
                        /// specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
                        /// default '-' user. `` must be the display name of an existing entity type in the same agent
                        /// that will be overridden or supplemented.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates the specified session entity type. This method doesn't work with Google Assistant
                        /// integration. Contact Dialogflow support if you need to use session entities with Google
                        /// Assistant integration.
                        /// </summary>
                        public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The unique identifier of this session entity type. Format:
                            /// `projects//agent/sessions//entityTypes/`, or
                            /// `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is
                            /// not specified, we assume default 'draft' environment. If `User ID` is not specified, we
                            /// assume default '-' user. `` must be the display name of an existing entity type in the
                            /// same agent that will be overridden or supplemented.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Optional. The mask to control which fields get updated.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SessionEntityType Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Deletes all active contexts in the specified session.</summary>
                    /// <param name="parent">
                    /// Required. The name of the session to delete all contexts from. Format:
                    /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment
                    /// ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we
                    /// assume default '-' user.
                    /// </param>
                    public virtual DeleteContextsRequest DeleteContexts(string parent)
                    {
                        return new DeleteContextsRequest(this.service, parent);
                    }

                    /// <summary>Deletes all active contexts in the specified session.</summary>
                    public class DeleteContextsRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new DeleteContexts request.</summary>
                        public DeleteContextsRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the session to delete all contexts from. Format:
                        /// `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If
                        /// `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not
                        /// specified, we assume default '-' user.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "deleteContexts";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/contexts";

                        /// <summary>Initializes DeleteContexts parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Processes a natural language query and returns structured, actionable data as a result. This
                    /// method is not idempotent, because it may cause contexts and session entity types to be updated,
                    /// which in turn might affect results of future queries. If you might use [Agent
                    /// Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
                    /// future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional
                    /// functionality for Agent Assist and other CCAI products. Note: Always use agent versions for
                    /// production traffic. See [Versions and
                    /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="session">
                    /// Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or
                    /// `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we
                    /// assume default 'draft' environment (`Environment ID` might be referred to as environment name at
                    /// some places). If `User ID` is not specified, we are using "-". It's up to the API caller to
                    /// choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of
                    /// user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID`
                    /// must not exceed 36 characters. For more information, see the [API interactions
                    /// guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions
                    /// for production traffic. See [Versions and
                    /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                    /// </param>
                    public virtual DetectIntentRequest DetectIntent(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest body, string session)
                    {
                        return new DetectIntentRequest(this.service, body, session);
                    }

                    /// <summary>
                    /// Processes a natural language query and returns structured, actionable data as a result. This
                    /// method is not idempotent, because it may cause contexts and session entity types to be updated,
                    /// which in turn might affect results of future queries. If you might use [Agent
                    /// Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the
                    /// future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional
                    /// functionality for Agent Assist and other CCAI products. Note: Always use agent versions for
                    /// production traffic. See [Versions and
                    /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                    /// </summary>
                    public class DetectIntentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentResponse>
                    {
                        /// <summary>Constructs a new DetectIntent request.</summary>
                        public DetectIntentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest body, string session) : base(service)
                        {
                            Session = session;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the session this query is sent to. Format:
                        /// `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If
                        /// `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID`
                        /// might be referred to as environment name at some places). If `User ID` is not specified, we
                        /// are using "-". It's up to the API caller to choose an appropriate `Session ID` and `User
                        /// Id`. They can be a random number or some type of user and session identifiers (preferably
                        /// hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For
                        /// more information, see the [API interactions
                        /// guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent
                        /// versions for production traffic. See [Versions and
                        /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("session", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Session { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DetectIntentRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "detectIntent";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+session}:detectIntent";

                        /// <summary>Initializes DetectIntent parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("session", new Google.Apis.Discovery.Parameter
                            {
                                Name = "session",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the Versions resource.</summary>
                public virtual VersionsResource Versions { get; }

                /// <summary>The "versions" collection of methods.</summary>
                public class VersionsResource
                {
                    private const string Resource = "versions";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public VersionsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Creates an agent version. The new version points to the agent instance in the "default"
                    /// environment.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The agent to create a version for. Supported formats: - `projects//agent` -
                    /// `projects//locations//agent`
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates an agent version. The new version points to the agent instance in the "default"
                    /// environment.
                    /// </summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The agent to create a version for. Supported formats: - `projects//agent` -
                        /// `projects//locations//agent`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/versions";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                        }
                    }

                    /// <summary>Delete the specified agent version.</summary>
                    /// <param name="name">
                    /// Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` -
                    /// `projects//locations//agent/versions/`
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Delete the specified agent version.</summary>
                    public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the version to delete. Supported formats: -
                        /// `projects//agent/versions/` - `projects//locations//agent/versions/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Retrieves the specified agent version.</summary>
                    /// <param name="name">
                    /// Required. The name of the version. Supported formats: - `projects//agent/versions/` -
                    /// `projects//locations//agent/versions/`
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Retrieves the specified agent version.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the version. Supported formats: - `projects//agent/versions/` -
                        /// `projects//locations//agent/versions/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Returns the list of all versions of the specified agent.</summary>
                    /// <param name="parent">
                    /// Required. The agent to list all versions from. Supported formats: - `projects//agent` -
                    /// `projects//locations//agent`
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all versions of the specified agent.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListVersionsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The agent to list all versions from. Supported formats: - `projects//agent` -
                        /// `projects//locations//agent`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/versions";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates the specified agent version. Note that this method does not allow you to update the
                    /// state of the agent the given version points to. It allows you to update only mutable properties
                    /// of the version resource.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Output only. The unique identifier of this agent version. Supported formats: -
                    /// `projects//agent/versions/` - `projects//locations//agent/versions/`
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates the specified agent version. Note that this method does not allow you to update the
                    /// state of the agent the given version points to. It allows you to update only mutable properties
                    /// of the version resource.
                    /// </summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Output only. The unique identifier of this agent version. Supported formats: -
                        /// `projects//agent/versions/` - `projects//locations//agent/versions/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Required. The mask to control which fields get updated.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Version Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>
                /// Exports the specified agent to a ZIP file. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: ExportAgentResponse
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project that the agent to export is associated with. Format: `projects/`.
                /// </param>
                public virtual ExportRequest Export(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportAgentRequest body, string parent)
                {
                    return new ExportRequest(this.service, body, parent);
                }

                /// <summary>
                /// Exports the specified agent to a ZIP file. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: ExportAgentResponse
                /// </summary>
                public class ExportRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Export request.</summary>
                    public ExportRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportAgentRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project that the agent to export is associated with. Format: `projects/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportAgentRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "export";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/agent:export";

                    /// <summary>Initializes Export parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves the fulfillment.</summary>
                /// <param name="name">
                /// Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.
                /// </param>
                public virtual GetFulfillmentRequest GetFulfillment(string name)
                {
                    return new GetFulfillmentRequest(this.service, name);
                }

                /// <summary>Retrieves the fulfillment.</summary>
                public class GetFulfillmentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment>
                {
                    /// <summary>Constructs a new GetFulfillment request.</summary>
                    public GetFulfillmentRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "getFulfillment";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes GetFulfillment parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/fulfillment$",
                        });
                    }
                }

                /// <summary>
                /// Gets agent validation result. Agent validation is performed during training time and is updated
                /// automatically when training is completed.
                /// </summary>
                /// <param name="parent">
                /// Required. The project that the agent is associated with. Format: `projects/`.
                /// </param>
                public virtual GetValidationResultRequest GetValidationResult(string parent)
                {
                    return new GetValidationResultRequest(this.service, parent);
                }

                /// <summary>
                /// Gets agent validation result. Agent validation is performed during training time and is updated
                /// automatically when training is completed.
                /// </summary>
                public class GetValidationResultRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ValidationResult>
                {
                    /// <summary>Constructs a new GetValidationResult request.</summary>
                    public GetValidationResultRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>Required. The project that the agent is associated with. Format: `projects/`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The language for which you want a validation result. If not specified, the agent's
                    /// default language is used. [Many
                    /// languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note:
                    /// languages must be enabled in the agent before they can be used.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("languageCode", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string LanguageCode { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "getValidationResult";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/agent/validationResult";

                    /// <summary>Initializes GetValidationResult parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("languageCode", new Google.Apis.Discovery.Parameter
                        {
                            Name = "languageCode",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting
                /// the existing ones. Intents and entity types with the same name are replaced with the new versions
                /// from ImportAgentRequest. After the import, the imported draft agent will be trained automatically
                /// (unless disabled in agent settings). However, once the import is done, training may not be completed
                /// yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This
                /// method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The
                /// operation only tracks when importing is complete, not when it is done training. Note: You should
                /// always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project that the agent to import is associated with. Format: `projects/`.
                /// </param>
                public virtual ImportRequest Import(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportAgentRequest body, string parent)
                {
                    return new ImportRequest(this.service, body, parent);
                }

                /// <summary>
                /// Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting
                /// the existing ones. Intents and entity types with the same name are replaced with the new versions
                /// from ImportAgentRequest. After the import, the imported draft agent will be trained automatically
                /// (unless disabled in agent settings). However, once the import is done, training may not be completed
                /// yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This
                /// method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The
                /// operation only tracks when importing is complete, not when it is done training. Note: You should
                /// always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class ImportRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Import request.</summary>
                    public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportAgentRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project that the agent to import is associated with. Format: `projects/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportAgentRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "import";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/agent:import";

                    /// <summary>Initializes Import parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All
                /// the intents and entity types in the older version are deleted. After the restore, the restored draft
                /// agent will be trained automatically (unless disabled in agent settings). However, once the restore
                /// is done, training may not be completed yet. Please call TrainAgent and wait for the operation it
                /// returns in order to train explicitly. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The
                /// operation only tracks when restoring is complete, not when it is done training. Note: You should
                /// always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project that the agent to restore is associated with. Format: `projects/`.
                /// </param>
                public virtual RestoreRequest Restore(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2RestoreAgentRequest body, string parent)
                {
                    return new RestoreRequest(this.service, body, parent);
                }

                /// <summary>
                /// Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All
                /// the intents and entity types in the older version are deleted. After the restore, the restored draft
                /// agent will be trained automatically (unless disabled in agent settings). However, once the restore
                /// is done, training may not be completed yet. Please call TrainAgent and wait for the operation it
                /// returns in order to train explicitly. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The
                /// operation only tracks when restoring is complete, not when it is done training. Note: You should
                /// always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class RestoreRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Restore request.</summary>
                    public RestoreRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2RestoreAgentRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project that the agent to restore is associated with. Format: `projects/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2RestoreAgentRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "restore";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/agent:restore";

                    /// <summary>Initializes Restore parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Returns the list of agents. Since there is at most one conversational agent per project, this method
                /// is useful primarily for listing all agents across projects the caller has access to. One can achieve
                /// that with a wildcard project collection id "-". Refer to [List
                /// Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
                /// </summary>
                /// <param name="parent">Required. The project to list agents from. Format: `projects/`.</param>
                public virtual SearchRequest Search(string parent)
                {
                    return new SearchRequest(this.service, parent);
                }

                /// <summary>
                /// Returns the list of agents. Since there is at most one conversational agent per project, this method
                /// is useful primarily for listing all agents across projects the caller has access to. One can achieve
                /// that with a wildcard project collection id "-". Refer to [List
                /// Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
                /// </summary>
                public class SearchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchAgentsResponse>
                {
                    /// <summary>Constructs a new Search request.</summary>
                    public SearchRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>Required. The project to list agents from. Format: `projects/`.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "search";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/agent:search";

                    /// <summary>Initializes Search parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Trains the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note:
                /// You should always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project that the agent to train is associated with. Format: `projects/`.
                /// </param>
                public virtual TrainRequest Train(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2TrainAgentRequest body, string parent)
                {
                    return new TrainRequest(this.service, body, parent);
                }

                /// <summary>
                /// Trains the specified agent. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) -
                /// `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note:
                /// You should always train an agent prior to sending it queries. See the [training
                /// documentation](https://cloud.google.com/dialogflow/es/docs/training).
                /// </summary>
                public class TrainRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Train request.</summary>
                    public TrainRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2TrainAgentRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project that the agent to train is associated with. Format: `projects/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2TrainAgentRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "train";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/agent:train";

                    /// <summary>Initializes Train parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>Updates the fulfillment.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Required. The unique identifier of the fulfillment. Supported formats: -
                /// `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for
                /// Fulfillment in an Environment.
                /// </param>
                public virtual UpdateFulfillmentRequest UpdateFulfillment(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment body, string name)
                {
                    return new UpdateFulfillmentRequest(this.service, body, name);
                }

                /// <summary>Updates the fulfillment.</summary>
                public class UpdateFulfillmentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment>
                {
                    /// <summary>Constructs a new UpdateFulfillment request.</summary>
                    public UpdateFulfillmentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The unique identifier of the fulfillment. Supported formats: -
                    /// `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used
                    /// for Fulfillment in an Environment.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Required. The mask to control which fields get updated. If the mask is not present, all fields
                    /// will be updated.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Fulfillment Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "updateFulfillment";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes UpdateFulfillment parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/agent/fulfillment$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the AnswerRecords resource.</summary>
            public virtual AnswerRecordsResource AnswerRecords { get; }

            /// <summary>The "answerRecords" collection of methods.</summary>
            public class AnswerRecordsResource
            {
                private const string Resource = "answerRecords";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public AnswerRecordsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Returns the list of all answer records in the specified project in reverse chronological order.
                /// </summary>
                /// <param name="parent">
                /// Required. The project to list all answer records for in reverse chronological order. Format:
                /// `projects//locations/`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>
                /// Returns the list of all answer records in the specified project in reverse chronological order.
                /// </summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListAnswerRecordsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to list all answer records for in reverse chronological order. Format:
                    /// `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. Filters to restrict results to specific answer records. The expression has the
                    /// following syntax: [AND ] ... The following fields and operators are supported: * conversation_id
                    /// with equals(=) operator Examples: * `conversation_id=bar` matches answer records in the
                    /// `projects/foo/locations/global/conversations/bar` conversation (assuming the parent is
                    /// `projects/foo/locations/global`). For more information about filtering, see [API
                    /// Filtering](https://aip.dev/160).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>
                    /// Optional. The maximum number of records to return in a single page. The server may return fewer
                    /// records than this. If unspecified, we use 10. The maximum is 100.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>
                    /// Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list
                    /// request used to continue listing on the next page.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/answerRecords";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Updates the specified answer record.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// The unique identifier of this answer record. Format: `projects//locations//answerRecords/`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnswerRecord body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>Updates the specified answer record.</summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnswerRecord>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnswerRecord body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// The unique identifier of this answer record. Format: `projects//locations//answerRecords/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Required. The mask to control which fields get updated.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnswerRecord Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the ConversationDatasets resource.</summary>
            public virtual ConversationDatasetsResource ConversationDatasets { get; }

            /// <summary>The "conversationDatasets" collection of methods.</summary>
            public class ConversationDatasetsResource
            {
                private const string Resource = "conversationDatasets";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public ConversationDatasetsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Creates a new conversation dataset. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// CreateConversationDatasetOperationMetadata - `response`: ConversationDataset
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project to create conversation dataset for. Format: `projects//locations/`
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationDataset body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates a new conversation dataset. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// CreateConversationDatasetOperationMetadata - `response`: ConversationDataset
                /// </summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationDataset body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to create conversation dataset for. Format: `projects//locations/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationDataset Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/conversationDatasets";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Deletes the specified conversation dataset. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// DeleteConversationDatasetOperationMetadata - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                /// <param name="name">
                /// Required. The conversation dataset to delete. Format: `projects//locations//conversationDatasets/`
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>
                /// Deletes the specified conversation dataset. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// DeleteConversationDatasetOperationMetadata - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation dataset to delete. Format:
                    /// `projects//locations//conversationDatasets/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationDatasets/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves the specified conversation dataset.</summary>
                /// <param name="name">
                /// Required. The conversation dataset to retrieve. Format: `projects//locations//conversationDatasets/`
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified conversation dataset.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationDataset>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation dataset to retrieve. Format:
                    /// `projects//locations//conversationDatasets/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationDatasets/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Import data into the specified conversation dataset. Note that it is not allowed to import data to a
                /// conversation dataset that already has data in it. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// ImportConversationDataOperationMetadata - `response`: ImportConversationDataOperationResponse
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Required. Dataset resource name. Format: `projects//locations//conversationDatasets/`
                /// </param>
                public virtual ImportConversationDataRequest ImportConversationData(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportConversationDataRequest body, string name)
                {
                    return new ImportConversationDataRequest(this.service, body, name);
                }

                /// <summary>
                /// Import data into the specified conversation dataset. Note that it is not allowed to import data to a
                /// conversation dataset that already has data in it. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// ImportConversationDataOperationMetadata - `response`: ImportConversationDataOperationResponse
                /// </summary>
                public class ImportConversationDataRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new ImportConversationData request.</summary>
                    public ImportConversationDataRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportConversationDataRequest body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Dataset resource name. Format: `projects//locations//conversationDatasets/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportConversationDataRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "importConversationData";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}:importConversationData";

                    /// <summary>Initializes ImportConversationData parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationDatasets/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Returns the list of all conversation datasets in the specified project and location.
                /// </summary>
                /// <param name="parent">
                /// Required. The project and location name to list all conversation datasets for. Format:
                /// `projects//locations/`
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>
                /// Returns the list of all conversation datasets in the specified project and location.
                /// </summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationDatasetsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project and location name to list all conversation datasets for. Format:
                    /// `projects//locations/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. Maximum number of conversation datasets to return in a single page. By default 100 and
                    /// at most 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/conversationDatasets";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the ConversationModels resource.</summary>
            public virtual ConversationModelsResource ConversationModels { get; }

            /// <summary>The "conversationModels" collection of methods.</summary>
            public class ConversationModelsResource
            {
                private const string Resource = "conversationModels";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public ConversationModelsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Evaluations = new EvaluationsResource(service);
                }

                /// <summary>Gets the Evaluations resource.</summary>
                public virtual EvaluationsResource Evaluations { get; }

                /// <summary>The "evaluations" collection of methods.</summary>
                public class EvaluationsResource
                {
                    private const string Resource = "evaluations";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public EvaluationsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Creates evaluation of a conversation model.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The conversation model resource name. Format:
                    /// `projects//locations//conversationModels/`
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates evaluation of a conversation model.</summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The conversation model resource name. Format:
                        /// `projects//locations//conversationModels/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/evaluations";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversationModels/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets an evaluation of conversation model.</summary>
                    /// <param name="name">
                    /// Required. The conversation model evaluation resource name. Format:
                    /// `projects//conversationModels//evaluations/`
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets an evaluation of conversation model.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModelEvaluation>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The conversation model evaluation resource name. Format:
                        /// `projects//conversationModels//evaluations/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversationModels/[^/]+/evaluations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Lists evaluations of a conversation model.</summary>
                    /// <param name="parent">
                    /// Required. The conversation model resource name. Format: `projects//conversationModels/`
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists evaluations of a conversation model.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The conversation model resource name. Format: `projects//conversationModels/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. Maximum number of evaluations to return in a single page. By default 100 and at
                        /// most 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/evaluations";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversationModels/[^/]+$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>
                /// Creates a model. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// CreateConversationModelOperationMetadata - `response`: ConversationModel
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">The project to create conversation model for. Format: `projects/`</param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModel body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates a model. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// CreateConversationModelOperationMetadata - `response`: ConversationModel
                /// </summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModel body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>The project to create conversation model for. Format: `projects/`</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModel Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/conversationModels";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Deletes a model. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// DeleteConversationModelOperationMetadata - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                /// <param name="name">
                /// Required. The conversation model to delete. Format: `projects//conversationModels/`
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>
                /// Deletes a model. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// DeleteConversationModelOperationMetadata - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation model to delete. Format: `projects//conversationModels/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationModels/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Deploys a model. If a model is already deployed, deploying it has no effect. A model can only serve
                /// prediction requests after it gets deployed. For article suggestion, custom model will not be used
                /// unless it is deployed. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// DeployConversationModelOperationMetadata - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Required. The conversation model to deploy. Format: `projects//conversationModels/`
                /// </param>
                public virtual DeployRequest Deploy(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DeployConversationModelRequest body, string name)
                {
                    return new DeployRequest(this.service, body, name);
                }

                /// <summary>
                /// Deploys a model. If a model is already deployed, deploying it has no effect. A model can only serve
                /// prediction requests after it gets deployed. For article suggestion, custom model will not be used
                /// unless it is deployed. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// DeployConversationModelOperationMetadata - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                public class DeployRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Deploy request.</summary>
                    public DeployRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DeployConversationModelRequest body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation model to deploy. Format: `projects//conversationModels/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2DeployConversationModelRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "deploy";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}:deploy";

                    /// <summary>Initializes Deploy parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationModels/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets conversation model.</summary>
                /// <param name="name">
                /// Required. The conversation model to retrieve. Format: `projects//conversationModels/`
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Gets conversation model.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationModel>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation model to retrieve. Format: `projects//conversationModels/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationModels/[^/]+$",
                        });
                    }
                }

                /// <summary>Lists conversation models.</summary>
                /// <param name="parent">
                /// Required. The project to list all conversation models for. Format: `projects/`
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Lists conversation models.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationModelsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to list all conversation models for. Format: `projects/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. Maximum number of conversation models to return in a single page. By default 100 and
                    /// at most 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/conversationModels";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Undeploys a model. If the model is not deployed this method has no effect. If the model is currently
                /// being used: - For article suggestion, article suggestion will fallback to the default model if model
                /// is undeployed. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// UndeployConversationModelOperationMetadata - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Required. The conversation model to undeploy. Format: `projects//conversationModels/`
                /// </param>
                public virtual UndeployRequest Undeploy(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2UndeployConversationModelRequest body, string name)
                {
                    return new UndeployRequest(this.service, body, name);
                }

                /// <summary>
                /// Undeploys a model. If the model is not deployed this method has no effect. If the model is currently
                /// being used: - For article suggestion, article suggestion will fallback to the default model if model
                /// is undeployed. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// UndeployConversationModelOperationMetadata - `response`: An [Empty
                /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                /// </summary>
                public class UndeployRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Undeploy request.</summary>
                    public UndeployRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2UndeployConversationModelRequest body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The conversation model to undeploy. Format: `projects//conversationModels/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2UndeployConversationModelRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "undeploy";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}:undeploy";

                    /// <summary>Initializes Undeploy parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationModels/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Gets the ConversationProfiles resource.</summary>
            public virtual ConversationProfilesResource ConversationProfiles { get; }

            /// <summary>The "conversationProfiles" collection of methods.</summary>
            public class ConversationProfilesResource
            {
                private const string Resource = "conversationProfiles";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public ConversationProfilesResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Clears a suggestion feature from a conversation profile for the given participant role. This method
                /// is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="conversationProfile">
                /// Required. The Conversation Profile to add or update the suggestion feature config. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </param>
                public virtual ClearSuggestionFeatureConfigRequest ClearSuggestionFeatureConfig(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest body, string conversationProfile)
                {
                    return new ClearSuggestionFeatureConfigRequest(this.service, body, conversationProfile);
                }

                /// <summary>
                /// Clears a suggestion feature from a conversation profile for the given participant role. This method
                /// is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile
                /// </summary>
                public class ClearSuggestionFeatureConfigRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new ClearSuggestionFeatureConfig request.</summary>
                    public ClearSuggestionFeatureConfigRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest body, string conversationProfile) : base(service)
                    {
                        ConversationProfile = conversationProfile;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The Conversation Profile to add or update the suggestion feature config. Format:
                    /// `projects//locations//conversationProfiles/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("conversationProfile", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ConversationProfile { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "clearSuggestionFeatureConfig";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+conversationProfile}:clearSuggestionFeatureConfig";

                    /// <summary>Initializes ClearSuggestionFeatureConfig parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("conversationProfile", new Google.Apis.Discovery.Parameter
                        {
                            Name = "conversationProfile",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Creates a conversation profile in the specified project. ConversationProfile.create_time and
                /// ConversationProfile.update_time aren't populated in the response. You can retrieve them via
                /// GetConversationProfile API.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project to create a conversation profile for. Format: `projects//locations/`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates a conversation profile in the specified project. ConversationProfile.create_time and
                /// ConversationProfile.update_time aren't populated in the response. You can retrieve them via
                /// GetConversationProfile API.
                /// </summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to create a conversation profile for. Format: `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/conversationProfiles";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>Deletes the specified conversation profile.</summary>
                /// <param name="name">
                /// Required. The name of the conversation profile to delete. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Deletes the specified conversation profile.</summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the conversation profile to delete. Format:
                    /// `projects//locations//conversationProfiles/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves the specified conversation profile.</summary>
                /// <param name="name">
                /// Required. The resource name of the conversation profile. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified conversation profile.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The resource name of the conversation profile. Format:
                    /// `projects//locations//conversationProfiles/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$",
                        });
                    }
                }

                /// <summary>Returns the list of all conversation profiles in the specified project.</summary>
                /// <param name="parent">
                /// Required. The project to list all conversation profiles from. Format: `projects//locations/`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all conversation profiles in the specified project.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationProfilesResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to list all conversation profiles from. Format: `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// The maximum number of items to return in a single page. By default 100 and at most 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/conversationProfiles";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Updates the specified conversation profile. ConversationProfile.create_time and
                /// ConversationProfile.update_time aren't populated in the response. You can retrieve them via
                /// GetConversationProfile API.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// The unique identifier of this conversation profile. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>
                /// Updates the specified conversation profile. ConversationProfile.create_time and
                /// ConversationProfile.update_time aren't populated in the response. You can retrieve them via
                /// GetConversationProfile API.
                /// </summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// The unique identifier of this conversation profile. Format:
                    /// `projects//locations//conversationProfiles/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Required. The mask to control which fields to update.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ConversationProfile Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains
                /// the type of suggestion feature for the participant role, it will update it. Otherwise it will insert
                /// the suggestion feature. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running
                /// operation to add or update suggestion feature config for the same conversation profile, participant
                /// role and suggestion feature type exists, please cancel the existing long running operation before
                /// sending such request, otherwise the request will be rejected.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="conversationProfile">
                /// Required. The Conversation Profile to add or update the suggestion feature config. Format:
                /// `projects//locations//conversationProfiles/`.
                /// </param>
                public virtual SetSuggestionFeatureConfigRequest SetSuggestionFeatureConfig(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest body, string conversationProfile)
                {
                    return new SetSuggestionFeatureConfigRequest(this.service, body, conversationProfile);
                }

                /// <summary>
                /// Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains
                /// the type of suggestion feature for the participant role, it will update it. Otherwise it will insert
                /// the suggestion feature. This method is a [long-running
                /// operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned
                /// `Operation` type has the following method-specific fields: - `metadata`:
                /// SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running
                /// operation to add or update suggestion feature config for the same conversation profile, participant
                /// role and suggestion feature type exists, please cancel the existing long running operation before
                /// sending such request, otherwise the request will be rejected.
                /// </summary>
                public class SetSuggestionFeatureConfigRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new SetSuggestionFeatureConfig request.</summary>
                    public SetSuggestionFeatureConfigRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest body, string conversationProfile) : base(service)
                    {
                        ConversationProfile = conversationProfile;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The Conversation Profile to add or update the suggestion feature config. Format:
                    /// `projects//locations//conversationProfiles/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("conversationProfile", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string ConversationProfile { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "setSuggestionFeatureConfig";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+conversationProfile}:setSuggestionFeatureConfig";

                    /// <summary>Initializes SetSuggestionFeatureConfig parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("conversationProfile", new Google.Apis.Discovery.Parameter
                        {
                            Name = "conversationProfile",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Gets the Conversations resource.</summary>
            public virtual ConversationsResource Conversations { get; }

            /// <summary>The "conversations" collection of methods.</summary>
            public class ConversationsResource
            {
                private const string Resource = "conversations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public ConversationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Messages = new MessagesResource(service);
                    Participants = new ParticipantsResource(service);
                    Suggestions = new SuggestionsResource(service);
                }

                /// <summary>Gets the Messages resource.</summary>
                public virtual MessagesResource Messages { get; }

                /// <summary>The "messages" collection of methods.</summary>
                public class MessagesResource
                {
                    private const string Resource = "messages";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public MessagesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in
                    /// descending order. To fetch updates without duplication, send request with filter
                    /// `create_time_epoch_microseconds &amp;gt; [first item's create_time of previous request]` and
                    /// empty page_token.
                    /// </summary>
                    /// <param name="parent">
                    /// Required. The name of the conversation to list messages for. Format:
                    /// `projects//locations//conversations/`
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>
                    /// Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in
                    /// descending order. To fetch updates without duplication, send request with filter
                    /// `create_time_epoch_microseconds &amp;gt; [first item's create_time of previous request]` and
                    /// empty page_token.
                    /// </summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListMessagesResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the conversation to list messages for. Format:
                        /// `projects//locations//conversations/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. Filter on message fields. Currently predicates on `create_time` and
                        /// `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds
                        /// accuracy. E.g., `create_time_epoch_microseconds &amp;gt; 1551790877964485` or `create_time
                        /// &amp;gt; 2017-01-15T01:30:15.01Z`. For more information about filtering, see [API
                        /// Filtering](https://aip.dev/160).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/messages";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Participants resource.</summary>
                public virtual ParticipantsResource Participants { get; }

                /// <summary>The "participants" collection of methods.</summary>
                public class ParticipantsResource
                {
                    private const string Resource = "participants";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public ParticipantsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Suggestions = new SuggestionsResource(service);
                    }

                    /// <summary>Gets the Suggestions resource.</summary>
                    public virtual SuggestionsResource Suggestions { get; }

                    /// <summary>The "suggestions" collection of methods.</summary>
                    public class SuggestionsResource
                    {
                        private const string Resource = "suggestions";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public SuggestionsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Gets suggested articles for a participant based on specific historical messages.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the participant to fetch suggestion for. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </param>
                        public virtual SuggestArticlesRequest SuggestArticles(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestArticlesRequest body, string parent)
                        {
                            return new SuggestArticlesRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Gets suggested articles for a participant based on specific historical messages.
                        /// </summary>
                        public class SuggestArticlesRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestArticlesResponse>
                        {
                            /// <summary>Constructs a new SuggestArticles request.</summary>
                            public SuggestArticlesRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestArticlesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the participant to fetch suggestion for. Format:
                            /// `projects//locations//conversations//participants/`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestArticlesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "suggestArticles";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/suggestions:suggestArticles";

                            /// <summary>Initializes SuggestArticles parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets suggested faq answers for a participant based on specific historical messages.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the participant to fetch suggestion for. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </param>
                        public virtual SuggestFaqAnswersRequest SuggestFaqAnswers(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestFaqAnswersRequest body, string parent)
                        {
                            return new SuggestFaqAnswersRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Gets suggested faq answers for a participant based on specific historical messages.
                        /// </summary>
                        public class SuggestFaqAnswersRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestFaqAnswersResponse>
                        {
                            /// <summary>Constructs a new SuggestFaqAnswers request.</summary>
                            public SuggestFaqAnswersRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestFaqAnswersRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the participant to fetch suggestion for. Format:
                            /// `projects//locations//conversations//participants/`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestFaqAnswersRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "suggestFaqAnswers";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/suggestions:suggestFaqAnswers";

                            /// <summary>Initializes SuggestFaqAnswers parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets knowledge assist suggestions based on historical messages.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the participant to fetch suggestions for. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </param>
                        public virtual SuggestKnowledgeAssistRequest SuggestKnowledgeAssist(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestKnowledgeAssistRequest body, string parent)
                        {
                            return new SuggestKnowledgeAssistRequest(this.service, body, parent);
                        }

                        /// <summary>Gets knowledge assist suggestions based on historical messages.</summary>
                        public class SuggestKnowledgeAssistRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestKnowledgeAssistResponse>
                        {
                            /// <summary>Constructs a new SuggestKnowledgeAssist request.</summary>
                            public SuggestKnowledgeAssistRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestKnowledgeAssistRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the participant to fetch suggestions for. Format:
                            /// `projects//locations//conversations//participants/`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestKnowledgeAssistRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "suggestKnowledgeAssist";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/suggestions:suggestKnowledgeAssist";

                            /// <summary>Initializes SuggestKnowledgeAssist parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets smart replies for a participant based on specific historical messages.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The name of the participant to fetch suggestion for. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </param>
                        public virtual SuggestSmartRepliesRequest SuggestSmartReplies(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestSmartRepliesRequest body, string parent)
                        {
                            return new SuggestSmartRepliesRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Gets smart replies for a participant based on specific historical messages.
                        /// </summary>
                        public class SuggestSmartRepliesRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestSmartRepliesResponse>
                        {
                            /// <summary>Constructs a new SuggestSmartReplies request.</summary>
                            public SuggestSmartRepliesRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestSmartRepliesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The name of the participant to fetch suggestion for. Format:
                            /// `projects//locations//conversations//participants/`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestSmartRepliesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "suggestSmartReplies";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v2/{+parent}/suggestions:suggestSmartReplies";

                            /// <summary>Initializes SuggestSmartReplies parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>
                    /// Adds a text (chat, for example), or audio (phone recording, for example) message from a
                    /// participant into the conversation. Note: Always use agent versions for production traffic sent
                    /// to virtual agents. See [Versions and
                    /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="participant">
                    /// Required. The name of the participant this text comes from. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </param>
                    public virtual AnalyzeContentRequest AnalyzeContent(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnalyzeContentRequest body, string participant)
                    {
                        return new AnalyzeContentRequest(this.service, body, participant);
                    }

                    /// <summary>
                    /// Adds a text (chat, for example), or audio (phone recording, for example) message from a
                    /// participant into the conversation. Note: Always use agent versions for production traffic sent
                    /// to virtual agents. See [Versions and
                    /// environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).
                    /// </summary>
                    public class AnalyzeContentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnalyzeContentResponse>
                    {
                        /// <summary>Constructs a new AnalyzeContent request.</summary>
                        public AnalyzeContentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnalyzeContentRequest body, string participant) : base(service)
                        {
                            Participant = participant;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the participant this text comes from. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("participant", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Participant { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2AnalyzeContentRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "analyzeContent";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+participant}:analyzeContent";

                        /// <summary>Initializes AnalyzeContent parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("participant", new Google.Apis.Discovery.Parameter
                            {
                                Name = "participant",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Creates a new participant in a conversation.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. Resource identifier of the conversation adding the participant. Format:
                    /// `projects//locations//conversations/`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates a new participant in a conversation.</summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Resource identifier of the conversation adding the participant. Format:
                        /// `projects//locations//conversations/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/participants";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Retrieves a conversation participant.</summary>
                    /// <param name="name">
                    /// Required. The name of the participant. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Retrieves a conversation participant.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the participant. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Returns the list of all participants in the specified conversation.</summary>
                    /// <param name="parent">
                    /// Required. The conversation to list all participants from. Format:
                    /// `projects//locations//conversations/`.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all participants in the specified conversation.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListParticipantsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The conversation to list all participants from. Format:
                        /// `projects//locations//conversations/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. The next_page_token value returned from a previous list request.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/participants";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates the specified participant.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Optional. The unique identifier of this participant. Format:
                    /// `projects//locations//conversations//participants/`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates the specified participant.</summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Optional. The unique identifier of this participant. Format:
                        /// `projects//locations//conversations//participants/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Required. The mask to specify which fields to update.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Participant Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Suggestions resource.</summary>
                public virtual SuggestionsResource Suggestions { get; }

                /// <summary>The "suggestions" collection of methods.</summary>
                public class SuggestionsResource
                {
                    private const string Resource = "suggestions";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public SuggestionsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Generates all the suggestions using generators configured in the conversation profile. A
                    /// generator is used only if its trigger event is matched.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="conversation">
                    /// Required. The conversation for which the suggestions are generated. Format:
                    /// `projects//locations//conversations/`. The conversation must be created with a conversation
                    /// profile which has generators configured in it to be able to get suggestions.
                    /// </param>
                    public virtual GenerateRequest Generate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateSuggestionsRequest body, string conversation)
                    {
                        return new GenerateRequest(this.service, body, conversation);
                    }

                    /// <summary>
                    /// Generates all the suggestions using generators configured in the conversation profile. A
                    /// generator is used only if its trigger event is matched.
                    /// </summary>
                    public class GenerateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateSuggestionsResponse>
                    {
                        /// <summary>Constructs a new Generate request.</summary>
                        public GenerateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateSuggestionsRequest body, string conversation) : base(service)
                        {
                            Conversation = conversation;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The conversation for which the suggestions are generated. Format:
                        /// `projects//locations//conversations/`. The conversation must be created with a conversation
                        /// profile which has generators configured in it to be able to get suggestions.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("conversation", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Conversation { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateSuggestionsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "generate";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+conversation}/suggestions:generate";

                        /// <summary>Initializes Generate parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("conversation", new Google.Apis.Discovery.Parameter
                            {
                                Name = "conversation",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Get answers for the given query based on knowledge documents.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="conversation">
                    /// Optional. The conversation (between human agent and end user) where the search request is
                    /// triggered. Format: `projects//locations//conversations/`.
                    /// </param>
                    public virtual SearchKnowledgeRequest SearchKnowledge(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest body, string conversation)
                    {
                        return new SearchKnowledgeRequest(this.service, body, conversation);
                    }

                    /// <summary>Get answers for the given query based on knowledge documents.</summary>
                    public class SearchKnowledgeRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeResponse>
                    {
                        /// <summary>Constructs a new SearchKnowledge request.</summary>
                        public SearchKnowledgeRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest body, string conversation) : base(service)
                        {
                            Conversation = conversation;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Optional. The conversation (between human agent and end user) where the search request is
                        /// triggered. Format: `projects//locations//conversations/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("conversation", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Conversation { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "searchKnowledge";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+conversation}/suggestions:searchKnowledge";

                        /// <summary>Initializes SearchKnowledge parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("conversation", new Google.Apis.Discovery.Parameter
                            {
                                Name = "conversation",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Suggests summary for a conversation based on specific historical messages. The range of the
                    /// messages to be used for summary can be specified in the request.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="conversation">
                    /// Required. The conversation to fetch suggestion for. Format:
                    /// `projects//locations//conversations/`.
                    /// </param>
                    public virtual SuggestConversationSummaryRequest SuggestConversationSummary(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestConversationSummaryRequest body, string conversation)
                    {
                        return new SuggestConversationSummaryRequest(this.service, body, conversation);
                    }

                    /// <summary>
                    /// Suggests summary for a conversation based on specific historical messages. The range of the
                    /// messages to be used for summary can be specified in the request.
                    /// </summary>
                    public class SuggestConversationSummaryRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestConversationSummaryResponse>
                    {
                        /// <summary>Constructs a new SuggestConversationSummary request.</summary>
                        public SuggestConversationSummaryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestConversationSummaryRequest body, string conversation) : base(service)
                        {
                            Conversation = conversation;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The conversation to fetch suggestion for. Format:
                        /// `projects//locations//conversations/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("conversation", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Conversation { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SuggestConversationSummaryRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "suggestConversationSummary";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+conversation}/suggestions:suggestConversationSummary";

                        /// <summary>Initializes SuggestConversationSummary parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("conversation", new Google.Apis.Discovery.Parameter
                            {
                                Name = "conversation",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>
                /// Completes the specified conversation. Finished conversations are purged from the database after 30
                /// days.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Required. Resource identifier of the conversation to close. Format:
                /// `projects//locations//conversations/`.
                /// </param>
                public virtual CompleteRequest Complete(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CompleteConversationRequest body, string name)
                {
                    return new CompleteRequest(this.service, body, name);
                }

                /// <summary>
                /// Completes the specified conversation. Finished conversations are purged from the database after 30
                /// days.
                /// </summary>
                public class CompleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation>
                {
                    /// <summary>Constructs a new Complete request.</summary>
                    public CompleteRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CompleteConversationRequest body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Resource identifier of the conversation to close. Format:
                    /// `projects//locations//conversations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2CompleteConversationRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "complete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}:complete";

                    /// <summary>Initializes Complete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle:
                /// There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated
                /// Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's
                /// no dialogflow agent responding to user queries. But we will provide suggestions which are generated
                /// from conversation. If Conversation.conversation_profile is configured for a dialogflow agent,
                /// conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`.
                /// And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered,
                /// conversation will transfer to Assist Stage.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. Resource identifier of the project creating the conversation. Format:
                /// `projects//locations/`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle:
                /// There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated
                /// Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's
                /// no dialogflow agent responding to user queries. But we will provide suggestions which are generated
                /// from conversation. If Conversation.conversation_profile is configured for a dialogflow agent,
                /// conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`.
                /// And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered,
                /// conversation will transfer to Assist Stage.
                /// </summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Resource identifier of the project creating the conversation. Format:
                    /// `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it
                    /// if you cannot wait for the response to return a auto-generated one to you. The conversation ID
                    /// must be compliant with the regression formula `a-zA-Z*` with the characters length in range of
                    /// [3,64]. If the field is provided, the caller is responsible for 1. the uniqueness of the ID,
                    /// otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not
                    /// under a project to better ensure uniqueness.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("conversationId", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string ConversationId { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/conversations";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("conversationId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "conversationId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Retrieves the specific conversation.</summary>
                /// <param name="name">
                /// Required. The name of the conversation. Format: `projects//locations//conversations/`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specific conversation.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Conversation>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the conversation. Format: `projects//locations//conversations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                        });
                    }
                }

                /// <summary>Data ingestion API. Ingests context references for an existing conversation.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="conversation">
                /// Required. Resource identifier of the conversation to ingest context information for. Format:
                /// `projects//locations//conversations/`.
                /// </param>
                public virtual IngestContextReferencesRequest IngestContextReferences(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2IngestContextReferencesRequest body, string conversation)
                {
                    return new IngestContextReferencesRequest(this.service, body, conversation);
                }

                /// <summary>Data ingestion API. Ingests context references for an existing conversation.</summary>
                public class IngestContextReferencesRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2IngestContextReferencesResponse>
                {
                    /// <summary>Constructs a new IngestContextReferences request.</summary>
                    public IngestContextReferencesRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2IngestContextReferencesRequest body, string conversation) : base(service)
                    {
                        Conversation = conversation;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Resource identifier of the conversation to ingest context information for. Format:
                    /// `projects//locations//conversations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("conversation", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Conversation { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2IngestContextReferencesRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "ingestContextReferences";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+conversation}:ingestContextReferences";

                    /// <summary>Initializes IngestContextReferences parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("conversation", new Google.Apis.Discovery.Parameter
                        {
                            Name = "conversation",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                        });
                    }
                }

                /// <summary>Returns the list of all conversations in the specified project.</summary>
                /// <param name="parent">
                /// Required. The project from which to list all conversation. Format: `projects//locations/`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all conversations in the specified project.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListConversationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project from which to list all conversation. Format: `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. A filter expression that filters conversations listed in the response. Only
                    /// `lifecycle_state` can be filtered on in this way. For example, the following expression only
                    /// returns `COMPLETED` conversations: `lifecycle_state = "COMPLETED"` For more information about
                    /// filtering, see [API Filtering](https://aip.dev/160).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>
                    /// Optional. The maximum number of items to return in a single page. By default 100 and at most
                    /// 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/conversations";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the EncryptionSpec resource.</summary>
            public virtual EncryptionSpecResource EncryptionSpec { get; }

            /// <summary>The "encryptionSpec" collection of methods.</summary>
            public class EncryptionSpecResource
            {
                private const string Resource = "encryptionSpec";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public EncryptionSpecResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Initializes a location-level encryption key specification. An error will be thrown if the location
                /// has resources already created before the initialization. Once the encryption specification is
                /// initialized at a location, it is immutable and all newly created resources under the location will
                /// be encrypted with the existing specification.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Immutable. The resource name of the encryption key specification resource. Format:
                /// projects/{project}/locations/{location}/encryptionSpec
                /// </param>
                public virtual InitializeRequest Initialize(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2InitializeEncryptionSpecRequest body, string name)
                {
                    return new InitializeRequest(this.service, body, name);
                }

                /// <summary>
                /// Initializes a location-level encryption key specification. An error will be thrown if the location
                /// has resources already created before the initialization. Once the encryption specification is
                /// initialized at a location, it is immutable and all newly created resources under the location will
                /// be encrypted with the existing specification.
                /// </summary>
                public class InitializeRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Initialize request.</summary>
                    public InitializeRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2InitializeEncryptionSpecRequest body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Immutable. The resource name of the encryption key specification resource. Format:
                    /// projects/{project}/locations/{location}/encryptionSpec
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2InitializeEncryptionSpecRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "initialize";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}:initialize";

                    /// <summary>Initializes Initialize parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/encryptionSpec$",
                        });
                    }
                }
            }

            /// <summary>Gets the Generators resource.</summary>
            public virtual GeneratorsResource Generators { get; }

            /// <summary>The "generators" collection of methods.</summary>
            public class GeneratorsResource
            {
                private const string Resource = "generators";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public GeneratorsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>Creates a generator.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project/location to create generator for. Format: `projects//locations/`
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>Creates a generator.</summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project/location to create generator for. Format: `projects//locations/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. The ID to use for the generator, which will become the final component of the
                    /// generator's resource name. The generator ID must be compliant with the regression formula
                    /// `a-zA-Z*` with the characters length in range of [3,64]. If the field is not provided, an Id
                    /// will be auto-generated. If the field is provided, the caller is responsible for 1. the
                    /// uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to
                    /// use custom ID or not under a project to better ensure uniqueness.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("generatorId", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string GeneratorId { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/generators";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("generatorId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "generatorId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Deletes a generator.</summary>
                /// <param name="name">
                /// Required. The generator resource name to delete. Format: `projects//locations//generators/`
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Deletes a generator.</summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The generator resource name to delete. Format: `projects//locations//generators/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/generators/[^/]+$",
                        });
                    }
                }

                /// <summary>Retrieves a generator.</summary>
                /// <param name="name">
                /// Required. The generator resource name to retrieve. Format: `projects//locations//generators/`
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves a generator.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The generator resource name to retrieve. Format: `projects//locations//generators/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/generators/[^/]+$",
                        });
                    }
                }

                /// <summary>Lists generators.</summary>
                /// <param name="parent">
                /// Required. The project/location to list generators for. Format: `projects//locations/`
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Lists generators.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListGeneratorsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project/location to list generators for. Format: `projects//locations/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Optional. Maximum number of conversation models to return in a single page. Default to 10.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>Optional. The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/generators";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Updates a generator.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Output only. Identifier. The resource name of the generator. Format:
                /// `projects//locations//generators/`
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>Updates a generator.</summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Output only. Identifier. The resource name of the generator. Format:
                    /// `projects//locations//generators/`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Optional. The list of fields to update.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Generator Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/generators/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the KnowledgeBases resource.</summary>
            public virtual KnowledgeBasesResource KnowledgeBases { get; }

            /// <summary>The "knowledgeBases" collection of methods.</summary>
            public class KnowledgeBasesResource
            {
                private const string Resource = "knowledgeBases";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public KnowledgeBasesResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Documents = new DocumentsResource(service);
                }

                /// <summary>Gets the Documents resource.</summary>
                public virtual DocumentsResource Documents { get; }

                /// <summary>The "documents" collection of methods.</summary>
                public class DocumentsResource
                {
                    private const string Resource = "documents";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public DocumentsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Creates a new document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The knowledge base to create a document for. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a new document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The knowledge base to create a document for. Format:
                        /// `projects//locations//knowledgeBases/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/documents";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes the specified document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// </summary>
                    /// <param name="name">
                    /// Required. The name of the document to delete. Format:
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes the specified document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: An [Empty
                    /// message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
                    /// </summary>
                    public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the document to delete. Format:
                        /// `projects//locations//knowledgeBases//documents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Exports a smart messaging candidate document into the specified destination. This method is a
                    /// [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the document to export. Format:
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </param>
                    public virtual ExportRequest Export(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportDocumentRequest body, string name)
                    {
                        return new ExportRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Exports a smart messaging candidate document into the specified destination. This method is a
                    /// [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    public class ExportRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Export request.</summary>
                        public ExportRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportDocumentRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the document to export. Format:
                        /// `projects//locations//knowledgeBases//documents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ExportDocumentRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "export";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}:export";

                        /// <summary>Initializes Export parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Retrieves the specified document.</summary>
                    /// <param name="name">
                    /// Required. The name of the document to retrieve. Format
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Retrieves the specified document.</summary>
                    public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the document to retrieve. Format
                        /// `projects//locations//knowledgeBases//documents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Creates documents by importing data from external sources. Dialogflow supports up to 350
                    /// documents in each request. If you try to import more, Dialogflow will return an error. This
                    /// method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The knowledge base to import documents into. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </param>
                    public virtual ImportRequest Import(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportDocumentsRequest body, string parent)
                    {
                        return new ImportRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates documents by importing data from external sources. Dialogflow supports up to 350
                    /// documents in each request. If you try to import more, Dialogflow will return an error. This
                    /// method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: ImportDocumentsResponse
                    /// </summary>
                    public class ImportRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Import request.</summary>
                        public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportDocumentsRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The knowledge base to import documents into. Format:
                        /// `projects//locations//knowledgeBases/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ImportDocumentsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "import";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/documents:import";

                        /// <summary>Initializes Import parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Returns the list of all documents of the knowledge base.</summary>
                    /// <param name="parent">
                    /// Required. The knowledge base to list all documents for. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Returns the list of all documents of the knowledge base.</summary>
                    public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListDocumentsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The knowledge base to list all documents for. Format:
                        /// `projects//locations//knowledgeBases/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// The filter expression used to filter documents returned by the list method. The expression
                        /// has the following syntax: [AND ] ... The following fields and operators are supported: *
                        /// knowledge_types with has(:) operator * display_name with has(:) operator * state with
                        /// equals(=) operator Examples: * "knowledge_types:FAQ" matches documents with FAQ knowledge
                        /// type. * "display_name:customer" matches documents whose display name contains "customer". *
                        /// "state=ACTIVE" matches documents with ACTIVE state. * "knowledge_types:FAQ AND state=ACTIVE"
                        /// matches all active FAQ documents. For more information about filtering, see [API
                        /// Filtering](https://aip.dev/160).
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// The maximum number of items to return in a single page. By default 10 and at most 100.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>The next_page_token value returned from a previous list request.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+parent}/documents";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates the specified document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Optional. The document resource name. The name must be empty when creating a document. Format:
                    /// `projects//locations//knowledgeBases//documents/`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates the specified document. This method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document
                    /// </summary>
                    public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Optional. The document resource name. The name must be empty when creating a document.
                        /// Format: `projects//locations//knowledgeBases//documents/`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Optional. Not specified means `update all`. Currently, only `display_name` can be updated,
                        /// an InvalidArgument will be returned for attempting to update other fields.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Document Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Reloads the specified document from its specified source, content_uri or content. The previously
                    /// loaded content of the document will be deleted. Note: Even when the content of the document has
                    /// not changed, there still may be side effects because of internal implementation changes. This
                    /// method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document Note: The
                    /// `projects.agent.knowledgeBases.documents` resource is deprecated; only use
                    /// `projects.knowledgeBases.documents`.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the document to reload. Format:
                    /// `projects//locations//knowledgeBases//documents/`
                    /// </param>
                    public virtual ReloadRequest Reload(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest body, string name)
                    {
                        return new ReloadRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Reloads the specified document from its specified source, content_uri or content. The previously
                    /// loaded content of the document will be deleted. Note: Even when the content of the document has
                    /// not changed, there still may be side effects because of internal implementation changes. This
                    /// method is a [long-running
                    /// operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned
                    /// `Operation` type has the following method-specific fields: - `metadata`:
                    /// KnowledgeOperationMetadata - `response`: Document Note: The
                    /// `projects.agent.knowledgeBases.documents` resource is deprecated; only use
                    /// `projects.knowledgeBases.documents`.
                    /// </summary>
                    public class ReloadRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Reload request.</summary>
                        public ReloadRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the document to reload. Format:
                        /// `projects//locations//knowledgeBases//documents/`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ReloadDocumentRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "reload";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v2/{+name}:reload";

                        /// <summary>Initializes Reload parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Creates a knowledge base.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The project to create a knowledge base for. Format: `projects//locations/`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>Creates a knowledge base.</summary>
                public class CreateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to create a knowledge base for. Format: `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/knowledgeBases";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>Deletes the specified knowledge base.</summary>
                /// <param name="name">
                /// Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Deletes the specified knowledge base.</summary>
                public class DeleteRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the knowledge base to delete. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge
                    /// base are also deleted.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("force", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> Force { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                        });
                        RequestParameters.Add("force", new Google.Apis.Discovery.Parameter
                        {
                            Name = "force",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Retrieves the specified knowledge base.</summary>
                /// <param name="name">
                /// Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Retrieves the specified knowledge base.</summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the knowledge base to retrieve. Format
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                        });
                    }
                }

                /// <summary>Returns the list of all knowledge bases of the specified agent.</summary>
                /// <param name="parent">
                /// Required. The project to list of knowledge bases for. Format: `projects//locations/`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Returns the list of all knowledge bases of the specified agent.</summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2ListKnowledgeBasesResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The project to list of knowledge bases for. Format: `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// The filter expression used to filter knowledge bases returned by the list method. The expression
                    /// has the following syntax: [AND ] ... The following fields and operators are supported: *
                    /// display_name with has(:) operator * language_code with equals(=) operator Examples: *
                    /// 'language_code=en-us' matches knowledge bases with en-us language code. *
                    /// 'display_name:articles' matches knowledge bases whose display name contains "articles". *
                    /// 'display_name:"Best Articles"' matches knowledge bases whose display name contains "Best
                    /// Articles". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases whose
                    /// display name contains "articles" and whose language code is "en-gb". Note: An empty filter
                    /// string (i.e. "") is a no-op and will result in no filtering. For more information about
                    /// filtering, see [API Filtering](https://aip.dev/160).
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>
                    /// The maximum number of items to return in a single page. By default 10 and at most 100.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The next_page_token value returned from a previous list request.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/knowledgeBases";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Updates the specified knowledge base.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
                /// `projects//locations//knowledgeBases/`.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>Updates the specified knowledge base.</summary>
                public class PatchRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
                    /// `projects//locations//knowledgeBases/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an
                    /// InvalidArgument will be returned for attempting to update other fields.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2KnowledgeBase Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the Operations resource.</summary>
            public virtual OperationsResource Operations { get; }

            /// <summary>The "operations" collection of methods.</summary>
            public class OperationsResource
            {
                private const string Resource = "operations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public OperationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                /// cancel the operation, but success is not guaranteed. If the server doesn't support this method, it
                /// returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to
                /// check whether the cancellation succeeded or whether the operation completed despite cancellation. On
                /// successful cancellation, the operation is not deleted; instead, it becomes an operation with an
                /// Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
                /// </summary>
                /// <param name="name">The name of the operation resource to be cancelled.</param>
                public virtual CancelRequest Cancel(string name)
                {
                    return new CancelRequest(this.service, name);
                }

                /// <summary>
                /// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to
                /// cancel the operation, but success is not guaranteed. If the server doesn't support this method, it
                /// returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to
                /// check whether the cancellation succeeded or whether the operation completed despite cancellation. On
                /// successful cancellation, the operation is not deleted; instead, it becomes an operation with an
                /// Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
                /// </summary>
                public class CancelRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Cancel request.</summary>
                    public CancelRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>The name of the operation resource to be cancelled.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "cancel";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}:cancel";

                    /// <summary>Initializes Cancel parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Gets the latest state of a long-running operation. Clients can use this method to poll the operation
                /// result at intervals as recommended by the API service.
                /// </summary>
                /// <param name="name">The name of the operation resource.</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>
                /// Gets the latest state of a long-running operation. Clients can use this method to poll the operation
                /// result at intervals as recommended by the API service.
                /// </summary>
                public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>The name of the operation resource.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Lists operations that match the specified filter in the request. If the server doesn't support this
                /// method, it returns `UNIMPLEMENTED`.
                /// </summary>
                /// <param name="name">The name of the operation's parent resource.</param>
                public virtual ListRequest List(string name)
                {
                    return new ListRequest(this.service, name);
                }

                /// <summary>
                /// Lists operations that match the specified filter in the request. If the server doesn't support this
                /// method, it returns `UNIMPLEMENTED`.
                /// </summary>
                public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningListOperationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>The name of the operation's parent resource.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>The standard list filter.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>The standard list page size.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The standard list page token.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+name}/operations";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the StatelessSuggestion resource.</summary>
            public virtual StatelessSuggestionResource StatelessSuggestion { get; }

            /// <summary>The "statelessSuggestion" collection of methods.</summary>
            public class StatelessSuggestionResource
            {
                private const string Resource = "statelessSuggestion";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public StatelessSuggestionResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Generates and returns a suggestion for a conversation that does not have a resource created for it.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The parent resource to charge for the Suggestion's generation. Format:
                /// `projects//locations/`.
                /// </param>
                public virtual GenerateRequest Generate(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSuggestionRequest body, string parent)
                {
                    return new GenerateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Generates and returns a suggestion for a conversation that does not have a resource created for it.
                /// </summary>
                public class GenerateRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSuggestionResponse>
                {
                    /// <summary>Constructs a new Generate request.</summary>
                    public GenerateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSuggestionRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent resource to charge for the Suggestion's generation. Format:
                    /// `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSuggestionRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "generate";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/statelessSuggestion:generate";

                    /// <summary>Initializes Generate parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Gets the Suggestions resource.</summary>
            public virtual SuggestionsResource Suggestions { get; }

            /// <summary>The "suggestions" collection of methods.</summary>
            public class SuggestionsResource
            {
                private const string Resource = "suggestions";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public SuggestionsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Generates and returns a summary for a conversation that does not have a resource created for it.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The parent resource to charge for the Summary's generation. Format:
                /// `projects//locations/`.
                /// </param>
                public virtual GenerateStatelessSummaryRequest GenerateStatelessSummary(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSummaryRequest body, string parent)
                {
                    return new GenerateStatelessSummaryRequest(this.service, body, parent);
                }

                /// <summary>
                /// Generates and returns a summary for a conversation that does not have a resource created for it.
                /// </summary>
                public class GenerateStatelessSummaryRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSummaryResponse>
                {
                    /// <summary>Constructs a new GenerateStatelessSummary request.</summary>
                    public GenerateStatelessSummaryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSummaryRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent resource to charge for the Summary's generation. Format:
                    /// `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSummaryRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "generateStatelessSummary";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/suggestions:generateStatelessSummary";

                    /// <summary>Initializes GenerateStatelessSummary parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>Get answers for the given query based on knowledge documents.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The parent resource contains the conversation profile Format: 'projects/' or
                /// `projects//locations/`.
                /// </param>
                public virtual SearchKnowledgeRequest SearchKnowledge(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest body, string parent)
                {
                    return new SearchKnowledgeRequest(this.service, body, parent);
                }

                /// <summary>Get answers for the given query based on knowledge documents.</summary>
                public class SearchKnowledgeRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeResponse>
                {
                    /// <summary>Constructs a new SearchKnowledge request.</summary>
                    public SearchKnowledgeRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent resource contains the conversation profile Format: 'projects/' or
                    /// `projects//locations/`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "searchKnowledge";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v2/{+parent}/suggestions:searchKnowledge";

                    /// <summary>Initializes SearchKnowledge parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Deletes the specified agent.</summary>
            /// <param name="parent">
            /// Required. The project that the agent to delete is associated with. Format: `projects/`.
            /// </param>
            public virtual DeleteAgentRequest DeleteAgent(string parent)
            {
                return new DeleteAgentRequest(this.service, parent);
            }

            /// <summary>Deletes the specified agent.</summary>
            public class DeleteAgentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new DeleteAgent request.</summary>
                public DeleteAgentRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project that the agent to delete is associated with. Format: `projects/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "deleteAgent";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "DELETE";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent";

                /// <summary>Initializes DeleteAgent parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                }
            }

            /// <summary>Gets information about a location.</summary>
            /// <param name="name">Resource name for the location.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>Gets information about a location.</summary>
            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudLocationLocation>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>Resource name for the location.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                }
            }

            /// <summary>Retrieves the specified agent.</summary>
            /// <param name="parent">
            /// Required. The project that the agent to fetch is associated with. Format: `projects/`.
            /// </param>
            public virtual GetAgentRequest GetAgent(string parent)
            {
                return new GetAgentRequest(this.service, parent);
            }

            /// <summary>Retrieves the specified agent.</summary>
            public class GetAgentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent>
            {
                /// <summary>Constructs a new GetAgent request.</summary>
                public GetAgentRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }

                /// <summary>
                /// Required. The project that the agent to fetch is associated with. Format: `projects/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "getAgent";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent";

                /// <summary>Initializes GetAgent parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                }
            }

            /// <summary>Gets location-level encryption key specification.</summary>
            /// <param name="name">Required. The name of the encryption spec resource to get.</param>
            public virtual GetEncryptionSpecRequest GetEncryptionSpec(string name)
            {
                return new GetEncryptionSpecRequest(this.service, name);
            }

            /// <summary>Gets location-level encryption key specification.</summary>
            public class GetEncryptionSpecRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2EncryptionSpec>
            {
                /// <summary>Constructs a new GetEncryptionSpec request.</summary>
                public GetEncryptionSpecRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>Required. The name of the encryption spec resource to get.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "getEncryptionSpec";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes GetEncryptionSpec parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+/encryptionSpec$",
                    });
                }
            }

            /// <summary>Lists information about the supported locations for this service.</summary>
            /// <param name="name">The resource that owns the locations collection, if applicable.</param>
            public virtual ListRequest List(string name)
            {
                return new ListRequest(this.service, name);
            }

            /// <summary>Lists information about the supported locations for this service.</summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudLocationListLocationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>The resource that owns the locations collection, if applicable.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>
                /// Optional. A list of extra location types that should be used as conditions for controlling the
                /// visibility of the locations.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("extraLocationTypes", Google.Apis.Util.RequestParameterType.Query)]
                public virtual Google.Apis.Util.Repeatable<string> ExtraLocationTypes { get; set; }

                /// <summary>
                /// A filter to narrow down results to a preferred subset. The filtering language accepts strings like
                /// `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>
                /// The maximum number of results to return. If not set, the service selects a default.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>
                /// A page token received from the `next_page_token` field in the response. Send that page token to
                /// receive the subsequent page.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}/locations";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("extraLocationTypes", new Google.Apis.Discovery.Parameter
                    {
                        Name = "extraLocationTypes",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }

            /// <summary>
            /// Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries.
            /// See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">Required. The project of this agent. Format: `projects/`.</param>
            public virtual SetAgentRequest SetAgent(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent body, string parent)
            {
                return new SetAgentRequest(this.service, body, parent);
            }

            /// <summary>
            /// Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries.
            /// See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
            /// </summary>
            public class SetAgentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent>
            {
                /// <summary>Constructs a new SetAgent request.</summary>
                public SetAgentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>Required. The project of this agent. Format: `projects/`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Optional. The mask to control which fields get updated.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "setAgent";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/agent";

                /// <summary>Initializes SetAgent parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                    RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the Operations resource.</summary>
        public virtual OperationsResource Operations { get; }

        /// <summary>The "operations" collection of methods.</summary>
        public class OperationsResource
        {
            private const string Resource = "operations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public OperationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>
            /// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel
            /// the operation, but success is not guaranteed. If the server doesn't support this method, it returns
            /// `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check
            /// whether the cancellation succeeded or whether the operation completed despite cancellation. On
            /// successful cancellation, the operation is not deleted; instead, it becomes an operation with an
            /// Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
            /// </summary>
            /// <param name="name">The name of the operation resource to be cancelled.</param>
            public virtual CancelRequest Cancel(string name)
            {
                return new CancelRequest(this.service, name);
            }

            /// <summary>
            /// Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel
            /// the operation, but success is not guaranteed. If the server doesn't support this method, it returns
            /// `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check
            /// whether the cancellation succeeded or whether the operation completed despite cancellation. On
            /// successful cancellation, the operation is not deleted; instead, it becomes an operation with an
            /// Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
            /// </summary>
            public class CancelRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
            {
                /// <summary>Constructs a new Cancel request.</summary>
                public CancelRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>The name of the operation resource to be cancelled.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "cancel";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}:cancel";

                /// <summary>Initializes Cancel parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/operations/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Gets the latest state of a long-running operation. Clients can use this method to poll the operation
            /// result at intervals as recommended by the API service.
            /// </summary>
            /// <param name="name">The name of the operation resource.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>
            /// Gets the latest state of a long-running operation. Clients can use this method to poll the operation
            /// result at intervals as recommended by the API service.
            /// </summary>
            public class GetRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>The name of the operation resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/operations/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Lists operations that match the specified filter in the request. If the server doesn't support this
            /// method, it returns `UNIMPLEMENTED`.
            /// </summary>
            /// <param name="name">The name of the operation's parent resource.</param>
            public virtual ListRequest List(string name)
            {
                return new ListRequest(this.service, name);
            }

            /// <summary>
            /// Lists operations that match the specified filter in the request. If the server doesn't support this
            /// method, it returns `UNIMPLEMENTED`.
            /// </summary>
            public class ListRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleLongrunningListOperationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>The name of the operation's parent resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The standard list filter.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>The standard list page size.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The standard list page token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+name}/operations";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the Suggestions resource.</summary>
        public virtual SuggestionsResource Suggestions { get; }

        /// <summary>The "suggestions" collection of methods.</summary>
        public class SuggestionsResource
        {
            private const string Resource = "suggestions";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public SuggestionsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>
            /// Generates and returns a summary for a conversation that does not have a resource created for it.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The parent resource to charge for the Summary's generation. Format: `projects//locations/`.
            /// </param>
            public virtual GenerateStatelessSummaryRequest GenerateStatelessSummary(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSummaryRequest body, string parent)
            {
                return new GenerateStatelessSummaryRequest(this.service, body, parent);
            }

            /// <summary>
            /// Generates and returns a summary for a conversation that does not have a resource created for it.
            /// </summary>
            public class GenerateStatelessSummaryRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSummaryResponse>
            {
                /// <summary>Constructs a new GenerateStatelessSummary request.</summary>
                public GenerateStatelessSummaryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSummaryRequest body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The parent resource to charge for the Summary's generation. Format:
                /// `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2GenerateStatelessSummaryRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "generateStatelessSummary";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/suggestions:generateStatelessSummary";

                /// <summary>Initializes GenerateStatelessSummary parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }

            /// <summary>Get answers for the given query based on knowledge documents.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">
            /// Required. The parent resource contains the conversation profile Format: 'projects/' or
            /// `projects//locations/`.
            /// </param>
            public virtual SearchKnowledgeRequest SearchKnowledge(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest body, string parent)
            {
                return new SearchKnowledgeRequest(this.service, body, parent);
            }

            /// <summary>Get answers for the given query based on knowledge documents.</summary>
            public class SearchKnowledgeRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeResponse>
            {
                /// <summary>Constructs a new SearchKnowledge request.</summary>
                public SearchKnowledgeRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest body, string parent) : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The parent resource contains the conversation profile Format: 'projects/' or
                /// `projects//locations/`.
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2SearchKnowledgeRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "searchKnowledge";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v2/{+parent}/suggestions:searchKnowledge";

                /// <summary>Initializes SearchKnowledge parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                }
            }
        }

        /// <summary>Deletes the specified agent.</summary>
        /// <param name="parent">
        /// Required. The project that the agent to delete is associated with. Format: `projects/`.
        /// </param>
        public virtual DeleteAgentRequest DeleteAgent(string parent)
        {
            return new DeleteAgentRequest(this.service, parent);
        }

        /// <summary>Deletes the specified agent.</summary>
        public class DeleteAgentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleProtobufEmpty>
        {
            /// <summary>Constructs a new DeleteAgent request.</summary>
            public DeleteAgentRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
            {
                Parent = parent;
                InitParameters();
            }

            /// <summary>
            /// Required. The project that the agent to delete is associated with. Format: `projects/`.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Parent { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "deleteAgent";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "v2/{+parent}/agent";

            /// <summary>Initializes DeleteAgent parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                {
                    Name = "parent",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^projects/[^/]+$",
                });
            }
        }

        /// <summary>Retrieves the specified agent.</summary>
        /// <param name="parent">
        /// Required. The project that the agent to fetch is associated with. Format: `projects/`.
        /// </param>
        public virtual GetAgentRequest GetAgent(string parent)
        {
            return new GetAgentRequest(this.service, parent);
        }

        /// <summary>Retrieves the specified agent.</summary>
        public class GetAgentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent>
        {
            /// <summary>Constructs a new GetAgent request.</summary>
            public GetAgentRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
            {
                Parent = parent;
                InitParameters();
            }

            /// <summary>
            /// Required. The project that the agent to fetch is associated with. Format: `projects/`.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Parent { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "getAgent";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "v2/{+parent}/agent";

            /// <summary>Initializes GetAgent parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                {
                    Name = "parent",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^projects/[^/]+$",
                });
            }
        }

        /// <summary>
        /// Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See
        /// the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
        /// </summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="parent">Required. The project of this agent. Format: `projects/`.</param>
        public virtual SetAgentRequest SetAgent(Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent body, string parent)
        {
            return new SetAgentRequest(this.service, body, parent);
        }

        /// <summary>
        /// Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See
        /// the [training documentation](https://cloud.google.com/dialogflow/es/docs/training).
        /// </summary>
        public class SetAgentRequest : DialogflowBaseServiceRequest<Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent>
        {
            /// <summary>Constructs a new SetAgent request.</summary>
            public SetAgentRequest(Google.Apis.Services.IClientService service, Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent body, string parent) : base(service)
            {
                Parent = parent;
                Body = body;
                InitParameters();
            }

            /// <summary>Required. The project of this agent. Format: `projects/`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Parent { get; private set; }

            /// <summary>Optional. The mask to control which fields get updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object UpdateMask { get; set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dialogflow.v2.Data.GoogleCloudDialogflowV2Agent Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "setAgent";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "v2/{+parent}/agent";

            /// <summary>Initializes SetAgent parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                {
                    Name = "parent",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^projects/[^/]+$",
                });
                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                {
                    Name = "updateMask",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }
}
namespace Google.Apis.Dialogflow.v2.Data
{
    /// <summary>
    /// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level
    /// overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the
    /// playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the
    /// agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other.
    /// DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy:
    /// Agent-&amp;gt;Flow-&amp;gt;Page-&amp;gt;Fulfillment/Parameter.
    /// </summary>
    public class GoogleCloudDialogflowCxV3AdvancedSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination.
        /// Exposed at the following levels: - Agent level - Flow level
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioExportGcsDestination")]
        public virtual GoogleCloudDialogflowCxV3GcsDestination AudioExportGcsDestination { get; set; }

        /// <summary>
        /// Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter
        /// level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfSettings")]
        public virtual GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings DtmfSettings { get; set; }

        /// <summary>
        /// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech
        /// logging. Exposed at the following levels: - Agent level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("loggingSettings")]
        public virtual GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings LoggingSettings { get; set; }

        /// <summary>
        /// Settings for speech to text detection. Exposed at the following levels: - Agent level - Flow level - Page
        /// level - Parameter level
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechSettings")]
        public virtual GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettings SpeechSettings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Define behaviors for DTMF (dual tone multi frequency).</summary>
    public class GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller
        /// presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event
        /// (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g.
        /// when 3 is pressed, return the account balance).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>Endpoint timeout setting for matching dtmf input to regex.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpointingTimeoutDuration")]
        public virtual object EndpointingTimeoutDuration { get; set; }

        /// <summary>The digit that terminates a DTMF digit sequence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("finishDigit")]
        public virtual string FinishDigit { get; set; }

        /// <summary>Interdigit timeout setting for matching dtmf input to regex.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interdigitTimeoutDuration")]
        public virtual object InterdigitTimeoutDuration { get; set; }

        /// <summary>Max length of DTMF digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxDigits")]
        public virtual System.Nullable<int> MaxDigits { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Define behaviors on logging.</summary>
    public class GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Enables consent-based end-user input redaction, if true, a pre-defined session parameter
        /// `$session.params.conversation-redaction` will be used to determine if the utterance should be redacted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableConsentBasedRedaction")]
        public virtual System.Nullable<bool> EnableConsentBasedRedaction { get; set; }

        /// <summary>Enables DF Interaction logging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableInteractionLogging")]
        public virtual System.Nullable<bool> EnableInteractionLogging { get; set; }

        /// <summary>Enables Google Cloud Logging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableStackdriverLogging")]
        public virtual System.Nullable<bool> EnableStackdriverLogging { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Define behaviors of speech to text detection.</summary>
    public class GoogleCloudDialogflowCxV3AdvancedSettingsSpeechSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpointerSensitivity")]
        public virtual System.Nullable<int> EndpointerSensitivity { get; set; }

        /// <summary>
        /// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests
        /// from its corresponding language. For more information, see [Speech
        /// models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("models")]
        public virtual System.Collections.Generic.IDictionary<string, string> Models { get; set; }

        /// <summary>Timeout before detecting no speech.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noSpeechTimeout")]
        public virtual object NoSpeechTimeout { get; set; }

        /// <summary>
        /// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useTimeoutBasedEndpointing")]
        public virtual System.Nullable<bool> UseTimeoutBasedEndpointing { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the natural speech audio to be processed.</summary>
    public class GoogleCloudDialogflowCxV3AudioInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech
        /// audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent,
        /// both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in
        /// the first request and `audio` must be provided in all following requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual string Audio { get; set; }

        /// <summary>Required. Instructs the speech recognizer how to process the speech audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("config")]
        public virtual GoogleCloudDialogflowCxV3InputAudioConfig Config { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper
    /// time while the client is playing back the response audio from a previous request. When the client sees the
    /// utterance, it should stop the playback and immediately get ready for receiving the responses for the current
    /// request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing
    /// back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which
    /// goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no
    /// barge-in phase and during which the API starts speech detection and may inform the client that an utterance has
    /// been detected. Note that no-speech event is not expected in this phase. The client provides this configuration
    /// in terms of the durations of those two phases. The durations are measured in terms of the audio length from the
    /// start of the input audio. No-speech event is a response with END_OF_UTTERANCE without any transcript following
    /// up.
    /// </summary>
    public class GoogleCloudDialogflowCxV3BargeInConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Duration that is not eligible for barge-in at the beginning of the input audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noBargeInDuration")]
        public virtual object NoBargeInDuration { get; set; }

        /// <summary>Total duration for the playback at the beginning of the input audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalDuration")]
        public virtual object TotalDuration { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the TestCases.BatchRunTestCases long running operation.</summary>
    public class GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The test errors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3TestError> Errors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for TestCases.BatchRunTestCases.</summary>
    public class GoogleCloudDialogflowCxV3BatchRunTestCasesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The test case results. The detailed conversation turns are empty in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("results")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3TestCaseResult> Results { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a result from running a test case in an agent environment.</summary>
    public class GoogleCloudDialogflowCxV3ContinuousTestResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name for the continuous test result. Format:
        /// `projects//locations//agents//environments//continuousTestResults/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual string Result { get; set; }

        private string _runTimeRaw;

        private object _runTime;

        /// <summary>Time when the continuous testing run starts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("runTime")]
        public virtual string RunTimeRaw
        {
            get => _runTimeRaw;
            set
            {
                _runTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _runTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="RunTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use RunTimeDateTimeOffset instead.")]
        public virtual object RunTime
        {
            get => _runTime;
            set
            {
                _runTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _runTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="RunTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? RunTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(RunTimeRaw);
            set => RunTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>A list of individual test case results names in this continuous test run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCaseResults")]
        public virtual System.Collections.Generic.IList<string> TestCaseResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to
    /// BigQuery.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ConversationSignals : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Turn signals for the current turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("turnSignals")]
        public virtual GoogleCloudDialogflowCxV3TurnSignals TurnSignals { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides
    /// a response.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ConversationTurn : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The user input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInput")]
        public virtual GoogleCloudDialogflowCxV3ConversationTurnUserInput UserInput { get; set; }

        /// <summary>The virtual agent output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("virtualAgentOutput")]
        public virtual GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput VirtualAgentOutput { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The input from the human user.</summary>
    public class GoogleCloudDialogflowCxV3ConversationTurnUserInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether sentiment analysis is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableSentimentAnalysis")]
        public virtual System.Nullable<bool> EnableSentimentAnalysis { get; set; }

        /// <summary>Parameters that need to be injected into the conversation during intent detection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("injectedParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> InjectedParameters { get; set; }

        /// <summary>Supports text input, event input, dtmf input in the test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("input")]
        public virtual GoogleCloudDialogflowCxV3QueryInput Input { get; set; }

        /// <summary>
        /// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are
        /// injected, webhooks should not be enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isWebhookEnabled")]
        public virtual System.Nullable<bool> IsWebhookEnabled { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The output from the virtual agent.</summary>
    public class GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Page on which the utterance was spoken. Only name and displayName will be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentPage")]
        public virtual GoogleCloudDialogflowCxV3Page CurrentPage { get; set; }

        /// <summary>
        /// Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diagnosticInfo")]
        public virtual System.Collections.Generic.IDictionary<string, object> DiagnosticInfo { get; set; }

        /// <summary>
        /// Output only. If this is part of a result conversation turn, the list of differences between the original run
        /// and the replay for this output, if any.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("differences")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3TestRunDifference> Differences { get; set; }

        /// <summary>The session parameters available to the bot at this point.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> SessionParameters { get; set; }

        /// <summary>Response error from the agent in the test result. If set, other output is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual GoogleRpcStatus Status { get; set; }

        /// <summary>The text responses from the agent for the turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textResponses")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3ResponseMessageText> TextResponses { get; set; }

        /// <summary>The Intent that triggered the response. Only name and displayName will be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggeredIntent")]
        public virtual GoogleCloudDialogflowCxV3Intent TriggeredIntent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata associated with the long running operation for Versions.CreateVersion.</summary>
    public class GoogleCloudDialogflowCxV3CreateVersionOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the created version. Format: `projects//locations//agents//flows//versions/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A data store connection. It represents a data store in Discovery Engine and the type of the contents it
    /// contains.
    /// </summary>
    public class GoogleCloudDialogflowCxV3DataStoreConnection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The full name of the referenced data store. Formats:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
        /// `projects/{project}/locations/{location}/dataStores/{data_store}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>The type of the connected data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreType")]
        public virtual string DataStoreType { get; set; }

        /// <summary>
        /// The document processing mode for the data store connection. Should only be set for PUBLIC_WEB and
        /// UNSTRUCTURED data stores. If not set it is considered as DOCUMENTS, as this is the legacy mode.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentProcessingMode")]
        public virtual string DocumentProcessingMode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the Environments.DeployFlow long running operation.</summary>
    public class GoogleCloudDialogflowCxV3DeployFlowMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Errors of running deployment tests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testErrors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3TestError> TestErrors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Environments.DeployFlow.</summary>
    public class GoogleCloudDialogflowCxV3DeployFlowResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The name of the flow version Deployment. Format: `projects//locations//agents//environments//deployments/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deployment")]
        public virtual string Deployment { get; set; }

        /// <summary>The updated environment where the flow is deployed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("environment")]
        public virtual GoogleCloudDialogflowCxV3Environment Environment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the input for dtmf event.</summary>
    public class GoogleCloudDialogflowCxV3DtmfInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The dtmf digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("digits")]
        public virtual string Digits { get; set; }

        /// <summary>The finish digit (if any).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("finishDigit")]
        public virtual string FinishDigit { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents an environment for an agent. You can create multiple versions of your agent and publish them to
    /// separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the
    /// draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it
    /// is published to the default environment. When you create agent versions, you can publish them to custom
    /// environments. You can create a variety of custom environments for testing, development, production, etc.
    /// </summary>
    public class GoogleCloudDialogflowCxV3Environment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the
        /// request is rejected.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The name of the environment. Format: `projects//locations//agents//environments/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The test cases config for continuous tests of this environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCasesConfig")]
        public virtual GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig TestCasesConfig { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. Update time of this environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// A list of configurations for flow versions. You should include version configs for all flows that are
        /// reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versionConfigs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3EnvironmentVersionConfig> VersionConfigs { get; set; }

        /// <summary>The webhook configuration for this environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookConfig")]
        public virtual GoogleCloudDialogflowCxV3EnvironmentWebhookConfig WebhookConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The configuration for continuous tests.</summary>
    public class GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run
        /// once a day.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableContinuousRun")]
        public virtual System.Nullable<bool> EnableContinuousRun { get; set; }

        /// <summary>
        /// Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment.
        /// Default false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enablePredeploymentRun")]
        public virtual System.Nullable<bool> EnablePredeploymentRun { get; set; }

        /// <summary>
        /// A list of test case names to run. They should be under the same agent. Format of each test case name:
        /// `projects//locations//agents//testCases/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCases")]
        public virtual System.Collections.Generic.IList<string> TestCases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for the version.</summary>
    public class GoogleCloudDialogflowCxV3EnvironmentVersionConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Flow, playbook and tool versions are supported. Format for flow version:
        /// projects//locations//agents//flows//versions/. Format for playbook version:
        /// projects//locations//agents//playbooks//versions/. Format for tool version:
        /// projects//locations//agents//tools//versions/.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for webhooks.</summary>
    public class GoogleCloudDialogflowCxV3EnvironmentWebhookConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can
        /// override fields in `generic_web_service` and `service_directory`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookOverrides")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3Webhook> WebhookOverrides { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An event handler specifies an event that can be handled during a session. When the specified event happens, the
    /// following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will
    /// be called. * If there is a `target_page` associated with the event, the session will transition into the
    /// specified page. * If there is a `target_flow` associated with the event, the session will transition into the
    /// specified flow.
    /// </summary>
    public class GoogleCloudDialogflowCxV3EventHandler : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the event to handle.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual string Event__ { get; set; }

        /// <summary>Output only. The unique identifier of this event handler.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; }

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; }

        /// <summary>The target playbook to transition to. Format: `projects//locations//agents//playbooks/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPlaybook")]
        public virtual string TargetPlaybook { get; set; }

        /// <summary>
        /// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with
        /// webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling
        /// webhooks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerFulfillment")]
        public virtual GoogleCloudDialogflowCxV3Fulfillment TriggerFulfillment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the event to trigger.</summary>
    public class GoogleCloudDialogflowCxV3EventInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual string Event__ { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowCxV3ExportAgentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Uncompressed raw byte content for agent. This field is populated if none of `agent_uri` and
        /// `git_destination` are specified in ExportAgentRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported agent. This field is populated if `agent_uri` is specified in
        /// ExportAgentRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; }

        /// <summary>
        /// Commit SHA of the git push. This field is populated if `git_destination` is specified in ExportAgentRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commitSha")]
        public virtual string CommitSha { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the EntityTypes.ExportEntityTypes long running operation.</summary>
    public class GoogleCloudDialogflowCxV3ExportEntityTypesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for EntityTypes.ExportEntityTypes.</summary>
    public class GoogleCloudDialogflowCxV3ExportEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Uncompressed byte content for entity types. This field is populated only if `entity_types_content_inline` is
        /// set to true in ExportEntityTypesRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypesContent")]
        public virtual GoogleCloudDialogflowCxV3InlineDestination EntityTypesContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported entity types. This field is populated only if `entity_types_uri`
        /// is specified in ExportEntityTypesRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypesUri")]
        public virtual string EntityTypesUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Flows.ExportFlow.</summary>
    public class GoogleCloudDialogflowCxV3ExportFlowResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Uncompressed raw byte content for flow.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flowContent")]
        public virtual string FlowContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in
        /// ExportFlowRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flowUri")]
        public virtual string FlowUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the Intents.ExportIntents long running operation.</summary>
    public class GoogleCloudDialogflowCxV3ExportIntentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Intents.ExportIntents.</summary>
    public class GoogleCloudDialogflowCxV3ExportIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Uncompressed byte content for intents. This field is populated only if `intents_content_inline` is set to
        /// true in ExportIntentsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentsContent")]
        public virtual GoogleCloudDialogflowCxV3InlineDestination IntentsContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported intents. This field is populated only if `intents_uri` is
        /// specified in ExportIntentsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentsUri")]
        public virtual string IntentsUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no
    /// fields.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ExportTestCasesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for TestCases.ExportTestCases.</summary>
    public class GoogleCloudDialogflowCxV3ExportTestCasesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Uncompressed raw byte content for test cases.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>
        /// The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified
        /// in ExportTestCasesRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsUri")]
        public virtual string GcsUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A form is a data model that groups related parameters that can be collected from the user. The process in which
    /// the agent prompts the user and collects parameter values from the user is called form filling. A form can be
    /// added to a page. When form filling is done, the filled parameters will be written to the session.
    /// </summary>
    public class GoogleCloudDialogflowCxV3Form : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Parameters to collect from the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3FormParameter> Parameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a form parameter.</summary>
    public class GoogleCloudDialogflowCxV3FormParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the
        /// settings exposed at the higher level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSettings")]
        public virtual GoogleCloudDialogflowCxV3AdvancedSettings AdvancedSettings { get; set; }

        /// <summary>
        /// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultValue")]
        public virtual object DefaultValue { get; set; }

        /// <summary>Required. The human-readable name of the parameter, unique within the form.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for
        /// system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
        /// `projects//locations//agents//entityTypes/` for developer entity types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; }

        /// <summary>Required. Defines fill behavior for the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fillBehavior")]
        public virtual GoogleCloudDialogflowCxV3FormParameterFillBehavior FillBehavior { get; set; }

        /// <summary>Indicates whether the parameter represents a list of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isList")]
        public virtual System.Nullable<bool> IsList { get; set; }

        /// <summary>
        /// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter
        /// content will be replaced by parameter name during logging. Note: the parameter content is subject to
        /// redaction if either parameter level redaction or entity type level redaction is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redact")]
        public virtual System.Nullable<bool> Redact { get; set; }

        /// <summary>
        /// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are
        /// filled if the user specifies them. Required parameters must be filled before form filling concludes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("required")]
        public virtual System.Nullable<bool> Required { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for how the filling of a parameter should be handled.</summary>
    public class GoogleCloudDialogflowCxV3FormParameterFillBehavior : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to
        /// fill the parameter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("initialPromptFulfillment")]
        public virtual GoogleCloudDialogflowCxV3Fulfillment InitialPromptFulfillment { get; set; }

        /// <summary>
        /// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a
        /// different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 *
        /// `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` *
        /// `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the
        /// user's response does not fill the parameter, a no-match/no-input event will be triggered, and the
        /// fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to
        /// provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next
        /// no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used
        /// to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the
        /// parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the
        /// parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter,
        /// however the parameter was invalidated by webhook, the fulfillment associated with the
        /// `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for
        /// the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repromptEventHandlers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3EventHandler> RepromptEventHandlers { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. *
    /// Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form
    /// lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry
    /// fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook
    /// (for example, to load user data from a database), or both.
    /// </summary>
    public class GoogleCloudDialogflowCxV3Fulfillment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the
        /// settings exposed at the higher level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSettings")]
        public virtual GoogleCloudDialogflowCxV3AdvancedSettings AdvancedSettings { get; set; }

        /// <summary>Conditional cases for this fulfillment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditionalCases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3FulfillmentConditionalCases> ConditionalCases { get; set; }

        /// <summary>
        /// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the
        /// defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated
        /// with no-match event handlers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableGenerativeFallback")]
        public virtual System.Nullable<bool> EnableGenerativeFallback { get; set; }

        /// <summary>The list of rich message responses to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3ResponseMessage> Messages { get; set; }

        /// <summary>
        /// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a
        /// webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects
        /// streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled
        /// in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to
        /// fulfillments that have slow webhooks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnPartialResponses")]
        public virtual System.Nullable<bool> ReturnPartialResponses { get; set; }

        /// <summary>Set parameter values before executing the webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("setParameterActions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3FulfillmentSetParameterAction> SetParameterActions { get; set; }

        /// <summary>
        /// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow
        /// when the associated webhook is called. The tag is typically used by the webhook service to identify which
        /// fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is
        /// specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tag")]
        public virtual string Tag { get; set; }

        /// <summary>The webhook to call. Format: `projects//locations//agents//webhooks/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhook")]
        public virtual string Webhook { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is
    /// selected, all the rest ignored.
    /// </summary>
    public class GoogleCloudDialogflowCxV3FulfillmentConditionalCases : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of cascading if-else conditions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase> Cases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected
    /// and evaluated recursively.
    /// </summary>
    public class GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of case content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("caseContent")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent> CaseContent { get; set; }

        /// <summary>
        /// The condition to activate and select this case. Empty means the condition is always true. The condition is
        /// evaluated against form parameters or session parameters. See the [conditions
        /// reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The list of messages or conditional cases to activate for this case.</summary>
    public class GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Additional cases to be evaluated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalCases")]
        public virtual GoogleCloudDialogflowCxV3FulfillmentConditionalCases AdditionalCases { get; set; }

        /// <summary>Returned message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessage Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Setting a parameter value.</summary>
    public class GoogleCloudDialogflowCxV3FulfillmentSetParameterAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Display name of the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameter")]
        public virtual string Parameter { get; set; }

        /// <summary>The new value of the parameter. A null value clears the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual object Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or
    /// transcripts) outside of Dialogflow.
    /// </summary>
    public class GoogleCloudDialogflowCxV3GcsDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The Google Cloud Storage URI for the exported objects. A URI is of the form:
        /// `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the
        /// Dialogflow operation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the EntityTypes.ImportEntityTypes long running operation.</summary>
    public class GoogleCloudDialogflowCxV3ImportEntityTypesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for EntityTypes.ImportEntityTypes.</summary>
    public class GoogleCloudDialogflowCxV3ImportEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportEntityTypesRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conflictingResources")]
        public virtual GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources ConflictingResources { get; set; }

        /// <summary>
        /// The unique identifier of the imported entity types. Format: `projects//locations//agents//entity_types/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypes")]
        public virtual System.Collections.Generic.IList<string> EntityTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request
    /// and there are conflicts in the display names.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Display names of conflicting entities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityDisplayNames")]
        public virtual System.Collections.Generic.IList<string> EntityDisplayNames { get; set; }

        /// <summary>Display names of conflicting entity types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeDisplayNames")]
        public virtual System.Collections.Generic.IList<string> EntityTypeDisplayNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Flows.ImportFlow.</summary>
    public class GoogleCloudDialogflowCxV3ImportFlowResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique identifier of the new flow. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flow")]
        public virtual string Flow { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the Intents.ImportIntents long running operation.</summary>
    public class GoogleCloudDialogflowCxV3ImportIntentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Intents.ImportIntents.</summary>
    public class GoogleCloudDialogflowCxV3ImportIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportIntentsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conflictingResources")]
        public virtual GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources ConflictingResources { get; set; }

        /// <summary>
        /// The unique identifier of the imported intents. Format: `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<string> Intents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request
    /// and there are conflicts in the display names.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Display names of conflicting entities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityDisplayNames")]
        public virtual System.Collections.Generic.IList<string> EntityDisplayNames { get; set; }

        /// <summary>Display names of conflicting intents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentDisplayNames")]
        public virtual System.Collections.Generic.IList<string> IntentDisplayNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the TestCases.ImportTestCases long running operation.</summary>
    public class GoogleCloudDialogflowCxV3ImportTestCasesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Errors for failed test cases.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3TestCaseError> Errors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for TestCases.ImportTestCases.</summary>
    public class GoogleCloudDialogflowCxV3ImportTestCasesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("names")]
        public virtual System.Collections.Generic.IList<string> Names { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Inline destination for a Dialogflow operation that writes or exports objects (e.g. intents) outside of
    /// Dialogflow.
    /// </summary>
    public class GoogleCloudDialogflowCxV3InlineDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The uncompressed byte content for the objects. Only populated in responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Instructs the speech recognizer on how to process the audio content.</summary>
    public class GoogleCloudDialogflowCxV3InputAudioConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Audio encoding of the audio content to process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioEncoding")]
        public virtual string AudioEncoding { get; set; }

        /// <summary>Configuration of barge-in behavior during the streaming of input audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bargeInConfig")]
        public virtual GoogleCloudDialogflowCxV3BargeInConfig BargeInConfig { get; set; }

        /// <summary>
        /// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about
        /// the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return
        /// any word-level information.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableWordInfo")]
        public virtual System.Nullable<bool> EnableWordInfo { get; set; }

        /// <summary>
        /// Optional. Which Speech model to select for the given request. For more information, see [Speech
        /// models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("model")]
        public virtual string Model { get; set; }

        /// <summary>Optional. Which variant of the Speech model to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelVariant")]
        public virtual string ModelVariant { get; set; }

        /// <summary>
        /// If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once
        /// force migration takes place in June 2024. Please refer to [Dialogflow CX Speech model
        /// migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optOutConformerModelMigration")]
        public virtual System.Nullable<bool> OptOutConformerModelMigration { get; set; }

        /// <summary>
        /// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with
        /// higher likelihood. See [the Cloud Speech
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phraseHints")]
        public virtual System.Collections.Generic.IList<string> PhraseHints { get; set; }

        /// <summary>
        /// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleRateHertz")]
        public virtual System.Nullable<int> SampleRateHertz { get; set; }

        /// <summary>
        /// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`,
        /// the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the
        /// audio's voice has stopped or paused. In this case, once a detected intent is received, the client should
        /// close the stream and start a new request with a new stream as needed. Note: This setting is relevant only
        /// for streaming methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("singleUtterance")]
        public virtual System.Nullable<bool> SingleUtterance { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An intent represents a user's intent to interact with a conversational agent. You can provide information for
    /// the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user
    /// input) to your intent.
    /// </summary>
    public class GoogleCloudDialogflowCxV3Intent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Human readable description for better understanding an intent like its scope, content, result etc. Maximum
        /// character limit: 140 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Required. The human-readable name of the intent, unique within the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent,
        /// which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of
        /// requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative
        /// examples that triggers no-match event.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isFallback")]
        public virtual System.Nullable<bool> IsFallback { get; set; }

        /// <summary>
        /// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-'
        /// and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start
        /// with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-"
        /// is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head *
        /// sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent.
        /// "sys.contextual" means the intent is a contextual intent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent
        /// populates the name automatically. Format: `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The collection of parameters associated with the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3IntentParameter> Parameters { get; set; }

        /// <summary>
        /// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is
        /// unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in
        /// the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual System.Nullable<int> Priority { get; set; }

        /// <summary>The collection of training phrases the agent is trained on to identify the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingPhrases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3IntentTrainingPhrase> TrainingPhrases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the intent to trigger programmatically rather than as a result of natural language processing.
    /// </summary>
    public class GoogleCloudDialogflowCxV3IntentInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual string Intent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an intent parameter.</summary>
    public class GoogleCloudDialogflowCxV3IntentParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for
        /// system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
        /// `projects//locations//agents//entityTypes/` for developer entity types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; }

        /// <summary>
        /// Required. The unique identifier of the parameter. This field is used by training phrases to annotate their
        /// parts.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Indicates whether the parameter represents a list of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isList")]
        public virtual System.Nullable<bool> IsList { get; set; }

        /// <summary>
        /// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter
        /// content will be replaced by parameter name during logging. Note: the parameter content is subject to
        /// redaction if either parameter level redaction or entity type level redaction is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redact")]
        public virtual System.Nullable<bool> Redact { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an example that the agent is trained on to identify the intent.</summary>
    public class GoogleCloudDialogflowCxV3IntentTrainingPhrase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The unique identifier of the training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// Required. The ordered list of training phrase parts. The parts are concatenated in order to form the
        /// training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console
        /// does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted
        /// when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you
        /// just need a single part with only the Part.text field set. If you want to annotate the training phrase, you
        /// must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is
        /// set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you
        /// want to annotate, and the `parameter_id` field is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3IntentTrainingPhrasePart> Parts { get; set; }

        /// <summary>Indicates how many times this example was added to the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repeatCount")]
        public virtual System.Nullable<int> RepeatCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a part of a training phrase.</summary>
    public class GoogleCloudDialogflowCxV3IntentTrainingPhrasePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The parameter used to annotate this part of the training phrase. This field is required for annotated parts
        /// of the training phrase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterId")]
        public virtual string ParameterId { get; set; }

        /// <summary>Required. The text for this part.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge
    /// Bases, and the way to execute fulfillment.
    /// </summary>
    public class GoogleCloudDialogflowCxV3KnowledgeConnectorSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of related data store connections.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreConnections")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3DataStoreConnection> DataStoreConnections { get; set; }

        /// <summary>Whether Knowledge Connector is enabled or not.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; }

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; }

        /// <summary>
        /// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow,
        /// you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest
        /// confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct
        /// the fulfillment.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerFulfillment")]
        public virtual GoogleCloudDialogflowCxV3Fulfillment TriggerFulfillment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the language information of the request.</summary>
    public class GoogleCloudDialogflowCxV3LanguageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The confidence score of the detected language between 0 and 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidenceScore")]
        public virtual System.Nullable<float> ConfidenceScore { get; set; }

        /// <summary>The language code specified in the original request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputLanguageCode")]
        public virtual string InputLanguageCode { get; set; }

        /// <summary>The language code detected for this request based on the user conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resolvedLanguageCode")]
        public virtual string ResolvedLanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX
    /// session are represented by pages. For each flow, you define many pages, where your combined pages can handle a
    /// complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the
    /// current page, the current page is considered active, and the flow associated with that page is considered
    /// active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes
    /// the current page. For each conversational turn, the current page will either stay the same or transition to
    /// another page. You configure each page to collect information from the end-user that is relevant for the
    /// conversational state represented by the page. For more information, see the [Page
    /// guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
    /// </summary>
    public class GoogleCloudDialogflowCxV3Page : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings
        /// exposed at the higher level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSettings")]
        public virtual GoogleCloudDialogflowCxV3AdvancedSettings AdvancedSettings { get; set; }

        /// <summary>The description of the page. The maximum length is 500 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Required. The human-readable name of the page, unique within the flow.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The fulfillment to call when the session is entering the page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entryFulfillment")]
        public virtual GoogleCloudDialogflowCxV3Fulfillment EntryFulfillment { get; set; }

        /// <summary>
        /// Handlers associated with the page to handle events such as webhook errors, no match or no input.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventHandlers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3EventHandler> EventHandlers { get; set; }

        /// <summary>The form associated with the page, used for collecting parameters relevant to the page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("form")]
        public virtual GoogleCloudDialogflowCxV3Form Form { get; set; }

        /// <summary>Optional. Knowledge connector configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeConnectorSettings")]
        public virtual GoogleCloudDialogflowCxV3KnowledgeConnectorSettings KnowledgeConnectorSettings { get; set; }

        /// <summary>
        /// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the
        /// name automatically. Format: `projects//locations//agents//flows//pages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a
        /// page. If the page links both flow-level transition route groups and agent-level transition route groups, the
        /// flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple
        /// transition routes within a page scope refer to the same intent, then the precedence order is: page's
        /// transition route -&amp;gt; page's transition route group -&amp;gt; flow's transition routes. * If multiple
        /// transition route groups within a page contain the same intent, then the first group in the ordered list
        /// takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or
        /// `projects//locations//agents//transitionRouteGroups/` for agent-level groups.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transitionRouteGroups")]
        public virtual System.Collections.Generic.IList<string> TransitionRouteGroups { get; set; }

        /// <summary>
        /// A list of transitions for the transition rules of this page. They route the conversation to another page in
        /// the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evaluated in the
        /// following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in
        /// the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified.
        /// * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined
        /// in the page with only condition specified. * TransitionRoutes defined in the transition route groups with
        /// only condition specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transitionRoutes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3TransitionRoute> TransitionRoutes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents page information communicated to and from the webhook.</summary>
    public class GoogleCloudDialogflowCxV3PageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page.
        /// Format: `projects//locations//agents//flows//pages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentPage")]
        public virtual string CurrentPage { get; set; }

        /// <summary>
        /// Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional for both WebhookRequest and WebhookResponse. Information about the form.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formInfo")]
        public virtual GoogleCloudDialogflowCxV3PageInfoFormInfo FormInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents form information.</summary>
    public class GoogleCloudDialogflowCxV3PageInfoFormInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the
        /// webhook cannot add or remove any form parameter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo> ParameterInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents parameter information.</summary>
    public class GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter,
        /// unique within the form. This field cannot be modified by the webhook.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just
        /// collected on the last conversation turn.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("justCollected")]
        public virtual System.Nullable<bool> JustCollected { get; set; }

        /// <summary>
        /// Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional
        /// parameters will not trigger prompts; however, they are filled if the user specifies them. Required
        /// parameters must be filled before form filling concludes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("required")]
        public virtual System.Nullable<bool> Required { get; set; }

        /// <summary>
        /// Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can
        /// be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be
        /// ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>
        /// Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by
        /// the webhook to change the parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual object Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent
    /// query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to
    /// be triggered. 5. DTMF digits to invoke an intent and fill in parameter value. 6. The results of a tool executed
    /// by the client.
    /// </summary>
    public class GoogleCloudDialogflowCxV3QueryInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The natural language speech audio to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual GoogleCloudDialogflowCxV3AudioInput Audio { get; set; }

        /// <summary>The DTMF event to be handled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmf")]
        public virtual GoogleCloudDialogflowCxV3DtmfInput Dtmf { get; set; }

        /// <summary>The event to be triggered.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual GoogleCloudDialogflowCxV3EventInput Event__ { get; set; }

        /// <summary>The intent to be triggered.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual GoogleCloudDialogflowCxV3IntentInput Intent { get; set; }

        /// <summary>
        /// Required. The language of the input. See [Language
        /// Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently
        /// supported language codes. Note that queries in the same session do not necessarily need to specify the same
        /// language.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The natural language text to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowCxV3TextInput Text { get; set; }

        /// <summary>The results of a tool executed by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCallResult")]
        public virtual GoogleCloudDialogflowCxV3ToolCallResult ToolCallResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a response message that can be returned by a conversational agent. Response messages are also used
    /// for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present,
    /// then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis.
    /// * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as
    /// SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally
    /// use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly
    /// concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated
    /// user experience scenarios, where the text displayed to the user may differ from what is heard.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ResponseMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The channel which the response is associated with. Clients can specify the channel via
        /// QueryParameters.channel, and only associated channel response will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channel")]
        public virtual string Channel { get; set; }

        /// <summary>Indicates that the conversation succeeded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationSuccess")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess ConversationSuccess { get; set; }

        /// <summary>
        /// Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is
        /// generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be
        /// defined by the user. It's guaranteed that there is at most one such message in each response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endInteraction")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessageEndInteraction EndInteraction { get; set; }

        /// <summary>
        /// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeInfoCard")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard KnowledgeInfoCard { get; set; }

        /// <summary>Hands off conversation to a human agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("liveAgentHandoff")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff LiveAgentHandoff { get; set; }

        /// <summary>
        /// Output only. An audio response message composed of both the synthesized Dialogflow agent responses and
        /// responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be
        /// defined by the user.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mixedAudio")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessageMixedAudio MixedAudio { get; set; }

        /// <summary>
        /// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the
        /// comment on the ResponseMessage message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputAudioText")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText OutputAudioText { get; set; }

        /// <summary>Returns a response containing a custom, platform-specific payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to
        /// construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playAudio")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessagePlayAudio PlayAudio { get; set; }

        /// <summary>Response type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseType")]
        public virtual string ResponseType { get; set; }

        /// <summary>
        /// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonyTransferCall")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall TelephonyTransferCall { get; set; }

        /// <summary>Returns a text response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowCxV3ResponseMessageText Text { get; set; }

        /// <summary>Returns the definition of a tool call that should be executed by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCall")]
        public virtual GoogleCloudDialogflowCxV3ToolCall ToolCall { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
    /// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process
    /// the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the
    /// conversation end page as successful even if they don't return ConversationSuccess. You may set this, for
    /// example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. *
    /// In a webhook response when you determine that you handled the customer issue.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Custom metadata. Dialogflow doesn't impose any structure on this.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and
    /// not supposed to be defined by the user.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageEndInteraction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return
    /// a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine
    /// which conversations were handed off to a human agent for measurement purposes. What else to do with this signal
    /// is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if
    /// entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you
    /// determine that the customer issue can only be handled by a human.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and
    /// ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is
    /// generated by Dialogflow only and not supposed to be defined by the user.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageMixedAudio : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Segments this audio response is composed of.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segments")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment> Segments { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents one segment of audio.</summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client
        /// should then start the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual string Audio { get; set; }

        /// <summary>
        /// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any
        /// validation on it.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment
    /// on the ResponseMessage message.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client
        /// can then starts the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssml")]
        public virtual string Ssml { get; set; }

        /// <summary>The raw text to be synthesized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies an audio clip to be played by the client as part of the response.</summary>
    public class GoogleCloudDialogflowCxV3ResponseMessagePlayAudio : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client
        /// can then starts the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to
        /// the client that reads it.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioUri")]
        public virtual string AudioUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party
    /// endpoint.
    /// </summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The text response message.</summary>
    public class GoogleCloudDialogflowCxV3ResponseMessageText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client
        /// can then starts the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// Required. A collection of text response variants. If multiple variants are defined, only one text response
        /// variant is returned at runtime.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the Environments.RunContinuousTest long running operation.</summary>
    public class GoogleCloudDialogflowCxV3RunContinuousTestMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The test errors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3TestError> Errors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Environments.RunContinuousTest.</summary>
    public class GoogleCloudDialogflowCxV3RunContinuousTestResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The result for a continuous test run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("continuousTestResult")]
        public virtual GoogleCloudDialogflowCxV3ContinuousTestResult ContinuousTestResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.
    /// </summary>
    public class GoogleCloudDialogflowCxV3RunTestCaseMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for TestCases.RunTestCase.</summary>
    public class GoogleCloudDialogflowCxV3RunTestCaseResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual GoogleCloudDialogflowCxV3TestCaseResult Result { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents session information communicated to and from the webhook.</summary>
    public class GoogleCloudDialogflowCxV3SessionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents
        /// during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter
        /// from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map
        /// is keyed by parameters' display names.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> Parameters { get; set; }

        /// <summary>
        /// Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This
        /// field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or
        /// `projects//locations//agents//environments//sessions/` if environment is specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a test case.</summary>
    public class GoogleCloudDialogflowCxV3TestCase : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _creationTimeRaw;

        private object _creationTime;

        /// <summary>Output only. When the test was created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw
        {
            get => _creationTimeRaw;
            set
            {
                _creationTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _creationTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreationTimeDateTimeOffset instead.")]
        public virtual object CreationTime
        {
            get => _creationTime;
            set
            {
                _creationTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _creationTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreationTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreationTimeRaw);
            set => CreationTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The latest test result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastTestResult")]
        public virtual GoogleCloudDialogflowCxV3TestCaseResult LastTestResult { get; set; }

        /// <summary>
        /// The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically.
        /// Otherwise use format: `projects//locations//agents//testCases/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Additional freeform notes about the test case. Limit of 400 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notes")]
        public virtual string Notes { get; set; }

        /// <summary>
        /// Tags are short descriptions that users may apply to test cases for organizational and filtering purposes.
        /// Each tag should start with "#" and has a limit of 30 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; }

        /// <summary>
        /// The conversation turns uttered when the test case was created, in chronological order. These include the
        /// canonical set of agent utterances that should occur when the agent is working properly.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCaseConversationTurns")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3ConversationTurn> TestCaseConversationTurns { get; set; }

        /// <summary>Config for the test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testConfig")]
        public virtual GoogleCloudDialogflowCxV3TestConfig TestConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Error info for importing a test.</summary>
    public class GoogleCloudDialogflowCxV3TestCaseError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status associated with the test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual GoogleRpcStatus Status { get; set; }

        /// <summary>The test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCase")]
        public virtual GoogleCloudDialogflowCxV3TestCase TestCase { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a result from running a test case in an agent environment.</summary>
    public class GoogleCloudDialogflowCxV3TestCaseResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The conversation turns uttered during the test case replay in chronological order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationTurns")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3ConversationTurn> ConversationTurns { get; set; }

        /// <summary>Environment where the test was run. If not set, it indicates the draft environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("environment")]
        public virtual string Environment { get; set; }

        /// <summary>
        /// The resource name for the test case result. Format: `projects//locations//agents//testCases//results/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Whether the test case passed in the agent environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testResult")]
        public virtual string TestResult { get; set; }

        private string _testTimeRaw;

        private object _testTime;

        /// <summary>The time that the test was run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testTime")]
        public virtual string TestTimeRaw
        {
            get => _testTimeRaw;
            set
            {
                _testTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _testTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="TestTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use TestTimeDateTimeOffset instead.")]
        public virtual object TestTime
        {
            get => _testTime;
            set
            {
                _testTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _testTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="TestTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? TestTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(TestTimeRaw);
            set => TestTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents configurations for a test case.</summary>
    public class GoogleCloudDialogflowCxV3TestConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and
        /// `page` should be set to indicate the starting point of the test case. If neither is set, the test case will
        /// start with start page on the default start flow.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flow")]
        public virtual string Flow { get; set; }

        /// <summary>
        /// The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of
        /// `flow` and `page` should be set to indicate the starting point of the test case. If neither is set, the test
        /// case will start with start page on the default start flow.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("page")]
        public virtual string Page { get; set; }

        /// <summary>Session parameters to be compared when calculating differences.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trackingParameters")]
        public virtual System.Collections.Generic.IList<string> TrackingParameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Error info for running a test.</summary>
    public class GoogleCloudDialogflowCxV3TestError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status associated with the test.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual GoogleRpcStatus Status { get; set; }

        /// <summary>The test case resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCase")]
        public virtual string TestCase { get; set; }

        private string _testTimeRaw;

        private object _testTime;

        /// <summary>The timestamp when the test was completed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testTime")]
        public virtual string TestTimeRaw
        {
            get => _testTimeRaw;
            set
            {
                _testTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _testTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="TestTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use TestTimeDateTimeOffset instead.")]
        public virtual object TestTime
        {
            get => _testTime;
            set
            {
                _testTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _testTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="TestTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? TestTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(TestTimeRaw);
            set => TestTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The description of differences between original and replayed agent output.</summary>
    public class GoogleCloudDialogflowCxV3TestRunDifference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A human readable description of the diff, showing the actual output vs expected output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>The type of diff.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the natural language text to be processed.</summary>
    public class GoogleCloudDialogflowCxV3TextInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The UTF-8 encoded natural language text to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a call of a specific tool's action with the specified inputs.</summary>
    public class GoogleCloudDialogflowCxV3ToolCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the tool's action associated with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>Optional. The action's input parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> InputParameters { get; set; }

        /// <summary>
        /// Required. The tool associated with this call. Format: `projects//locations//agents//tools/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tool")]
        public virtual string Tool { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The result of calling a tool's action that has been executed by the client.</summary>
    public class GoogleCloudDialogflowCxV3ToolCallResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the tool's action associated with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>The tool call's error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleCloudDialogflowCxV3ToolCallResultError Error { get; set; }

        /// <summary>The tool call's output parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> OutputParameters { get; set; }

        /// <summary>
        /// Required. The tool associated with this call. Format: `projects//locations//agents//tools/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tool")]
        public virtual string Tool { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An error produced by the tool call.</summary>
    public class GoogleCloudDialogflowCxV3ToolCallResultError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The error message of the function.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a
    /// session. When a specified transition is matched, the following actions are taken in order: * If there is a
    /// `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page`
    /// associated with the transition, the session will transition into the specified page. * If there is a
    /// `target_flow` associated with the transition, the session will transition into the specified flow.
    /// </summary>
    public class GoogleCloudDialogflowCxV3TransitionRoute : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The condition to evaluate against form parameters or session parameters. See the [conditions
        /// reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or
        /// `condition` must be specified. When both `intent` and `condition` are specified, the transition can only
        /// happen when both are fulfilled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>Optional. The description of the transition route. The maximum length is 500 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the
        /// transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be
        /// specified. When both `intent` and `condition` are specified, the transition can only happen when both are
        /// fulfilled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual string Intent { get; set; }

        /// <summary>Output only. The unique identifier of this transition route.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; }

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; }

        /// <summary>
        /// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target`
        /// must be specified. When both are defined, `trigger_fulfillment` is executed first.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerFulfillment")]
        public virtual GoogleCloudDialogflowCxV3Fulfillment TriggerFulfillment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Collection of all signals that were extracted for a single turn of the conversation.</summary>
    public class GoogleCloudDialogflowCxV3TurnSignals : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether agent responded with LiveAgentHandoff fulfillment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentEscalated")]
        public virtual System.Nullable<bool> AgentEscalated { get; set; }

        /// <summary>Whether user was using DTMF input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfUsed")]
        public virtual System.Nullable<bool> DtmfUsed { get; set; }

        /// <summary>Failure reasons of the turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReasons")]
        public virtual System.Collections.Generic.IList<string> FailureReasons { get; set; }

        /// <summary>Whether NLU predicted NO_MATCH.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noMatch")]
        public virtual System.Nullable<bool> NoMatch { get; set; }

        /// <summary>Whether user provided no input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noUserInput")]
        public virtual System.Nullable<bool> NoUserInput { get; set; }

        /// <summary>Whether turn resulted in End Session page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachedEndPage")]
        public virtual System.Nullable<bool> ReachedEndPage { get; set; }

        /// <summary>
        /// Sentiment magnitude of the user utterance if
        /// [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentMagnitude")]
        public virtual System.Nullable<float> SentimentMagnitude { get; set; }

        /// <summary>
        /// Sentiment score of the user utterance if
        /// [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentScore")]
        public virtual System.Nullable<float> SentimentScore { get; set; }

        /// <summary>Whether user was specifically asking for a live agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userEscalated")]
        public virtual System.Nullable<bool> UserEscalated { get; set; }

        /// <summary>Human-readable statuses of the webhooks triggered during this turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookStatuses")]
        public virtual System.Collections.Generic.IList<string> WebhookStatuses { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data
    /// extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or
    /// trigger actions on the backend.
    /// </summary>
    public class GoogleCloudDialogflowCxV3Webhook : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates whether the webhook is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disabled")]
        public virtual System.Nullable<bool> Disabled { get; set; }

        /// <summary>Required. The human-readable name of the webhook, unique within the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Configuration for a generic web service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genericWebService")]
        public virtual GoogleCloudDialogflowCxV3WebhookGenericWebService GenericWebService { get; set; }

        /// <summary>
        /// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook
        /// populates the name automatically. Format: `projects//locations//agents//webhooks/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceDirectory")]
        public virtual GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig ServiceDirectory { get; set; }

        /// <summary>
        /// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from
        /// webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeout")]
        public virtual object Timeout { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents configuration for a generic web service.</summary>
    public class GoogleCloudDialogflowCxV3WebhookGenericWebService : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This
        /// overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default
        /// trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject
        /// alt name". For instance a certificate can be self-signed using the following command,
        /// ```
        /// openssl x509 -req
        /// -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile &amp;lt;(printf
        /// "\nsubjectAltName='DNS:www.example.com'")
        /// ```
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowedCaCerts")]
        public virtual System.Collections.Generic.IList<string> AllowedCaCerts { get; set; }

        /// <summary>Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpMethod")]
        public virtual string HttpMethod { get; set; }

        /// <summary>
        /// Optional. The OAuth configuration of the webhook. If specified, Dialogflow will initiate the OAuth client
        /// credential flow to exchange an access token from the 3rd party platform and put it in the auth header.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oauthConfig")]
        public virtual GoogleCloudDialogflowCxV3WebhookGenericWebServiceOAuthConfig OauthConfig { get; set; }

        /// <summary>
        /// Optional. Maps the values extracted from specific fields of the flexible webhook response into session
        /// parameters. - Key: session parameter name - Value: field path in the webhook response
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterMapping")]
        public virtual System.Collections.Generic.IDictionary<string, string> ParameterMapping { get; set; }

        /// <summary>The password for HTTP Basic authentication.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("password")]
        public virtual string Password { get; set; }

        /// <summary>Optional. Defines a custom JSON object as request body to send to flexible webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestBody")]
        public virtual string RequestBody { get; set; }

        /// <summary>The HTTP request headers to send together with webhook requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestHeaders")]
        public virtual System.Collections.Generic.IDictionary<string, string> RequestHeaders { get; set; }

        /// <summary>
        /// Optional. The SecretManager secret version resource storing the username:password pair for HTTP Basic
        /// authentication. Format: `projects/{project}/secrets/{secret}/versions/{version}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secretVersionForUsernamePassword")]
        public virtual string SecretVersionForUsernamePassword { get; set; }

        /// <summary>
        /// Optional. The HTTP request headers to send together with webhook requests. Header values are stored in
        /// SecretManager secret versions. When the same header name is specified in both `request_headers` and
        /// `secret_versions_for_request_headers`, the value in `secret_versions_for_request_headers` will be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secretVersionsForRequestHeaders")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowCxV3WebhookGenericWebServiceSecretVersionHeaderValue> SecretVersionsForRequestHeaders { get; set; }

        /// <summary>
        /// Optional. Indicate the auth token type generated from the [Diglogflow service
        /// agent](https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent). The generated token is
        /// sent in the Authorization header.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceAgentAuth")]
        public virtual string ServiceAgentAuth { get; set; }

        /// <summary>Required. The webhook URI for receiving POST requests. It must use https protocol.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The user name for HTTP Basic authentication.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("username")]
        public virtual string Username { get; set; }

        /// <summary>Optional. Type of the webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookType")]
        public virtual string WebhookType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents configuration of OAuth client credential flow for 3rd party API authentication.</summary>
    public class GoogleCloudDialogflowCxV3WebhookGenericWebServiceOAuthConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The client ID provided by the 3rd party platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientId")]
        public virtual string ClientId { get; set; }

        /// <summary>Optional. The client secret provided by the 3rd party platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientSecret")]
        public virtual string ClientSecret { get; set; }

        /// <summary>Optional. The OAuth scopes to grant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
        public virtual System.Collections.Generic.IList<string> Scopes { get; set; }

        /// <summary>
        /// Optional. The name of the SecretManager secret version resource storing the client secret. If this field is
        /// set, the `client_secret` field will be ignored. Format:
        /// `projects/{project}/secrets/{secret}/versions/{version}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secretVersionForClientSecret")]
        public virtual string SecretVersionForClientSecret { get; set; }

        /// <summary>
        /// Required. The token endpoint provided by the 3rd party platform to exchange an access token.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tokenEndpoint")]
        public virtual string TokenEndpoint { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the value of an HTTP header stored in a SecretManager secret version.</summary>
    public class GoogleCloudDialogflowCxV3WebhookGenericWebServiceSecretVersionHeaderValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The SecretManager secret version resource storing the header value. Format:
        /// `projects/{project}/secrets/{secret}/versions/{version}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secretVersion")]
        public virtual string SecretVersion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The request message for a webhook call. The request is sent as a JSON object and the field names will be
    /// presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally
    /// by Dialogflow and should be ignored.
    /// </summary>
    public class GoogleCloudDialogflowCxV3WebhookRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detectIntentResponseId")]
        public virtual string DetectIntentResponseId { get; set; }

        /// <summary>If DTMF was provided as input, this field will contain the DTMF digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfDigits")]
        public virtual string DtmfDigits { get; set; }

        /// <summary>Always present. Information about the fulfillment that triggered this webhook call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentInfo")]
        public virtual GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo FulfillmentInfo { get; set; }

        /// <summary>Information about the last matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentInfo")]
        public virtual GoogleCloudDialogflowCxV3WebhookRequestIntentInfo IntentInfo { get; set; }

        /// <summary>The language code specified in the original request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Information about the language of the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageInfo")]
        public virtual GoogleCloudDialogflowCxV3LanguageInfo LanguageInfo { get; set; }

        /// <summary>
        /// The list of rich message responses to present to the user. Webhook can choose to append or replace this list
        /// in WebhookResponse.fulfillment_response;
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3ResponseMessage> Messages { get; set; }

        /// <summary>Information about page status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual GoogleCloudDialogflowCxV3PageInfo PageInfo { get; set; }

        /// <summary>Custom data set in QueryParameters.payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// The sentiment analysis result of the current user request. The field is filled when sentiment analysis is
        /// configured to be enabled for the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysisResult")]
        public virtual GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult SentimentAnalysisResult { get; set; }

        /// <summary>Information about session status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionInfo")]
        public virtual GoogleCloudDialogflowCxV3SessionInfo SessionInfo { get; set; }

        /// <summary>
        /// If natural language text was provided as input, this field will contain a copy of the text.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>
        /// If natural language speech audio was provided as input, this field will contain the transcript for the
        /// audio.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transcript")]
        public virtual string Transcript { get; set; }

        /// <summary>If an event was provided as input, this field will contain the name of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerEvent")]
        public virtual string TriggerEvent { get; set; }

        /// <summary>
        /// If an intent was provided as input, this field will contain a copy of the intent identifier. Format:
        /// `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerIntent")]
        public virtual string TriggerIntent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents fulfillment information communicated to the webhook.</summary>
    public class GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when
        /// the associated webhook is called. The tag is typically used by the webhook service to identify which
        /// fulfillment is being called, but it could be used for other purposes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tag")]
        public virtual string Tag { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents intent information communicated to the webhook.</summary>
    public class GoogleCloudDialogflowCxV3WebhookRequestIntentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely
        /// certain).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>Always present. The display name of the last matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Always present. The unique identifier of the last matched intent. Format:
        /// `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastMatchedIntent")]
        public virtual string LastMatchedIntent { get; set; }

        /// <summary>
        /// Parameters identified as a result of intent matching. This is a map of the name of the identified parameter
        /// to the value of the parameter identified from the user's utterance. All parameters defined in the matched
        /// intent that are identified will be surfaced here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue> Parameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a value for an intent parameter.</summary>
    public class GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Always present. Original text value extracted from user utterance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalValue")]
        public virtual string OriginalValue { get; set; }

        /// <summary>Always present. Structured value for the parameter extracted from user utterance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resolvedValue")]
        public virtual object ResolvedValue { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the result of sentiment analysis.</summary>
    public class GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment,
        /// regardless of score (positive or negative).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("magnitude")]
        public virtual System.Nullable<float> Magnitude { get; set; }

        /// <summary>Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("score")]
        public virtual System.Nullable<float> Score { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for a webhook call.</summary>
    public class GoogleCloudDialogflowCxV3WebhookResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend
        /// to send any response to the user.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentResponse")]
        public virtual GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse FulfillmentResponse { get; set; }

        /// <summary>
        /// Information about page status. This field can be omitted by the webhook if it does not intend to modify page
        /// status.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual GoogleCloudDialogflowCxV3PageInfo PageInfo { get; set; }

        /// <summary>Value to append directly to QueryResult.webhook_payloads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// Information about session status. This field can be omitted by the webhook if it does not intend to modify
        /// session status.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionInfo")]
        public virtual GoogleCloudDialogflowCxV3SessionInfo SessionInfo { get; set; }

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; }

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a fulfillment response to the user.</summary>
    public class GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Merge behavior for `messages`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mergeBehavior")]
        public virtual string MergeBehavior { get; set; }

        /// <summary>The list of rich message responses to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3ResponseMessage> Messages { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
    /// </summary>
    public class GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Generic Service configuration of this webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genericWebService")]
        public virtual GoogleCloudDialogflowCxV3WebhookGenericWebService GenericWebService { get; set; }

        /// <summary>
        /// Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format:
        /// `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the
        /// location of the agent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level
    /// overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the
    /// playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the
    /// agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other.
    /// DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy:
    /// Agent-&amp;gt;Flow-&amp;gt;Page-&amp;gt;Fulfillment/Parameter.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1AdvancedSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination.
        /// Exposed at the following levels: - Agent level - Flow level
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioExportGcsDestination")]
        public virtual GoogleCloudDialogflowCxV3beta1GcsDestination AudioExportGcsDestination { get; set; }

        /// <summary>
        /// Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter
        /// level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfSettings")]
        public virtual GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings DtmfSettings { get; set; }

        /// <summary>
        /// Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech
        /// logging. Exposed at the following levels: - Agent level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("loggingSettings")]
        public virtual GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings LoggingSettings { get; set; }

        /// <summary>
        /// Settings for speech to text detection. Exposed at the following levels: - Agent level - Flow level - Page
        /// level - Parameter level
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechSettings")]
        public virtual GoogleCloudDialogflowCxV3beta1AdvancedSettingsSpeechSettings SpeechSettings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Define behaviors for DTMF (dual tone multi frequency).</summary>
    public class GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller
        /// presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event
        /// (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g.
        /// when 3 is pressed, return the account balance).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>Endpoint timeout setting for matching dtmf input to regex.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpointingTimeoutDuration")]
        public virtual object EndpointingTimeoutDuration { get; set; }

        /// <summary>The digit that terminates a DTMF digit sequence.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("finishDigit")]
        public virtual string FinishDigit { get; set; }

        /// <summary>Interdigit timeout setting for matching dtmf input to regex.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interdigitTimeoutDuration")]
        public virtual object InterdigitTimeoutDuration { get; set; }

        /// <summary>Max length of DTMF digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxDigits")]
        public virtual System.Nullable<int> MaxDigits { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Define behaviors on logging.</summary>
    public class GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Enables consent-based end-user input redaction, if true, a pre-defined session parameter
        /// `$session.params.conversation-redaction` will be used to determine if the utterance should be redacted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableConsentBasedRedaction")]
        public virtual System.Nullable<bool> EnableConsentBasedRedaction { get; set; }

        /// <summary>Enables DF Interaction logging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableInteractionLogging")]
        public virtual System.Nullable<bool> EnableInteractionLogging { get; set; }

        /// <summary>Enables Google Cloud Logging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableStackdriverLogging")]
        public virtual System.Nullable<bool> EnableStackdriverLogging { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Define behaviors of speech to text detection.</summary>
    public class GoogleCloudDialogflowCxV3beta1AdvancedSettingsSpeechSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Sensitivity of the speech model that detects the end of speech. Scale from 0 to 100.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpointerSensitivity")]
        public virtual System.Nullable<int> EndpointerSensitivity { get; set; }

        /// <summary>
        /// Mapping from language to Speech-to-Text model. The mapped Speech-to-Text model will be selected for requests
        /// from its corresponding language. For more information, see [Speech
        /// models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("models")]
        public virtual System.Collections.Generic.IDictionary<string, string> Models { get; set; }

        /// <summary>Timeout before detecting no speech.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noSpeechTimeout")]
        public virtual object NoSpeechTimeout { get; set; }

        /// <summary>
        /// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useTimeoutBasedEndpointing")]
        public virtual System.Nullable<bool> UseTimeoutBasedEndpointing { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the natural speech audio to be processed.</summary>
    public class GoogleCloudDialogflowCxV3beta1AudioInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech
        /// audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent,
        /// both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in
        /// the first request and `audio` must be provided in all following requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual string Audio { get; set; }

        /// <summary>Required. Instructs the speech recognizer how to process the speech audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("config")]
        public virtual GoogleCloudDialogflowCxV3beta1InputAudioConfig Config { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper
    /// time while the client is playing back the response audio from a previous request. When the client sees the
    /// utterance, it should stop the playback and immediately get ready for receiving the responses for the current
    /// request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing
    /// back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which
    /// goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no
    /// barge-in phase and during which the API starts speech detection and may inform the client that an utterance has
    /// been detected. Note that no-speech event is not expected in this phase. The client provides this configuration
    /// in terms of the durations of those two phases. The durations are measured in terms of the audio length from the
    /// start of the input audio. No-speech event is a response with END_OF_UTTERANCE without any transcript following
    /// up.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1BargeInConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Duration that is not eligible for barge-in at the beginning of the input audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noBargeInDuration")]
        public virtual object NoBargeInDuration { get; set; }

        /// <summary>Total duration for the playback at the beginning of the input audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalDuration")]
        public virtual object TotalDuration { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the TestCases.BatchRunTestCases long running operation.</summary>
    public class GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The test errors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1TestError> Errors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for TestCases.BatchRunTestCases.</summary>
    public class GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The test case results. The detailed conversation turns are empty in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("results")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1TestCaseResult> Results { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a result from running a test case in an agent environment.</summary>
    public class GoogleCloudDialogflowCxV3beta1ContinuousTestResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name for the continuous test result. Format:
        /// `projects//locations//agents//environments//continuousTestResults/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual string Result { get; set; }

        private string _runTimeRaw;

        private object _runTime;

        /// <summary>Time when the continuous testing run starts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("runTime")]
        public virtual string RunTimeRaw
        {
            get => _runTimeRaw;
            set
            {
                _runTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _runTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="RunTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use RunTimeDateTimeOffset instead.")]
        public virtual object RunTime
        {
            get => _runTime;
            set
            {
                _runTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _runTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="RunTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? RunTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(RunTimeRaw);
            set => RunTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>A list of individual test case results names in this continuous test run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCaseResults")]
        public virtual System.Collections.Generic.IList<string> TestCaseResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to
    /// BigQuery.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ConversationSignals : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Turn signals for the current turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("turnSignals")]
        public virtual GoogleCloudDialogflowCxV3beta1TurnSignals TurnSignals { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// One interaction between a human and virtual agent. The human provides some input and the virtual agent provides
    /// a response.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ConversationTurn : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The user input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInput")]
        public virtual GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput UserInput { get; set; }

        /// <summary>The virtual agent output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("virtualAgentOutput")]
        public virtual GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput VirtualAgentOutput { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The input from the human user.</summary>
    public class GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether sentiment analysis is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableSentimentAnalysis")]
        public virtual System.Nullable<bool> EnableSentimentAnalysis { get; set; }

        /// <summary>Parameters that need to be injected into the conversation during intent detection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("injectedParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> InjectedParameters { get; set; }

        /// <summary>Supports text input, event input, dtmf input in the test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("input")]
        public virtual GoogleCloudDialogflowCxV3beta1QueryInput Input { get; set; }

        /// <summary>
        /// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are
        /// injected, webhooks should not be enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isWebhookEnabled")]
        public virtual System.Nullable<bool> IsWebhookEnabled { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The output from the virtual agent.</summary>
    public class GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Page on which the utterance was spoken. Only name and displayName will be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentPage")]
        public virtual GoogleCloudDialogflowCxV3beta1Page CurrentPage { get; set; }

        /// <summary>
        /// Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diagnosticInfo")]
        public virtual System.Collections.Generic.IDictionary<string, object> DiagnosticInfo { get; set; }

        /// <summary>
        /// Output only. If this is part of a result conversation turn, the list of differences between the original run
        /// and the replay for this output, if any.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("differences")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1TestRunDifference> Differences { get; set; }

        /// <summary>The session parameters available to the bot at this point.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> SessionParameters { get; set; }

        /// <summary>Response error from the agent in the test result. If set, other output is empty.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual GoogleRpcStatus Status { get; set; }

        /// <summary>The text responses from the agent for the turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textResponses")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ResponseMessageText> TextResponses { get; set; }

        /// <summary>The Intent that triggered the response. Only name and displayName will be set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggeredIntent")]
        public virtual GoogleCloudDialogflowCxV3beta1Intent TriggeredIntent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata associated with the long running operation for Versions.CreateVersion.</summary>
    public class GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the created version. Format: `projects//locations//agents//flows//versions/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A data store connection. It represents a data store in Discovery Engine and the type of the contents it
    /// contains.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1DataStoreConnection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The full name of the referenced data store. Formats:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
        /// `projects/{project}/locations/{location}/dataStores/{data_store}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>The type of the connected data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreType")]
        public virtual string DataStoreType { get; set; }

        /// <summary>
        /// The document processing mode for the data store connection. Should only be set for PUBLIC_WEB and
        /// UNSTRUCTURED data stores. If not set it is considered as DOCUMENTS, as this is the legacy mode.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentProcessingMode")]
        public virtual string DocumentProcessingMode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the Environments.DeployFlow long running operation.</summary>
    public class GoogleCloudDialogflowCxV3beta1DeployFlowMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Errors of running deployment tests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testErrors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1TestError> TestErrors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Environments.DeployFlow.</summary>
    public class GoogleCloudDialogflowCxV3beta1DeployFlowResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The name of the flow version deployment. Format: `projects//locations//agents//environments//deployments/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deployment")]
        public virtual string Deployment { get; set; }

        /// <summary>The updated environment where the flow is deployed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("environment")]
        public virtual GoogleCloudDialogflowCxV3beta1Environment Environment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the input for dtmf event.</summary>
    public class GoogleCloudDialogflowCxV3beta1DtmfInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The dtmf digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("digits")]
        public virtual string Digits { get; set; }

        /// <summary>The finish digit (if any).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("finishDigit")]
        public virtual string FinishDigit { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents an environment for an agent. You can create multiple versions of your agent and publish them to
    /// separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the
    /// draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it
    /// is published to the default environment. When you create agent versions, you can publish them to custom
    /// environments. You can create a variety of custom environments for testing, development, production, etc.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1Environment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the
        /// request is rejected.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The name of the environment. Format: `projects//locations//agents//environments/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The test cases config for continuous tests of this environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCasesConfig")]
        public virtual GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig TestCasesConfig { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. Update time of this environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// A list of configurations for flow versions. You should include version configs for all flows that are
        /// reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versionConfigs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig> VersionConfigs { get; set; }

        /// <summary>The webhook configuration for this environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookConfig")]
        public virtual GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig WebhookConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The configuration for continuous tests.</summary>
    public class GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run
        /// once a day.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableContinuousRun")]
        public virtual System.Nullable<bool> EnableContinuousRun { get; set; }

        /// <summary>
        /// Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment.
        /// Default false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enablePredeploymentRun")]
        public virtual System.Nullable<bool> EnablePredeploymentRun { get; set; }

        /// <summary>
        /// A list of test case names to run. They should be under the same agent. Format of each test case name:
        /// `projects//locations//agents//testCases/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCases")]
        public virtual System.Collections.Generic.IList<string> TestCases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for the version.</summary>
    public class GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Flow, playbook and tool versions are supported. Format for flow version:
        /// projects//locations//agents//flows//versions/. Format for playbook version:
        /// projects//locations//agents//playbooks//versions/. Format for tool version:
        /// projects//locations//agents//tools//versions/.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for webhooks.</summary>
    public class GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can
        /// override fields in `generic_web_service` and `service_directory`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookOverrides")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1Webhook> WebhookOverrides { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An event handler specifies an event that can be handled during a session. When the specified event happens, the
    /// following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will
    /// be called. * If there is a `target_page` associated with the event, the session will transition into the
    /// specified page. * If there is a `target_flow` associated with the event, the session will transition into the
    /// specified flow.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1EventHandler : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the event to handle.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual string Event__ { get; set; }

        /// <summary>Output only. The unique identifier of this event handler.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; }

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; }

        /// <summary>The target playbook to transition to. Format: `projects//locations//agents//playbooks/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPlaybook")]
        public virtual string TargetPlaybook { get; set; }

        /// <summary>
        /// The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with
        /// webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling
        /// webhooks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerFulfillment")]
        public virtual GoogleCloudDialogflowCxV3beta1Fulfillment TriggerFulfillment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the event to trigger.</summary>
    public class GoogleCloudDialogflowCxV3beta1EventInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual string Event__ { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowCxV3beta1ExportAgentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Uncompressed raw byte content for agent. This field is populated if none of `agent_uri` and
        /// `git_destination` are specified in ExportAgentRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported agent. This field is populated if `agent_uri` is specified in
        /// ExportAgentRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; }

        /// <summary>
        /// Commit SHA of the git push. This field is populated if `git_destination` is specified in ExportAgentRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commitSha")]
        public virtual string CommitSha { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the EntityTypes.ExportEntityTypes long running operation.</summary>
    public class GoogleCloudDialogflowCxV3beta1ExportEntityTypesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for EntityTypes.ExportEntityTypes.</summary>
    public class GoogleCloudDialogflowCxV3beta1ExportEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Uncompressed byte content for entity types. This field is populated only if `entity_types_content_inline` is
        /// set to true in ExportEntityTypesRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypesContent")]
        public virtual GoogleCloudDialogflowCxV3beta1InlineDestination EntityTypesContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported entity types. This field is populated only if `entity_types_uri`
        /// is specified in ExportEntityTypesRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypesUri")]
        public virtual string EntityTypesUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Flows.ExportFlow.</summary>
    public class GoogleCloudDialogflowCxV3beta1ExportFlowResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Uncompressed raw byte content for flow.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flowContent")]
        public virtual string FlowContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in
        /// ExportFlowRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flowUri")]
        public virtual string FlowUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the Intents.ExportIntents long running operation.</summary>
    public class GoogleCloudDialogflowCxV3beta1ExportIntentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Intents.ExportIntents.</summary>
    public class GoogleCloudDialogflowCxV3beta1ExportIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Uncompressed byte content for intents. This field is populated only if `intents_content_inline` is set to
        /// true in ExportIntentsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentsContent")]
        public virtual GoogleCloudDialogflowCxV3beta1InlineDestination IntentsContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported intents. This field is populated only if `intents_uri` is
        /// specified in ExportIntentsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentsUri")]
        public virtual string IntentsUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no
    /// fields.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for TestCases.ExportTestCases.</summary>
    public class GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Uncompressed raw byte content for test cases.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>
        /// The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified
        /// in ExportTestCasesRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsUri")]
        public virtual string GcsUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A form is a data model that groups related parameters that can be collected from the user. The process in which
    /// the agent prompts the user and collects parameter values from the user is called form filling. A form can be
    /// added to a page. When form filling is done, the filled parameters will be written to the session.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1Form : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Parameters to collect from the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1FormParameter> Parameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a form parameter.</summary>
    public class GoogleCloudDialogflowCxV3beta1FormParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the
        /// settings exposed at the higher level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSettings")]
        public virtual GoogleCloudDialogflowCxV3beta1AdvancedSettings AdvancedSettings { get; set; }

        /// <summary>
        /// The default value of an optional parameter. If the parameter is required, the default value will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultValue")]
        public virtual object DefaultValue { get; set; }

        /// <summary>Required. The human-readable name of the parameter, unique within the form.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for
        /// system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
        /// `projects//locations//agents//entityTypes/` for developer entity types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; }

        /// <summary>Required. Defines fill behavior for the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fillBehavior")]
        public virtual GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior FillBehavior { get; set; }

        /// <summary>Indicates whether the parameter represents a list of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isList")]
        public virtual System.Nullable<bool> IsList { get; set; }

        /// <summary>
        /// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter
        /// content will be replaced by parameter name during logging. Note: the parameter content is subject to
        /// redaction if either parameter level redaction or entity type level redaction is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redact")]
        public virtual System.Nullable<bool> Redact { get; set; }

        /// <summary>
        /// Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are
        /// filled if the user specifies them. Required parameters must be filled before form filling concludes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("required")]
        public virtual System.Nullable<bool> Required { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for how the filling of a parameter should be handled.</summary>
    public class GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to
        /// fill the parameter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("initialPromptFulfillment")]
        public virtual GoogleCloudDialogflowCxV3beta1Fulfillment InitialPromptFulfillment { get; set; }

        /// <summary>
        /// The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a
        /// different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 *
        /// `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` *
        /// `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the
        /// user's response does not fill the parameter, a no-match/no-input event will be triggered, and the
        /// fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to
        /// provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next
        /// no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used
        /// to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the
        /// parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the
        /// parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter,
        /// however the parameter was invalidated by webhook, the fulfillment associated with the
        /// `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for
        /// the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repromptEventHandlers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1EventHandler> RepromptEventHandlers { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. *
    /// Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form
    /// lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry
    /// fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook
    /// (for example, to load user data from a database), or both.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1Fulfillment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the
        /// settings exposed at the higher level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSettings")]
        public virtual GoogleCloudDialogflowCxV3beta1AdvancedSettings AdvancedSettings { get; set; }

        /// <summary>Conditional cases for this fulfillment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditionalCases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases> ConditionalCases { get; set; }

        /// <summary>
        /// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the
        /// defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated
        /// with no-match event handlers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableGenerativeFallback")]
        public virtual System.Nullable<bool> EnableGenerativeFallback { get; set; }

        /// <summary>The list of rich message responses to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ResponseMessage> Messages { get; set; }

        /// <summary>
        /// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a
        /// webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects
        /// streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled
        /// in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to
        /// fulfillments that have slow webhooks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnPartialResponses")]
        public virtual System.Nullable<bool> ReturnPartialResponses { get; set; }

        /// <summary>Set parameter values before executing the webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("setParameterActions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction> SetParameterActions { get; set; }

        /// <summary>
        /// The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow
        /// when the associated webhook is called. The tag is typically used by the webhook service to identify which
        /// fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is
        /// specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tag")]
        public virtual string Tag { get; set; }

        /// <summary>The webhook to call. Format: `projects//locations//agents//webhooks/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhook")]
        public virtual string Webhook { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is
    /// selected, all the rest ignored.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of cascading if-else conditions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase> Cases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected
    /// and evaluated recursively.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of case content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("caseContent")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent> CaseContent { get; set; }

        /// <summary>
        /// The condition to activate and select this case. Empty means the condition is always true. The condition is
        /// evaluated against form parameters or session parameters. See the [conditions
        /// reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The list of messages or conditional cases to activate for this case.</summary>
    public class GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Additional cases to be evaluated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalCases")]
        public virtual GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases AdditionalCases { get; set; }

        /// <summary>Returned message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessage Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Setting a parameter value.</summary>
    public class GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Display name of the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameter")]
        public virtual string Parameter { get; set; }

        /// <summary>The new value of the parameter. A null value clears the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual object Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or
    /// transcripts) outside of Dialogflow.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1GcsDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The Google Cloud Storage URI for the exported objects. A URI is of the form:
        /// `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the
        /// Dialogflow operation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the EntityTypes.ImportEntityTypes long running operation.</summary>
    public class GoogleCloudDialogflowCxV3beta1ImportEntityTypesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for EntityTypes.ImportEntityTypes.</summary>
    public class GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportEntityTypesRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conflictingResources")]
        public virtual GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources ConflictingResources { get; set; }

        /// <summary>
        /// The unique identifier of the imported entity types. Format: `projects//locations//agents//entity_types/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypes")]
        public virtual System.Collections.Generic.IList<string> EntityTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request
    /// and there are conflicts in the display names.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Display names of conflicting entities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityDisplayNames")]
        public virtual System.Collections.Generic.IList<string> EntityDisplayNames { get; set; }

        /// <summary>Display names of conflicting entity types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeDisplayNames")]
        public virtual System.Collections.Generic.IList<string> EntityTypeDisplayNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Flows.ImportFlow.</summary>
    public class GoogleCloudDialogflowCxV3beta1ImportFlowResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique identifier of the new flow. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flow")]
        public virtual string Flow { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the Intents.ImportIntents long running operation.</summary>
    public class GoogleCloudDialogflowCxV3beta1ImportIntentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Intents.ImportIntents.</summary>
    public class GoogleCloudDialogflowCxV3beta1ImportIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportIntentsRequest.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conflictingResources")]
        public virtual GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources ConflictingResources { get; set; }

        /// <summary>
        /// The unique identifier of the imported intents. Format: `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<string> Intents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request
    /// and there are conflicts in the display names.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Display names of conflicting entities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityDisplayNames")]
        public virtual System.Collections.Generic.IList<string> EntityDisplayNames { get; set; }

        /// <summary>Display names of conflicting intents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentDisplayNames")]
        public virtual System.Collections.Generic.IList<string> IntentDisplayNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the TestCases.ImportTestCases long running operation.</summary>
    public class GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Errors for failed test cases.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1TestCaseError> Errors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for TestCases.ImportTestCases.</summary>
    public class GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("names")]
        public virtual System.Collections.Generic.IList<string> Names { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Inline destination for a Dialogflow operation that writes or exports objects (e.g. intents) outside of
    /// Dialogflow.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1InlineDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The uncompressed byte content for the objects. Only populated in responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Instructs the speech recognizer on how to process the audio content.</summary>
    public class GoogleCloudDialogflowCxV3beta1InputAudioConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Audio encoding of the audio content to process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioEncoding")]
        public virtual string AudioEncoding { get; set; }

        /// <summary>Configuration of barge-in behavior during the streaming of input audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bargeInConfig")]
        public virtual GoogleCloudDialogflowCxV3beta1BargeInConfig BargeInConfig { get; set; }

        /// <summary>
        /// Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about
        /// the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return
        /// any word-level information.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableWordInfo")]
        public virtual System.Nullable<bool> EnableWordInfo { get; set; }

        /// <summary>
        /// Optional. Which Speech model to select for the given request. For more information, see [Speech
        /// models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("model")]
        public virtual string Model { get; set; }

        /// <summary>Optional. Which variant of the Speech model to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelVariant")]
        public virtual string ModelVariant { get; set; }

        /// <summary>
        /// If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once
        /// force migration takes place in June 2024. Please refer to [Dialogflow CX Speech model
        /// migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optOutConformerModelMigration")]
        public virtual System.Nullable<bool> OptOutConformerModelMigration { get; set; }

        /// <summary>
        /// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with
        /// higher likelihood. See [the Cloud Speech
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phraseHints")]
        public virtual System.Collections.Generic.IList<string> PhraseHints { get; set; }

        /// <summary>
        /// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleRateHertz")]
        public virtual System.Nullable<int> SampleRateHertz { get; set; }

        /// <summary>
        /// Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`,
        /// the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the
        /// audio's voice has stopped or paused. In this case, once a detected intent is received, the client should
        /// close the stream and start a new request with a new stream as needed. Note: This setting is relevant only
        /// for streaming methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("singleUtterance")]
        public virtual System.Nullable<bool> SingleUtterance { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An intent represents a user's intent to interact with a conversational agent. You can provide information for
    /// the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user
    /// input) to your intent.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1Intent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Human readable description for better understanding an intent like its scope, content, result etc. Maximum
        /// character limit: 140 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Required. The human-readable name of the intent, unique within the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent,
        /// which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of
        /// requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative
        /// examples that triggers no-match event.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isFallback")]
        public virtual System.Nullable<bool> IsFallback { get; set; }

        /// <summary>
        /// The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-'
        /// and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start
        /// with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix "sys-"
        /// is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head *
        /// sys-contextual The above labels do not require value. "sys-head" means the intent is a head intent.
        /// "sys-contextual" means the intent is a contextual intent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent
        /// populates the name automatically. Format: `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The collection of parameters associated with the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1IntentParameter> Parameters { get; set; }

        /// <summary>
        /// The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is
        /// unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in
        /// the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual System.Nullable<int> Priority { get; set; }

        /// <summary>The collection of training phrases the agent is trained on to identify the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingPhrases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase> TrainingPhrases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the intent to trigger programmatically rather than as a result of natural language processing.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1IntentInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual string Intent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an intent parameter.</summary>
    public class GoogleCloudDialogflowCxV3beta1IntentParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for
        /// system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
        /// `projects//locations//agents//entityTypes/` for developer entity types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; }

        /// <summary>
        /// Required. The unique identifier of the parameter. This field is used by training phrases to annotate their
        /// parts.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Indicates whether the parameter represents a list of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isList")]
        public virtual System.Nullable<bool> IsList { get; set; }

        /// <summary>
        /// Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter
        /// content will be replaced by parameter name during logging. Note: the parameter content is subject to
        /// redaction if either parameter level redaction or entity type level redaction is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redact")]
        public virtual System.Nullable<bool> Redact { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an example that the agent is trained on to identify the intent.</summary>
    public class GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The unique identifier of the training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// Required. The ordered list of training phrase parts. The parts are concatenated in order to form the
        /// training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console
        /// does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted
        /// when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you
        /// just need a single part with only the Part.text field set. If you want to annotate the training phrase, you
        /// must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is
        /// set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you
        /// want to annotate, and the `parameter_id` field is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart> Parts { get; set; }

        /// <summary>Indicates how many times this example was added to the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("repeatCount")]
        public virtual System.Nullable<int> RepeatCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a part of a training phrase.</summary>
    public class GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The parameter used to annotate this part of the training phrase. This field is required for annotated parts
        /// of the training phrase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterId")]
        public virtual string ParameterId { get; set; }

        /// <summary>Required. The text for this part.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge
    /// Bases, and the way to execute fulfillment.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of related data store connections.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreConnections")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1DataStoreConnection> DataStoreConnections { get; set; }

        /// <summary>Whether Knowledge Connector is enabled or not.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; }

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; }

        /// <summary>
        /// The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow,
        /// you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest
        /// confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct
        /// the fulfillment.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerFulfillment")]
        public virtual GoogleCloudDialogflowCxV3beta1Fulfillment TriggerFulfillment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the language information of the request.</summary>
    public class GoogleCloudDialogflowCxV3beta1LanguageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The confidence score of the detected language between 0 and 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidenceScore")]
        public virtual System.Nullable<float> ConfidenceScore { get; set; }

        /// <summary>The language code specified in the original request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputLanguageCode")]
        public virtual string InputLanguageCode { get; set; }

        /// <summary>The language code detected for this request based on the user conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resolvedLanguageCode")]
        public virtual string ResolvedLanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX
    /// session are represented by pages. For each flow, you define many pages, where your combined pages can handle a
    /// complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the
    /// current page, the current page is considered active, and the flow associated with that page is considered
    /// active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes
    /// the current page. For each conversational turn, the current page will either stay the same or transition to
    /// another page. You configure each page to collect information from the end-user that is relevant for the
    /// conversational state represented by the page. For more information, see the [Page
    /// guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1Page : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings
        /// exposed at the higher level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSettings")]
        public virtual GoogleCloudDialogflowCxV3beta1AdvancedSettings AdvancedSettings { get; set; }

        /// <summary>The description of the page. The maximum length is 500 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Required. The human-readable name of the page, unique within the flow.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The fulfillment to call when the session is entering the page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entryFulfillment")]
        public virtual GoogleCloudDialogflowCxV3beta1Fulfillment EntryFulfillment { get; set; }

        /// <summary>
        /// Handlers associated with the page to handle events such as webhook errors, no match or no input.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventHandlers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1EventHandler> EventHandlers { get; set; }

        /// <summary>The form associated with the page, used for collecting parameters relevant to the page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("form")]
        public virtual GoogleCloudDialogflowCxV3beta1Form Form { get; set; }

        /// <summary>Optional. Knowledge connector configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeConnectorSettings")]
        public virtual GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings KnowledgeConnectorSettings { get; set; }

        /// <summary>
        /// The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the
        /// name automatically. Format: `projects//locations//agents//flows//pages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a
        /// page. If the page links both flow-level transition route groups and agent-level transition route groups, the
        /// flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple
        /// transition routes within a page scope refer to the same intent, then the precedence order is: page's
        /// transition route -&amp;gt; page's transition route group -&amp;gt; flow's transition routes. * If multiple
        /// transition route groups within a page contain the same intent, then the first group in the ordered list
        /// takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or
        /// `projects//locations//agents//transitionRouteGroups/` for agent-level groups.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transitionRouteGroups")]
        public virtual System.Collections.Generic.IList<string> TransitionRouteGroups { get; set; }

        /// <summary>
        /// A list of transitions for the transition rules of this page. They route the conversation to another page in
        /// the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evaluated in the
        /// following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in
        /// the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified.
        /// * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined
        /// in the page with only condition specified. * TransitionRoutes defined in the transition route groups with
        /// only condition specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transitionRoutes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1TransitionRoute> TransitionRoutes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents page information communicated to and from the webhook.</summary>
    public class GoogleCloudDialogflowCxV3beta1PageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page.
        /// Format: `projects//locations//agents//flows//pages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentPage")]
        public virtual string CurrentPage { get; set; }

        /// <summary>
        /// Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional for both WebhookRequest and WebhookResponse. Information about the form.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1PageInfoFormInfo FormInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents form information.</summary>
    public class GoogleCloudDialogflowCxV3beta1PageInfoFormInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the
        /// webhook cannot add or remove any form parameter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo> ParameterInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents parameter information.</summary>
    public class GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter,
        /// unique within the form. This field cannot be modified by the webhook.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just
        /// collected on the last conversation turn.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("justCollected")]
        public virtual System.Nullable<bool> JustCollected { get; set; }

        /// <summary>
        /// Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional
        /// parameters will not trigger prompts; however, they are filled if the user specifies them. Required
        /// parameters must be filled before form filling concludes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("required")]
        public virtual System.Nullable<bool> Required { get; set; }

        /// <summary>
        /// Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can
        /// be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be
        /// ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>
        /// Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by
        /// the webhook to change the parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual object Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent
    /// query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to
    /// be triggered. 5. DTMF digits to invoke an intent and fill in parameter value. 6. The results of a tool executed
    /// by the client.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1QueryInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The natural language speech audio to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual GoogleCloudDialogflowCxV3beta1AudioInput Audio { get; set; }

        /// <summary>The DTMF event to be handled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmf")]
        public virtual GoogleCloudDialogflowCxV3beta1DtmfInput Dtmf { get; set; }

        /// <summary>The event to be triggered.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual GoogleCloudDialogflowCxV3beta1EventInput Event__ { get; set; }

        /// <summary>The intent to be triggered.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual GoogleCloudDialogflowCxV3beta1IntentInput Intent { get; set; }

        /// <summary>
        /// Required. The language of the input. See [Language
        /// Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently
        /// supported language codes. Note that queries in the same session do not necessarily need to specify the same
        /// language.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The natural language text to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowCxV3beta1TextInput Text { get; set; }

        /// <summary>The results of a tool executed by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCallResult")]
        public virtual GoogleCloudDialogflowCxV3beta1ToolCallResult ToolCallResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a response message that can be returned by a conversational agent. Response messages are also used
    /// for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present,
    /// then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis.
    /// * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as
    /// SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally
    /// use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly
    /// concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated
    /// user experience scenarios, where the text displayed to the user may differ from what is heard.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The channel which the response is associated with. Clients can specify the channel via
        /// QueryParameters.channel, and only associated channel response will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channel")]
        public virtual string Channel { get; set; }

        /// <summary>Indicates that the conversation succeeded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationSuccess")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess ConversationSuccess { get; set; }

        /// <summary>
        /// Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is
        /// generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be
        /// defined by the user. It's guaranteed that there is at most one such message in each response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endInteraction")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction EndInteraction { get; set; }

        /// <summary>
        /// Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeInfoCard")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard KnowledgeInfoCard { get; set; }

        /// <summary>Hands off conversation to a human agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("liveAgentHandoff")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff LiveAgentHandoff { get; set; }

        /// <summary>
        /// Output only. An audio response message composed of both the synthesized Dialogflow agent responses and
        /// responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be
        /// defined by the user.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mixedAudio")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio MixedAudio { get; set; }

        /// <summary>
        /// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the
        /// comment on the ResponseMessage message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputAudioText")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText OutputAudioText { get; set; }

        /// <summary>Returns a response containing a custom, platform-specific payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to
        /// construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playAudio")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio PlayAudio { get; set; }

        /// <summary>
        /// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonyTransferCall")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall TelephonyTransferCall { get; set; }

        /// <summary>Returns a text response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowCxV3beta1ResponseMessageText Text { get; set; }

        /// <summary>Returns the definition of a tool call that should be executed by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCall")]
        public virtual GoogleCloudDialogflowCxV3beta1ToolCall ToolCall { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about.
    /// Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process
    /// the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the
    /// conversation end page as successful even if they don't return ConversationSuccess. You may set this, for
    /// example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. *
    /// In a webhook response when you determine that you handled the customer issue.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Custom metadata. Dialogflow doesn't impose any structure on this.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and
    /// not supposed to be defined by the user.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return
    /// a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine
    /// which conversations were handed off to a human agent for measurement purposes. What else to do with this signal
    /// is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if
    /// entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you
    /// determine that the customer issue can only be handled by a human.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and
    /// ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is
    /// generated by Dialogflow only and not supposed to be defined by the user.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Segments this audio response is composed of.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segments")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment> Segments { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents one segment of audio.</summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client
        /// should then start the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual string Audio { get; set; }

        /// <summary>
        /// Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any
        /// validation on it.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment
    /// on the ResponseMessage message.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client
        /// can then starts the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssml")]
        public virtual string Ssml { get; set; }

        /// <summary>The raw text to be synthesized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies an audio clip to be played by the client as part of the response.</summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client
        /// can then starts the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to
        /// the client that reads it.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioUri")]
        public virtual string AudioUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party
    /// endpoint.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The text response message.</summary>
    public class GoogleCloudDialogflowCxV3beta1ResponseMessageText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Whether the playback of this message can be interrupted by the end user's speech and the client
        /// can then starts the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// Required. A collection of text response variants. If multiple variants are defined, only one text response
        /// variant is returned at runtime.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata returned for the Environments.RunContinuousTest long running operation.</summary>
    public class GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The test errors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1TestError> Errors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Environments.RunContinuousTest.</summary>
    public class GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The result for a continuous test run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("continuousTestResult")]
        public virtual GoogleCloudDialogflowCxV3beta1ContinuousTestResult ContinuousTestResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for TestCases.RunTestCase.</summary>
    public class GoogleCloudDialogflowCxV3beta1RunTestCaseResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("result")]
        public virtual GoogleCloudDialogflowCxV3beta1TestCaseResult Result { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents session information communicated to and from the webhook.</summary>
    public class GoogleCloudDialogflowCxV3beta1SessionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents
        /// during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter
        /// from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map
        /// is keyed by parameters' display names.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> Parameters { get; set; }

        /// <summary>
        /// Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This
        /// field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or
        /// `projects//locations//agents//environments//sessions/` if environment is specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a test case.</summary>
    public class GoogleCloudDialogflowCxV3beta1TestCase : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _creationTimeRaw;

        private object _creationTime;

        /// <summary>Output only. When the test was created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creationTime")]
        public virtual string CreationTimeRaw
        {
            get => _creationTimeRaw;
            set
            {
                _creationTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _creationTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreationTimeDateTimeOffset instead.")]
        public virtual object CreationTime
        {
            get => _creationTime;
            set
            {
                _creationTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _creationTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreationTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreationTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreationTimeRaw);
            set => CreationTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The latest test result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastTestResult")]
        public virtual GoogleCloudDialogflowCxV3beta1TestCaseResult LastTestResult { get; set; }

        /// <summary>
        /// The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically.
        /// Otherwise use format: `projects//locations//agents//testCases/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Additional freeform notes about the test case. Limit of 400 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notes")]
        public virtual string Notes { get; set; }

        /// <summary>
        /// Tags are short descriptions that users may apply to test cases for organizational and filtering purposes.
        /// Each tag should start with "#" and has a limit of 30 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags { get; set; }

        /// <summary>
        /// The conversation turns uttered when the test case was created, in chronological order. These include the
        /// canonical set of agent utterances that should occur when the agent is working properly.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCaseConversationTurns")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ConversationTurn> TestCaseConversationTurns { get; set; }

        /// <summary>Config for the test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testConfig")]
        public virtual GoogleCloudDialogflowCxV3beta1TestConfig TestConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Error info for importing a test.</summary>
    public class GoogleCloudDialogflowCxV3beta1TestCaseError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status associated with the test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual GoogleRpcStatus Status { get; set; }

        /// <summary>The test case.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCase")]
        public virtual GoogleCloudDialogflowCxV3beta1TestCase TestCase { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a result from running a test case in an agent environment.</summary>
    public class GoogleCloudDialogflowCxV3beta1TestCaseResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The conversation turns uttered during the test case replay in chronological order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationTurns")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ConversationTurn> ConversationTurns { get; set; }

        /// <summary>Environment where the test was run. If not set, it indicates the draft environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("environment")]
        public virtual string Environment { get; set; }

        /// <summary>
        /// The resource name for the test case result. Format: `projects//locations//agents//testCases//results/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Whether the test case passed in the agent environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testResult")]
        public virtual string TestResult { get; set; }

        private string _testTimeRaw;

        private object _testTime;

        /// <summary>The time that the test was run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testTime")]
        public virtual string TestTimeRaw
        {
            get => _testTimeRaw;
            set
            {
                _testTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _testTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="TestTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use TestTimeDateTimeOffset instead.")]
        public virtual object TestTime
        {
            get => _testTime;
            set
            {
                _testTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _testTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="TestTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? TestTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(TestTimeRaw);
            set => TestTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents configurations for a test case.</summary>
    public class GoogleCloudDialogflowCxV3beta1TestConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and
        /// `page` should be set to indicate the starting point of the test case. If neither is set, the test case will
        /// start with start page on the default start flow.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flow")]
        public virtual string Flow { get; set; }

        /// <summary>
        /// The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of
        /// `flow` and `page` should be set to indicate the starting point of the test case. If neither is set, the test
        /// case will start with start page on the default start flow.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("page")]
        public virtual string Page { get; set; }

        /// <summary>Session parameters to be compared when calculating differences.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trackingParameters")]
        public virtual System.Collections.Generic.IList<string> TrackingParameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Error info for running a test.</summary>
    public class GoogleCloudDialogflowCxV3beta1TestError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status associated with the test.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual GoogleRpcStatus Status { get; set; }

        /// <summary>The test case resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testCase")]
        public virtual string TestCase { get; set; }

        private string _testTimeRaw;

        private object _testTime;

        /// <summary>The timestamp when the test was completed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testTime")]
        public virtual string TestTimeRaw
        {
            get => _testTimeRaw;
            set
            {
                _testTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _testTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="TestTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use TestTimeDateTimeOffset instead.")]
        public virtual object TestTime
        {
            get => _testTime;
            set
            {
                _testTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _testTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="TestTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? TestTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(TestTimeRaw);
            set => TestTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The description of differences between original and replayed agent output.</summary>
    public class GoogleCloudDialogflowCxV3beta1TestRunDifference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A human readable description of the diff, showing the actual output vs expected output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>The type of diff.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the natural language text to be processed.</summary>
    public class GoogleCloudDialogflowCxV3beta1TextInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The UTF-8 encoded natural language text to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a call of a specific tool's action with the specified inputs.</summary>
    public class GoogleCloudDialogflowCxV3beta1ToolCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the tool's action associated with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>Optional. The action's input parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> InputParameters { get; set; }

        /// <summary>
        /// Required. The tool associated with this call. Format: `projects//locations//agents//tools/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tool")]
        public virtual string Tool { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The result of calling a tool's action that has been executed by the client.</summary>
    public class GoogleCloudDialogflowCxV3beta1ToolCallResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the tool's action associated with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>The tool call's error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleCloudDialogflowCxV3beta1ToolCallResultError Error { get; set; }

        /// <summary>The tool call's output parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> OutputParameters { get; set; }

        /// <summary>
        /// Required. The tool associated with this call. Format: `projects//locations//agents//tools/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tool")]
        public virtual string Tool { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An error produced by the tool call.</summary>
    public class GoogleCloudDialogflowCxV3beta1ToolCallResultError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The error message of the function.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a
    /// session. When a specified transition is matched, the following actions are taken in order: * If there is a
    /// `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page`
    /// associated with the transition, the session will transition into the specified page. * If there is a
    /// `target_flow` associated with the transition, the session will transition into the specified flow.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1TransitionRoute : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The condition to evaluate against form parameters or session parameters. See the [conditions
        /// reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or
        /// `condition` must be specified. When both `intent` and `condition` are specified, the transition can only
        /// happen when both are fulfilled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>Optional. The description of the transition route. The maximum length is 500 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the
        /// transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be
        /// specified. When both `intent` and `condition` are specified, the transition can only happen when both are
        /// fulfilled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual string Intent { get; set; }

        /// <summary>Output only. The unique identifier of this transition route.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; }

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; }

        /// <summary>
        /// The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target`
        /// must be specified. When both are defined, `trigger_fulfillment` is executed first.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerFulfillment")]
        public virtual GoogleCloudDialogflowCxV3beta1Fulfillment TriggerFulfillment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Collection of all signals that were extracted for a single turn of the conversation.</summary>
    public class GoogleCloudDialogflowCxV3beta1TurnSignals : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether agent responded with LiveAgentHandoff fulfillment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentEscalated")]
        public virtual System.Nullable<bool> AgentEscalated { get; set; }

        /// <summary>Whether user was using DTMF input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfUsed")]
        public virtual System.Nullable<bool> DtmfUsed { get; set; }

        /// <summary>Failure reasons of the turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReasons")]
        public virtual System.Collections.Generic.IList<string> FailureReasons { get; set; }

        /// <summary>Whether NLU predicted NO_MATCH.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noMatch")]
        public virtual System.Nullable<bool> NoMatch { get; set; }

        /// <summary>Whether user provided no input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noUserInput")]
        public virtual System.Nullable<bool> NoUserInput { get; set; }

        /// <summary>Whether turn resulted in End Session page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachedEndPage")]
        public virtual System.Nullable<bool> ReachedEndPage { get; set; }

        /// <summary>
        /// Sentiment magnitude of the user utterance if
        /// [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentMagnitude")]
        public virtual System.Nullable<float> SentimentMagnitude { get; set; }

        /// <summary>
        /// Sentiment score of the user utterance if
        /// [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentScore")]
        public virtual System.Nullable<float> SentimentScore { get; set; }

        /// <summary>Whether user was specifically asking for a live agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userEscalated")]
        public virtual System.Nullable<bool> UserEscalated { get; set; }

        /// <summary>Human-readable statuses of the webhooks triggered during this turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookStatuses")]
        public virtual System.Collections.Generic.IList<string> WebhookStatuses { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data
    /// extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or
    /// trigger actions on the backend.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1Webhook : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates whether the webhook is disabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disabled")]
        public virtual System.Nullable<bool> Disabled { get; set; }

        /// <summary>Required. The human-readable name of the webhook, unique within the agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Configuration for a generic web service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genericWebService")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookGenericWebService GenericWebService { get; set; }

        /// <summary>
        /// The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook
        /// populates the name automatically. Format: `projects//locations//agents//webhooks/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceDirectory")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig ServiceDirectory { get; set; }

        /// <summary>
        /// Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from
        /// webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeout")]
        public virtual object Timeout { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents configuration for a generic web service.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookGenericWebService : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This
        /// overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default
        /// trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject
        /// alt name". For instance a certificate can be self-signed using the following command,
        /// ```
        /// openssl x509 -req
        /// -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile &amp;lt;(printf
        /// "\nsubjectAltName='DNS:www.example.com'")
        /// ```
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowedCaCerts")]
        public virtual System.Collections.Generic.IList<string> AllowedCaCerts { get; set; }

        /// <summary>Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpMethod")]
        public virtual string HttpMethod { get; set; }

        /// <summary>
        /// Optional. The OAuth configuration of the webhook. If specified, Dialogflow will initiate the OAuth client
        /// credential flow to exchange an access token from the 3rd party platform and put it in the auth header.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oauthConfig")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceOAuthConfig OauthConfig { get; set; }

        /// <summary>
        /// Optional. Maps the values extracted from specific fields of the flexible webhook response into session
        /// parameters. - Key: session parameter name - Value: field path in the webhook response
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameterMapping")]
        public virtual System.Collections.Generic.IDictionary<string, string> ParameterMapping { get; set; }

        /// <summary>The password for HTTP Basic authentication.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("password")]
        public virtual string Password { get; set; }

        /// <summary>Optional. Defines a custom JSON object as request body to send to flexible webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestBody")]
        public virtual string RequestBody { get; set; }

        /// <summary>The HTTP request headers to send together with webhook requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestHeaders")]
        public virtual System.Collections.Generic.IDictionary<string, string> RequestHeaders { get; set; }

        /// <summary>
        /// Optional. The SecretManager secret version resource storing the username:password pair for HTTP Basic
        /// authentication. Format: `projects/{project}/secrets/{secret}/versions/{version}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secretVersionForUsernamePassword")]
        public virtual string SecretVersionForUsernamePassword { get; set; }

        /// <summary>
        /// Optional. The HTTP request headers to send together with webhook requests. Header values are stored in
        /// SecretManager secret versions. When the same header name is specified in both `request_headers` and
        /// `secret_versions_for_request_headers`, the value in `secret_versions_for_request_headers` will be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secretVersionsForRequestHeaders")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceSecretVersionHeaderValue> SecretVersionsForRequestHeaders { get; set; }

        /// <summary>
        /// Optional. Indicate the auth token type generated from the [Diglogflow service
        /// agent](https://cloud.google.com/iam/docs/service-agents#dialogflow-service-agent). The generated token is
        /// sent in the Authorization header.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceAgentAuth")]
        public virtual string ServiceAgentAuth { get; set; }

        /// <summary>Required. The webhook URI for receiving POST requests. It must use https protocol.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The user name for HTTP Basic authentication.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("username")]
        public virtual string Username { get; set; }

        /// <summary>Optional. Type of the webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookType")]
        public virtual string WebhookType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents configuration of OAuth client credential flow for 3rd party API authentication.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceOAuthConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The client ID provided by the 3rd party platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientId")]
        public virtual string ClientId { get; set; }

        /// <summary>Optional. The client secret provided by the 3rd party platform.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientSecret")]
        public virtual string ClientSecret { get; set; }

        /// <summary>Optional. The OAuth scopes to grant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scopes")]
        public virtual System.Collections.Generic.IList<string> Scopes { get; set; }

        /// <summary>
        /// Optional. The name of the SecretManager secret version resource storing the client secret. If this field is
        /// set, the `client_secret` field will be ignored. Format:
        /// `projects/{project}/secrets/{secret}/versions/{version}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secretVersionForClientSecret")]
        public virtual string SecretVersionForClientSecret { get; set; }

        /// <summary>
        /// Required. The token endpoint provided by the 3rd party platform to exchange an access token.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tokenEndpoint")]
        public virtual string TokenEndpoint { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the value of an HTTP header stored in a SecretManager secret version.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookGenericWebServiceSecretVersionHeaderValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The SecretManager secret version resource storing the header value. Format:
        /// `projects/{project}/secrets/{secret}/versions/{version}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secretVersion")]
        public virtual string SecretVersion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The request message for a webhook call. The request is sent as a JSON object and the field names will be
    /// presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally
    /// by Dialogflow and should be ignored.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detectIntentResponseId")]
        public virtual string DetectIntentResponseId { get; set; }

        /// <summary>If DTMF was provided as input, this field will contain the DTMF digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfDigits")]
        public virtual string DtmfDigits { get; set; }

        /// <summary>Always present. Information about the fulfillment that triggered this webhook call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo FulfillmentInfo { get; set; }

        /// <summary>Information about the last matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo IntentInfo { get; set; }

        /// <summary>The language code specified in the original request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Information about the language of the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1LanguageInfo LanguageInfo { get; set; }

        /// <summary>
        /// The list of rich message responses to present to the user. Webhook can choose to append or replace this list
        /// in WebhookResponse.fulfillment_response;
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ResponseMessage> Messages { get; set; }

        /// <summary>Information about page status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1PageInfo PageInfo { get; set; }

        /// <summary>Custom data set in QueryParameters.payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// The sentiment analysis result of the current user request. The field is filled when sentiment analysis is
        /// configured to be enabled for the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysisResult")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult SentimentAnalysisResult { get; set; }

        /// <summary>Information about session status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1SessionInfo SessionInfo { get; set; }

        /// <summary>
        /// If natural language text was provided as input, this field will contain a copy of the text.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>
        /// If natural language speech audio was provided as input, this field will contain the transcript for the
        /// audio.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transcript")]
        public virtual string Transcript { get; set; }

        /// <summary>If an event was provided as input, this field will contain the name of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerEvent")]
        public virtual string TriggerEvent { get; set; }

        /// <summary>
        /// If an intent was provided as input, this field will contain a copy of the intent identifier. Format:
        /// `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerIntent")]
        public virtual string TriggerIntent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents fulfillment information communicated to the webhook.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when
        /// the associated webhook is called. The tag is typically used by the webhook service to identify which
        /// fulfillment is being called, but it could be used for other purposes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tag")]
        public virtual string Tag { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents intent information communicated to the webhook.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely
        /// certain).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>Always present. The display name of the last matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Always present. The unique identifier of the last matched intent. Format:
        /// `projects//locations//agents//intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastMatchedIntent")]
        public virtual string LastMatchedIntent { get; set; }

        /// <summary>
        /// Parameters identified as a result of intent matching. This is a map of the name of the identified parameter
        /// to the value of the parameter identified from the user's utterance. All parameters defined in the matched
        /// intent that are identified will be surfaced here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue> Parameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a value for an intent parameter.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Always present. Original text value extracted from user utterance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalValue")]
        public virtual string OriginalValue { get; set; }

        /// <summary>Always present. Structured value for the parameter extracted from user utterance.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resolvedValue")]
        public virtual object ResolvedValue { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the result of sentiment analysis.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment,
        /// regardless of score (positive or negative).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("magnitude")]
        public virtual System.Nullable<float> Magnitude { get; set; }

        /// <summary>Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("score")]
        public virtual System.Nullable<float> Score { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for a webhook call.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend
        /// to send any response to the user.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentResponse")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse FulfillmentResponse { get; set; }

        /// <summary>
        /// Information about page status. This field can be omitted by the webhook if it does not intend to modify page
        /// status.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1PageInfo PageInfo { get; set; }

        /// <summary>Value to append directly to QueryResult.webhook_payloads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// Information about session status. This field can be omitted by the webhook if it does not intend to modify
        /// session status.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionInfo")]
        public virtual GoogleCloudDialogflowCxV3beta1SessionInfo SessionInfo { get; set; }

        /// <summary>The target flow to transition to. Format: `projects//locations//agents//flows/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFlow")]
        public virtual string TargetFlow { get; set; }

        /// <summary>The target page to transition to. Format: `projects//locations//agents//flows//pages/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetPage")]
        public virtual string TargetPage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a fulfillment response to the user.</summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Merge behavior for `messages`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mergeBehavior")]
        public virtual string MergeBehavior { get; set; }

        /// <summary>The list of rich message responses to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowCxV3beta1ResponseMessage> Messages { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
    /// </summary>
    public class GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Generic Service configuration of this webhook.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genericWebService")]
        public virtual GoogleCloudDialogflowCxV3beta1WebhookGenericWebService GenericWebService { get; set; }

        /// <summary>
        /// Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format:
        /// `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the
        /// location of the agent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language
    /// understanding module that understands the nuances of human language. Dialogflow translates end-user text or
    /// audio during a conversation to structured data that your apps and services can understand. You design and build
    /// a Dialogflow agent to handle the types of conversations required for your system. For more information about
    /// agents, see the [Agent guide](https://cloud.google.com/dialogflow/docs/agents-overview).
    /// </summary>
    public class GoogleCloudDialogflowV2Agent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free
        /// to query different service endpoints for different API versions. However, bots connectors and webhook calls
        /// will follow the specified API version.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apiVersion")]
        public virtual string ApiVersion { get; set; }

        /// <summary>
        /// Optional. The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the
        /// self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("avatarUri")]
        public virtual string AvatarUri { get; set; }

        /// <summary>
        /// Optional. To filter out false positive results and still get variety in matched natural language inputs for
        /// your agent, you can tune the machine learning classification threshold. If the returned score value is less
        /// than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents
        /// defined, no intent will be triggered. The score values range from 0.0 (completely uncertain) to 1.0
        /// (completely certain). If set to 0.0, the default of 0.3 is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("classificationThreshold")]
        public virtual System.Nullable<float> ClassificationThreshold { get; set; }

        /// <summary>
        /// Required. The default language of the agent as a language tag. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes. This field cannot be set by the `Update` method.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultLanguageCode")]
        public virtual string DefaultLanguageCode { get; set; }

        /// <summary>
        /// Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is
        /// rejected.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Required. The name of this agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional. Determines whether this agent should log conversation queries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableLogging")]
        public virtual System.Nullable<bool> EnableLogging { get; set; }

        /// <summary>Optional. Determines how intents are detected from user queries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchMode")]
        public virtual string MatchMode { get; set; }

        /// <summary>Required. The project of this agent. Format: `projects/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parent")]
        public virtual string Parent { get; set; }

        /// <summary>
        /// Optional. The list of all languages supported by this agent (except for the `default_language_code`).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportedLanguageCodes")]
        public virtual System.Collections.Generic.IList<string> SupportedLanguageCodes { get; set; }

        /// <summary>Optional. The agent tier. If not specified, TIER_STANDARD is assumed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tier")]
        public virtual string Tier { get; set; }

        /// <summary>
        /// Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g.,
        /// America/New_York, Europe/Paris.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Detail feedback of Agent Assist result.</summary>
    public class GoogleCloudDialogflowV2AgentAssistantFeedback : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Whether or not the suggested answer is relevant. For example: * Query: "Can I change my mailing
        /// address?" * Suggested document says: "Items must be returned/exchanged within 60 days of the purchase date."
        /// * answer_relevance: AnswerRelevance.IRRELEVANT
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRelevance")]
        public virtual string AnswerRelevance { get; set; }

        /// <summary>
        /// Optional. Whether or not the information in the document is correct. For example: * Query: "Can I return the
        /// package in 2 days once received?" * Suggested document says: "Items must be returned/exchanged within 60
        /// days of the purchase date." * Ground truth: "No return or exchange is allowed." * document_correctness:
        /// INCORRECT
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentCorrectness")]
        public virtual string DocumentCorrectness { get; set; }

        /// <summary>
        /// Optional. Whether or not the suggested document is efficient. For example, if the document is poorly
        /// written, hard to understand, hard to use or too long to find useful information, document_efficiency is
        /// DocumentEfficiency.INEFFICIENT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentEfficiency")]
        public virtual string DocumentEfficiency { get; set; }

        /// <summary>Optional. Feedback for knowledge assist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeAssistFeedback")]
        public virtual GoogleCloudDialogflowV2AgentAssistantFeedbackKnowledgeAssistFeedback KnowledgeAssistFeedback { get; set; }

        /// <summary>Optional. Feedback for knowledge search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeSearchFeedback")]
        public virtual GoogleCloudDialogflowV2AgentAssistantFeedbackKnowledgeSearchFeedback KnowledgeSearchFeedback { get; set; }

        /// <summary>Optional. Feedback for conversation summarization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarizationFeedback")]
        public virtual GoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback SummarizationFeedback { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Feedback for knowledge assist.</summary>
    public class GoogleCloudDialogflowV2AgentAssistantFeedbackKnowledgeAssistFeedback : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether the suggested answer was copied by the human agent. If the value is set to be true,
        /// AnswerFeedback.clicked will be updated to be true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerCopied")]
        public virtual System.Nullable<bool> AnswerCopied { get; set; }

        /// <summary>
        /// The URIs clicked by the human agent. The value is appended for each UpdateAnswerRecordRequest. If the value
        /// is not empty, AnswerFeedback.clicked will be updated to be true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickedUris")]
        public virtual System.Collections.Generic.IList<string> ClickedUris { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Feedback for knowledge search.</summary>
    public class GoogleCloudDialogflowV2AgentAssistantFeedbackKnowledgeSearchFeedback : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether the answer was copied by the human agent or not. If the value is set to be true,
        /// AnswerFeedback.clicked will be updated to be true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerCopied")]
        public virtual System.Nullable<bool> AnswerCopied { get; set; }

        /// <summary>
        /// The URIs clicked by the human agent. The value is appended for each UpdateAnswerRecordRequest. If the value
        /// is not empty, AnswerFeedback.clicked will be updated to be true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickedUris")]
        public virtual System.Collections.Generic.IList<string> ClickedUris { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Feedback for conversation summarization.</summary>
    public class GoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Timestamp when composing of the summary starts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _submitTimeRaw;

        private object _submitTime;

        /// <summary>Timestamp when the summary was submitted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("submitTime")]
        public virtual string SubmitTimeRaw
        {
            get => _submitTimeRaw;
            set
            {
                _submitTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _submitTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="SubmitTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use SubmitTimeDateTimeOffset instead.")]
        public virtual object SubmitTime
        {
            get => _submitTime;
            set
            {
                _submitTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _submitTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="SubmitTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? SubmitTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(SubmitTimeRaw);
            set => SubmitTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Text of actual submitted summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summaryText")]
        public virtual string SummaryText { get; set; }

        /// <summary>Optional. Actual text sections of submitted summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textSections")]
        public virtual System.Collections.Generic.IDictionary<string, string> TextSections { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a record of a human agent assist answer.</summary>
    public class GoogleCloudDialogflowV2AgentAssistantRecord : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The article suggestion answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("articleSuggestionAnswer")]
        public virtual GoogleCloudDialogflowV2ArticleAnswer ArticleSuggestionAnswer { get; set; }

        /// <summary>Output only. Dialogflow assist answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAssistAnswer")]
        public virtual GoogleCloudDialogflowV2DialogflowAssistAnswer DialogflowAssistAnswer { get; set; }

        /// <summary>Output only. The FAQ answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faqAnswer")]
        public virtual GoogleCloudDialogflowV2FaqAnswer FaqAnswer { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Participants.AnalyzeContent.</summary>
    public class GoogleCloudDialogflowV2AnalyzeContentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Parameters for a human assist query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assistQueryParams")]
        public virtual GoogleCloudDialogflowV2AssistQueryParameters AssistQueryParams { get; set; }

        /// <summary>The natural language speech audio to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioInput")]
        public virtual GoogleCloudDialogflowV2AudioInput AudioInput { get; set; }

        /// <summary>
        /// Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the
        /// session, clients should explicitly set the parameter value to null. Note: this field should only be used if
        /// you are connecting to a Dialogflow CX agent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cxParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> CxParameters { get; set; }

        /// <summary>An input event to send to Dialogflow.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventInput")]
        public virtual GoogleCloudDialogflowV2EventInput EventInput { get; set; }

        /// <summary>Parameters for a Dialogflow virtual-agent query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryParams")]
        public virtual GoogleCloudDialogflowV2QueryParameters QueryParams { get; set; }

        /// <summary>
        /// Speech synthesis configuration. The speech synthesis settings for a virtual agent that may be configured for
        /// the associated conversation profile are not used when calling AnalyzeContent. If this configuration is not
        /// supplied, speech synthesis is disabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replyAudioConfig")]
        public virtual GoogleCloudDialogflowV2OutputAudioConfig ReplyAudioConfig { get; set; }

        /// <summary>
        /// A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This
        /// request is only idempotent if a `request_id` is provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestId")]
        public virtual string RequestId { get; set; }

        /// <summary>An input representing the selection of a suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionInput")]
        public virtual GoogleCloudDialogflowV2SuggestionInput SuggestionInput { get; set; }

        /// <summary>The natural language text to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textInput")]
        public virtual GoogleCloudDialogflowV2TextInput TextInput { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.AnalyzeContent.</summary>
    public class GoogleCloudDialogflowV2AnalyzeContentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Only set if a Dialogflow automated agent has responded. Note that in
        /// AutomatedAgentReply.DetectIntentResponse, Sessions.DetectIntentResponse.output_audio and
        /// Sessions.DetectIntentResponse.output_audio_config are always empty, use reply_audio instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("automatedAgentReply")]
        public virtual GoogleCloudDialogflowV2AutomatedAgentReply AutomatedAgentReply { get; set; }

        /// <summary>Indicates the parameters of DTMF.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfParameters")]
        public virtual GoogleCloudDialogflowV2DtmfParameters DtmfParameters { get; set; }

        /// <summary>
        /// The suggestions for end user. The order is the same as
        /// HumanAgentAssistantConfig.SuggestionConfig.feature_configs of
        /// HumanAgentAssistantConfig.end_user_suggestion_config. Same as human_agent_suggestion_results, any failure of
        /// Agent Assist features will not lead to the overall failure of an AnalyzeContent API call. Instead, the
        /// features will fail silently with the error field set in the corresponding SuggestionResult.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endUserSuggestionResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SuggestionResult> EndUserSuggestionResults { get; set; }

        /// <summary>
        /// The suggestions for most recent human agent. The order is the same as
        /// HumanAgentAssistantConfig.SuggestionConfig.feature_configs of
        /// HumanAgentAssistantConfig.human_agent_suggestion_config. Note that any failure of Agent Assist features will
        /// not lead to the overall failure of an AnalyzeContent API call. Instead, the features will fail silently with
        /// the error field set in the corresponding SuggestionResult.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("humanAgentSuggestionResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SuggestionResult> HumanAgentSuggestionResults { get; set; }

        /// <summary>Message analyzed by CCAI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual GoogleCloudDialogflowV2Message Message { get; set; }

        /// <summary>
        /// The audio data bytes encoded as specified in the request. This field is set if: - `reply_audio_config` was
        /// specified in the request, or - The automated agent responded with audio to play to the user. In such case,
        /// `reply_audio.config` contains settings used to synthesize the speech. In some scenarios, multiple output
        /// audio fields may be present in the response structure. In these cases, only the top-most-level audio output
        /// has content.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replyAudio")]
        public virtual GoogleCloudDialogflowV2OutputAudio ReplyAudio { get; set; }

        /// <summary>
        /// The output text content. This field is set if the automated agent responded with text to show to the user.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replyText")]
        public virtual string ReplyText { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of
    /// the message between two entities or message start/end.
    /// </summary>
    public class GoogleCloudDialogflowV2AnnotatedMessagePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of
        /// this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; }

        /// <summary>
        /// The [Dialogflow system entity formatted value
        /// ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for
        /// a system entity of type `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" }
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedValue")]
        public virtual object FormattedValue { get; set; }

        /// <summary>A part of a message possibly annotated with an entity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents feedback the customer has about the quality &amp;amp; correctness of a certain answer in a
    /// conversation.
    /// </summary>
    public class GoogleCloudDialogflowV2AnswerFeedback : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Detail feedback of agent assist suggestions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentAssistantDetailFeedback")]
        public virtual GoogleCloudDialogflowV2AgentAssistantFeedback AgentAssistantDetailFeedback { get; set; }

        private string _clickTimeRaw;

        private object _clickTime;

        /// <summary>Time when the answer/item was clicked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickTime")]
        public virtual string ClickTimeRaw
        {
            get => _clickTimeRaw;
            set
            {
                _clickTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _clickTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="ClickTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use ClickTimeDateTimeOffset instead.")]
        public virtual object ClickTime
        {
            get => _clickTime;
            set
            {
                _clickTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _clickTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="ClickTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? ClickTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(ClickTimeRaw);
            set => ClickTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Indicates whether the answer/item was clicked by the human agent or not. Default to false. For knowledge
        /// search and knowledge assist, the answer record is considered to be clicked if the answer was copied or any
        /// URI was clicked.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clicked")]
        public virtual System.Nullable<bool> Clicked { get; set; }

        /// <summary>The correctness level of the specific answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("correctnessLevel")]
        public virtual string CorrectnessLevel { get; set; }

        private string _displayTimeRaw;

        private object _displayTime;

        /// <summary>Time when the answer/item was displayed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayTime")]
        public virtual string DisplayTimeRaw
        {
            get => _displayTimeRaw;
            set
            {
                _displayTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _displayTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="DisplayTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use DisplayTimeDateTimeOffset instead.")]
        public virtual object DisplayTime
        {
            get => _displayTime;
            set
            {
                _displayTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _displayTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="DisplayTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? DisplayTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(DisplayTimeRaw);
            set => DisplayTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Indicates whether the answer/item was displayed to the human agent in the agent desktop UI. Default to
        /// false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayed")]
        public virtual System.Nullable<bool> Displayed { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Answer records are records to manage answer history and feedbacks for Dialogflow. Currently, answer record
    /// includes: - human agent assistant article suggestion - human agent assistant faq article It doesn't include: -
    /// `DetectIntent` intent matching - `DetectIntent` knowledge Answer records are not related to the conversation
    /// history in the Dialogflow Console. A Record is generated even when the end-user disables conversation history in
    /// the console. Records are created when there's a human agent assistant suggestion generated. A typical workflow
    /// for customers provide feedback to an answer is: 1. For human agent assistant, customers get suggestion via
    /// ListSuggestions API. Together with the answers, AnswerRecord.name are returned to the customers. 2. The customer
    /// uses the AnswerRecord.name to call the AnswerRecords.UpdateAnswerRecord method to send feedback about a specific
    /// answer that they believe is wrong.
    /// </summary>
    public class GoogleCloudDialogflowV2AnswerRecord : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The record for human agent assistant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentAssistantRecord")]
        public virtual GoogleCloudDialogflowV2AgentAssistantRecord AgentAssistantRecord { get; set; }

        /// <summary>
        /// Required. The AnswerFeedback for this record. You can set this with AnswerRecords.UpdateAnswerRecord in
        /// order to give us feedback about this answer.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerFeedback")]
        public virtual GoogleCloudDialogflowV2AnswerFeedback AnswerFeedback { get; set; }

        /// <summary>
        /// The unique identifier of this answer record. Format: `projects//locations//answerRecords/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents article answer.</summary>
    public class GoogleCloudDialogflowV2ArticleAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of answer record, in the format of "projects//locations//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>
        /// Article match confidence. The system's confidence score that this article is a good match for this
        /// conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>A map that contains metadata about the answer and the document from which it originates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>Article snippets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippets")]
        public virtual System.Collections.Generic.IList<string> Snippets { get; set; }

        /// <summary>The article title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The article URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for article suggestion models.</summary>
    public class GoogleCloudDialogflowV2ArticleSuggestionModelMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Type of the article suggestion model. If not provided, model_type is used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingModelType")]
        public virtual string TrainingModelType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the parameters of human assist query.</summary>
    public class GoogleCloudDialogflowV2AssistQueryParameters : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Key-value filters on the metadata of documents returned by article suggestion. If specified, article
        /// suggestion only returns suggested documents that match all filters in their Document.metadata. Multiple
        /// values for a metadata key should be concatenated by comma. For example, filters to match all documents that
        /// have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values will be
        /// ```
        /// documents_metadata_filters { key: "market" value: "US,CA" } documents_metadata_filters { key: "user" value:
        /// "agent" }
        /// ```
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentsMetadataFilters")]
        public virtual System.Collections.Generic.IDictionary<string, string> DocumentsMetadataFilters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the natural language speech audio to be processed.</summary>
    public class GoogleCloudDialogflowV2AudioInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The natural language speech audio to be processed. A single request can contain up to 2 minutes of
        /// speech audio data. The transcribed text cannot contain more than 256 bytes for virtual agent interactions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual string Audio { get; set; }

        /// <summary>Required. Instructs the speech recognizer how to process the speech audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("config")]
        public virtual GoogleCloudDialogflowV2InputAudioConfig Config { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines the Automated Agent to connect to a conversation.</summary>
    public class GoogleCloudDialogflowV2AutomatedAgentConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. ID of the Dialogflow agent environment to use. This project needs to either be the same project as
        /// the conversation or you need to grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow
        /// API Service Agent` role in this project. - For ES agents, use format:
        /// `projects//locations//agent/environments/`. If environment is not specified, the default `draft` environment
        /// is used. Refer to
        /// [DetectIntentRequest](/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2#google.cloud.dialogflow.v2.DetectIntentRequest)
        /// for more details. - For CX agents, use format `projects//locations//agents//environments/`. If environment
        /// is not specified, the default `draft` environment is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agent")]
        public virtual string Agent { get; set; }

        /// <summary>
        /// Optional. Configure lifetime of the Dialogflow session. By default, a Dialogflow CX session remains active
        /// and its data is stored for 30 minutes after the last request is sent for the session. This value should be
        /// no longer than 1 day.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionTtl")]
        public virtual object SessionTtl { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a response from an automated agent.</summary>
    public class GoogleCloudDialogflowV2AutomatedAgentReply : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Indicates whether the partial automated agent reply is interruptible when a later reply message arrives.
        /// e.g. if the agent specified some music as partial response, it can be cancelled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowCancellation")]
        public virtual System.Nullable<bool> AllowCancellation { get; set; }

        /// <summary>AutomatedAgentReply type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("automatedAgentReplyType")]
        public virtual string AutomatedAgentReplyType { get; set; }

        /// <summary>
        /// The unique identifier of the current Dialogflow CX conversation page. Format:
        /// `projects//locations//agents//flows//pages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cxCurrentPage")]
        public virtual string CxCurrentPage { get; set; }

        /// <summary>Response of the Dialogflow Sessions.DetectIntent call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detectIntentResponse")]
        public virtual GoogleCloudDialogflowV2DetectIntentResponse DetectIntentResponse { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for EntityTypes.BatchCreateEntities.</summary>
    public class GoogleCloudDialogflowV2BatchCreateEntitiesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The entities to create.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityTypeEntity> Entities { get; set; }

        /// <summary>
        /// Optional. The language used to access language-specific data. If not specified, the agent's default language
        /// is used. For more information, see [Multilingual intent and entity
        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for EntityTypes.BatchDeleteEntities.</summary>
    public class GoogleCloudDialogflowV2BatchDeleteEntitiesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The reference `values` of the entities to delete. Note that these are not fully-qualified names,
        /// i.e. they don't start with `projects/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityValues")]
        public virtual System.Collections.Generic.IList<string> EntityValues { get; set; }

        /// <summary>
        /// Optional. The language used to access language-specific data. If not specified, the agent's default language
        /// is used. For more information, see [Multilingual intent and entity
        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for EntityTypes.BatchDeleteEntityTypes.</summary>
    public class GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The names entity types to delete. All names must point to the same agent as `parent`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeNames")]
        public virtual System.Collections.Generic.IList<string> EntityTypeNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Intents.BatchDeleteIntents.</summary>
    public class GoogleCloudDialogflowV2BatchDeleteIntentsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The collection of intents to delete. Only intent `name` must be filled in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Intent> Intents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for EntityTypes.BatchUpdateEntities.</summary>
    public class GoogleCloudDialogflowV2BatchUpdateEntitiesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The entities to update or create.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityTypeEntity> Entities { get; set; }

        /// <summary>
        /// Optional. The language used to access language-specific data. If not specified, the agent's default language
        /// is used. For more information, see [Multilingual intent and entity
        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Optional. The mask to control which fields get updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateMask")]
        public virtual object UpdateMask { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for EntityTypes.BatchUpdateEntityTypes.</summary>
    public class GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of entity types to update or create.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeBatchInline")]
        public virtual GoogleCloudDialogflowV2EntityTypeBatch EntityTypeBatchInline { get; set; }

        /// <summary>
        /// The URI to a Google Cloud Storage file containing entity types to update or create. The file format can
        /// either be a serialized proto (of EntityBatch type) or a JSON object. Note: The URI must start with "gs://".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeBatchUri")]
        public virtual string EntityTypeBatchUri { get; set; }

        /// <summary>
        /// Optional. The language used to access language-specific data. If not specified, the agent's default language
        /// is used. For more information, see [Multilingual intent and entity
        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Optional. The mask to control which fields get updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateMask")]
        public virtual object UpdateMask { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for EntityTypes.BatchUpdateEntityTypes.</summary>
    public class GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of updated or created entity types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityType> EntityTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class GoogleCloudDialogflowV2BatchUpdateIntentsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of intents to update or create.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentBatchInline")]
        public virtual GoogleCloudDialogflowV2IntentBatch IntentBatchInline { get; set; }

        /// <summary>
        /// The URI to a Google Cloud Storage file containing intents to update or create. The file format can either be
        /// a serialized proto (of IntentBatch type) or JSON object. Note: The URI must start with "gs://".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentBatchUri")]
        public virtual string IntentBatchUri { get; set; }

        /// <summary>Optional. The resource view to apply to the returned intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentView")]
        public virtual string IntentView { get; set; }

        /// <summary>
        /// Optional. The language used to access language-specific data. If not specified, the agent's default language
        /// is used. For more information, see [Multilingual intent and entity
        /// data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Optional. The mask to control which fields get updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateMask")]
        public virtual object UpdateMask { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Intents.BatchUpdateIntents.</summary>
    public class GoogleCloudDialogflowV2BatchUpdateIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of updated or created intents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Intent> Intents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationProfiles.ClearSuggestionFeatureConfig operation.</summary>
    public class GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProfile")]
        public virtual string ConversationProfile { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Timestamp whe the request was created. The time is measured on server side.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be
        /// used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; }

        /// <summary>Required. The type of the suggestion feature to remove.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionFeatureType")]
        public virtual string SuggestionFeatureType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for ConversationProfiles.ClearSuggestionFeatureConfig.</summary>
    public class GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be
        /// used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; }

        /// <summary>Required. The type of the suggestion feature to remove.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionFeatureType")]
        public virtual string SuggestionFeatureType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Conversations.CompleteConversation.</summary>
    public class GoogleCloudDialogflowV2CompleteConversationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Dialogflow contexts are similar to natural language context. If a person says to you "they are orange", you need
    /// context in order to understand what "they" is referring to. Similarly, for Dialogflow to handle an end-user
    /// expression like that, it needs to be provided with context in order to correctly match an intent. Using
    /// contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input
    /// and output contexts, which are identified by string names. When an intent is matched, any configured output
    /// contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match
    /// intents that are configured with input contexts that correspond to the currently active contexts. For more
    /// information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
    /// </summary>
    public class GoogleCloudDialogflowV2Context : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The number of conversational query requests after which the context expires. The default is `0`.
        /// If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are
        /// no matching queries.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifespanCount")]
        public virtual System.Nullable<int> LifespanCount { get; set; }

        /// <summary>
        /// Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or
        /// `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to
        /// lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If `Environment
        /// ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume
        /// default '-' user. The following context names are reserved for internal use by Dialogflow. You should not
        /// use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` *
        /// `*_dialog_params_size`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The collection of parameters associated with this context. Depending on your protocol or client
        /// library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a
        /// collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue
        /// type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter
        /// value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's
        /// entity type is a composite entity then use map from composite entity property names to property values,
        /// otherwise, use parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> Parameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a conversation. A conversation is an interaction between an agent, including live agents and
    /// Dialogflow agents, and a support customer. Conversations can include phone calls and text-based chat sessions.
    /// </summary>
    public class GoogleCloudDialogflowV2Conversation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The Conversation Profile to be used to configure this Conversation. This field cannot be updated.
        /// Format: `projects//locations//conversationProfiles/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProfile")]
        public virtual string ConversationProfile { get; set; }

        /// <summary>
        /// Optional. The stage of a conversation. It indicates whether the virtual agent or a human agent is handling
        /// the conversation. If the conversation is created with the conversation profile that has Dialogflow config
        /// set, defaults to ConversationStage.VIRTUAL_AGENT_STAGE; Otherwise, defaults to
        /// ConversationStage.HUMAN_ASSIST_STAGE. If the conversation is created with the conversation profile that has
        /// Dialogflow config set but explicitly sets conversation_stage to ConversationStage.HUMAN_ASSIST_STAGE, it
        /// skips ConversationStage.VIRTUAL_AGENT_STAGE stage and directly goes to ConversationStage.HUMAN_ASSIST_STAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationStage")]
        public virtual string ConversationStage { get; set; }

        private string _endTimeRaw;

        private object _endTime;

        /// <summary>Output only. The time the conversation was finished.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The context reference updates provided by external systems.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ingestedContextReferences")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowV2ConversationContextReference> IngestedContextReferences { get; set; }

        /// <summary>Output only. The current state of the Conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifecycleState")]
        public virtual string LifecycleState { get; set; }

        /// <summary>
        /// Output only. Identifier. The unique identifier of this conversation. Format:
        /// `projects//locations//conversations/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Output only. It will not be empty if the conversation is to be connected over telephony.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual GoogleCloudDialogflowV2ConversationPhoneNumber PhoneNumber { get; set; }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Output only. The time the conversation was started.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The telephony connection information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonyConnectionInfo")]
        public virtual GoogleCloudDialogflowV2ConversationTelephonyConnectionInfo TelephonyConnectionInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Context of the conversation, including transcripts.</summary>
    public class GoogleCloudDialogflowV2ConversationContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of message transcripts in the conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageEntries")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2MessageEntry> MessageEntries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a section of ingested context information.</summary>
    public class GoogleCloudDialogflowV2ConversationContextReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of content updates for a context reference.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextContents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ConversationContextReferenceContextContent> ContextContents { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The time the context reference was first created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Optional. The language of the information ingested, defaults to "en-US" if not set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Required. The mode in which context reference contents are updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateMode")]
        public virtual string UpdateMode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contents ingested.</summary>
    public class GoogleCloudDialogflowV2ConversationContextReferenceContextContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The information ingested in a single request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Required. The format of the ingested string.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentFormat")]
        public virtual string ContentFormat { get; set; }

        private string _ingestionTimeRaw;

        private object _ingestionTime;

        /// <summary>
        /// Output only. The time when this information was incorporated into the relevant context reference.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ingestionTime")]
        public virtual string IngestionTimeRaw
        {
            get => _ingestionTimeRaw;
            set
            {
                _ingestionTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _ingestionTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="IngestionTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use IngestionTimeDateTimeOffset instead.")]
        public virtual object IngestionTime
        {
            get => _ingestionTime;
            set
            {
                _ingestionTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _ingestionTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="IngestionTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? IngestionTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(IngestionTimeRaw);
            set => IngestionTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a conversation dataset that a user imports raw data into. The data inside ConversationDataset can not
    /// be changed after ImportConversationData finishes (and calling ImportConversationData on a dataset that already
    /// has data is not allowed).
    /// </summary>
    public class GoogleCloudDialogflowV2ConversationDataset : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The number of conversations this conversation dataset contains.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationCount")]
        public virtual System.Nullable<long> ConversationCount { get; set; }

        /// <summary>Output only. Metadata set during conversation data import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationInfo")]
        public virtual GoogleCloudDialogflowV2ConversationInfo ConversationInfo { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Creation time of this dataset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Optional. The description of the dataset. Maximum of 10000 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Required. The display name of the dataset. Maximum of 64 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Output only. Input configurations set during conversation data import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputConfig")]
        public virtual GoogleCloudDialogflowV2InputConfig InputConfig { get; set; }

        /// <summary>
        /// Output only. ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Output only. A read only boolean field reflecting Zone Isolation status of the dataset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("satisfiesPzi")]
        public virtual System.Nullable<bool> SatisfiesPzi { get; set; }

        /// <summary>Output only. A read only boolean field reflecting Zone Separation status of the dataset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("satisfiesPzs")]
        public virtual System.Nullable<bool> SatisfiesPzs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.</summary>
    public class GoogleCloudDialogflowV2ConversationEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversation")]
        public virtual string Conversation { get; set; }

        /// <summary>
        /// More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorStatus")]
        public virtual GoogleRpcStatus ErrorStatus { get; set; }

        /// <summary>Payload of NEW_MESSAGE event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newMessagePayload")]
        public virtual GoogleCloudDialogflowV2Message NewMessagePayload { get; set; }

        /// <summary>Payload of NEW_RECOGNITION_RESULT event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newRecognitionResultPayload")]
        public virtual GoogleCloudDialogflowV2StreamingRecognitionResult NewRecognitionResultPayload { get; set; }

        /// <summary>The type of the event that this notification refers to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents metadata of a conversation.</summary>
    public class GoogleCloudDialogflowV2ConversationInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The language code of the conversation data within this dataset. See
        /// https://cloud.google.com/apis/design/standard_fields for more information. Supports all UTF-8 languages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a conversation model.</summary>
    public class GoogleCloudDialogflowV2ConversationModel : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata for article suggestion models.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("articleSuggestionModelMetadata")]
        public virtual GoogleCloudDialogflowV2ArticleSuggestionModelMetadata ArticleSuggestionModelMetadata { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Creation time of this model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Required. Datasets used to create model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasets")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2InputDataset> Datasets { get; set; }

        /// <summary>Required. The display name of the model. At most 64 bytes long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Language code for the conversation model. If not specified, the language is en-US. Language at
        /// ConversationModel should be set for all non en-us languages. This should be a
        /// [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>ConversationModel resource name. Format: `projects//conversationModels/`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Output only. A read only boolean field reflecting Zone Isolation status of the model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("satisfiesPzi")]
        public virtual System.Nullable<bool> SatisfiesPzi { get; set; }

        /// <summary>Output only. A read only boolean field reflecting Zone Separation status of the model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("satisfiesPzs")]
        public virtual System.Nullable<bool> SatisfiesPzs { get; set; }

        /// <summary>Metadata for smart reply models.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("smartReplyModelMetadata")]
        public virtual GoogleCloudDialogflowV2SmartReplyModelMetadata SmartReplyModelMetadata { get; set; }

        /// <summary>
        /// Output only. State of the model. A model can only serve prediction requests after it gets deployed.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents evaluation result of a conversation model.</summary>
    public class GoogleCloudDialogflowV2ConversationModelEvaluation : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Creation time of this model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Optional. The display name of the model evaluation. At most 64 bytes long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional. The configuration of the evaluation task.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("evaluationConfig")]
        public virtual GoogleCloudDialogflowV2EvaluationConfig EvaluationConfig { get; set; }

        /// <summary>The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Output only. Human eval template in csv format. It takes real-world conversations provided through input
        /// dataset, generates example suggestions for customer to verify quality of the model. For Smart Reply, the
        /// generated csv file contains columns of Context, (Suggestions,Q1,Q2)*3, Actual reply. Context contains at
        /// most 10 latest messages in the conversation prior to the current suggestion. Q1: "Would you send it as the
        /// next message of agent?" Evaluated based on whether the suggest is appropriate to be sent by agent in current
        /// context. Q2: "Does the suggestion move the conversation closer to resolution?" Evaluated based on whether
        /// the suggestion provide solutions, or answers customer's question or collect information from customer to
        /// resolve the customer's issue. Actual reply column contains the actual agent reply sent in the context.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawHumanEvalTemplateCsv")]
        public virtual string RawHumanEvalTemplateCsv { get; set; }

        /// <summary>Output only. Only available when model is for smart reply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("smartReplyMetrics")]
        public virtual GoogleCloudDialogflowV2SmartReplyMetrics SmartReplyMetrics { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a phone number for telephony integration. It allows for connecting a particular conversation over
    /// telephony.
    /// </summary>
    public class GoogleCloudDialogflowV2ConversationPhoneNumber : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Desired country code for the phone number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual System.Nullable<int> CountryCode { get; set; }

        /// <summary>Output only. The phone number to connect to this conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines the services to connect to incoming Dialogflow conversations.</summary>
    public class GoogleCloudDialogflowV2ConversationProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configuration for an automated agent to use with this profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("automatedAgentConfig")]
        public virtual GoogleCloudDialogflowV2AutomatedAgentConfig AutomatedAgentConfig { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Create time of the conversation profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Required. Human readable name for this profile. Max length 1024 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Configuration for agent assistance to use with this profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("humanAgentAssistantConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfig HumanAgentAssistantConfig { get; set; }

        /// <summary>
        /// Configuration for connecting to a live agent. Currently, this feature is not general available, please
        /// contact Google to get access.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("humanAgentHandoffConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentHandoffConfig HumanAgentHandoffConfig { get; set; }

        /// <summary>
        /// Language code for the conversation profile. If not specified, the language is en-US. Language at
        /// ConversationProfile should be set for all non en-US languages. This should be a
        /// [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Configuration for logging conversation lifecycle events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("loggingConfig")]
        public virtual GoogleCloudDialogflowV2LoggingConfig LoggingConfig { get; set; }

        /// <summary>
        /// The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Configuration for publishing new message events. Event will be sent in format of ConversationEvent
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newMessageEventNotificationConfig")]
        public virtual GoogleCloudDialogflowV2NotificationConfig NewMessageEventNotificationConfig { get; set; }

        /// <summary>
        /// Optional. Configuration for publishing transcription intermediate results. Event will be sent in format of
        /// ConversationEvent. If configured, the following information will be populated as ConversationEvent Pub/Sub
        /// message attributes: - "participant_id" - "participant_role" - "message_id"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newRecognitionResultNotificationConfig")]
        public virtual GoogleCloudDialogflowV2NotificationConfig NewRecognitionResultNotificationConfig { get; set; }

        /// <summary>Configuration for publishing conversation lifecycle events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notificationConfig")]
        public virtual GoogleCloudDialogflowV2NotificationConfig NotificationConfig { get; set; }

        /// <summary>
        /// Name of the CX SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("securitySettings")]
        public virtual string SecuritySettings { get; set; }

        /// <summary>Settings for speech transcription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sttConfig")]
        public virtual GoogleCloudDialogflowV2SpeechToTextConfig SttConfig { get; set; }

        /// <summary>
        /// The time zone of this conversational profile from the [time zone database](https://www.iana.org/time-zones),
        /// e.g., America/New_York, Europe/Paris. Defaults to America/New_York.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>
        /// Configuration for Text-to-Speech synthesization. Used by Phone Gateway to specify synthesization options. If
        /// agent defines synthesization options as well, agent settings overrides the option here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ttsConfig")]
        public virtual GoogleCloudDialogflowV2SynthesizeSpeechConfig TtsConfig { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. Update time of the conversation profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The information about phone calls connected via phone gateway to the conversation.</summary>
    public class GoogleCloudDialogflowV2ConversationTelephonyConnectionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The number dialed to connect this call in E.164 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialedNumber")]
        public virtual string DialedNumber { get; set; }

        /// <summary>Output only. The mime content from the initial SIP INVITE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extraMimeContents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ConversationTelephonyConnectionInfoMimeContent> ExtraMimeContents { get; set; }

        /// <summary>
        /// Optional. SDP of the call. It's initially the SDP answer to the endpoint, but maybe later updated for the
        /// purpose of making the link active, etc.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sdp")]
        public virtual string Sdp { get; set; }

        /// <summary>Output only. The SIP headers from the initial SIP INVITE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sipHeaders")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ConversationTelephonyConnectionInfoSipHeader> SipHeaders { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The mime content from the initial SIP INVITE.</summary>
    public class GoogleCloudDialogflowV2ConversationTelephonyConnectionInfoMimeContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The content payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Optional. The mime type of the content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The SIP headers from the initial SIP INVITE.</summary>
    public class GoogleCloudDialogflowV2ConversationTelephonyConnectionInfoSipHeader : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The name of the header.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Optional. The value of the header.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for CreateConversationDataset.</summary>
    public class GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the conversation dataset that will be created. Format:
        /// `projects//locations//conversationDatasets/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationDataset")]
        public virtual string ConversationDataset { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationModels.CreateConversationModelEvaluation operation.</summary>
    public class GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the conversation model. Format: `projects//locations//conversationModels/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModel")]
        public virtual string ConversationModel { get; set; }

        /// <summary>
        /// The resource name of the conversation model. Format: `projects//locations//conversationModels//evaluations/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModelEvaluation")]
        public virtual string ConversationModelEvaluation { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>
        /// Timestamp when the request to create conversation model was submitted. The time is measured on server side.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>State of CreateConversationModel operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for ConversationModels.CreateConversationModelEvaluation</summary>
    public class GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The conversation model evaluation to be created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModelEvaluation")]
        public virtual GoogleCloudDialogflowV2ConversationModelEvaluation ConversationModelEvaluation { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationModels.CreateConversationModel operation.</summary>
    public class GoogleCloudDialogflowV2CreateConversationModelOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource name of the conversation model. Format: `projects//conversationModels/`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModel")]
        public virtual string ConversationModel { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>
        /// Timestamp when the request to create conversation model is submitted. The time is measured on server side.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>State of CreateConversationModel operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Pronunciation customization for a phrase.</summary>
    public class GoogleCloudDialogflowV2CustomPronunciationParams : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The phonetic encoding of the phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneticEncoding")]
        public virtual string PhoneticEncoding { get; set; }

        /// <summary>
        /// The phrase to which the customization is applied. The phrase can be multiple words, such as proper nouns,
        /// but shouldn't span the length of the sentence.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phrase")]
        public virtual string Phrase { get; set; }

        /// <summary>The pronunciation of the phrase. This must be in the phonetic encoding specified above.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pronunciation")]
        public virtual string Pronunciation { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for DeleteConversationDataset.</summary>
    public class GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationModels.DeleteConversationModel operation.</summary>
    public class GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource name of the conversation model. Format: `projects//conversationModels/`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModel")]
        public virtual string ConversationModel { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>
        /// Timestamp when delete conversation model request was created. The time is measured on server side.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationModels.DeployConversationModel operation.</summary>
    public class GoogleCloudDialogflowV2DeployConversationModelOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource name of the conversation model. Format: `projects//conversationModels/`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModel")]
        public virtual string ConversationModel { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>
        /// Timestamp when request to deploy conversation model was submitted. The time is measured on server side.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for ConversationModels.DeployConversationModel</summary>
    public class GoogleCloudDialogflowV2DeployConversationModelRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request to detect user's intent.</summary>
    public class GoogleCloudDialogflowV2DetectIntentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The natural language speech audio to be processed. This field should be populated iff `query_input` is set
        /// to an input audio config. A single request can contain up to 1 minute of speech audio data.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputAudio")]
        public virtual string InputAudio { get; set; }

        /// <summary>
        /// Instructs the speech synthesizer how to generate the output audio. If this field is not set and agent-level
        /// speech synthesizer is not configured, no output audio is generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputAudioConfig")]
        public virtual GoogleCloudDialogflowV2OutputAudioConfig OutputAudioConfig { get; set; }

        /// <summary>
        /// Mask for output_audio_config indicating which settings in this request-level config should override speech
        /// synthesizer settings defined at agent-level. If unspecified or empty, output_audio_config replaces the
        /// agent-level config in its entirety.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputAudioConfigMask")]
        public virtual object OutputAudioConfigMask { get; set; }

        /// <summary>
        /// Required. The input specification. It can be set to: 1. an audio config which instructs the speech
        /// recognizer how to process the speech audio, 2. a conversational query in the form of text, or 3. an event
        /// that specifies which intent to trigger.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryInput")]
        public virtual GoogleCloudDialogflowV2QueryInput QueryInput { get; set; }

        /// <summary>The parameters of this query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryParams")]
        public virtual GoogleCloudDialogflowV2QueryParameters QueryParams { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The message returned from the DetectIntent method.</summary>
    public class GoogleCloudDialogflowV2DetectIntentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the
        /// values of default platform text responses found in the `query_result.fulfillment_messages` field. If
        /// multiple default text responses exist, they will be concatenated when generating audio. If no default
        /// platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output
        /// audio fields may be present in the response structure. In these cases, only the top-most-level audio output
        /// has content.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputAudio")]
        public virtual string OutputAudio { get; set; }

        /// <summary>The config used by the speech synthesizer to generate the output audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputAudioConfig")]
        public virtual GoogleCloudDialogflowV2OutputAudioConfig OutputAudioConfig { get; set; }

        /// <summary>
        /// The selected results of the conversational query or event processing. See `alternative_query_results` for
        /// additional potential results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryResult")]
        public virtual GoogleCloudDialogflowV2QueryResult QueryResult { get; set; }

        /// <summary>
        /// The unique identifier of the response. It can be used to locate a response in the training example set or
        /// for reporting issues.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseId")]
        public virtual string ResponseId { get; set; }

        /// <summary>Specifies the status of the webhook request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookStatus")]
        public virtual GoogleRpcStatus WebhookStatus { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a Dialogflow assist answer.</summary>
    public class GoogleCloudDialogflowV2DialogflowAssistAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of answer record, in the format of "projects//locations//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>An intent suggestion generated from conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentSuggestion")]
        public virtual GoogleCloudDialogflowV2IntentSuggestion IntentSuggestion { get; set; }

        /// <summary>Result from v2 agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryResult")]
        public virtual GoogleCloudDialogflowV2QueryResult QueryResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A knowledge document to be used by a KnowledgeBase. For more information, see the [knowledge base
    /// guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The
    /// `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.
    /// </summary>
    public class GoogleCloudDialogflowV2Document : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must
        /// have the form `gs:///`. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed
        /// by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your
        /// browser) are not supported. Instead use the `gs://` format URI described above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentUri")]
        public virtual string ContentUri { get; set; }

        /// <summary>
        /// Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation
        /// request fails.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Optional. If true, we try to automatically reload the document every day (at a time picked by the system).
        /// If false or unspecified, we don't try to automatically reload the document. Currently you can only enable
        /// automatic reload for documents sourced from a public url, see `source` field for the source types. Reload
        /// status can be tracked in `latest_reload_status`. If a reload fails, we will keep the document unchanged. If
        /// a reload fails with internal errors, the system will try to reload the document on the next day. If a reload
        /// fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document
        /// anymore. You need to manually reload the document successfully by calling `ReloadDocument` and clear the
        /// errors.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableAutoReload")]
        public virtual System.Nullable<bool> EnableAutoReload { get; set; }

        /// <summary>Required. The knowledge type of document content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeTypes")]
        public virtual System.Collections.Generic.IList<string> KnowledgeTypes { get; set; }

        /// <summary>
        /// Output only. The time and status of the latest reload. This reload may have been triggered automatically or
        /// manually and may not have succeeded.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestReloadStatus")]
        public virtual GoogleCloudDialogflowV2DocumentReloadStatus LatestReloadStatus { get; set; }

        /// <summary>
        /// Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases
        /// include storing a document's title, an external URL distinct from the document's content_uri, etc. The max
        /// size of a `key` or a `value` of the metadata is 1024 bytes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>Required. The MIME type of this document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; }

        /// <summary>
        /// Optional. The document resource name. The name must be empty when creating a document. Format:
        /// `projects//locations//knowledgeBases//documents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawContent")]
        public virtual string RawContent { get; set; }

        /// <summary>Output only. The current state of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The status of a reload attempt.</summary>
    public class GoogleCloudDialogflowV2DocumentReloadStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status of a reload attempt or the initial load.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual GoogleRpcStatus Status { get; set; }

        private string _timeRaw;

        private object _time;

        /// <summary>
        /// The time of a reload attempt. This reload may have been triggered automatically or manually and may not have
        /// succeeded.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("time")]
        public virtual string TimeRaw
        {
            get => _timeRaw;
            set
            {
                _time = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _timeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="TimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use TimeDateTimeOffset instead.")]
        public virtual object Time
        {
            get => _time;
            set
            {
                _timeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _time = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="TimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? TimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(TimeRaw);
            set => TimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The message in the response that indicates the parameters of DTMF.</summary>
    public class GoogleCloudDialogflowV2DtmfParameters : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates whether DTMF input can be handled in the next request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("acceptsDtmfInput")]
        public virtual System.Nullable<bool> AcceptsDtmfInput { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A customer-managed encryption key specification that can be applied to all created resources (e.g.
    /// Conversation).
    /// </summary>
    public class GoogleCloudDialogflowV2EncryptionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The name of customer-managed encryption key that is used to secure a resource and its
        /// sub-resources. If empty, the resource is secured by the default Google encryption key. Only the key in the
        /// same location as this resource is allowed to be used for encryption. Format:
        /// `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKey")]
        public virtual string KmsKey { get; set; }

        /// <summary>
        /// Immutable. The resource name of the encryption key specification resource. Format:
        /// projects/{project}/locations/{location}/encryptionSpec
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user
    /// expression is extracted. Dialogflow provides predefined system entities that can match many common types of
    /// data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You
    /// can also create your own custom entities for matching custom data. For example, you could define a vegetable
    /// entity that can match the types of vegetables available for purchase with a grocery store agent. For more
    /// information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
    /// </summary>
    public class GoogleCloudDialogflowV2EntityType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Indicates whether the entity type can be automatically expanded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoExpansionMode")]
        public virtual string AutoExpansionMode { get; set; }

        /// <summary>Required. The name of the entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional. Enables fuzzy entity extraction during classification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableFuzzyExtraction")]
        public virtual System.Nullable<bool> EnableFuzzyExtraction { get; set; }

        /// <summary>Optional. The collection of entity entries associated with the entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityTypeEntity> Entities { get; set; }

        /// <summary>Required. Indicates the kind of entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
        /// EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>This message is a wrapper around a collection of entity types.</summary>
    public class GoogleCloudDialogflowV2EntityTypeBatch : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of entity types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityType> EntityTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An **entity entry** for an associated entity type.</summary>
    public class GoogleCloudDialogflowV2EntityTypeEntity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is
        /// *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain
        /// exactly one synonym equal to `value`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; }

        /// <summary>
        /// Required. The primary value associated with this entity entry. For example, if the entity type is
        /// *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in
        /// place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity
        /// types (with or without aliases).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// You can create multiple versions of your agent and publish them to separate environments. When you edit an
    /// agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is
    /// an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment.
    /// When you create agent versions, you can publish them to custom environments. You can create a variety of custom
    /// environments for: - testing - development - production - etc. For more information, see the [versions and
    /// environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).
    /// </summary>
    public class GoogleCloudDialogflowV2Environment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The agent version loaded into this environment. Supported formats: - `projects//agent/versions/` -
        /// `projects//locations//agent/versions/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentVersion")]
        public virtual string AgentVersion { get; set; }

        /// <summary>
        /// Optional. The developer-provided description for this environment. The maximum length is 500 characters. If
        /// exceeded, the request is rejected.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Optional. The fulfillment settings to use for this environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillment")]
        public virtual GoogleCloudDialogflowV2Fulfillment Fulfillment { get; set; }

        /// <summary>
        /// Output only. The unique identifier of this agent environment. Supported formats: -
        /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the
        /// default environment is `-`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and
        /// update methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>Optional. Text to speech settings for this environment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textToSpeechSettings")]
        public virtual GoogleCloudDialogflowV2TextToSpeechSettings TextToSpeechSettings { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>
        /// Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by
        /// create and update methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Environments.GetEnvironmentHistory.</summary>
    public class GoogleCloudDialogflowV2EnvironmentHistory : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. The list of agent environments. There will be a maximum number of items returned based on the
        /// page_size field in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entries")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EnvironmentHistoryEntry> Entries { get; set; }

        /// <summary>
        /// Output only. Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>
        /// Output only. The name of the environment this history is for. Supported formats: -
        /// `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the
        /// default environment is `-`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parent")]
        public virtual string Parent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an environment history entry.</summary>
    public class GoogleCloudDialogflowV2EnvironmentHistoryEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The agent version loaded into this environment history entry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentVersion")]
        public virtual string AgentVersion { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>The creation time of this environment history entry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The developer-provided description for this environment history entry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The configuration for model evaluation.</summary>
    public class GoogleCloudDialogflowV2EvaluationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Datasets used for evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasets")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2InputDataset> Datasets { get; set; }

        /// <summary>Configuration for smart compose model evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("smartComposeConfig")]
        public virtual GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig SmartComposeConfig { get; set; }

        /// <summary>Configuration for smart reply model evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("smartReplyConfig")]
        public virtual GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig SmartReplyConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Smart compose specific configuration for evaluation job.</summary>
    public class GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The allowlist document resource name. Format: `projects//knowledgeBases//documents/`. Only used for smart
        /// compose model.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowlistDocument")]
        public virtual string AllowlistDocument { get; set; }

        /// <summary>
        /// Required. The model to be evaluated can return multiple results with confidence score on each query. These
        /// results will be sorted by the descending order of the scores and we only keep the first max_result_count
        /// results as the final results to evaluate.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxResultCount")]
        public virtual System.Nullable<int> MaxResultCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Smart reply specific configuration for evaluation job.</summary>
    public class GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The allowlist document resource name. Format: `projects//knowledgeBases//documents/`. Only used for smart
        /// reply model.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowlistDocument")]
        public virtual string AllowlistDocument { get; set; }

        /// <summary>
        /// Required. The model to be evaluated can return multiple results with confidence score on each query. These
        /// results will be sorted by the descending order of the scores and we only keep the first max_result_count
        /// results as the final results to evaluate.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxResultCount")]
        public virtual System.Nullable<int> MaxResultCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Events allow for matching intents by event name instead of the natural language input. For instance, input ``
    /// can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response:
    /// `"Hello #welcome_event.name! What can I do for you today?"`.
    /// </summary>
    public class GoogleCloudDialogflowV2EventInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The language of this query. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes. Note that queries in the same session do not necessarily need to specify the same language.
        /// This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the
        /// language was already defined in the originating detect intent request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Required. The unique identifier of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The collection of parameters associated with the event. Depending on your protocol or client library
        /// language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a
        /// collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue
        /// type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter
        /// value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's
        /// entity type is a composite entity then use map from composite entity property names to property values,
        /// otherwise, use parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> Parameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowV2ExportAgentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The
        /// format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline.
        /// Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request
        /// authentication must have write permissions for the object. For more information, see [Dialogflow access
        /// control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowV2ExportAgentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Zip compressed raw byte content for agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in
        /// `ExportAgentRequest`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Documents.ExportDocument.</summary>
    public class GoogleCloudDialogflowV2ExportDocumentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>When enabled, export the full content of the document including empirical probability.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exportFullContent")]
        public virtual System.Nullable<bool> ExportFullContent { get; set; }

        /// <summary>Cloud Storage file path to export the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsDestination")]
        public virtual GoogleCloudDialogflowV2GcsDestination GcsDestination { get; set; }

        /// <summary>When enabled, export the smart messaging allowlist document for partial update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("smartMessagingPartialUpdate")]
        public virtual System.Nullable<bool> SmartMessagingPartialUpdate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata related to the Export Data Operations (e.g. ExportDocument).</summary>
    public class GoogleCloudDialogflowV2ExportOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Cloud Storage file path of the exported data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exportedGcsDestination")]
        public virtual GoogleCloudDialogflowV2GcsDestination ExportedGcsDestination { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents answer from "frequently asked questions".</summary>
    public class GoogleCloudDialogflowV2FaqAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The piece of text from the `source` knowledge base document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual string Answer { get; set; }

        /// <summary>The name of answer record, in the format of "projects//locations//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>
        /// The system's confidence score that this Knowledge answer is a good match for this conversational query,
        /// range from 0.0 (completely uncertain) to 1.0 (completely certain).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>A map that contains metadata about the answer and the document from which it originates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>The corresponding FAQ question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("question")]
        public virtual string Question { get; set; }

        /// <summary>
        /// Indicates which Knowledge Document this answer was extracted from. Format:
        /// `projects//locations//agent/knowledgeBases//documents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Providing examples in the generator (i.e. building a few-shot generator) helps convey the desired format of the
    /// LLM response.
    /// </summary>
    public class GoogleCloudDialogflowV2FewShotExample : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Conversation transcripts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationContext")]
        public virtual GoogleCloudDialogflowV2ConversationContext ConversationContext { get; set; }

        /// <summary>
        /// Optional. Key is the placeholder field name in input, value is the value of the placeholder. E.g.
        /// instruction contains "@price", and ingested data has &amp;lt;"price", "10"&amp;gt;
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extraInfo")]
        public virtual System.Collections.Generic.IDictionary<string, string> ExtraInfo { get; set; }

        /// <summary>Required. Example output of the model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("output")]
        public virtual GoogleCloudDialogflowV2GeneratorSuggestion Output { get; set; }

        /// <summary>Summarization sections.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarizationSectionList")]
        public virtual GoogleCloudDialogflowV2SummarizationSectionList SummarizationSectionList { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Free form generator context that customer can configure.</summary>
    public class GoogleCloudDialogflowV2FreeFormContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Free form text input to LLM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestion generated using free form generator.</summary>
    public class GoogleCloudDialogflowV2FreeFormSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Free form suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual string Response { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a
    /// more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to
    /// that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on
    /// Friday, your service can check your database and respond to the end-user with availability information for
    /// Friday. For more information, see the [fulfillment
    /// guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).
    /// </summary>
    public class GoogleCloudDialogflowV2Fulfillment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The human-readable name of the fulfillment, unique within the agent. This field is not used for
        /// Fulfillment in an Environment.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional. Whether fulfillment is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>Optional. The field defines whether the fulfillment is enabled for certain features.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("features")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2FulfillmentFeature> Features { get; set; }

        /// <summary>Configuration for a generic web service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genericWebService")]
        public virtual GoogleCloudDialogflowV2FulfillmentGenericWebService GenericWebService { get; set; }

        /// <summary>
        /// Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` -
        /// `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Whether fulfillment is enabled for the specific feature.</summary>
    public class GoogleCloudDialogflowV2FulfillmentFeature : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The type of the feature that enabled for fulfillment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents configuration for a generic web service. Dialogflow supports two mechanisms for authentications: -
    /// Basic authentication with username and password. - Authentication with additional authentication headers. More
    /// information could be found at: https://cloud.google.com/dialogflow/docs/fulfillment-configure.
    /// </summary>
    public class GoogleCloudDialogflowV2FulfillmentGenericWebService : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to
        /// false. is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web
        /// service now.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isCloudFunction")]
        public virtual System.Nullable<bool> IsCloudFunction { get; set; }

        /// <summary>Optional. The password for HTTP Basic authentication.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("password")]
        public virtual string Password { get; set; }

        /// <summary>Optional. The HTTP request headers to send together with fulfillment requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestHeaders")]
        public virtual System.Collections.Generic.IDictionary<string, string> RequestHeaders { get; set; }

        /// <summary>Required. The fulfillment URI for receiving POST requests. It must use https protocol.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>Optional. The user name for HTTP Basic authentication.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("username")]
        public virtual string Username { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Google Cloud Storage location for the output.</summary>
    public class GoogleCloudDialogflowV2GcsDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Google Cloud Storage URIs for the output. A URI is of the form: `gs://bucket/object-prefix-or-name`
        /// Whether a prefix or name is used depends on the use case. The requesting user must have "write-permission"
        /// to the bucket.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Google Cloud Storage location for the inputs.</summary>
    public class GoogleCloudDialogflowV2GcsSources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Google Cloud Storage URIs for the inputs. A URI is of the form:
        /// `gs://bucket/object-prefix-or-name` Whether a prefix or name is used depends on the use case.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uris")]
        public virtual System.Collections.Generic.IList<string> Uris { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Conversations.GenerateStatelessSuggestion.</summary>
    public class GoogleCloudDialogflowV2GenerateStatelessSuggestionRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. A section of ingested context information. The key is the name of the context reference and the
        /// value contains the contents of the context reference. The key is used to incorporate ingested context
        /// references to enhance the generator.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextReferences")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowV2ConversationContextReference> ContextReferences { get; set; }

        /// <summary>Optional. Context of the conversation, including transcripts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationContext")]
        public virtual GoogleCloudDialogflowV2ConversationContext ConversationContext { get; set; }

        /// <summary>
        /// Uncreated generator. It should be a complete generator that includes all information about the generator.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generator")]
        public virtual GoogleCloudDialogflowV2Generator Generator { get; set; }

        /// <summary>
        /// The resource name of the existing created generator. Format: `projects//locations//generators/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatorName")]
        public virtual string GeneratorName { get; set; }

        /// <summary>
        /// Optional. Name of the CX SecuritySettings which is used to redact generated response. If this field is
        /// empty, try to fetch v2 security_settings, which is a project level setting. If this field is empty and no v2
        /// security_settings set up in this project, no redaction will be done. Format:
        /// `projects//locations//securitySettings/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("securitySettings")]
        public virtual string SecuritySettings { get; set; }

        /// <summary>
        /// Optional. A list of trigger events. Generator will be triggered only if it's trigger event is included here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerEvents")]
        public virtual System.Collections.Generic.IList<string> TriggerEvents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Conversations.GenerateStatelessSuggestion.</summary>
    public class GoogleCloudDialogflowV2GenerateStatelessSuggestionResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Generated suggestion for a conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatorSuggestion")]
        public virtual GoogleCloudDialogflowV2GeneratorSuggestion GeneratorSuggestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Conversations.GenerateStatelessSummary.</summary>
    public class GoogleCloudDialogflowV2GenerateStatelessSummaryRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. A ConversationProfile containing information required for Summary generation. Required fields:
        /// {language_code, security_settings} Optional fields: {agent_assistant_config}
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProfile")]
        public virtual GoogleCloudDialogflowV2ConversationProfile ConversationProfile { get; set; }

        /// <summary>
        /// Optional. The name of the latest conversation message used as context for generating a Summary. If empty,
        /// the latest message of the conversation will be used. The format is specific to the user and the names of the
        /// messages provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>
        /// Optional. Max number of messages prior to and including [latest_message] to use as context when compiling
        /// the suggestion. By default 500 and at most 1000.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxContextSize")]
        public virtual System.Nullable<int> MaxContextSize { get; set; }

        /// <summary>Required. The conversation to suggest a summary for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statelessConversation")]
        public virtual GoogleCloudDialogflowV2GenerateStatelessSummaryRequestMinimalConversation StatelessConversation { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The minimum amount of information required to generate a Summary without having a Conversation resource created.
    /// </summary>
    public class GoogleCloudDialogflowV2GenerateStatelessSummaryRequestMinimalConversation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The messages that the Summary will be generated from. It is expected that this message content is
        /// already redacted and does not contain any PII. Required fields: {content, language_code, participant,
        /// participant_role} Optional fields: {send_time} If send_time is not provided, then the messages must be
        /// provided in chronological order.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Message> Messages { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Conversations.GenerateStatelessSummary.</summary>
    public class GoogleCloudDialogflowV2GenerateStatelessSummaryResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message used to compile the suggestion. It may be smaller
        /// than the GenerateStatelessSummaryRequest.max_context_size field in the request if there weren't that many
        /// messages in the conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// The name of the latest conversation message used as context for compiling suggestion. The format is specific
        /// to the user and the names of the messages provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>Generated summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual GoogleCloudDialogflowV2GenerateStatelessSummaryResponseSummary Summary { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Generated summary for a conversation.</summary>
    public class GoogleCloudDialogflowV2GenerateStatelessSummaryResponseSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The baseline model version used to generate this summary. It is empty if a baseline model was not used to
        /// generate this summary.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("baselineModelVersion")]
        public virtual string BaselineModelVersion { get; set; }

        /// <summary>The summary content that is concatenated into one string.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>
        /// The summary content that is divided into sections. The key is the section's name and the value is the
        /// section's content. There is no specific format for the key or value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textSections")]
        public virtual System.Collections.Generic.IDictionary<string, string> TextSections { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Conversations.GenerateSuggestions.</summary>
    public class GoogleCloudDialogflowV2GenerateSuggestionsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The name of the latest conversation message for which the request is triggered. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>
        /// Optional. A list of trigger events. Only generators configured in the conversation_profile whose
        /// trigger_event is listed here will be triggered.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerEvents")]
        public virtual System.Collections.Generic.IList<string> TriggerEvents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Conversations.GenerateSuggestions.</summary>
    public class GoogleCloudDialogflowV2GenerateSuggestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The answers generated for the conversation based on context.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatorSuggestionAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2GenerateSuggestionsResponseGeneratorSuggestionAnswer> GeneratorSuggestionAnswers { get; set; }

        /// <summary>
        /// The name of the latest conversation message used as context for compiling suggestion. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A GeneratorSuggestion answer.</summary>
    public class GoogleCloudDialogflowV2GenerateSuggestionsResponseGeneratorSuggestionAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Answer record that uniquely identifies the suggestion. This can be used to provide suggestion feedback.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>Suggestion details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatorSuggestion")]
        public virtual GoogleCloudDialogflowV2GeneratorSuggestion GeneratorSuggestion { get; set; }

        /// <summary>
        /// The name of the generator used to generate this suggestion. Format: `projects//locations//generators/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceGenerator")]
        public virtual string SourceGenerator { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>LLM generator.</summary>
    public class GoogleCloudDialogflowV2Generator : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Creation time of this generator.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Optional. Human readable description of the generator.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Input of free from generator to LLM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("freeFormContext")]
        public virtual GoogleCloudDialogflowV2FreeFormContext FreeFormContext { get; set; }

        /// <summary>Optional. Inference parameters for this generator.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inferenceParameter")]
        public virtual GoogleCloudDialogflowV2InferenceParameter InferenceParameter { get; set; }

        /// <summary>
        /// Output only. Identifier. The resource name of the generator. Format: `projects//locations//generators/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The published Large Language Model name. * To use the latest model version, specify the model name
        /// without version number. Example: `text-bison` * To use a stable model version, specify the version number as
        /// well. Example: `text-bison@002`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedModel")]
        public virtual string PublishedModel { get; set; }

        /// <summary>Input of prebuilt Summarization feature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarizationContext")]
        public virtual GoogleCloudDialogflowV2SummarizationContext SummarizationContext { get; set; }

        /// <summary>
        /// Optional. Resource names of the tools that the generator can choose from. Format:
        /// `projects//locations//tools/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tools")]
        public virtual System.Collections.Generic.IList<string> Tools { get; set; }

        /// <summary>
        /// Optional. The trigger event of the generator. It defines when the generator is triggered in a conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggerEvent")]
        public virtual string TriggerEvent { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. Update time of this generator.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestion generated using a Generator.</summary>
    public class GoogleCloudDialogflowV2GeneratorSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Free form suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("freeFormSuggestion")]
        public virtual GoogleCloudDialogflowV2FreeFormSuggestion FreeFormSuggestion { get; set; }

        /// <summary>Optional. Suggested summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySuggestion")]
        public virtual GoogleCloudDialogflowV2SummarySuggestion SummarySuggestion { get; set; }

        /// <summary>Optional. List of request and response for tool calls executed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCallInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2GeneratorSuggestionToolCallInfo> ToolCallInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request and response for a tool call.</summary>
    public class GoogleCloudDialogflowV2GeneratorSuggestionToolCallInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Request for a tool call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCall")]
        public virtual GoogleCloudDialogflowV2ToolCall ToolCall { get; set; }

        /// <summary>Required. Response for a tool call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCallResult")]
        public virtual GoogleCloudDialogflowV2ToolCallResult ToolCallResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines the Human Agent Assist to connect to a conversation.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Configuration for agent assistance of end user participant. Currently, this feature is not general
        /// available, please contact Google to get access.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endUserSuggestionConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig EndUserSuggestionConfig { get; set; }

        /// <summary>Configuration for agent assistance of human agent participant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("humanAgentSuggestionConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig HumanAgentSuggestionConfig { get; set; }

        /// <summary>Configuration for message analysis.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageAnalysisConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig MessageAnalysisConfig { get; set; }

        /// <summary>Pub/Sub topic on which to publish new agent assistant events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notificationConfig")]
        public virtual GoogleCloudDialogflowV2NotificationConfig NotificationConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Custom conversation models used in agent assist feature. Supported feature: ARTICLE_SUGGESTION, SMART_COMPOSE,
    /// SMART_REPLY, CONVERSATION_SUMMARIZATION.
    /// </summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Version of current baseline model. It will be ignored if model is set. Valid versions are: Article
        /// Suggestion baseline model: - 0.9 - 1.0 (default) Summarization baseline model: - 1.0
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("baselineModelVersion")]
        public virtual string BaselineModelVersion { get; set; }

        /// <summary>Conversation model resource name. Format: `projects//conversationModels/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("model")]
        public virtual string Model { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config to process conversation.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of recent non-small-talk sentences to use as context for article and FAQ suggestion
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recentSentencesCount")]
        public virtual System.Nullable<int> RecentSentencesCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for analyses to run on each conversation message.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Enable entity extraction in conversation messages on [agent assist
        /// stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults
        /// to false. Currently, this feature is not general available, please contact Google to get access.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableEntityExtraction")]
        public virtual System.Nullable<bool> EnableEntityExtraction { get; set; }

        /// <summary>
        /// Enable sentiment analysis in conversation messages on [agent assist
        /// stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults
        /// to false. Sentiment analysis inspects user input and identifies the prevailing subjective opinion,
        /// especially to determine a user's attitude as positive, negative, or neutral:
        /// https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For
        /// Participants.StreamingAnalyzeContent method, result will be in
        /// StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For Participants.AnalyzeContent method,
        /// result will be in AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages
        /// method, result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification is
        /// configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableSentimentAnalysis")]
        public virtual System.Nullable<bool> EnableSentimentAnalysis { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Detail human agent assistant config.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. When disable_high_latency_features_sync_delivery is true and using the AnalyzeContent API, we will
        /// not deliver the responses from high latency features in the API response. The
        /// human_agent_assistant_config.notification_config must be configured and enable_event_based_suggestion must
        /// be set to true to receive the responses from high latency features in Pub/Sub. High latency feature(s):
        /// KNOWLEDGE_ASSIST
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableHighLatencyFeaturesSyncDelivery")]
        public virtual System.Nullable<bool> DisableHighLatencyFeaturesSyncDelivery { get; set; }

        /// <summary>Configuration of different suggestion features. One feature can have only one config.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("featureConfigs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig> FeatureConfigs { get; set; }

        /// <summary>Optional. List of various generator resource names used in the conversation profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generators")]
        public virtual System.Collections.Generic.IList<string> Generators { get; set; }

        /// <summary>
        /// If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based
        /// suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get
        /// new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or
        /// `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the
        /// same participant based on the same context will be grouped into a single Pub/Sub event or
        /// StreamingAnalyzeContentResponse.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupSuggestionResponses")]
        public virtual System.Nullable<bool> GroupSuggestionResponses { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config for suggestion features.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configs of custom conversation model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModelConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig ConversationModelConfig { get; set; }

        /// <summary>Configs for processing conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProcessConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig ConversationProcessConfig { get; set; }

        /// <summary>
        /// Optional. Disable the logging of search queries sent by human agents. It can prevent those queries from
        /// being stored at answer records. Supported features: KNOWLEDGE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableAgentQueryLogging")]
        public virtual System.Nullable<bool> DisableAgentQueryLogging { get; set; }

        /// <summary>
        /// Optional. Enable including conversation context during query answer generation. Supported features:
        /// KNOWLEDGE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableConversationAugmentedQuery")]
        public virtual System.Nullable<bool> EnableConversationAugmentedQuery { get; set; }

        /// <summary>
        /// Automatically iterates all participants and tries to compile suggestions. Supported features:
        /// ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableEventBasedSuggestion")]
        public virtual System.Nullable<bool> EnableEventBasedSuggestion { get; set; }

        /// <summary>Optional. Enable query suggestion only. Supported features: KNOWLEDGE_ASSIST</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableQuerySuggestionOnly")]
        public virtual System.Nullable<bool> EnableQuerySuggestionOnly { get; set; }

        /// <summary>
        /// Optional. Enable query suggestion even if we can't find its answer. By default, queries are suggested only
        /// if we find its answer. Supported features: KNOWLEDGE_ASSIST
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableQuerySuggestionWhenNoAnswer")]
        public virtual System.Nullable<bool> EnableQuerySuggestionWhenNoAnswer { get; set; }

        /// <summary>Configs of query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig QueryConfig { get; set; }

        /// <summary>The suggestion feature.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionFeature")]
        public virtual GoogleCloudDialogflowV2SuggestionFeature SuggestionFeature { get; set; }

        /// <summary>
        /// Settings of suggestion trigger. Currently, only ARTICLE_SUGGESTION and FAQ will use this field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionTriggerSettings")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings SuggestionTriggerSettings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config for suggestion query.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Confidence threshold of query result. Agent Assist gives each suggestion a score in the range [0.0, 1.0],
        /// based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no
        /// relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to
        /// the value of this field are included in the results. For a baseline model (the default), the recommended
        /// value is in the range [0.05, 0.1]. For a custom model, there is no recommended value. Tune this value by
        /// starting from a very low value and slowly increasing until you have desired results. If this field is not
        /// set, it defaults to 0.0, which means that all suggestions are returned. Supported features:
        /// ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE, KNOWLEDGE_SEARCH, KNOWLEDGE_ASSIST, ENTITY_EXTRACTION.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidenceThreshold")]
        public virtual System.Nullable<float> ConfidenceThreshold { get; set; }

        /// <summary>
        /// Determines how recent conversation context is filtered when generating suggestions. If unspecified, no
        /// messages will be dropped.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextFilterSettings")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings ContextFilterSettings { get; set; }

        /// <summary>
        /// Optional. The number of recent messages to include in the context. Supported features: KNOWLEDGE_ASSIST.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowQuerySource")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource DialogflowQuerySource { get; set; }

        /// <summary>Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentQuerySource")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource DocumentQuerySource { get; set; }

        /// <summary>Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeBaseQuerySource")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource KnowledgeBaseQuerySource { get; set; }

        /// <summary>
        /// Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxResults")]
        public virtual System.Nullable<int> MaxResults { get; set; }

        /// <summary>
        /// Optional. The customized sections chosen to return when requesting a summary of a conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sections")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigSections Sections { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Settings that determine how to filter recent conversation context when generating suggestions.
    /// </summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If set to true, the last message from virtual agent (hand off message) and the message before it (trigger
        /// message of hand off) are dropped.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dropHandoffMessages")]
        public virtual System.Nullable<bool> DropHandoffMessages { get; set; }

        /// <summary>If set to true, all messages from ivr stage are dropped.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dropIvrMessages")]
        public virtual System.Nullable<bool> DropIvrMessages { get; set; }

        /// <summary>If set to true, all messages from virtual agent are dropped.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dropVirtualAgentMessages")]
        public virtual System.Nullable<bool> DropVirtualAgentMessages { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Dialogflow source setting. Supported feature: DIALOGFLOW_ASSIST.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The name of a Dialogflow virtual agent used for end user side intent detection and suggestion.
        /// Format: `projects//locations//agent`. When multiple agents are allowed in the same Dialogflow project.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agent")]
        public virtual string Agent { get; set; }

        /// <summary>Optional. The Dialogflow assist configuration for human agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("humanAgentSideConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceHumanAgentSideConfig HumanAgentSideConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The configuration used for human agent side Dialogflow assist suggestion.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceHumanAgentSideConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The name of a dialogflow virtual agent used for intent detection and suggestion triggered by human
        /// agent. Format: `projects//locations//agent`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agent")]
        public virtual string Agent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document source settings. Supported features: SMART_REPLY, SMART_COMPOSE.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Knowledge documents to query from. Format: `projects//locations//knowledgeBases//documents/`.
        /// Currently, at most 5 documents are supported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documents")]
        public virtual System.Collections.Generic.IList<string> Documents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Knowledge base source settings. Supported features: ARTICLE_SUGGESTION, FAQ.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Knowledge bases to query. Format: `projects//locations//knowledgeBases/`. Currently, at most 5
        /// knowledge bases are supported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeBases")]
        public virtual System.Collections.Generic.IList<string> KnowledgeBases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Custom sections to return when requesting a summary of a conversation. This is only supported when
    /// `baseline_model_version` == '2.0'. Supported features: CONVERSATION_SUMMARIZATION,
    /// CONVERSATION_SUMMARIZATION_VOICE.
    /// </summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigSections : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The selected sections chosen to return when requesting a summary of a conversation. A duplicate selected
        /// section will be treated as a single selected section. If section types are not provided, the default will be
        /// {SITUATION, ACTION, RESULT}.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sectionTypes")]
        public virtual System.Collections.Generic.IList<string> SectionTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Settings of suggestion trigger.</summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Do not trigger if last utterance is small talk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noSmalltalk")]
        public virtual System.Nullable<bool> NoSmalltalk { get; set; }

        /// <summary>Only trigger suggestion if participant role of last utterance is END_USER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("onlyEndUser")]
        public virtual System.Nullable<bool> OnlyEndUser { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a notification sent to Cloud Pub/Sub subscribers for human agent assistant events in a specific
    /// conversation.
    /// </summary>
    public class GoogleCloudDialogflowV2HumanAgentAssistantEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The conversation this notification refers to. Format: `projects//conversations/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversation")]
        public virtual string Conversation { get; set; }

        /// <summary>
        /// The participant that the suggestion is compiled for. Format: `projects//conversations//participants/`. It
        /// will not be set in legacy workflow.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participant")]
        public virtual string Participant { get; set; }

        /// <summary>The suggestion results payload that this notification refers to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SuggestionResult> SuggestionResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Defines the hand off to a live agent, typically on which external agent service provider to connect to a
    /// conversation. Currently, this feature is not general available, please contact Google to get access.
    /// </summary>
    public class GoogleCloudDialogflowV2HumanAgentHandoffConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Uses [LivePerson](https://www.liveperson.com).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("livePersonConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig LivePersonConfig { get; set; }

        /// <summary>Uses Salesforce Live Agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("salesforceLiveAgentConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig SalesforceLiveAgentConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration specific to [LivePerson](https://www.liveperson.com).</summary>
    public class GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Account number of the LivePerson account to connect. This is the account number you input at the
        /// login page.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountNumber")]
        public virtual string AccountNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration specific to Salesforce Live Agent.</summary>
    public class GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Live Agent chat button ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttonId")]
        public virtual string ButtonId { get; set; }

        /// <summary>Required. Live Agent deployment ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deploymentId")]
        public virtual string DeploymentId { get; set; }

        /// <summary>
        /// Required. Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the `Live Agent
        /// settings` page. For example if URL has the form https://d.la4-c2-phx.salesforceliveagent.com/..., you should
        /// fill in d.la4-c2-phx.salesforceliveagent.com.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endpointDomain")]
        public virtual string EndpointDomain { get; set; }

        /// <summary>Required. The organization ID of the Salesforce account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organizationId")]
        public virtual string OrganizationId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Agents.ImportAgent.</summary>
    public class GoogleCloudDialogflowV2ImportAgentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Zip compressed raw byte content for agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; }

        /// <summary>
        /// The URI to a Google Cloud Storage file containing the agent to import. Note: The URI must start with
        /// "gs://". Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your
        /// request authentication must have read permissions for the object. For more information, see [Dialogflow
        /// access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationDatasets.ImportConversationData operation.</summary>
    public class GoogleCloudDialogflowV2ImportConversationDataOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationDataset")]
        public virtual string ConversationDataset { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>
        /// Timestamp when import conversation data request was created. The time is measured on server side.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Partial failures are failures that don't fail the whole long running operation, e.g. single files that
        /// couldn't be read.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partialFailures")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> PartialFailures { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response used for ConversationDatasets.ImportConversationData long running operation.</summary>
    public class GoogleCloudDialogflowV2ImportConversationDataOperationResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationDataset")]
        public virtual string ConversationDataset { get; set; }

        /// <summary>Number of conversations imported successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("importCount")]
        public virtual System.Nullable<int> ImportCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for ConversationDatasets.ImportConversationData.</summary>
    public class GoogleCloudDialogflowV2ImportConversationDataRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Configuration describing where to import data from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputConfig")]
        public virtual GoogleCloudDialogflowV2InputConfig InputConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The template used for importing documents.</summary>
    public class GoogleCloudDialogflowV2ImportDocumentTemplate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The knowledge type of document content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeTypes")]
        public virtual System.Collections.Generic.IList<string> KnowledgeTypes { get; set; }

        /// <summary>
        /// Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include
        /// storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a
        /// `key` or a `value` of the metadata is 1024 bytes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>Required. The MIME type of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Documents.ImportDocuments.</summary>
    public class GoogleCloudDialogflowV2ImportDocumentsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Document template used for importing all the documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentTemplate")]
        public virtual GoogleCloudDialogflowV2ImportDocumentTemplate DocumentTemplate { get; set; }

        /// <summary>
        /// Optional. The Google Cloud Storage location for the documents. The path can include a wildcard. These URIs
        /// may have the forms `gs:///`. `gs:////*.`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudDialogflowV2GcsSources GcsSource { get; set; }

        /// <summary>
        /// Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google
        /// Cloud Storage URI.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("importGcsCustomMetadata")]
        public virtual System.Nullable<bool> ImportGcsCustomMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Documents.ImportDocuments.</summary>
    public class GoogleCloudDialogflowV2ImportDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Includes details about skipped documents or any other warnings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warnings")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> Warnings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The parameters of inference.</summary>
    public class GoogleCloudDialogflowV2InferenceParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Maximum number of the output tokens for the generator.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxOutputTokens")]
        public virtual System.Nullable<int> MaxOutputTokens { get; set; }

        /// <summary>
        /// Optional. Controls the randomness of LLM predictions. Low temperature = less random. High temperature = more
        /// random. If unset (or 0), uses a default value of 0.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("temperature")]
        public virtual System.Nullable<double> Temperature { get; set; }

        /// <summary>
        /// Optional. Top-k changes how the model selects tokens for output. A top-k of 1 means the selected token is
        /// the most probable among all tokens in the model's vocabulary (also called greedy decoding), while a top-k of
        /// 3 means that the next token is selected from among the 3 most probable tokens (using temperature). For each
        /// token selection step, the top K tokens with the highest probabilities are sampled. Then tokens are further
        /// filtered based on topP with the final token selected using temperature sampling. Specify a lower value for
        /// less random responses and a higher value for more random responses. Acceptable value is [1, 40], default to
        /// 40.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topK")]
        public virtual System.Nullable<int> TopK { get; set; }

        /// <summary>
        /// Optional. Top-p changes how the model selects tokens for output. Tokens are selected from most K (see topK
        /// parameter) probable to least until the sum of their probabilities equals the top-p value. For example, if
        /// tokens A, B, and C have a probability of 0.3, 0.2, and 0.1 and the top-p value is 0.5, then the model will
        /// select either A or B as the next token (using temperature) and doesn't consider C. The default top-p value
        /// is 0.95. Specify a lower value for less random responses and a higher value for more random responses.
        /// Acceptable value is [0.0, 1.0], default to 0.95.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topP")]
        public virtual System.Nullable<double> TopP { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for ConversationsService.IngestContextReferences.</summary>
    public class GoogleCloudDialogflowV2IngestContextReferencesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The context references to ingest. The key is the name of the context reference and the value
        /// contains the contents of the context reference. The key is used to incorporate ingested context references
        /// to enhance the generator.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextReferences")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowV2ConversationContextReference> ContextReferences { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for ConversationsService.IngestContextReferences.</summary>
    public class GoogleCloudDialogflowV2IngestContextReferencesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All context references ingested.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ingestedContextReferences")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowV2ConversationContextReference> IngestedContextReferences { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for initializing a location-level encryption specification.</summary>
    public class GoogleCloudDialogflowV2InitializeEncryptionSpecMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The original request for initialization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("request")]
        public virtual GoogleCloudDialogflowV2InitializeEncryptionSpecRequest Request { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request to initialize a location-level encryption specification.</summary>
    public class GoogleCloudDialogflowV2InitializeEncryptionSpecRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The encryption spec used for CMEK encryption. It is required that the kms key is in the same
        /// region as the endpoint. The same key will be used for all provisioned resources, if encryption is available.
        /// If the kms_key_name is left empty, no encryption will be enforced.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptionSpec")]
        public virtual GoogleCloudDialogflowV2EncryptionSpec EncryptionSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Instructs the speech recognizer how to process the audio content.</summary>
    public class GoogleCloudDialogflowV2InputAudioConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Audio encoding of the audio content to process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioEncoding")]
        public virtual string AudioEncoding { get; set; }

        /// <summary>
        /// Only used in Participants.AnalyzeContent and Participants.StreamingAnalyzeContent. If `false` and
        /// recognition doesn't return any result, trigger `NO_SPEECH_RECOGNIZED` event to Dialogflow agent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableNoSpeechRecognizedEvent")]
        public virtual System.Nullable<bool> DisableNoSpeechRecognizedEvent { get; set; }

        /// <summary>Enable automatic punctuation option at the speech backend.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableAutomaticPunctuation")]
        public virtual System.Nullable<bool> EnableAutomaticPunctuation { get; set; }

        /// <summary>
        /// If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the
        /// recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any
        /// word-level information.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableWordInfo")]
        public virtual System.Nullable<bool> EnableWordInfo { get; set; }

        /// <summary>
        /// Required. The language of the supplied audio. Dialogflow does not do translations. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes. Note that queries in the same session do not necessarily need to specify the same language.
        /// If not set, the language is inferred from the ConversationProfile.stt_config.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// Optional. Which Speech model to select for the given request. For more information, see [Speech
        /// models](https://cloud.google.com/dialogflow/es/docs/speech-models).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("model")]
        public virtual string Model { get; set; }

        /// <summary>Which variant of the Speech model to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelVariant")]
        public virtual string ModelVariant { get; set; }

        /// <summary>
        /// If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once
        /// force migration takes place in June 2024. Please refer to [Dialogflow ES Speech model
        /// migration](https://cloud.google.com/dialogflow/es/docs/speech-model-migration).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optOutConformerModelMigration")]
        public virtual System.Nullable<bool> OptOutConformerModelMigration { get; set; }

        /// <summary>
        /// A list of strings containing words and phrases that the speech recognizer should recognize with higher
        /// likelihood. See [the Cloud Speech
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. This
        /// field is deprecated. Please use [`speech_contexts`]() instead. If you specify both [`phrase_hints`]() and
        /// [`speech_contexts`](), Dialogflow will treat the [`phrase_hints`]() as a single additional
        /// [`SpeechContext`]().
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phraseHints")]
        public virtual System.Collections.Generic.IList<string> PhraseHints { get; set; }

        /// <summary>A collection of phrase set resources to use for speech adaptation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phraseSets")]
        public virtual System.Collections.Generic.IList<string> PhraseSets { get; set; }

        /// <summary>
        /// Required. Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleRateHertz")]
        public virtual System.Nullable<int> SampleRateHertz { get; set; }

        /// <summary>
        /// If `false` (default), recognition does not cease until the client closes the stream. If `true`, the
        /// recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the
        /// audio's voice has stopped or paused. In this case, once a detected intent is received, the client should
        /// close the stream and start a new request with a new stream as needed. Note: This setting is relevant only
        /// for streaming methods. Note: When specified, InputAudioConfig.single_utterance takes precedence over
        /// StreamingDetectIntentRequest.single_utterance.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("singleUtterance")]
        public virtual System.Nullable<bool> SingleUtterance { get; set; }

        /// <summary>
        /// Context information to assist speech recognition. See [the Cloud Speech
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SpeechContext> SpeechContexts { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the configuration of importing a set of conversation files in Google Cloud Storage.
    /// </summary>
    public class GoogleCloudDialogflowV2InputConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Cloud Storage URI has the form gs:////agent*.json. Wildcards are allowed and will be expanded into all
        /// matched JSON files, which will be read as one conversation per file.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudDialogflowV2GcsSources GcsSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>InputDataset used to create model or do evaluation. NextID:5</summary>
    public class GoogleCloudDialogflowV2InputDataset : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataset")]
        public virtual string Dataset { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many
    /// intents, where your combined intents can handle a complete conversation. When an end-user writes or says
    /// something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the
    /// best intent in your agent. Matching an intent is also known as intent classification. For more information, see
    /// the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).
    /// </summary>
    public class GoogleCloudDialogflowV2Intent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The name of the action associated with the intent. Note: The action name must not contain
        /// whitespaces.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>
        /// Optional. The list of platforms for which the first responses will be copied from the messages in
        /// PLATFORM_UNSPECIFIED (i.e. default platform).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultResponsePlatforms")]
        public virtual System.Collections.Generic.IList<string> DefaultResponsePlatforms { get; set; }

        /// <summary>Required. The name of this intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or
        /// Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endInteraction")]
        public virtual System.Nullable<bool> EndInteraction { get; set; }

        /// <summary>
        /// Optional. The collection of event names that trigger the intent. If the collection of input contexts is not
        /// empty, all of the contexts must be present in the active user session for an event to trigger this intent.
        /// Event names are limited to 150 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("events")]
        public virtual System.Collections.Generic.IList<string> Events { get; set; }

        /// <summary>
        /// Output only. Read-only. Information about all followup intents that have this intent as a direct or indirect
        /// parent. We populate this field only in the output.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupIntentInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentFollowupIntentInfo> FollowupIntentInfo { get; set; }

        /// <summary>
        /// Optional. The list of context names required for this intent to be triggered. Format:
        /// `projects//agent/sessions/-/contexts/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputContextNames")]
        public virtual System.Collections.Generic.IList<string> InputContextNames { get; set; }

        /// <summary>Optional. Indicates whether this is a fallback intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isFallback")]
        public virtual System.Nullable<bool> IsFallback { get; set; }

        /// <summary>
        /// Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most
        /// cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default
        /// is false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("liveAgentHandoff")]
        public virtual System.Nullable<bool> LiveAgentHandoff { get; set; }

        /// <summary>
        /// Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessage> Messages { get; set; }

        /// <summary>
        /// Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is
        /// set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also,
        /// auto-markup in the UI is turned off.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mlDisabled")]
        public virtual System.Nullable<bool> MlDisabled { get; set; }

        /// <summary>
        /// Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
        /// Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The collection of contexts that are activated when the intent is matched. Context messages in this
        /// collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context
        /// when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Context> OutputContexts { get; set; }

        /// <summary>Optional. The collection of parameters associated with the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentParameter> Parameters { get; set; }

        /// <summary>
        /// Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You
        /// can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to
        /// make this intent a followup intent. It identifies the parent followup intent. Format:
        /// `projects//agent/intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFollowupIntentName")]
        public virtual string ParentFollowupIntentName { get; set; }

        /// <summary>
        /// Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value
        /// is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority
        /// in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent
        /// requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual System.Nullable<int> Priority { get; set; }

        /// <summary>
        /// Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resetContexts")]
        public virtual System.Nullable<bool> ResetContexts { get; set; }

        /// <summary>
        /// Output only. Read-only. The unique identifier of the root intent in the chain of followup intents. It
        /// identifies the correct followup intents chain for this intent. We populate this field only in the output.
        /// Format: `projects//agent/intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rootFollowupIntentName")]
        public virtual string RootFollowupIntentName { get; set; }

        /// <summary>Optional. The collection of examples that the agent is trained on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingPhrases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentTrainingPhrase> TrainingPhrases { get; set; }

        /// <summary>Optional. Indicates whether webhooks are enabled for the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookState")]
        public virtual string WebhookState { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>This message is a wrapper around a collection of intents.</summary>
    public class GoogleCloudDialogflowV2IntentBatch : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of intents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Intent> Intents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a single followup intent in the chain.</summary>
    public class GoogleCloudDialogflowV2IntentFollowupIntentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique identifier of the followup intent. Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupIntentName")]
        public virtual string FollowupIntentName { get; set; }

        /// <summary>
        /// The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFollowupIntentName")]
        public virtual string ParentFollowupIntentName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more
    /// information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).
    /// </summary>
    public class GoogleCloudDialogflowV2IntentMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The basic card response for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basicCard")]
        public virtual GoogleCloudDialogflowV2IntentMessageBasicCard BasicCard { get; set; }

        /// <summary>Browse carousel card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browseCarouselCard")]
        public virtual GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard BrowseCarouselCard { get; set; }

        /// <summary>The card response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("card")]
        public virtual GoogleCloudDialogflowV2IntentMessageCard Card { get; set; }

        /// <summary>The carousel card response for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carouselSelect")]
        public virtual GoogleCloudDialogflowV2IntentMessageCarouselSelect CarouselSelect { get; set; }

        /// <summary>The image response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; }

        /// <summary>The link out suggestion chip for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkOutSuggestion")]
        public virtual GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion LinkOutSuggestion { get; set; }

        /// <summary>The list card response for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSelect")]
        public virtual GoogleCloudDialogflowV2IntentMessageListSelect ListSelect { get; set; }

        /// <summary>The media content card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaContent")]
        public virtual GoogleCloudDialogflowV2IntentMessageMediaContent MediaContent { get; set; }

        /// <summary>A custom platform-specific response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>Optional. The platform that this message is intended for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platform")]
        public virtual string Platform { get; set; }

        /// <summary>The quick replies response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quickReplies")]
        public virtual GoogleCloudDialogflowV2IntentMessageQuickReplies QuickReplies { get; set; }

        /// <summary>The voice and text-only responses for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("simpleResponses")]
        public virtual GoogleCloudDialogflowV2IntentMessageSimpleResponses SimpleResponses { get; set; }

        /// <summary>The suggestion chips for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual GoogleCloudDialogflowV2IntentMessageSuggestions Suggestions { get; set; }

        /// <summary>Table card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableCard")]
        public virtual GoogleCloudDialogflowV2IntentMessageTableCard TableCard { get; set; }

        /// <summary>The text response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowV2IntentMessageText Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The basic card message. Useful for displaying information.</summary>
    public class GoogleCloudDialogflowV2IntentMessageBasicCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of card buttons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageBasicCardButton> Buttons { get; set; }

        /// <summary>Required, unless image is present. The body text of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedText")]
        public virtual string FormattedText { get; set; }

        /// <summary>Optional. The image for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; }

        /// <summary>Optional. The subtitle of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; }

        /// <summary>Optional. The title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The button object that appears at the bottom of a card.</summary>
    public class GoogleCloudDialogflowV2IntentMessageBasicCardButton : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Action to take when a user taps on the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUriAction")]
        public virtual GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction OpenUriAction { get; set; }

        /// <summary>Required. The title of the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Opens the given URI.</summary>
    public class GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The HTTP or HTTPS scheme URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Browse Carousel Card for Actions on Google.
    /// https://developers.google.com/actions/assistant/responses#browsing_carousel
    /// </summary>
    public class GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Settings for displaying the image. Applies to every image in items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageDisplayOptions")]
        public virtual string ImageDisplayOptions { get; set; }

        /// <summary>
        /// Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem> Items { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Browsing carousel tile</summary>
    public class GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Description of the carousel item. Maximum of four lines of text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("footer")]
        public virtual string Footer { get; set; }

        /// <summary>Optional. Hero image for the carousel item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; }

        /// <summary>Required. Action to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUriAction")]
        public virtual GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction OpenUriAction { get; set; }

        /// <summary>Required. Title of the carousel item. Maximum of two lines of text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Actions on Google action to open a given url.</summary>
    public class GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. URL</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>
        /// Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web
        /// browser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlTypeHint")]
        public virtual string UrlTypeHint { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The card response message.</summary>
    public class GoogleCloudDialogflowV2IntentMessageCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of card buttons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageCardButton> Buttons { get; set; }

        /// <summary>Optional. The public URI to an image file for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; }

        /// <summary>Optional. The subtitle of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; }

        /// <summary>Optional. The title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a button.</summary>
    public class GoogleCloudDialogflowV2IntentMessageCardButton : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The text to send back to the Dialogflow API or a URI to open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postback")]
        public virtual string Postback { get; set; }

        /// <summary>Optional. The text to show on the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The card for presenting a carousel of options to select from.</summary>
    public class GoogleCloudDialogflowV2IntentMessageCarouselSelect : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Carousel items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageCarouselSelectItem> Items { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An item in the carousel.</summary>
    public class GoogleCloudDialogflowV2IntentMessageCarouselSelectItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The body text of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Optional. The image to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; }

        /// <summary>Required. Additional info about the option item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("info")]
        public virtual GoogleCloudDialogflowV2IntentMessageSelectItemInfo Info { get; set; }

        /// <summary>Required. Title of the carousel item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Column properties for TableCard.</summary>
    public class GoogleCloudDialogflowV2IntentMessageColumnProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Column heading.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("header")]
        public virtual string Header { get; set; }

        /// <summary>Optional. Defines text alignment for all cells in this column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("horizontalAlignment")]
        public virtual string HorizontalAlignment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The image response message.</summary>
    public class GoogleCloudDialogflowV2IntentMessageImage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. A text description of the image to be used for accessibility, e.g., screen readers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessibilityText")]
        public virtual string AccessibilityText { get; set; }

        /// <summary>Optional. The public URI to an image file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The suggestion chip message that allows the user to jump out to the app or website associated with this agent.
    /// </summary>
    public class GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the app or site this chip is linking to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationName")]
        public virtual string DestinationName { get; set; }

        /// <summary>Required. The URI of the app or site to open when the user taps the suggestion chip.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The card for presenting a list of options to select from.</summary>
    public class GoogleCloudDialogflowV2IntentMessageListSelect : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. List items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageListSelectItem> Items { get; set; }

        /// <summary>Optional. Subtitle of the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; }

        /// <summary>Optional. The overall title of the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An item in the list.</summary>
    public class GoogleCloudDialogflowV2IntentMessageListSelectItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The main text describing the item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Optional. The image to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; }

        /// <summary>Required. Additional information about this option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("info")]
        public virtual GoogleCloudDialogflowV2IntentMessageSelectItemInfo Info { get; set; }

        /// <summary>Required. The title of the list item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The media content card for Actions on Google.</summary>
    public class GoogleCloudDialogflowV2IntentMessageMediaContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. List of media objects.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaObjects")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject> MediaObjects { get; set; }

        /// <summary>Optional. What type of media is the content (ie "audio").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaType")]
        public virtual string MediaType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response media object for media content card.</summary>
    public class GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Url where the media is stored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentUrl")]
        public virtual string ContentUrl { get; set; }

        /// <summary>Optional. Description of media card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Optional. Icon to display above media content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icon")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Icon { get; set; }

        /// <summary>Optional. Image to display above media content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("largeImage")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage LargeImage { get; set; }

        /// <summary>Required. Name of media card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The quick replies response message.</summary>
    public class GoogleCloudDialogflowV2IntentMessageQuickReplies : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quickReplies")]
        public virtual System.Collections.Generic.IList<string> QuickReplies { get; set; }

        /// <summary>Optional. The title of the collection of quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional info about the select item for when it is triggered in a dialog.</summary>
    public class GoogleCloudDialogflowV2IntentMessageSelectItemInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A unique key that will be sent back to the agent if this response is given.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; }

        /// <summary>Optional. A list of synonyms that can also be used to trigger this item in dialog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The simple response message containing speech or text.</summary>
    public class GoogleCloudDialogflowV2IntentMessageSimpleResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The text to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayText")]
        public virtual string DisplayText { get; set; }

        /// <summary>
        /// One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format.
        /// Mutually exclusive with text_to_speech.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssml")]
        public virtual string Ssml { get; set; }

        /// <summary>
        /// One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with
        /// ssml.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textToSpeech")]
        public virtual string TextToSpeech { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and
    /// `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.
    /// </summary>
    public class GoogleCloudDialogflowV2IntentMessageSimpleResponses : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of simple responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("simpleResponses")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageSimpleResponse> SimpleResponses { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The suggestion chip message that the user can tap to quickly post a reply to the conversation.
    /// </summary>
    public class GoogleCloudDialogflowV2IntentMessageSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The text shown the in the suggestion chip.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The collection of suggestions.</summary>
    public class GoogleCloudDialogflowV2IntentMessageSuggestions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of suggested replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageSuggestion> Suggestions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Table card for Actions on Google.</summary>
    public class GoogleCloudDialogflowV2IntentMessageTableCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of buttons for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageBasicCardButton> Buttons { get; set; }

        /// <summary>Optional. Display properties for the columns in this table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("columnProperties")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageColumnProperties> ColumnProperties { get; set; }

        /// <summary>Optional. Image which should be displayed on the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2IntentMessageImage Image { get; set; }

        /// <summary>Optional. Rows in this table of data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rows")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageTableCardRow> Rows { get; set; }

        /// <summary>Optional. Subtitle to the title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; }

        /// <summary>Required. Title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Cell of TableCardRow.</summary>
    public class GoogleCloudDialogflowV2IntentMessageTableCardCell : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Text in this cell.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Row of TableCard.</summary>
    public class GoogleCloudDialogflowV2IntentMessageTableCardRow : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of cells that make up this row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cells")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessageTableCardCell> Cells { get; set; }

        /// <summary>Optional. Whether to add a visual divider after this row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dividerAfter")]
        public virtual System.Nullable<bool> DividerAfter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The text response message.</summary>
    public class GoogleCloudDialogflowV2IntentMessageText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of the agent's responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents intent parameters.</summary>
    public class GoogleCloudDialogflowV2IntentParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The default value to use when the `value` yields an empty result. Default values can be extracted
        /// from contexts by using the following syntax: `#context_name.parameter_name`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultValue")]
        public virtual string DefaultValue { get; set; }

        /// <summary>Required. The name of the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the
        /// parameter is required, this must be provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeDisplayName")]
        public virtual string EntityTypeDisplayName { get; set; }

        /// <summary>Optional. Indicates whether the parameter represents a list of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isList")]
        public virtual System.Nullable<bool> IsList { get; set; }

        /// <summary>
        /// Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed
        /// without collecting the parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mandatory")]
        public virtual System.Nullable<bool> Mandatory { get; set; }

        /// <summary>The unique identifier of this parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The collection of prompts that the agent can present to the user in order to collect a value for
        /// the parameter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prompts")]
        public virtual System.Collections.Generic.IList<string> Prompts { get; set; }

        /// <summary>
        /// Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined
        /// as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter
        /// value from some context defined as `#context_name.parameter_name`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an intent suggestion.</summary>
    public class GoogleCloudDialogflowV2IntentSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Human readable description for better understanding an intent like its scope, content, result etc. Maximum
        /// character limit: 140 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>The display name of the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The unique identifier of this intent. Format: `projects//locations//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentV2")]
        public virtual string IntentV2 { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an example that the agent is trained on.</summary>
    public class GoogleCloudDialogflowV2IntentTrainingPhrase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The unique identifier of this training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Required. The ordered list of training phrase parts. The parts are concatenated in order to form the
        /// training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console
        /// does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted
        /// when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you
        /// just need a single part with only the Part.text field set. If you want to annotate the training phrase, you
        /// must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is
        /// set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you
        /// want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentTrainingPhrasePart> Parts { get; set; }

        /// <summary>
        /// Optional. Indicates how many times this example was added to the intent. Each time a developer adds an
        /// existing sample by editing an intent or training, this counter is increased.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timesAddedCount")]
        public virtual System.Nullable<int> TimesAddedCount { get; set; }

        /// <summary>Required. The type of the training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a part of a training phrase.</summary>
    public class GoogleCloudDialogflowV2IntentTrainingPhrasePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The parameter name for the value extracted from the annotated part of the example. This field is
        /// required for annotated parts of the training phrase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alias")]
        public virtual string Alias { get; set; }

        /// <summary>
        /// Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training
        /// phrase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; }

        /// <summary>Required. The text for this part.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>
        /// Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow
        /// Console is used to manually annotate the part. When creating an annotated part with the API, you must set
        /// this to true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDefined")]
        public virtual System.Nullable<bool> UserDefined { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a Knowledge Assist answer.</summary>
    public class GoogleCloudDialogflowV2KnowledgeAssistAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the answer record. Format: `projects//locations//answer Records/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>
        /// The query suggested based on the context. Suggestion is made only if it is different from the previous
        /// suggestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestedQuery")]
        public virtual GoogleCloudDialogflowV2KnowledgeAssistAnswerSuggestedQuery SuggestedQuery { get; set; }

        /// <summary>
        /// The answer generated for the suggested query. Whether or not an answer is generated depends on how confident
        /// we are about the generated query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestedQueryAnswer")]
        public virtual GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswer SuggestedQueryAnswer { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an answer from Knowledge. Currently supports FAQ and Generative answers.</summary>
    public class GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The piece of text from the `source` that answers this suggested query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerText")]
        public virtual string AnswerText { get; set; }

        /// <summary>Populated if the prediction came from FAQ.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faqSource")]
        public virtual GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerFaqSource FaqSource { get; set; }

        /// <summary>Populated if the prediction was Generative.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generativeSource")]
        public virtual GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource GenerativeSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Details about source of FAQ answer.</summary>
    public class GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerFaqSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The corresponding FAQ question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("question")]
        public virtual string Question { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Details about source of Generative answer.</summary>
    public class GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All snippets used for this Generative Prediction, with their source URI and data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippets")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet> Snippets { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Snippet Source for a Generative Prediction.</summary>
    public class GoogleCloudDialogflowV2KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>Text taken from that URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>Title of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI the data is sourced from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a suggested query.</summary>
    public class GoogleCloudDialogflowV2KnowledgeAssistAnswerSuggestedQuery : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Suggested query text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryText")]
        public virtual string QueryText { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A knowledge base represents a collection of knowledge documents that you provide to Dialogflow. Your knowledge
    /// documents contain information that may be useful during conversations with end-users. Some Dialogflow features
    /// use knowledge bases when looking for a response to an end-user input. For more information, see the [knowledge
    /// base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The
    /// `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`.
    /// </summary>
    public class GoogleCloudDialogflowV2KnowledgeBase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The display name of the knowledge base. The name must be 1024 bytes or less; otherwise, the
        /// creation request fails.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Language which represents the KnowledgeBase. When the KnowledgeBase is created/updated, expect this to be
        /// present for non en-us languages. When unspecified, the default language code en-us applies.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// The knowledge base resource name. The name must be empty when creating a knowledge base. Format:
        /// `projects//locations//knowledgeBases/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata in google::longrunning::Operation for Knowledge operations.</summary>
    public class GoogleCloudDialogflowV2KnowledgeOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata for the Export Data Operation such as the destination of export.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exportOperationMetadata")]
        public virtual GoogleCloudDialogflowV2ExportOperationMetadata ExportOperationMetadata { get; set; }

        /// <summary>The name of the knowledge base interacted with during the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeBase")]
        public virtual string KnowledgeBase { get; set; }

        /// <summary>Output only. The current state of this operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for AnswerRecords.ListAnswerRecords.</summary>
    public class GoogleCloudDialogflowV2ListAnswerRecordsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of answer records.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecords")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2AnswerRecord> AnswerRecords { get; set; }

        /// <summary>
        /// A token to retrieve next page of results. Or empty if there are no more results. Pass this value in the
        /// ListAnswerRecordsRequest.page_token field in the subsequent call to `ListAnswerRecords` method to retrieve
        /// the next page of results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Contexts.ListContexts.</summary>
    public class GoogleCloudDialogflowV2ListContextsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of contexts. There will be a maximum number of items returned based on the page_size field in the
        /// request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Context> Contexts { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for ConversationDatasets.ListConversationDatasets.</summary>
    public class GoogleCloudDialogflowV2ListConversationDatasetsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of datasets to return.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationDatasets")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ConversationDataset> ConversationDatasets { get; set; }

        /// <summary>
        /// The token to use to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for ConversationModels.ListConversationModelEvaluations</summary>
    public class GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of evaluations to return.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModelEvaluations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ConversationModelEvaluation> ConversationModelEvaluations { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for ConversationModels.ListConversationModels</summary>
    public class GoogleCloudDialogflowV2ListConversationModelsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of models to return.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModels")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ConversationModel> ConversationModels { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for ConversationProfiles.ListConversationProfiles.</summary>
    public class GoogleCloudDialogflowV2ListConversationProfilesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of project conversation profiles. There is a maximum number of items returned based on the
        /// page_size field in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProfiles")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ConversationProfile> ConversationProfiles { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Conversations.ListConversations.</summary>
    public class GoogleCloudDialogflowV2ListConversationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of conversations. There will be a maximum number of items returned based on the page_size field in
        /// the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Conversation> Conversations { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Documents.ListDocuments.</summary>
    public class GoogleCloudDialogflowV2ListDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Document> Documents { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for EntityTypes.ListEntityTypes.</summary>
    public class GoogleCloudDialogflowV2ListEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of agent entity types. There will be a maximum number of items returned based on the page_size
        /// field in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityType> EntityTypes { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Environments.ListEnvironments.</summary>
    public class GoogleCloudDialogflowV2ListEnvironmentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of agent environments. There will be a maximum number of items returned based on the page_size
        /// field in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("environments")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Environment> Environments { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response of ListGenerators.</summary>
    public class GoogleCloudDialogflowV2ListGeneratorsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of generators retrieved.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generators")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Generator> Generators { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Intents.ListIntents.</summary>
    public class GoogleCloudDialogflowV2ListIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of agent intents. There will be a maximum number of items returned based on the page_size field in
        /// the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Intent> Intents { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for KnowledgeBases.ListKnowledgeBases.</summary>
    public class GoogleCloudDialogflowV2ListKnowledgeBasesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of knowledge bases.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeBases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2KnowledgeBase> KnowledgeBases { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Conversations.ListMessages.</summary>
    public class GoogleCloudDialogflowV2ListMessagesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of messages. There will be a maximum number of items returned based on the page_size field in the
        /// request. `messages` is sorted by `create_time` in descending order.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Message> Messages { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.ListParticipants.</summary>
    public class GoogleCloudDialogflowV2ListParticipantsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Token to retrieve the next page of results or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>
        /// The list of participants. There is a maximum number of items returned based on the page_size field in the
        /// request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participants")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Participant> Participants { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for SessionEntityTypes.ListSessionEntityTypes.</summary>
    public class GoogleCloudDialogflowV2ListSessionEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>
        /// The list of session entity types. There will be a maximum number of items returned based on the page_size
        /// field in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionEntityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SessionEntityType> SessionEntityTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Versions.ListVersions.</summary>
    public class GoogleCloudDialogflowV2ListVersionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>
        /// The list of agent versions. There will be a maximum number of items returned based on the page_size field in
        /// the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Version> Versions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines logging behavior for conversation lifecycle events.</summary>
    public class GoogleCloudDialogflowV2LoggingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether to log conversation events like CONVERSATION_STARTED to Stackdriver in the conversation project as
        /// JSON format ConversationEvent protos.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableStackdriverLogging")]
        public virtual System.Nullable<bool> EnableStackdriverLogging { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a message posted into a conversation.</summary>
    public class GoogleCloudDialogflowV2Message : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The message content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The time when the message was created in Contact Center AI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt)
        /// language tag. Example: "en-US".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Output only. The annotation for the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageAnnotation")]
        public virtual GoogleCloudDialogflowV2MessageAnnotation MessageAnnotation { get; set; }

        /// <summary>
        /// Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Output only. The participant that sends this message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participant")]
        public virtual string Participant { get; set; }

        /// <summary>Output only. The role of the participant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; }

        private string _sendTimeRaw;

        private object _sendTime;

        /// <summary>
        /// Optional. The time when the message was sent. For voice messages, this is the time when an utterance
        /// started.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendTime")]
        public virtual string SendTimeRaw
        {
            get => _sendTimeRaw;
            set
            {
                _sendTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _sendTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="SendTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use SendTimeDateTimeOffset instead.")]
        public virtual object SendTime
        {
            get => _sendTime;
            set
            {
                _sendTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _sendTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="SendTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? SendTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(SendTimeRaw);
            set => SendTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The sentiment analysis result for the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysis")]
        public virtual GoogleCloudDialogflowV2SentimentAnalysisResult SentimentAnalysis { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the result of annotation for the message.</summary>
    public class GoogleCloudDialogflowV2MessageAnnotation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates whether the text message contains entities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("containEntities")]
        public virtual System.Nullable<bool> ContainEntities { get; set; }

        /// <summary>
        /// The collection of annotated message parts ordered by their position in the message. You can recover the
        /// annotated message by concatenating [AnnotatedMessagePart.text].
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2AnnotatedMessagePart> Parts { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a message entry of a conversation.</summary>
    public class GoogleCloudDialogflowV2MessageEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Optional. Create time of the message entry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Optional. The language of the text. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Optional. Participant role of the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; }

        /// <summary>Optional. Transcript content of the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines notification behavior.</summary>
    public class GoogleCloudDialogflowV2NotificationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Format of message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageFormat")]
        public virtual string MessageFormat { get; set; }

        /// <summary>
        /// Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized
        /// ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is
        /// in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com`
        /// the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make
        /// sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format:
        /// `projects//locations//topics/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topic")]
        public virtual string Topic { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.
    /// </summary>
    public class GoogleCloudDialogflowV2OriginalDetectIntentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some
        /// integrations that query a Dialogflow agent may provide additional information in the payload. In particular,
        /// for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id":
        /// "+18558363987" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and
        /// populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition
        /// agents.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>Optional. The version of the protocol used for this request. This field is AoG-specific.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the natural language speech audio to be played to the end user.</summary>
    public class GoogleCloudDialogflowV2OutputAudio : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The natural language speech audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual string Audio { get; set; }

        /// <summary>Instructs the speech synthesizer how to generate the speech audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("config")]
        public virtual GoogleCloudDialogflowV2OutputAudioConfig Config { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied
    /// in a request, it overrides all existing text-to-speech settings applied to the agent.
    /// </summary>
    public class GoogleCloudDialogflowV2OutputAudioConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Audio encoding of the synthesized audio content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioEncoding")]
        public virtual string AudioEncoding { get; set; }

        /// <summary>
        /// The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the
        /// default sample rate based on the audio encoding. If this is different from the voice's natural sample rate,
        /// then the synthesizer will honor this request by converting to the desired sample rate (which might result in
        /// worse audio quality).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleRateHertz")]
        public virtual System.Nullable<int> SampleRateHertz { get; set; }

        /// <summary>Configuration of how speech should be synthesized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synthesizeSpeechConfig")]
        public virtual GoogleCloudDialogflowV2SynthesizeSpeechConfig SynthesizeSpeechConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a conversation participant (human agent, virtual agent, end-user).</summary>
    public class GoogleCloudDialogflowV2Participant : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Key-value filters on the metadata of documents returned by article suggestion. If specified,
        /// article suggestion only returns suggested documents that match all filters in their Document.metadata.
        /// Multiple values for a metadata key should be concatenated by comma. For example, filters to match all
        /// documents that have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values
        /// will be
        /// ```
        /// documents_metadata_filters { key: "market" value: "US,CA" } documents_metadata_filters { key:
        /// "user" value: "agent" }
        /// ```
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentsMetadataFilters")]
        public virtual System.Collections.Generic.IDictionary<string, string> DocumentsMetadataFilters { get; set; }

        /// <summary>
        /// Optional. The unique identifier of this participant. Format:
        /// `projects//locations//conversations//participants/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. Obfuscated user id that should be associated with the created participant. You can specify a user
        /// id as follows: 1. If you set this field in CreateParticipantRequest or UpdateParticipantRequest, Dialogflow
        /// adds the obfuscated user id with the participant. 2. If you set this field in AnalyzeContent or
        /// StreamingAnalyzeContent, Dialogflow will update Participant.obfuscated_external_user_id. Dialogflow returns
        /// an error if you try to add a user id for a non-END_USER participant. Dialogflow uses this user id for
        /// billing and measurement purposes. For example, Dialogflow determines whether a user in one conversation
        /// returned in a later conversation. Note: * Please never pass raw user ids to Dialogflow. Always obfuscate
        /// your user id first. * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a hash function
        /// like SHA-512. * The length of the user id must be &amp;lt;= 256 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("obfuscatedExternalUserId")]
        public virtual string ObfuscatedExternalUserId { get; set; }

        /// <summary>
        /// Immutable. The role this participant plays in the conversation. This field must be set during participant
        /// creation and is then immutable.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; }

        /// <summary>
        /// Optional. Label applied to streams representing this participant in SIPREC XML metadata and SDP. This is
        /// used to assign transcriptions from that media stream to this participant. This field can be updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sipRecordingMediaLabel")]
        public virtual string SipRecordingMediaLabel { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the query input. It can contain either: 1. An audio config which instructs the speech recognizer how
    /// to process the speech audio. 2. A conversational query in the form of text. 3. An event that specifies which
    /// intent to trigger.
    /// </summary>
    public class GoogleCloudDialogflowV2QueryInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Instructs the speech recognizer how to process the speech audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioConfig")]
        public virtual GoogleCloudDialogflowV2InputAudioConfig AudioConfig { get; set; }

        /// <summary>The event to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("event")]
        public virtual GoogleCloudDialogflowV2EventInput Event__ { get; set; }

        /// <summary>
        /// The natural language text to be processed. Text length must not exceed 256 character for virtual agent
        /// interactions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowV2TextInput Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the parameters of the conversational query.</summary>
    public class GoogleCloudDialogflowV2QueryParameters : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of contexts to be activated before this query is executed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Context> Contexts { get; set; }

        /// <summary>The geo location of this conversational query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geoLocation")]
        public virtual GoogleTypeLatLng GeoLocation { get; set; }

        /// <summary>
        /// This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If
        /// supplied, the value is used to populate the `WebhookRequest.original_detect_intent_request.payload` field
        /// sent to your webhook.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// The platform of the virtual agent response messages. If not empty, only emits messages from this platform in
        /// the response. Valid values are the enum names of platform.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platform")]
        public virtual string Platform { get; set; }

        /// <summary>
        /// Specifies whether to delete all contexts in the current session before the new ones are activated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resetContexts")]
        public virtual System.Nullable<bool> ResetContexts { get; set; }

        /// <summary>
        /// Configures the type of sentiment analysis to perform. If not provided, sentiment analysis is not performed.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysisRequestConfig")]
        public virtual GoogleCloudDialogflowV2SentimentAnalysisRequestConfig SentimentAnalysisRequestConfig { get; set; }

        /// <summary>
        /// Additional session entity types to replace or extend developer entity types with. The entity synonyms apply
        /// to all languages and persist for the session of this query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionEntityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SessionEntityType> SessionEntityTypes { get; set; }

        /// <summary>
        /// The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones),
        /// e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>
        /// This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along
        /// with the headers that have been configured through the Dialogflow web console. The headers defined within
        /// this field will overwrite the headers configured through the Dialogflow console if there is a conflict.
        /// Header names are case-insensitive. Google's specified headers are not allowed. Including: "Host",
        /// "Content-Length", "Connection", "From", "User-Agent", "Accept-Encoding", "If-Modified-Since",
        /// "If-None-Match", "X-Forwarded-For", etc.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookHeaders")]
        public virtual System.Collections.Generic.IDictionary<string, string> WebhookHeaders { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the result of conversational query or event processing.</summary>
    public class GoogleCloudDialogflowV2QueryResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The action name from the matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>
        /// This field is set to: - `false` if the matched intent has required parameters and not all of the required
        /// parameter values have been collected. - `true` if all required parameter values have been collected, or if
        /// the matched intent doesn't contain any required parameters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allRequiredParamsPresent")]
        public virtual System.Nullable<bool> AllRequiredParamsPresent { get; set; }

        /// <summary>
        /// Indicates whether the conversational query triggers a cancellation for slot filling. For more information,
        /// see the [cancel slot filling
        /// documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cancelsSlotFilling")]
        public virtual System.Nullable<bool> CancelsSlotFilling { get; set; }

        /// <summary>
        /// Free-form diagnostic information for the associated detect intent request. The fields of this data can
        /// change without notice, so you should not write code that depends on its structure. The data may contain: -
        /// webhook call latency - webhook errors
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diagnosticInfo")]
        public virtual System.Collections.Generic.IDictionary<string, object> DiagnosticInfo { get; set; }

        /// <summary>The collection of rich messages to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessage> FulfillmentMessages { get; set; }

        /// <summary>
        /// The text to be pronounced to the user or shown on the screen. Note: This is a legacy field,
        /// `fulfillment_messages` should be preferred.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentText")]
        public virtual string FulfillmentText { get; set; }

        /// <summary>
        /// The intent that matched the conversational query. Some, not all fields are filled in this message, including
        /// but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual GoogleCloudDialogflowV2Intent Intent { get; set; }

        /// <summary>
        /// The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).
        /// This value is for informational purpose only and is only used to help match the best intent within the
        /// classification threshold. This value may change for the same end-user expression at any time due to a model
        /// retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is
        /// set to the greatest `knowledgeAnswers.match_confidence` value in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentDetectionConfidence")]
        public virtual System.Nullable<float> IntentDetectionConfidence { get; set; }

        /// <summary>
        /// The language that was triggered during intent detection. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name
        /// `.original` containing the original parameter values before the query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Context> OutputContexts { get; set; }

        /// <summary>
        /// The collection of extracted parameters. Depending on your protocol or client library language, this is a
        /// map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey,
        /// MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity
        /// type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one
        /// of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite
        /// entity then use map from composite entity property names to property values, otherwise, use parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> Parameters { get; set; }

        /// <summary>
        /// The original conversational query text: - If natural language text was provided as input, `query_text`
        /// contains a copy of the input. - If natural language speech audio was provided as input, `query_text`
        /// contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular
        /// one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user
        /// input.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryText")]
        public virtual string QueryText { get; set; }

        /// <summary>
        /// The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the
        /// request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysisResult")]
        public virtual GoogleCloudDialogflowV2SentimentAnalysisResult SentimentAnalysisResult { get; set; }

        /// <summary>
        /// The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater
        /// likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that
        /// confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't
        /// set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of
        /// the audio in StreamingRecognitionResult.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechRecognitionConfidence")]
        public virtual System.Nullable<float> SpeechRecognitionConfidence { get; set; }

        /// <summary>
        /// If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned
        /// in the webhook response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookPayload")]
        public virtual System.Collections.Generic.IDictionary<string, object> WebhookPayload { get; set; }

        /// <summary>
        /// If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned
        /// in the webhook response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookSource")]
        public virtual string WebhookSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Documents.ReloadDocument.</summary>
    public class GoogleCloudDialogflowV2ReloadDocumentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The path of gcs source file for reloading document content. For now, only gcs uri is supported.
        /// For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentUri")]
        public virtual string ContentUri { get; set; }

        /// <summary>
        /// Optional. Whether to import custom metadata from Google Cloud Storage. Only valid when the document source
        /// is Google Cloud Storage URI.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("importGcsCustomMetadata")]
        public virtual System.Nullable<bool> ImportGcsCustomMetadata { get; set; }

        /// <summary>
        /// Optional. When enabled, the reload request is to apply partial update to the smart messaging allowlist.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("smartMessagingPartialUpdate")]
        public virtual System.Nullable<bool> SmartMessagingPartialUpdate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Agents.RestoreAgent.</summary>
    public class GoogleCloudDialogflowV2RestoreAgentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Zip compressed raw byte content for agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; }

        /// <summary>
        /// The URI to a Google Cloud Storage file containing the agent to restore. Note: The URI must start with
        /// "gs://". Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your
        /// request authentication must have read permissions for the object. For more information, see [Dialogflow
        /// access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Agents.SearchAgents.</summary>
    public class GoogleCloudDialogflowV2SearchAgentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of agents. There will be a maximum number of items returned based on the page_size field in the
        /// request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Agent> Agents { get; set; }

        /// <summary>
        /// Token to retrieve the next page of results, or empty if there are no more results in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a SearchKnowledge answer.</summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The piece of text from the knowledge base documents that answers the search query</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual string Answer { get; set; }

        /// <summary>The name of the answer record. Format: `projects//locations//answer Records/`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>All sources used to generate the answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerSources")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource> AnswerSources { get; set; }

        /// <summary>The type of the answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerType")]
        public virtual string AnswerType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The sources of the answers.</summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata associated with the article.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>The relevant snippet of the article.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual string Snippet { get; set; }

        /// <summary>The title of the article.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The URI of the article.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Conversations.SearchKnowledge.</summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The conversation (between human agent and end user) where the search request is triggered. Format:
        /// `projects//locations//conversations/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversation")]
        public virtual string Conversation { get; set; }

        /// <summary>
        /// Required. The conversation profile used to configure the search. Format:
        /// `projects//locations//conversationProfiles/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProfile")]
        public virtual string ConversationProfile { get; set; }

        /// <summary>
        /// Optional. Information about the end-user to improve the relevance and accuracy of generative answers. This
        /// will be interpreted and used by a language model, so, for good results, the data should be self-descriptive,
        /// and in a simple structure. Example:
        /// ```
        /// json { "subscription plan": "Business Premium Plus", "devices owned":
        /// [ {"model": "Google Pixel 7"}, {"model": "Google Pixel Tablet"} ] }
        /// ```
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endUserMetadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> EndUserMetadata { get; set; }

        /// <summary>Optional. Whether to search the query exactly without query rewrite.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exactSearch")]
        public virtual System.Nullable<bool> ExactSearch { get; set; }

        /// <summary>
        /// Optional. The name of the latest conversation message when the request is triggered. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>
        /// Required. The parent resource contains the conversation profile Format: 'projects/' or
        /// `projects//locations/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parent")]
        public virtual string Parent { get; set; }

        /// <summary>Required. The natural language text query for knowledge search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual GoogleCloudDialogflowV2TextInput Query { get; set; }

        /// <summary>Optional. The source of the query in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("querySource")]
        public virtual string QuerySource { get; set; }

        /// <summary>Optional. Configuration specific to search queries with data stores.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchConfig")]
        public virtual GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfig SearchConfig { get; set; }

        /// <summary>
        /// Required. The ID of the search session. The session_id can be combined with Dialogflow V3 Agent ID retrieved
        /// from conversation profile or on its own to identify a search session. The search history of the same session
        /// will impact the search result. It's up to the API caller to choose an appropriate `Session ID`. It can be a
        /// random number or some type of session identifiers (preferably hashed). The length must not exceed 36
        /// characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionId")]
        public virtual string SessionId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration specific to search queries with data stores.</summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Boost specifications for data stores. Maps from datastore name to their boost configuration. Do
        /// not specify more than one BoostSpecs for each datastore name. If multiple BoostSpecs are provided for the
        /// same datastore name, the behavior is undefined.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecs> BoostSpecs { get; set; }

        /// <summary>
        /// Optional. Filter specification for data store queries. TMaps from datastore name to the filter expression
        /// for that datastore. Do not specify more than one FilterSpecs for each datastore name. If multiple
        /// FilterSpecs are provided for the same datastore name, the behavior is undefined.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigFilterSpecs> FilterSpecs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Boost specifications for data stores.</summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecs : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Data Stores where the boosting configuration is applied. The full names of the referenced data
        /// stores. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
        /// `projects/{project}/locations/{location}/dataStores/{data_store}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStores")]
        public virtual System.Collections.Generic.IList<string> DataStores { get; set; }

        /// <summary>Optional. A list of boosting specifications.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spec")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecsBoostSpec> Spec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Boost specification to boost certain documents. A copy of google.cloud.discoveryengine.v1main.BoostSpec, field
    /// documentation is available at
    /// https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1alpha/BoostSpec
    /// </summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecsBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Condition boost specifications. If a document matches multiple conditions in the specifications,
        /// boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of
        /// specifications is 20.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditionBoostSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecsBoostSpecConditionBoostSpec> ConditionBoostSpecs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Boost applies to documents which match a condition.</summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecsBoostSpecConditionBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion.
        /// Default is 0.0. Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean
        /// that the boosted document will be the top result at all times, nor that other documents will be excluded.
        /// Results could still be shown even when none of them matches the condition. And results that are
        /// significantly more relevant to the search query can still trump your heavily favored but irrelevant
        /// documents. Setting to -1.0 gives the document a big demotion. However, results that are deeply relevant
        /// might still be shown. The document will have an upstream battle to get a fairly high ranking, but it is not
        /// blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boost")]
        public virtual System.Nullable<float> Boost { get; set; }

        /// <summary>
        /// Optional. Complex specification for custom ranking based on customer defined attribute value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostControlSpec")]
        public virtual GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecsBoostSpecConditionBoostSpecBoostControlSpec BoostControlSpec { get; set; }

        /// <summary>
        /// Optional. An expression which specifies a boost condition. The syntax and supported fields are the same as a
        /// filter expression. Examples: * To boost documents with document ID "doc_1" or "doc_2", and color "Red" or
        /// "Blue": * (id: ANY("doc_1", "doc_2")) AND (color: ANY("Red","Blue"))
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specification for custom ranking based on customer specified attribute value. It provides more controls for
    /// customized ranking than the simple (condition, boost) combination above.
    /// </summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecsBoostSpecConditionBoostSpecBoostControlSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The attribute type to be used to determine the boost amount. The attribute value can be derived
        /// from the field value of the specified field_name. In the case of numerical it is straightforward i.e.
        /// attribute_value = numerical_field_value. In the case of freshness however, attribute_value = (time.now() -
        /// datetime_field_value).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeType")]
        public virtual string AttributeType { get; set; }

        /// <summary>
        /// Optional. The control points used to define the curve. The monotonic function (defined through the
        /// interpolation_type above) passes through the control points listed here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("controlPoints")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecsBoostSpecConditionBoostSpecBoostControlSpecControlPoint> ControlPoints { get; set; }

        /// <summary>Optional. The name of the field whose value will be used to determine the boost amount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>
        /// Optional. The interpolation type to be applied to connect the control points listed below.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationType")]
        public virtual string InterpolationType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The control points used to define the curve. The curve defined through these control points can only be
    /// monotonically increasing or decreasing(constant values are acceptable).
    /// </summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigBoostSpecsBoostSpecConditionBoostSpecBoostControlSpecControlPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be
        /// formatted as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern
        /// for this is: `nDnM]`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeValue")]
        public virtual string AttributeValue { get; set; }

        /// <summary>
        /// Optional. The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the
        /// value specified above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAmount")]
        public virtual System.Nullable<float> BoostAmount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Filter specification for data store queries.</summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeRequestSearchConfigFilterSpecs : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The data store where the filter configuration is applied. Full resource name of data store, such
        /// as projects/{project}/locations/{location}/collections/{collectionId}/ dataStores/{dataStoreId}.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStores")]
        public virtual System.Collections.Generic.IList<string> DataStores { get; set; }

        /// <summary>
        /// Optional. The filter expression to be applied. Expression syntax is documented at
        /// https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-expression-syntax
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Conversations.SearchKnowledge.</summary>
    public class GoogleCloudDialogflowV2SearchKnowledgeResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Most relevant snippets extracted from articles in the given knowledge base, ordered by confidence.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SearchKnowledgeAnswer> Answers { get; set; }

        /// <summary>The rewritten query used to search knowledge.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewrittenQuery")]
        public virtual string RewrittenQuery { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.
    /// See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to
    /// interpret the result.
    /// </summary>
    public class GoogleCloudDialogflowV2Sentiment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment,
        /// regardless of score (positive or negative).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("magnitude")]
        public virtual System.Nullable<float> Magnitude { get; set; }

        /// <summary>Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("score")]
        public virtual System.Nullable<float> Score { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configures the types of sentiment analysis to perform.</summary>
    public class GoogleCloudDialogflowV2SentimentAnalysisRequestConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Instructs the service to perform sentiment analysis on `query_text`. If not provided, sentiment analysis is
        /// not performed on `query_text`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("analyzeQueryTextSentiment")]
        public virtual System.Nullable<bool> AnalyzeQueryTextSentiment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing
    /// subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For
    /// DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For StreamingDetectIntent, it needs
    /// to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and
    /// Participants.StreamingAnalyzeContent, it needs to be configured in
    /// ConversationProfile.human_agent_assistant_config
    /// </summary>
    public class GoogleCloudDialogflowV2SentimentAnalysisResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The sentiment analysis result for `query_text`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryTextSentiment")]
        public virtual GoogleCloudDialogflowV2Sentiment QueryTextSentiment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities,
    /// called session entities, during a session. Session entities can extend or replace custom entity types and only
    /// exist during the session that they were created for. All session data, including session entities, is stored by
    /// Dialogflow for 20 minutes. For more information, see the [session entity
    /// guide](https://cloud.google.com/dialogflow/docs/entities-session).
    /// </summary>
    public class GoogleCloudDialogflowV2SessionEntityType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The collection of entities associated with this session entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2EntityTypeEntity> Entities { get; set; }

        /// <summary>
        /// Required. Indicates whether the additional data should override or supplement the custom entity type
        /// definition.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityOverrideMode")]
        public virtual string EntityOverrideMode { get; set; }

        /// <summary>
        /// Required. The unique identifier of this session entity type. Format:
        /// `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`.
        /// If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified,
        /// we assume default '-' user. `` must be the display name of an existing entity type in the same agent that
        /// will be overridden or supplemented.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationProfiles.SetSuggestionFeatureConfig operation.</summary>
    public class GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProfile")]
        public virtual string ConversationProfile { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Timestamp whe the request was created. The time is measured on server side.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER
        /// can be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; }

        /// <summary>Required. The type of the suggestion feature to add or update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionFeatureType")]
        public virtual string SuggestionFeatureType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for ConversationProfiles.SetSuggestionFeatureConfig.</summary>
    public class GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER
        /// can be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; }

        /// <summary>Required. The suggestion feature config to add or update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionFeatureConfig")]
        public virtual GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig SuggestionFeatureConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a smart reply answer.</summary>
    public class GoogleCloudDialogflowV2SmartReplyAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of answer record, in the format of "projects//locations//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>
        /// Smart reply confidence. The system's confidence score that this reply is a good match for this conversation,
        /// as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>The content of the reply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reply")]
        public virtual string Reply { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The evaluation metrics for smart reply model.</summary>
    public class GoogleCloudDialogflowV2SmartReplyMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Percentage of target participant messages in the evaluation dataset for which similar messages have appeared
        /// at least once in the allowlist. Should be [0, 1].
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowlistCoverage")]
        public virtual System.Nullable<float> AllowlistCoverage { get; set; }

        /// <summary>Total number of conversations used to generate this metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationCount")]
        public virtual System.Nullable<long> ConversationCount { get; set; }

        /// <summary>Metrics of top n smart replies, sorted by TopNMetric.n.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topNMetrics")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics> TopNMetrics { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Evaluation metrics when retrieving `n` smart replies with the model.</summary>
    public class GoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of retrieved smart replies. For example, when `n` is 3, this evaluation contains metrics for when
        /// Dialogflow retrieves 3 smart replies with the model.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("n")]
        public virtual System.Nullable<int> N { get; set; }

        /// <summary>
        /// Defined as `number of queries whose top n smart replies have at least one similar (token match similarity
        /// above the defined threshold) reply as the real reply` divided by `number of queries with at least one smart
        /// reply`. Value ranges from 0.0 to 1.0 inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recall")]
        public virtual System.Nullable<float> Recall { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for smart reply models.</summary>
    public class GoogleCloudDialogflowV2SmartReplyModelMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Type of the smart reply model. If not provided, model_type is used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingModelType")]
        public virtual string TrainingModelType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Hints for the speech recognizer to help with recognition in a specific conversation state.</summary>
    public class GoogleCloudDialogflowV2SpeechContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Boost for this context compared to other contexts: * If the boost is positive, Dialogflow will
        /// increase the probability that the phrases in this context are recognized over similar sounding phrases. * If
        /// the boost is unspecified or non-positive, Dialogflow will not apply any boost. Dialogflow recommends that
        /// you use boosts in the range (0, 20] and that you find a value that fits your use case with binary search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boost")]
        public virtual System.Nullable<float> Boost { get; set; }

        /// <summary>
        /// Optional. A list of strings containing words and phrases that the speech recognizer should recognize with
        /// higher likelihood. This list can be used to: * improve accuracy for words and phrases you expect the user to
        /// say, e.g. typical commands for your Dialogflow agent * add additional words to the speech recognizer
        /// vocabulary * ... See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/quotas) for
        /// usage limits.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phrases")]
        public virtual System.Collections.Generic.IList<string> Phrases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configures speech transcription for ConversationProfile.</summary>
    public class GoogleCloudDialogflowV2SpeechToTextConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Audio encoding of the audio content to process.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioEncoding")]
        public virtual string AudioEncoding { get; set; }

        /// <summary>
        /// If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the
        /// recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any
        /// word-level information.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableWordInfo")]
        public virtual System.Nullable<bool> EnableWordInfo { get; set; }

        /// <summary>
        /// The language of the supplied audio. Dialogflow does not do translations. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes. Note that queries in the same session do not necessarily need to specify the same language.
        /// If not specified, the default language configured at ConversationProfile is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// Which Speech model to select. Select the model best suited to your domain to get best results. If a model is
        /// not explicitly specified, then Dialogflow auto-selects a model based on other parameters in the
        /// SpeechToTextConfig and Agent settings. If enhanced speech model is enabled for the agent and an enhanced
        /// version of the specified model for the language does not exist, then the speech is recognized using the
        /// standard version of the specified model. Refer to [Cloud Speech API
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you
        /// specify a model, the following models typically have the best performance: - phone_call (best for Agent
        /// Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search Leave this
        /// field unspecified to use [Agent Speech
        /// settings](https://cloud.google.com/dialogflow/cx/docs/concept/agent#settings-speech) for model selection.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("model")]
        public virtual string Model { get; set; }

        /// <summary>
        /// List of names of Cloud Speech phrase sets that are used for transcription. For phrase set limitations,
        /// please refer to [Cloud Speech API quotas and
        /// limits](https://cloud.google.com/speech-to-text/quotas#content).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phraseSets")]
        public virtual System.Collections.Generic.IList<string> PhraseSets { get; set; }

        /// <summary>
        /// Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API
        /// documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleRateHertz")]
        public virtual System.Nullable<int> SampleRateHertz { get; set; }

        /// <summary>
        /// The speech model used in speech to text. `SPEECH_MODEL_VARIANT_UNSPECIFIED`, `USE_BEST_AVAILABLE` will be
        /// treated as `USE_ENHANCED`. It can be overridden in AnalyzeContentRequest and StreamingAnalyzeContentRequest
        /// request. If enhanced model variant is specified and an enhanced version of the specified model for the
        /// language does not exist, then it would emit an error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechModelVariant")]
        public virtual string SpeechModelVariant { get; set; }

        /// <summary>
        /// Use timeout based endpointing, interpreting endpointer sensitivity as seconds of timeout value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useTimeoutBasedEndpointing")]
        public virtual System.Nullable<bool> UseTimeoutBasedEndpointing { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information for a word recognized by the speech recognizer.</summary>
    public class GoogleCloudDialogflowV2SpeechWordInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Speech confidence between 0.0 and 1.0 for this word. A higher number indicates an estimated greater
        /// likelihood that the recognized word is correct. The default of 0.0 is a sentinel value indicating that
        /// confidence was not set. This field is not guaranteed to be fully stable over time for the same audio input.
        /// Users should also not rely on it to always be provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>
        /// Time offset relative to the beginning of the audio that corresponds to the end of the spoken word. This is
        /// an experimental feature and the accuracy of the time offset can vary.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endOffset")]
        public virtual object EndOffset { get; set; }

        /// <summary>
        /// Time offset relative to the beginning of the audio that corresponds to the start of the spoken word. This is
        /// an experimental feature and the accuracy of the time offset can vary.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startOffset")]
        public virtual object StartOffset { get; set; }

        /// <summary>The word this info is for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("word")]
        public virtual string Word { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains a speech recognition result corresponding to a portion of the audio that is currently being processed
    /// or an indication that this is the end of the single requested utterance. While end-user audio is being
    /// processed, Dialogflow sends a series of results. Each result may contain a `transcript` value. A transcript
    /// represents a portion of the utterance. While the recognizer is processing audio, transcript values may be
    /// interim values or finalized values. Once a transcript is finalized, the `is_final` value is set to true and
    /// processing continues for the next transcript. If
    /// `StreamingDetectIntentRequest.query_input.audio_config.single_utterance` was true, and the recognizer has
    /// completed processing audio, the `message_type` value is set to `END_OF_SINGLE_UTTERANCE and the following (last)
    /// result contains the last finalized transcript. The complete end-user utterance is determined by concatenating
    /// the finalized transcript values received for the series of results. In the following example, single utterance
    /// is enabled. In the case where single utterance is not enabled, result 7 would not occur.
    /// ```
    /// Num | transcript |
    /// message_type | is_final --- | ----------------------- | ----------------------- | -------- 1 | "tube" |
    /// TRANSCRIPT | false 2 | "to be a" | TRANSCRIPT | false 3 | "to be" | TRANSCRIPT | false 4 | "to be or not to be"
    /// | TRANSCRIPT | true 5 | "that's" | TRANSCRIPT | false 6 | "that is | TRANSCRIPT | false 7 | unset |
    /// END_OF_SINGLE_UTTERANCE | unset 8 | " that is the question" | TRANSCRIPT | true
    /// ```
    /// Concatenating the finalized
    /// transcripts with `is_final` set to true, the complete utterance becomes "to be or not to be that is the
    /// question".
    /// </summary>
    public class GoogleCloudDialogflowV2StreamingRecognitionResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Speech confidence between 0.0 and 1.0 for the current portion of audio. A higher number indicates an
        /// estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value
        /// indicating that confidence was not set. This field is typically only provided if `is_final` is true and you
        /// should not rely on it being accurate or even set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>
        /// If `false`, the `StreamingRecognitionResult` represents an interim result that may change. If `true`, the
        /// recognizer will not return any further hypotheses about this piece of the audio. May only be populated for
        /// `message_type` = `TRANSCRIPT`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isFinal")]
        public virtual System.Nullable<bool> IsFinal { get; set; }

        /// <summary>Detected language code for the transcript.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Type of the result message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageType")]
        public virtual string MessageType { get; set; }

        /// <summary>
        /// Time offset of the end of this Speech recognition result relative to the beginning of the audio. Only
        /// populated for `message_type` = `TRANSCRIPT`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechEndOffset")]
        public virtual object SpeechEndOffset { get; set; }

        /// <summary>
        /// Word-specific information for the words recognized by Speech in transcript. Populated if and only if
        /// `message_type` = `TRANSCRIPT` and [InputAudioConfig.enable_word_info] is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechWordInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SpeechWordInfo> SpeechWordInfo { get; set; }

        /// <summary>
        /// Transcript text representing the words that the user spoke. Populated if and only if `message_type` =
        /// `TRANSCRIPT`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transcript")]
        public virtual string Transcript { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Participants.SuggestArticles.</summary>
    public class GoogleCloudDialogflowV2SuggestArticlesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Parameters for a human assist query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assistQueryParams")]
        public virtual GoogleCloudDialogflowV2AssistQueryParameters AssistQueryParams { get; set; }

        /// <summary>
        /// Optional. Max number of messages prior to and including latest_message to use as context when compiling the
        /// suggestion. By default 20 and at most 50.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// Optional. The name of the latest conversation message to compile suggestion for. If empty, it will be the
        /// latest message of the conversation. Format: `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.SuggestArticles.</summary>
    public class GoogleCloudDialogflowV2SuggestArticlesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Articles ordered by score in descending order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("articleAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ArticleAnswer> ArticleAnswers { get; set; }

        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestArticlesRequest.context_size field in the request if there aren't that many messages in the
        /// conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to compile suggestion for. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Conversations.SuggestConversationSummary.</summary>
    public class GoogleCloudDialogflowV2SuggestConversationSummaryRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Parameters for a human assist query. Only used for POC/demo purpose.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assistQueryParams")]
        public virtual GoogleCloudDialogflowV2AssistQueryParameters AssistQueryParams { get; set; }

        /// <summary>
        /// Optional. Max number of messages prior to and including [latest_message] to use as context when compiling
        /// the suggestion. By default 500 and at most 1000.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// Optional. The name of the latest conversation message used as context for compiling suggestion. If empty,
        /// the latest message of the conversation will be used. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Conversations.SuggestConversationSummary.</summary>
    public class GoogleCloudDialogflowV2SuggestConversationSummaryResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message used to compile the suggestion. It may be smaller
        /// than the SuggestConversationSummaryRequest.context_size field in the request if there weren't that many
        /// messages in the conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// The name of the latest conversation message used as context for compiling suggestion. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>Generated summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual GoogleCloudDialogflowV2SuggestConversationSummaryResponseSummary Summary { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Generated summary for a conversation.</summary>
    public class GoogleCloudDialogflowV2SuggestConversationSummaryResponseSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the answer record. Format: "projects//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>
        /// The baseline model version used to generate this summary. It is empty if a baseline model was not used to
        /// generate this summary.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("baselineModelVersion")]
        public virtual string BaselineModelVersion { get; set; }

        /// <summary>The summary content that is concatenated into one string.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>
        /// The summary content that is divided into sections. The key is the section's name and the value is the
        /// section's content. There is no specific format for the key or value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textSections")]
        public virtual System.Collections.Generic.IDictionary<string, string> TextSections { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Participants.SuggestFaqAnswers.</summary>
    public class GoogleCloudDialogflowV2SuggestFaqAnswersRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Parameters for a human assist query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assistQueryParams")]
        public virtual GoogleCloudDialogflowV2AssistQueryParameters AssistQueryParams { get; set; }

        /// <summary>
        /// Optional. Max number of messages prior to and including [latest_message] to use as context when compiling
        /// the suggestion. By default 20 and at most 50.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// Optional. The name of the latest conversation message to compile suggestion for. If empty, it will be the
        /// latest message of the conversation. Format: `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Participants.SuggestFaqAnswers.</summary>
    public class GoogleCloudDialogflowV2SuggestFaqAnswersResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the
        /// conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>Answers extracted from FAQ documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faqAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2FaqAnswer> FaqAnswers { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to compile suggestion for. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Participants.SuggestKnowledgeAssist.</summary>
    public class GoogleCloudDialogflowV2SuggestKnowledgeAssistRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Max number of messages prior to and including latest_message to use as context when compiling the
        /// suggestion. The context size is by default 100 and at most 100.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// Optional. The name of the latest conversation message to compile suggestions for. If empty, it will be the
        /// latest message of the conversation. Format: `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>
        /// Optional. The previously suggested query for the given conversation. This helps identify whether the next
        /// suggestion we generate is reasonably different from the previous one. This is useful to avoid similar
        /// suggestions within the conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("previousSuggestedQuery")]
        public virtual string PreviousSuggestedQuery { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.SuggestKnowledgeAssist.</summary>
    public class GoogleCloudDialogflowV2SuggestKnowledgeAssistResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestKnowledgeAssistRequest.context_size field in the request if there are fewer messages in the
        /// conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>Output only. Knowledge Assist suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeAssistAnswer")]
        public virtual GoogleCloudDialogflowV2KnowledgeAssistAnswer KnowledgeAssistAnswer { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to compile suggestion for. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Participants.SuggestSmartReplies.</summary>
    public class GoogleCloudDialogflowV2SuggestSmartRepliesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Max number of messages prior to and including [latest_message] to use as context when compiling the
        /// suggestion. By default 20 and at most 50.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// The current natural language text segment to compile suggestion for. This provides a way for user to get
        /// follow up smart reply suggestion after a smart reply selection, without sending a text message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currentTextInput")]
        public virtual GoogleCloudDialogflowV2TextInput CurrentTextInput { get; set; }

        /// <summary>
        /// The name of the latest conversation message to compile suggestion for. If empty, it will be the latest
        /// message of the conversation. Format: `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.SuggestSmartReplies.</summary>
    public class GoogleCloudDialogflowV2SuggestSmartRepliesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the
        /// conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to compile suggestion for. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>
        /// Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the
        /// model prediction. The maximum number of the returned replies is set in SmartReplyConfig.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("smartReplyAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SmartReplyAnswer> SmartReplyAnswers { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The type of Human Agent Assistant API suggestion to perform, and the maximum number of results to return for
    /// that type. Multiple `Feature` objects can be specified in the `features` list.
    /// </summary>
    public class GoogleCloudDialogflowV2SuggestionFeature : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Type of Human Agent Assistant API feature to request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the selection of a suggestion.</summary>
    public class GoogleCloudDialogflowV2SuggestionInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The ID of a suggestion selected by the human agent. The suggestion(s) were generated in a previous
        /// call to request Dialogflow assist. The format is: `projects//locations//answerRecords/` where is an
        /// alphanumeric string.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// One response of different type of suggestion response which is used in the response of
    /// Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.
    /// </summary>
    public class GoogleCloudDialogflowV2SuggestionResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Error status if the request failed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>Suggestions generated using generators triggered by customer or agent messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generateSuggestionsResponse")]
        public virtual GoogleCloudDialogflowV2GenerateSuggestionsResponse GenerateSuggestionsResponse { get; set; }

        /// <summary>SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestArticlesResponse")]
        public virtual GoogleCloudDialogflowV2SuggestArticlesResponse SuggestArticlesResponse { get; set; }

        /// <summary>SuggestFaqAnswersResponse if request is for FAQ_ANSWER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestFaqAnswersResponse")]
        public virtual GoogleCloudDialogflowV2SuggestFaqAnswersResponse SuggestFaqAnswersResponse { get; set; }

        /// <summary>SuggestKnowledgeAssistResponse if request is for KNOWLEDGE_ASSIST.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestKnowledgeAssistResponse")]
        public virtual GoogleCloudDialogflowV2SuggestKnowledgeAssistResponse SuggestKnowledgeAssistResponse { get; set; }

        /// <summary>SuggestSmartRepliesResponse if request is for SMART_REPLY.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestSmartRepliesResponse")]
        public virtual GoogleCloudDialogflowV2SuggestSmartRepliesResponse SuggestSmartRepliesResponse { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Summarization context that customer can configure.</summary>
    public class GoogleCloudDialogflowV2SummarizationContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of few shot examples.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fewShotExamples")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2FewShotExample> FewShotExamples { get; set; }

        /// <summary>
        /// Optional. The target language of the generated summary. The language code for conversation will be used if
        /// this field is empty. Supported 2.0 and later versions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputLanguageCode")]
        public virtual string OutputLanguageCode { get; set; }

        /// <summary>
        /// Optional. List of sections. Note it contains both predefined section sand customer defined sections.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarizationSections")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SummarizationSection> SummarizationSections { get; set; }

        /// <summary>
        /// Optional. Version of the feature. If not set, default to latest version. Current candidates are ["1.0"].
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the section of summarization.</summary>
    public class GoogleCloudDialogflowV2SummarizationSection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Definition of the section, for example, "what the customer needs help with or has question about."
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("definition")]
        public virtual string Definition { get; set; }

        /// <summary>Optional. Name of the section, for example, "situation".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; }

        /// <summary>Optional. Type of the summarization section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>List of summarization sections.</summary>
    public class GoogleCloudDialogflowV2SummarizationSectionList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Summarization sections.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarizationSections")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SummarizationSection> SummarizationSections { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggested summary of the conversation.</summary>
    public class GoogleCloudDialogflowV2SummarySuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. All the parts of generated summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySections")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SummarySuggestionSummarySection> SummarySections { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A component of the generated summary.</summary>
    public class GoogleCloudDialogflowV2SummarySuggestionSummarySection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Name of the section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("section")]
        public virtual string Section { get; set; }

        /// <summary>Required. Summary text for the section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration of how speech should be synthesized.</summary>
    public class GoogleCloudDialogflowV2SynthesizeSpeechConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text
        /// to speech. Effects are applied on top of each other in the order they are given.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("effectsProfileId")]
        public virtual System.Collections.Generic.IList<string> EffectsProfileId { get; set; }

        /// <summary>
        /// Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original
        /// pitch. -20 means decrease 20 semitones from the original pitch.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pitch")]
        public virtual System.Nullable<double> Pitch { get; set; }

        /// <summary>Optional. The custom pronunciations for the synthesized audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pronunciations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2CustomPronunciationParams> Pronunciations { get; set; }

        /// <summary>
        /// Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the
        /// specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0
        /// speed. Any other values &amp;lt; 0.25 or &amp;gt; 4.0 will return an error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speakingRate")]
        public virtual System.Nullable<double> SpeakingRate { get; set; }

        /// <summary>Optional. The desired voice of the synthesized audio.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("voice")]
        public virtual GoogleCloudDialogflowV2VoiceSelectionParams Voice { get; set; }

        /// <summary>
        /// Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range
        /// [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value
        /// of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of
        /// +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly
        /// recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater
        /// than that.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("volumeGainDb")]
        public virtual System.Nullable<double> VolumeGainDb { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Auxiliary proto messages. Represents the natural language text to be processed.</summary>
    public class GoogleCloudDialogflowV2TextInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The language of this conversational query. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes. Note that queries in the same session do not necessarily need to specify the same language.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256
        /// characters for virtual agent interactions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Instructs the speech synthesizer on how to generate the output audio content.</summary>
    public class GoogleCloudDialogflowV2TextToSpeechSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this
        /// proto are still retained.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableTextToSpeech")]
        public virtual System.Nullable<bool> EnableTextToSpeech { get; set; }

        /// <summary>Required. Audio encoding of the synthesized audio content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputAudioEncoding")]
        public virtual string OutputAudioEncoding { get; set; }

        /// <summary>
        /// Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will
        /// use the default sample rate based on the audio encoding. If this is different from the voice's natural
        /// sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which
        /// might result in worse audio quality).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleRateHertz")]
        public virtual System.Nullable<int> SampleRateHertz { get; set; }

        /// <summary>
        /// Optional. Configuration of how speech should be synthesized, mapping from language
        /// (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synthesizeSpeechConfigs")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDialogflowV2SynthesizeSpeechConfig> SynthesizeSpeechConfigs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a call of a specific tool's action with the specified inputs.</summary>
    public class GoogleCloudDialogflowV2ToolCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the tool's action associated with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Create time of the tool call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Optional. The action's input parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> InputParameters { get; set; }

        /// <summary>Required. The tool associated with this call. Format: `projects//locations//tools/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tool")]
        public virtual string Tool { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The result of calling a tool's action.</summary>
    public class GoogleCloudDialogflowV2ToolCallResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the tool's action associated with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>Only populated if the response content is utf-8 encoded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Create time of the tool call result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The tool call's error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleCloudDialogflowV2ToolCallResultError Error { get; set; }

        /// <summary>
        /// Only populated if the response content is not utf-8 encoded. (by definition byte fields are base64 encoded).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawContent")]
        public virtual string RawContent { get; set; }

        /// <summary>Required. The tool associated with this call. Format: `projects//locations//tools/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tool")]
        public virtual string Tool { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An error produced by the tool call.</summary>
    public class GoogleCloudDialogflowV2ToolCallResultError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The error message of the function.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Agents.TrainAgent.</summary>
    public class GoogleCloudDialogflowV2TrainAgentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationModels.UndeployConversationModel operation.</summary>
    public class GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The resource name of the conversation model. Format: `projects//conversationModels/`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationModel")]
        public virtual string ConversationModel { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>
        /// Timestamp when the request to undeploy conversation model was submitted. The time is measured on server
        /// side.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for ConversationModels.UndeployConversationModel</summary>
    public class GoogleCloudDialogflowV2UndeployConversationModelRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a single validation error.</summary>
    public class GoogleCloudDialogflowV2ValidationError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The names of the entries that the error is associated with. Format: - `projects//agent`, if the error is
        /// associated with the entire agent. - `projects//agent/intents/`, if the error is associated with certain
        /// intents. - `projects//agent/intents//trainingPhrases/`, if the error is associated with certain intent
        /// training phrases. - `projects//agent/intents//parameters/`, if the error is associated with certain intent
        /// parameters. - `projects//agent/entities/`, if the error is associated with certain entities.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entries")]
        public virtual System.Collections.Generic.IList<string> Entries { get; set; }

        /// <summary>The detailed error message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorMessage")]
        public virtual string ErrorMessage { get; set; }

        /// <summary>The severity of the error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("severity")]
        public virtual string Severity { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the output of agent validation.</summary>
    public class GoogleCloudDialogflowV2ValidationResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Contains all validation errors.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validationErrors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2ValidationError> ValidationErrors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// You can create multiple versions of your agent and publish them to separate environments. When you edit an
    /// agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is
    /// an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment.
    /// When you create agent versions, you can publish them to custom environments. You can create a variety of custom
    /// environments for: - testing - development - production - etc. For more information, see the [versions and
    /// environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).
    /// </summary>
    public class GoogleCloudDialogflowV2Version : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>
        /// Output only. The creation time of this version. This field is read-only, i.e., it cannot be set by create
        /// and update methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Optional. The developer-provided description of this version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` -
        /// `projects//locations//agent/versions/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Output only. The status of this version. This field is read-only and cannot be set by create and update
        /// methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>
        /// Output only. The sequential number of this version. This field is read-only which means it cannot be set by
        /// create and update methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("versionNumber")]
        public virtual System.Nullable<int> VersionNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Description of which voice to use for speech synthesis.</summary>
    public class GoogleCloudDialogflowV2VoiceSelectionParams : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters
        /// such as language_code and ssml_gender.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other
        /// parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice
        /// of the appropriate gender is not available, the synthesizer should substitute a voice with a different
        /// gender rather than failing the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssmlGender")]
        public virtual string SsmlGender { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for a webhook call.</summary>
    public class GoogleCloudDialogflowV2WebhookRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalDetectIntentRequest")]
        public virtual GoogleCloudDialogflowV2OriginalDetectIntentRequest OriginalDetectIntentRequest { get; set; }

        /// <summary>
        /// The result of the conversational query or event processing. Contains the same value as
        /// `[Streaming]DetectIntentResponse.query_result`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryResult")]
        public virtual GoogleCloudDialogflowV2QueryResult QueryResult { get; set; }

        /// <summary>
        /// The unique identifier of the response. Contains the same value as
        /// `[Streaming]DetectIntentResponse.response_id`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseId")]
        public virtual string ResponseId { get; set; }

        /// <summary>
        /// The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook
        /// implementation. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The response message for a webhook call. This response is validated by the Dialogflow server. If validation
    /// fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value
    /// with the wrong type is a common error. To avoid this error: - Use `""` for empty strings - Use `{}` or `null`
    /// for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language
    /// Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
    /// </summary>
    public class GoogleCloudDialogflowV2WebhookResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`,
        /// `fulfillment_messages`, and `payload` fields.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupEventInput")]
        public virtual GoogleCloudDialogflowV2EventInput FollowupEventInput { get; set; }

        /// <summary>
        /// Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to
        /// populate QueryResult.fulfillment_messages sent to the integration or API caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2IntentMessage> FulfillmentMessages { get; set; }

        /// <summary>
        /// Optional. The text response message intended for the end-user. It is recommended to use
        /// `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate
        /// QueryResult.fulfillment_text sent to the integration or API caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentText")]
        public virtual string FulfillmentText { get; set; }

        /// <summary>
        /// Optional. The collection of output contexts that will overwrite currently active contexts for the session
        /// and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts
        /// sent to the integration or API caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2Context> OutputContexts { get; set; }

        /// <summary>
        /// Optional. This field can be used to pass custom data from your webhook to the integration or API caller.
        /// Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate
        /// QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google
        /// Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response
        /// messages. See the format definition at [Google Assistant Dialogflow webhook
        /// format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// Optional. Additional session entity types to replace or extend developer entity types with. The entity
        /// synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the
        /// session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType
        /// management methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionEntityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2SessionEntityType> SessionEntityTypes { get; set; }

        /// <summary>
        /// Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When
        /// provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API
        /// caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of
    /// the message between two entities or message start/end.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1AnnotatedMessagePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The [Dialogflow system entity
        /// type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is
        /// empty, Dialogflow could not annotate the phrase part with a system entity.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; }

        /// <summary>
        /// Optional. The [Dialogflow system entity formatted value
        /// ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for
        /// a system entity of type `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" }
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedValue")]
        public virtual object FormattedValue { get; set; }

        /// <summary>Required. A part of a message possibly annotated with an entity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents article answer.</summary>
    public class GoogleCloudDialogflowV2beta1ArticleAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of answer record, in the format of "projects//locations//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>A map that contains metadata about the answer and the document from which it originates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>Output only. Article snippets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippets")]
        public virtual System.Collections.Generic.IList<string> Snippets { get; set; }

        /// <summary>The article title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The article URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for EntityTypes.BatchUpdateEntityTypes.</summary>
    public class GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of updated or created entity types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1EntityType> EntityTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Intents.BatchUpdateIntents.</summary>
    public class GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The collection of updated or created intents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1Intent> Intents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.</summary>
    public class GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProfile")]
        public virtual string ConversationProfile { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Timestamp whe the request was created. The time is measured on server side.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be
        /// used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; }

        /// <summary>Required. The type of the suggestion feature to remove.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionFeatureType")]
        public virtual string SuggestionFeatureType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Dialogflow contexts are similar to natural language context. If a person says to you "they are orange", you need
    /// context in order to understand what "they" is referring to. Similarly, for Dialogflow to handle an end-user
    /// expression like that, it needs to be provided with context in order to correctly match an intent. Using
    /// contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input
    /// and output contexts, which are identified by string names. When an intent is matched, any configured output
    /// contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match
    /// intents that are configured with input contexts that correspond to the currently active contexts. For more
    /// information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
    /// </summary>
    public class GoogleCloudDialogflowV2beta1Context : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The number of conversational query requests after which the context expires. The default is `0`.
        /// If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are
        /// no matching queries.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifespanCount")]
        public virtual System.Nullable<int> LifespanCount { get; set; }

        /// <summary>
        /// Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`,
        /// - `projects//locations//agent/sessions//contexts/`, -
        /// `projects//agent/environments//users//sessions//contexts/`, -
        /// `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted
        /// to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If
        /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we
        /// assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should
        /// not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context`
        /// * `*_dialog_params_size`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The collection of parameters associated with this context. Depending on your protocol or client
        /// library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a
        /// collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue
        /// type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter
        /// value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's
        /// entity type is a composite entity then use map from composite entity property names to property values,
        /// otherwise, use parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> Parameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.</summary>
    public class GoogleCloudDialogflowV2beta1ConversationEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The unique identifier of the conversation this notification refers to. Format:
        /// `projects//conversations/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversation")]
        public virtual string Conversation { get; set; }

        /// <summary>
        /// Optional. More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorStatus")]
        public virtual GoogleRpcStatus ErrorStatus { get; set; }

        /// <summary>Payload of NEW_MESSAGE event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newMessagePayload")]
        public virtual GoogleCloudDialogflowV2beta1Message NewMessagePayload { get; set; }

        /// <summary>Payload of NEW_RECOGNITION_RESULT event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newRecognitionResultPayload")]
        public virtual GoogleCloudDialogflowV2beta1StreamingRecognitionResult NewRecognitionResultPayload { get; set; }

        /// <summary>Required. The type of the event that this notification refers to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a Dialogflow assist answer.</summary>
    public class GoogleCloudDialogflowV2beta1DialogflowAssistAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of answer record, in the format of "projects//locations//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>An intent suggestion generated from conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentSuggestion")]
        public virtual GoogleCloudDialogflowV2beta1IntentSuggestion IntentSuggestion { get; set; }

        /// <summary>Result from v2 agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryResult")]
        public virtual GoogleCloudDialogflowV2beta1QueryResult QueryResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A customer-managed encryption key specification that can be applied to all created resources (e.g.
    /// Conversation).
    /// </summary>
    public class GoogleCloudDialogflowV2beta1EncryptionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The name of customer-managed encryption key that is used to secure a resource and its
        /// sub-resources. If empty, the resource is secured by the default Google encryption key. Only the key in the
        /// same location as this resource is allowed to be used for encryption. Format:
        /// `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{key}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKey")]
        public virtual string KmsKey { get; set; }

        /// <summary>
        /// Immutable. The resource name of the encryption key specification resource. Format:
        /// projects/{project}/locations/{location}/encryptionSpec
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user
    /// expression is extracted. Dialogflow provides predefined system entities that can match many common types of
    /// data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You
    /// can also create your own custom entities for matching custom data. For example, you could define a vegetable
    /// entity that can match the types of vegetables available for purchase with a grocery store agent. For more
    /// information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
    /// </summary>
    public class GoogleCloudDialogflowV2beta1EntityType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Indicates whether the entity type can be automatically expanded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoExpansionMode")]
        public virtual string AutoExpansionMode { get; set; }

        /// <summary>Required. The name of the entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional. Enables fuzzy entity extraction during classification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableFuzzyExtraction")]
        public virtual System.Nullable<bool> EnableFuzzyExtraction { get; set; }

        /// <summary>Optional. The collection of entity entries associated with the entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1EntityTypeEntity> Entities { get; set; }

        /// <summary>Required. Indicates the kind of entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and
        /// EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` -
        /// `projects//locations//agent/entityTypes/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An **entity entry** for an associated entity type.</summary>
    public class GoogleCloudDialogflowV2beta1EntityTypeEntity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is
        /// *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain
        /// exactly one synonym equal to `value`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; }

        /// <summary>
        /// Required. The primary value associated with this entity entry. For example, if the entity type is
        /// *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in
        /// place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity
        /// types (with or without aliases).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Events allow for matching intents by event name instead of the natural language input. For instance, input ``
    /// can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response:
    /// `"Hello #welcome_event.name! What can I do for you today?"`.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1EventInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The language of this query. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes. Note that queries in the same session do not necessarily need to specify the same language.
        /// This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the
        /// language was already defined in the originating detect intent request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Required. The unique identifier of the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The collection of parameters associated with the event. Depending on your protocol or client library
        /// language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a
        /// collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue
        /// type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter
        /// value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's
        /// entity type is a composite entity then use map from composite entity property names to property values,
        /// otherwise, use parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> Parameters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Agents.ExportAgent.</summary>
    public class GoogleCloudDialogflowV2beta1ExportAgentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Zip compressed raw byte content for agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentContent")]
        public virtual string AgentContent { get; set; }

        /// <summary>
        /// The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in
        /// `ExportAgentRequest`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentUri")]
        public virtual string AgentUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata related to the Export Data Operations (e.g. ExportDocument).</summary>
    public class GoogleCloudDialogflowV2beta1ExportOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Cloud Storage file path of the exported data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exportedGcsDestination")]
        public virtual GoogleCloudDialogflowV2beta1GcsDestination ExportedGcsDestination { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents answer from "frequently asked questions".</summary>
    public class GoogleCloudDialogflowV2beta1FaqAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The piece of text from the `source` knowledge base document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual string Answer { get; set; }

        /// <summary>The name of answer record, in the format of "projects//locations//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>
        /// The system's confidence score that this Knowledge answer is a good match for this conversational query,
        /// range from 0.0 (completely uncertain) to 1.0 (completely certain).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>A map that contains metadata about the answer and the document from which it originates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> Metadata { get; set; }

        /// <summary>The corresponding FAQ question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("question")]
        public virtual string Question { get; set; }

        /// <summary>
        /// Indicates which Knowledge Document this answer was extracted from. Format:
        /// `projects//locations//agent/knowledgeBases//documents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestion generated using free form generator.</summary>
    public class GoogleCloudDialogflowV2beta1FreeFormSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Free form suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual string Response { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Google Cloud Storage location for the output.</summary>
    public class GoogleCloudDialogflowV2beta1GcsDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The Google Cloud Storage URIs for the output. A URI is of the form:
        /// `gs://bucket/object-prefix-or-name` Whether a prefix or name is used depends on the use case. The requesting
        /// user must have "write-permission" to the bucket.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Conversations.GenerateSuggestions.</summary>
    public class GoogleCloudDialogflowV2beta1GenerateSuggestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The answers generated for the conversation based on context.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatorSuggestionAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1GenerateSuggestionsResponseGeneratorSuggestionAnswer> GeneratorSuggestionAnswers { get; set; }

        /// <summary>
        /// The name of the latest conversation message used as context for compiling suggestion. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A GeneratorSuggestion answer.</summary>
    public class GoogleCloudDialogflowV2beta1GenerateSuggestionsResponseGeneratorSuggestionAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Answer record that uniquely identifies the suggestion. This can be used to provide suggestion feedback.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>Suggestion details.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatorSuggestion")]
        public virtual GoogleCloudDialogflowV2beta1GeneratorSuggestion GeneratorSuggestion { get; set; }

        /// <summary>
        /// The name of the generator used to generate this suggestion. Format: `projects//locations//generators/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceGenerator")]
        public virtual string SourceGenerator { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestion generated using a Generator.</summary>
    public class GoogleCloudDialogflowV2beta1GeneratorSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Free form suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("freeFormSuggestion")]
        public virtual GoogleCloudDialogflowV2beta1FreeFormSuggestion FreeFormSuggestion { get; set; }

        /// <summary>Optional. Suggested summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySuggestion")]
        public virtual GoogleCloudDialogflowV2beta1SummarySuggestion SummarySuggestion { get; set; }

        /// <summary>Optional. List of request and response for tool calls executed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCallInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1GeneratorSuggestionToolCallInfo> ToolCallInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request and response for a tool call.</summary>
    public class GoogleCloudDialogflowV2beta1GeneratorSuggestionToolCallInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Request for a tool call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCall")]
        public virtual GoogleCloudDialogflowV2beta1ToolCall ToolCall { get; set; }

        /// <summary>Required. Response for a tool call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("toolCallResult")]
        public virtual GoogleCloudDialogflowV2beta1ToolCallResult ToolCallResult { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Output only. Represents a notification sent to Pub/Sub subscribers for agent assistant events in a specific
    /// conversation.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The conversation this notification refers to. Format: `projects//conversations/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversation")]
        public virtual string Conversation { get; set; }

        /// <summary>
        /// The participant that the suggestion is compiled for. And This field is used to call
        /// Participants.ListSuggestions API. Format: `projects//conversations//participants/`. It will not be set in
        /// legacy workflow. HumanAgentAssistantConfig.name for more information.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participant")]
        public virtual string Participant { get; set; }

        /// <summary>
        /// The suggestion results payload that this notification refers to. It will only be set when
        /// HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets to true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1SuggestionResult> SuggestionResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Documents.ImportDocuments.</summary>
    public class GoogleCloudDialogflowV2beta1ImportDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Includes details about skipped documents or any other warnings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warnings")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> Warnings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for initializing a location-level encryption specification.</summary>
    public class GoogleCloudDialogflowV2beta1InitializeEncryptionSpecMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The original request for initialization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("request")]
        public virtual GoogleCloudDialogflowV2beta1InitializeEncryptionSpecRequest Request { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request to initialize a location-level encryption specification.</summary>
    public class GoogleCloudDialogflowV2beta1InitializeEncryptionSpecRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The encryption spec used for CMEK encryption. It is required that the kms key is in the same
        /// region as the endpoint. The same key will be used for all provisioned resources, if encryption is available.
        /// If the kms_key_name is left empty, no encryption will be enforced.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptionSpec")]
        public virtual GoogleCloudDialogflowV2beta1EncryptionSpec EncryptionSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many
    /// intents, where your combined intents can handle a complete conversation. When an end-user writes or says
    /// something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the
    /// best intent in your agent. Matching an intent is also known as intent classification. For more information, see
    /// the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).
    /// </summary>
    public class GoogleCloudDialogflowV2beta1Intent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The name of the action associated with the intent. Note: The action name must not contain
        /// whitespaces.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>
        /// Optional. The list of platforms for which the first responses will be copied from the messages in
        /// PLATFORM_UNSPECIFIED (i.e. default platform).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultResponsePlatforms")]
        public virtual System.Collections.Generic.IList<string> DefaultResponsePlatforms { get; set; }

        /// <summary>Required. The name of this intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or
        /// Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endInteraction")]
        public virtual System.Nullable<bool> EndInteraction { get; set; }

        /// <summary>
        /// Optional. The collection of event names that trigger the intent. If the collection of input contexts is not
        /// empty, all of the contexts must be present in the active user session for an event to trigger this intent.
        /// Event names are limited to 150 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("events")]
        public virtual System.Collections.Generic.IList<string> Events { get; set; }

        /// <summary>
        /// Output only. Information about all followup intents that have this intent as a direct or indirect parent. We
        /// populate this field only in the output.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupIntentInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo> FollowupIntentInfo { get; set; }

        /// <summary>
        /// Optional. The list of context names required for this intent to be triggered. Formats: -
        /// `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputContextNames")]
        public virtual System.Collections.Generic.IList<string> InputContextNames { get; set; }

        /// <summary>Optional. Indicates whether this is a fallback intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isFallback")]
        public virtual System.Nullable<bool> IsFallback { get; set; }

        /// <summary>
        /// Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most
        /// cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default
        /// is false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("liveAgentHandoff")]
        public virtual System.Nullable<bool> LiveAgentHandoff { get; set; }

        /// <summary>
        /// Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessage> Messages { get; set; }

        /// <summary>
        /// Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is
        /// set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also,
        /// auto-markup in the UI is turned off.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mlDisabled")]
        public virtual System.Nullable<bool> MlDisabled { get; set; }

        /// <summary>
        /// Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set
        /// to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also,
        /// auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both
        /// `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows:
        /// - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018
        /// the default is: ml_enabled = true / ml_disabled = false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mlEnabled")]
        public virtual System.Nullable<bool> MlEnabled { get; set; }

        /// <summary>
        /// Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and
        /// Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` -
        /// `projects//locations//agent/intents/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The collection of contexts that are activated when the intent is matched. Context messages in this
        /// collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context
        /// when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1Context> OutputContexts { get; set; }

        /// <summary>Optional. The collection of parameters associated with the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentParameter> Parameters { get; set; }

        /// <summary>
        /// Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this
        /// field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this
        /// intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFollowupIntentName")]
        public virtual string ParentFollowupIntentName { get; set; }

        /// <summary>
        /// Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value
        /// is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority
        /// in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent
        /// requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual System.Nullable<int> Priority { get; set; }

        /// <summary>
        /// Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resetContexts")]
        public virtual System.Nullable<bool> ResetContexts { get; set; }

        /// <summary>
        /// Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the
        /// correct followup intents chain for this intent. Format: `projects//agent/intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rootFollowupIntentName")]
        public virtual string RootFollowupIntentName { get; set; }

        /// <summary>Optional. The collection of examples that the agent is trained on.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingPhrases")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentTrainingPhrase> TrainingPhrases { get; set; }

        /// <summary>Optional. Indicates whether webhooks are enabled for the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookState")]
        public virtual string WebhookState { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a single followup intent in the chain.</summary>
    public class GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The unique identifier of the followup intent. Format: `projects//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupIntentName")]
        public virtual string FollowupIntentName { get; set; }

        /// <summary>
        /// The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentFollowupIntentName")]
        public virtual string ParentFollowupIntentName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Corresponds to the `Response` field in the Dialogflow console.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Displays a basic card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("basicCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageBasicCard BasicCard { get; set; }

        /// <summary>Browse carousel card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browseCarouselCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard BrowseCarouselCard { get; set; }

        /// <summary>Displays a card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("card")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageCard Card { get; set; }

        /// <summary>Displays a carousel card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("carouselSelect")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect CarouselSelect { get; set; }

        /// <summary>Displays an image.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; }

        /// <summary>Displays a link out suggestion chip for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkOutSuggestion")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion LinkOutSuggestion { get; set; }

        /// <summary>Displays a list card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSelect")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageListSelect ListSelect { get; set; }

        /// <summary>The media content card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaContent")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageMediaContent MediaContent { get; set; }

        /// <summary>A custom platform-specific response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>Optional. The platform that this message is intended for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platform")]
        public virtual string Platform { get; set; }

        /// <summary>Displays quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quickReplies")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageQuickReplies QuickReplies { get; set; }

        /// <summary>Rich Business Messaging (RBM) carousel rich card response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rbmCarouselRichCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard RbmCarouselRichCard { get; set; }

        /// <summary>Standalone Rich Business Messaging (RBM) rich card response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rbmStandaloneRichCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard RbmStandaloneRichCard { get; set; }

        /// <summary>
        /// Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of
        /// SMS. See https://jibe.google.com/business-messaging.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rbmText")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmText RbmText { get; set; }

        /// <summary>Returns a voice or text-only response for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("simpleResponses")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses SimpleResponses { get; set; }

        /// <summary>Displays suggestion chips for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageSuggestions Suggestions { get; set; }

        /// <summary>Table card for Actions on Google.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableCard")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageTableCard TableCard { get; set; }

        /// <summary>Plays audio from a file in Telephony Gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonyPlayAudio")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio TelephonyPlayAudio { get; set; }

        /// <summary>Synthesizes speech in Telephony Gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonySynthesizeSpeech")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech TelephonySynthesizeSpeech { get; set; }

        /// <summary>Transfers the call in Telephony Gateway.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonyTransferCall")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall TelephonyTransferCall { get; set; }

        /// <summary>Returns a text response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageText Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The basic card message. Useful for displaying information.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBasicCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of card buttons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton> Buttons { get; set; }

        /// <summary>Required, unless image is present. The body text of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("formattedText")]
        public virtual string FormattedText { get; set; }

        /// <summary>Optional. The image for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; }

        /// <summary>Optional. The subtitle of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; }

        /// <summary>Optional. The title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The button object that appears at the bottom of a card.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Action to take when a user taps on the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUriAction")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction OpenUriAction { get; set; }

        /// <summary>Required. The title of the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Opens the given URI.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The HTTP or HTTPS scheme URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Browse Carousel Card for Actions on Google.
    /// https://developers.google.com/actions/assistant/responses#browsing_carousel
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Settings for displaying the image. Applies to every image in items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageDisplayOptions")]
        public virtual string ImageDisplayOptions { get; set; }

        /// <summary>
        /// Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem> Items { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Browsing carousel tile</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Description of the carousel item. Maximum of four lines of text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("footer")]
        public virtual string Footer { get; set; }

        /// <summary>Optional. Hero image for the carousel item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; }

        /// <summary>Required. Action to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUriAction")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction OpenUriAction { get; set; }

        /// <summary>Required. Title of the carousel item. Maximum of two lines of text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Actions on Google action to open a given url.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. URL</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>
        /// Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web
        /// browser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlTypeHint")]
        public virtual string UrlTypeHint { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The card response message.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of card buttons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageCardButton> Buttons { get; set; }

        /// <summary>Optional. The public URI to an image file for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; }

        /// <summary>Optional. The subtitle of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; }

        /// <summary>Optional. The title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Optional. Contains information about a button.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageCardButton : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The text to send back to the Dialogflow API or a URI to open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postback")]
        public virtual string Postback { get; set; }

        /// <summary>Optional. The text to show on the button.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The card for presenting a carousel of options to select from.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Carousel items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem> Items { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An item in the carousel.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The body text of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Optional. The image to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; }

        /// <summary>Required. Additional info about the option item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("info")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo Info { get; set; }

        /// <summary>Required. Title of the carousel item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Column properties for TableCard.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageColumnProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Column heading.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("header")]
        public virtual string Header { get; set; }

        /// <summary>Optional. Defines text alignment for all cells in this column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("horizontalAlignment")]
        public virtual string HorizontalAlignment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The image response message.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageImage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is
        /// set for CarouselSelect.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accessibilityText")]
        public virtual string AccessibilityText { get; set; }

        /// <summary>Optional. The public URI to an image file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The suggestion chip message that allows the user to jump out to the app or website associated with this agent.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the app or site this chip is linking to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationName")]
        public virtual string DestinationName { get; set; }

        /// <summary>Required. The URI of the app or site to open when the user taps the suggestion chip.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The card for presenting a list of options to select from.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageListSelect : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. List items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageListSelectItem> Items { get; set; }

        /// <summary>Optional. Subtitle of the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; }

        /// <summary>Optional. The overall title of the list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An item in the list.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageListSelectItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The main text describing the item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Optional. The image to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; }

        /// <summary>Required. Additional information about this option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("info")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo Info { get; set; }

        /// <summary>Required. The title of the list item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The media content card for Actions on Google.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageMediaContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. List of media objects.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaObjects")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject> MediaObjects { get; set; }

        /// <summary>Optional. What type of media is the content (ie "audio").</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaType")]
        public virtual string MediaType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response media object for media content card.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Url where the media is stored.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentUrl")]
        public virtual string ContentUrl { get; set; }

        /// <summary>Optional. Description of media card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Optional. Icon to display above media content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("icon")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Icon { get; set; }

        /// <summary>Optional. Image to display above media content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("largeImage")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage LargeImage { get; set; }

        /// <summary>Required. Name of media card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The quick replies response message.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageQuickReplies : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quickReplies")]
        public virtual System.Collections.Generic.IList<string> QuickReplies { get; set; }

        /// <summary>Optional. The title of the collection of quick replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Rich Business Messaging (RBM) Card content</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must
        /// be set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video)
        /// to include in the card.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("media")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia Media { get; set; }

        /// <summary>Optional. List of suggestions to include in the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion> Suggestions { get; set; }

        /// <summary>
        /// Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be
        /// set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image
    /// Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 *
    /// video/mpeg * video/mpeg4 * video/webm
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the
        /// content-type field in the HTTP headers when the platform fetches the file. The content-type field must be
        /// present and accurate in the HTTP response from the URL.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileUri")]
        public virtual string FileUri { get; set; }

        /// <summary>
        /// Required for cards with vertical orientation. The height of the media within a rich card with a vertical
        /// layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual string Height { get; set; }

        /// <summary>
        /// Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform
        /// displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's
        /// setting, the file may not download automatically and may require the user to tap a download button.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailUri")]
        public virtual string ThumbnailUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid
    /// content, e.g. with media and suggestions. If you want to show a single card with more control over the layout,
    /// please use RbmStandaloneCard instead.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardContents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent> CardContents { get; set; }

        /// <summary>Required. The width of the cards in the carousel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardWidth")]
        public virtual string CardWidth { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid
    /// content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but
    /// carousel cards will give you less control over the card layout.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Card content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardContent")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent CardContent { get; set; }

        /// <summary>Required. Orientation of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cardOrientation")]
        public virtual string CardOrientation { get; set; }

        /// <summary>
        /// Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnailImageAlignment")]
        public virtual string ThumbnailImageAlignment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Rich Business Messaging (RBM) suggested client-side action that the user can choose from the card.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Suggested client side action: Dial a phone number</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dial")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial Dial { get; set; }

        /// <summary>Suggested client side action: Open a URI on device</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("openUrl")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri OpenUrl { get; set; }

        /// <summary>
        /// Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This
        /// data will be also forwarded to webhook to allow performing custom business logic.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postbackData")]
        public virtual string PostbackData { get; set; }

        /// <summary>Suggested client side action: Share user location</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("shareLocation")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation ShareLocation { get; set; }

        /// <summary>Text to display alongside the action.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Opens the user's default dialer app with the specified phone number but does not dial automatically.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The phone number to fill in the default dialer app. This field should be in
        /// [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number:
        /// +15556767888.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Opens the user's default web browser app to the specified uri If the user has an app installed that is
    /// registered as the default handler for the URL, then this app will be opened instead, and its icon will be used
    /// in the suggested action UI.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The uri to open on the user device</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Opens the device's location chooser so the user can pick a location to send back to the agent.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own response.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This
        /// data will be also forwarded to webhook to allow performing custom business logic.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postbackData")]
        public virtual string PostbackData { get; set; }

        /// <summary>Suggested reply text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined response or
    /// perform an action (like opening a web uri).
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Predefined client side actions that user can choose</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction Action { get; set; }

        /// <summary>Predefined replies for user to select instead of typing</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reply")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply Reply { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Rich Business Messaging (RBM) text response with suggestions.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageRbmText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. One or more suggestions to show to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rbmSuggestion")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion> RbmSuggestion { get; set; }

        /// <summary>Required. Text sent and displayed to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional info about the select item for when it is triggered in a dialog.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A unique key that will be sent back to the agent if this response is given.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; }

        /// <summary>Optional. A list of synonyms that can also be used to trigger this item in dialog.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The simple response message containing speech or text.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The text to display.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayText")]
        public virtual string DisplayText { get; set; }

        /// <summary>
        /// One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format.
        /// Mutually exclusive with text_to_speech.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssml")]
        public virtual string Ssml { get; set; }

        /// <summary>
        /// One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with
        /// ssml.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("textToSpeech")]
        public virtual string TextToSpeech { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and
    /// `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of simple responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("simpleResponses")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse> SimpleResponses { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The suggestion chip message that the user can tap to quickly post a reply to the conversation.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The text shown the in the suggestion chip.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The collection of suggestions.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageSuggestions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The list of suggested replies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageSuggestion> Suggestions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Table card for Actions on Google.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTableCard : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of buttons for the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buttons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton> Buttons { get; set; }

        /// <summary>Optional. Display properties for the columns in this table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("columnProperties")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageColumnProperties> ColumnProperties { get; set; }

        /// <summary>Optional. Image which should be displayed on the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual GoogleCloudDialogflowV2beta1IntentMessageImage Image { get; set; }

        /// <summary>Optional. Rows in this table of data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rows")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageTableCardRow> Rows { get; set; }

        /// <summary>Optional. Subtitle to the title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitle")]
        public virtual string Subtitle { get; set; }

        /// <summary>Required. Title of the card.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Cell of TableCardRow.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTableCardCell : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Text in this cell.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Row of TableCard.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTableCardRow : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. List of cells that make up this row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cells")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessageTableCardCell> Cells { get; set; }

        /// <summary>Optional. Whether to add a visual divider after this row.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dividerAfter")]
        public virtual System.Nullable<bool> DividerAfter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Plays audio from a file in Telephony Gateway.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. URI to a Google Cloud Storage object containing the audio to play, e.g., "gs://bucket/object". The
        /// object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must
        /// be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number
        /// of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud
        /// Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the
        /// Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with
        /// SSML.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioUri")]
        public virtual string AudioUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway. Telephony Gateway
    /// takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can either be set at
    /// request-level or can come from the agent-level synthesizer config.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The SSML to be synthesized. For more information, see
        /// [SSML](https://developers.google.com/actions/reference/ssml).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ssml")]
        public virtual string Ssml { get; set; }

        /// <summary>The raw text to be synthesized.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Transfers the call in Telephony Gateway.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164).
        /// We currently only allow transferring to US numbers (+1xxxyyyzzzz).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The text response message.</summary>
    public class GoogleCloudDialogflowV2beta1IntentMessageText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The collection of the agent's responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents intent parameters.</summary>
    public class GoogleCloudDialogflowV2beta1IntentParameter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The default value to use when the `value` yields an empty result. Default values can be extracted
        /// from contexts by using the following syntax: `#context_name.parameter_name`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultValue")]
        public virtual string DefaultValue { get; set; }

        /// <summary>Required. The name of the parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the
        /// parameter is required, this must be provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityTypeDisplayName")]
        public virtual string EntityTypeDisplayName { get; set; }

        /// <summary>Optional. Indicates whether the parameter represents a list of values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isList")]
        public virtual System.Nullable<bool> IsList { get; set; }

        /// <summary>
        /// Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed
        /// without collecting the parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mandatory")]
        public virtual System.Nullable<bool> Mandatory { get; set; }

        /// <summary>The unique identifier of this parameter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Optional. The collection of prompts that the agent can present to the user in order to collect a value for
        /// the parameter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prompts")]
        public virtual System.Collections.Generic.IList<string> Prompts { get; set; }

        /// <summary>
        /// Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined
        /// as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter
        /// value from some context defined as `#context_name.parameter_name`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an intent suggestion.</summary>
    public class GoogleCloudDialogflowV2beta1IntentSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Human readable description for better understanding an intent like its scope, content, result etc. Maximum
        /// character limit: 140 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>The display name of the intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>The unique identifier of this intent. Format: `projects//locations//agent/intents/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentV2")]
        public virtual string IntentV2 { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an example that the agent is trained on.</summary>
    public class GoogleCloudDialogflowV2beta1IntentTrainingPhrase : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The unique identifier of this training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Required. The ordered list of training phrase parts. The parts are concatenated in order to form the
        /// training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console
        /// does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted
        /// when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you
        /// just need a single part with only the Part.text field set. If you want to annotate the training phrase, you
        /// must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is
        /// set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you
        /// want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart> Parts { get; set; }

        /// <summary>
        /// Optional. Indicates how many times this example was added to the intent. Each time a developer adds an
        /// existing sample by editing an intent or training, this counter is increased.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timesAddedCount")]
        public virtual System.Nullable<int> TimesAddedCount { get; set; }

        /// <summary>Required. The type of the training phrase.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a part of a training phrase.</summary>
    public class GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The parameter name for the value extracted from the annotated part of the example. This field is
        /// required for annotated parts of the training phrase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alias")]
        public virtual string Alias { get; set; }

        /// <summary>
        /// Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training
        /// phrase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityType")]
        public virtual string EntityType { get; set; }

        /// <summary>Required. The text for this part.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>
        /// Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow
        /// Console is used to manually annotate the part. When creating an annotated part with the API, you must set
        /// this to true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDefined")]
        public virtual System.Nullable<bool> UserDefined { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the result of querying a Knowledge base.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAnswers : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of answers from Knowledge Connector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer> Answers { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An answer from Knowledge Connector.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The piece of text from the `source` knowledge base document that answers this conversational query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual string Answer { get; set; }

        /// <summary>
        /// The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faqQuestion")]
        public virtual string FaqQuestion { get; set; }

        /// <summary>
        /// The system's confidence score that this Knowledge answer is a good match for this conversational query. The
        /// range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely
        /// to vary somewhat (possibly even for identical requests), as the underlying model is under constant
        /// improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be
        /// generally more stable.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchConfidence")]
        public virtual System.Nullable<float> MatchConfidence { get; set; }

        /// <summary>
        /// The system's confidence level that this knowledge answer is a good match for this conversational query.
        /// NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are
        /// constantly being improved. However, it will change less frequently than the confidence score below, and
        /// should be preferred for referencing the quality of an answer.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchConfidenceLevel")]
        public virtual string MatchConfidenceLevel { get; set; }

        /// <summary>
        /// Indicates which Knowledge Document this answer was extracted from. Format:
        /// `projects//knowledgeBases//documents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a Knowledge Assist answer.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAssistAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the answer record. Format: `projects//locations//answer Records/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>
        /// The query suggested based on the context. Suggestion is made only if it is different from the previous
        /// suggestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestedQuery")]
        public virtual GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerSuggestedQuery SuggestedQuery { get; set; }

        /// <summary>
        /// The answer generated for the suggested query. Whether or not an answer is generated depends on how confident
        /// we are about the generated query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestedQueryAnswer")]
        public virtual GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswer SuggestedQueryAnswer { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an answer from Knowledge. Currently supports FAQ and Generative answers.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The piece of text from the `source` that answers this suggested query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerText")]
        public virtual string AnswerText { get; set; }

        /// <summary>Populated if the prediction came from FAQ.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faqSource")]
        public virtual GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerFaqSource FaqSource { get; set; }

        /// <summary>Populated if the prediction was Generative.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generativeSource")]
        public virtual GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource GenerativeSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Details about source of FAQ answer.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerFaqSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The corresponding FAQ question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("question")]
        public virtual string Question { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Details about source of Generative answer.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All snippets used for this Generative Prediction, with their source URI and data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippets")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet> Snippets { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Snippet Source for a Generative Prediction.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerKnowledgeAnswerGenerativeSourceSnippet : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>Text taken from that URI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>Title of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI the data is sourced from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a suggested query.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeAssistAnswerSuggestedQuery : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Suggested query text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryText")]
        public virtual string QueryText { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata in google::longrunning::Operation for Knowledge operations.</summary>
    public class GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata for the Export Data Operation such as the destination of export.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exportOperationMetadata")]
        public virtual GoogleCloudDialogflowV2beta1ExportOperationMetadata ExportOperationMetadata { get; set; }

        /// <summary>The name of the knowledge base interacted with during the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeBase")]
        public virtual string KnowledgeBase { get; set; }

        /// <summary>Required. Output only. The current state of this operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a message posted into a conversation.</summary>
    public class GoogleCloudDialogflowV2beta1Message : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The message content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The time when the message was created in Contact Center AI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt)
        /// language tag. Example: "en-US".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Output only. The annotation for the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageAnnotation")]
        public virtual GoogleCloudDialogflowV2beta1MessageAnnotation MessageAnnotation { get; set; }

        /// <summary>
        /// Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Output only. The participant that sends this message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participant")]
        public virtual string Participant { get; set; }

        /// <summary>Output only. The role of the participant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; }

        /// <summary>Optional. Automated agent responses.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1ResponseMessage> ResponseMessages { get; set; }

        private string _sendTimeRaw;

        private object _sendTime;

        /// <summary>
        /// Optional. The time when the message was sent. For voice messages, this is the time when an utterance
        /// started.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sendTime")]
        public virtual string SendTimeRaw
        {
            get => _sendTimeRaw;
            set
            {
                _sendTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _sendTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="SendTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use SendTimeDateTimeOffset instead.")]
        public virtual object SendTime
        {
            get => _sendTime;
            set
            {
                _sendTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _sendTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="SendTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? SendTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(SendTimeRaw);
            set => SendTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The sentiment analysis result for the message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysis")]
        public virtual GoogleCloudDialogflowV2beta1SentimentAnalysisResult SentimentAnalysis { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the result of annotation for the message.</summary>
    public class GoogleCloudDialogflowV2beta1MessageAnnotation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Indicates whether the text message contains entities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("containEntities")]
        public virtual System.Nullable<bool> ContainEntities { get; set; }

        /// <summary>
        /// Optional. The collection of annotated message parts ordered by their position in the message. You can
        /// recover the annotated message by concatenating [AnnotatedMessagePart.text].
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1AnnotatedMessagePart> Parts { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some
        /// integrations that query a Dialogflow agent may provide additional information in the payload. In particular,
        /// for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id":
        /// "+18558363987" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and
        /// populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition
        /// agents.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>Optional. The version of the protocol used for this request. This field is AoG-specific.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the result of conversational query or event processing.</summary>
    public class GoogleCloudDialogflowV2beta1QueryResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The action name from the matched intent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>
        /// This field is set to: - `false` if the matched intent has required parameters and not all of the required
        /// parameter values have been collected. - `true` if all required parameter values have been collected, or if
        /// the matched intent doesn't contain any required parameters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allRequiredParamsPresent")]
        public virtual System.Nullable<bool> AllRequiredParamsPresent { get; set; }

        /// <summary>
        /// Indicates whether the conversational query triggers a cancellation for slot filling. For more information,
        /// see the [cancel slot filling
        /// documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cancelsSlotFilling")]
        public virtual System.Nullable<bool> CancelsSlotFilling { get; set; }

        /// <summary>
        /// Free-form diagnostic information for the associated detect intent request. The fields of this data can
        /// change without notice, so you should not write code that depends on its structure. The data may contain: -
        /// webhook call latency - webhook errors
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diagnosticInfo")]
        public virtual System.Collections.Generic.IDictionary<string, object> DiagnosticInfo { get; set; }

        /// <summary>The collection of rich messages to present to the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessage> FulfillmentMessages { get; set; }

        /// <summary>
        /// The text to be pronounced to the user or shown on the screen. Note: This is a legacy field,
        /// `fulfillment_messages` should be preferred.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentText")]
        public virtual string FulfillmentText { get; set; }

        /// <summary>
        /// The intent that matched the conversational query. Some, not all fields are filled in this message, including
        /// but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intent")]
        public virtual GoogleCloudDialogflowV2beta1Intent Intent { get; set; }

        /// <summary>
        /// The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).
        /// This value is for informational purpose only and is only used to help match the best intent within the
        /// classification threshold. This value may change for the same end-user expression at any time due to a model
        /// retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is
        /// set to the greatest `knowledgeAnswers.match_confidence` value in the list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intentDetectionConfidence")]
        public virtual System.Nullable<float> IntentDetectionConfidence { get; set; }

        /// <summary>
        /// The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeAnswers")]
        public virtual GoogleCloudDialogflowV2beta1KnowledgeAnswers KnowledgeAnswers { get; set; }

        /// <summary>
        /// The language that was triggered during intent detection. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name
        /// `.original` containing the original parameter values before the query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1Context> OutputContexts { get; set; }

        /// <summary>
        /// The collection of extracted parameters. Depending on your protocol or client library language, this is a
        /// map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey,
        /// MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity
        /// type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one
        /// of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite
        /// entity then use map from composite entity property names to property values, otherwise, use parameter value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> Parameters { get; set; }

        /// <summary>
        /// The original conversational query text: - If natural language text was provided as input, `query_text`
        /// contains a copy of the input. - If natural language speech audio was provided as input, `query_text`
        /// contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular
        /// one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user
        /// input.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryText")]
        public virtual string QueryText { get; set; }

        /// <summary>
        /// The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the
        /// request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentAnalysisResult")]
        public virtual GoogleCloudDialogflowV2beta1SentimentAnalysisResult SentimentAnalysisResult { get; set; }

        /// <summary>
        /// The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater
        /// likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that
        /// confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't
        /// set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of
        /// the audio in StreamingRecognitionResult.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechRecognitionConfidence")]
        public virtual System.Nullable<float> SpeechRecognitionConfidence { get; set; }

        /// <summary>
        /// If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned
        /// in the webhook response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookPayload")]
        public virtual System.Collections.Generic.IDictionary<string, object> WebhookPayload { get; set; }

        /// <summary>
        /// If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned
        /// in the webhook response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookSource")]
        public virtual string WebhookSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response messages from an automated agent.</summary>
    public class GoogleCloudDialogflowV2beta1ResponseMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A signal that indicates the interaction with the Dialogflow agent has ended.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endInteraction")]
        public virtual GoogleCloudDialogflowV2beta1ResponseMessageEndInteraction EndInteraction { get; set; }

        /// <summary>Hands off conversation to a live agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("liveAgentHandoff")]
        public virtual GoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff LiveAgentHandoff { get; set; }

        /// <summary>
        /// An audio response message composed of both the synthesized Dialogflow agent responses and the audios hosted
        /// in places known to the client.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mixedAudio")]
        public virtual GoogleCloudDialogflowV2beta1ResponseMessageMixedAudio MixedAudio { get; set; }

        /// <summary>Returns a response containing a custom, platform-specific payload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("telephonyTransferCall")]
        public virtual GoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall TelephonyTransferCall { get; set; }

        /// <summary>Returns a text response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual GoogleCloudDialogflowV2beta1ResponseMessageText Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Indicates that interaction with the Dialogflow agent has ended.</summary>
    public class GoogleCloudDialogflowV2beta1ResponseMessageEndInteraction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Indicates that the conversation should be handed off to a human agent. Dialogflow only uses this to determine
    /// which conversations were handed off to a human agent for measurement purposes. What else to do with this signal
    /// is up to you and your handoff procedures. You may set this, for example: * In the entry fulfillment of a
    /// Dialogflow CX Page if entering the page indicates something went extremely wrong in the conversation. * In a
    /// webhook response when you determine that the customer issue can only be handled by a human.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1ResponseMessageLiveAgentHandoff : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and
    /// ones hosted externally at the specified URIs.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1ResponseMessageMixedAudio : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Segments this audio response is composed of.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("segments")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1ResponseMessageMixedAudioSegment> Segments { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents one segment of audio.</summary>
    public class GoogleCloudDialogflowV2beta1ResponseMessageMixedAudioSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether the playback of this segment can be interrupted by the end user's speech and the client should then
        /// start the next Dialogflow request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowPlaybackInterruption")]
        public virtual System.Nullable<bool> AllowPlaybackInterruption { get; set; }

        /// <summary>
        /// Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audio")]
        public virtual string Audio { get; set; }

        /// <summary>Client-specific URI that points to an audio clip accessible to the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party
    /// endpoint.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1ResponseMessageTelephonyTransferCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual string PhoneNumber { get; set; }

        /// <summary>Transfer the call to a SIP endpoint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sipUri")]
        public virtual string SipUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The text response message.</summary>
    public class GoogleCloudDialogflowV2beta1ResponseMessageText : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A collection of text response variants. If multiple variants are defined, only one text response variant is
        /// returned at runtime.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.
    /// See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to
    /// interpret the result.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1Sentiment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment,
        /// regardless of score (positive or negative).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("magnitude")]
        public virtual System.Nullable<float> Magnitude { get; set; }

        /// <summary>Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("score")]
        public virtual System.Nullable<float> Score { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing
    /// subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For
    /// Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For
    /// Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And
    /// for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in
    /// ConversationProfile.human_agent_assistant_config
    /// </summary>
    public class GoogleCloudDialogflowV2beta1SentimentAnalysisResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The sentiment analysis result for `query_text`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryTextSentiment")]
        public virtual GoogleCloudDialogflowV2beta1Sentiment QueryTextSentiment { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities,
    /// called session entities, during a session. Session entities can extend or replace custom entity types and only
    /// exist during the session that they were created for. All session data, including session entities, is stored by
    /// Dialogflow for 20 minutes. For more information, see the [session entity
    /// guide](https://cloud.google.com/dialogflow/docs/entities-session).
    /// </summary>
    public class GoogleCloudDialogflowV2beta1SessionEntityType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The collection of entities associated with this session entity type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1EntityTypeEntity> Entities { get; set; }

        /// <summary>
        /// Required. Indicates whether the additional data should override or supplement the custom entity type
        /// definition.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityOverrideMode")]
        public virtual string EntityOverrideMode { get; set; }

        /// <summary>
        /// Required. The unique identifier of this session entity type. Supported formats: -
        /// `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` -
        /// `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/
        /// /users//sessions//entityTypes/` If `Location ID` is not specified we assume default 'us' location. If
        /// `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we
        /// assume default '-' user. `` must be the display name of an existing entity type in the same agent that will
        /// be overridden or supplemented.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.</summary>
    public class GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversationProfile")]
        public virtual string ConversationProfile { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Timestamp whe the request was created. The time is measured on server side.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER
        /// can be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("participantRole")]
        public virtual string ParticipantRole { get; set; }

        /// <summary>Required. The type of the suggestion feature to add or update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionFeatureType")]
        public virtual string SuggestionFeatureType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a smart reply answer.</summary>
    public class GoogleCloudDialogflowV2beta1SmartReplyAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of answer record, in the format of "projects//locations//answerRecords/"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerRecord")]
        public virtual string AnswerRecord { get; set; }

        /// <summary>
        /// Smart reply confidence. The system's confidence score that this reply is a good match for this conversation,
        /// as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>The content of the reply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reply")]
        public virtual string Reply { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information for a word recognized by the speech recognizer.</summary>
    public class GoogleCloudDialogflowV2beta1SpeechWordInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Speech confidence between 0.0 and 1.0 for this word. A higher number indicates an estimated greater
        /// likelihood that the recognized word is correct. The default of 0.0 is a sentinel value indicating that
        /// confidence was not set. This field is not guaranteed to be fully stable over time for the same audio input.
        /// Users should also not rely on it to always be provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>
        /// Time offset relative to the beginning of the audio that corresponds to the end of the spoken word. This is
        /// an experimental feature and the accuracy of the time offset can vary.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endOffset")]
        public virtual object EndOffset { get; set; }

        /// <summary>
        /// Time offset relative to the beginning of the audio that corresponds to the start of the spoken word. This is
        /// an experimental feature and the accuracy of the time offset can vary.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startOffset")]
        public virtual object StartOffset { get; set; }

        /// <summary>The word this info is for.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("word")]
        public virtual string Word { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains a speech recognition result corresponding to a portion of the audio that is currently being processed
    /// or an indication that this is the end of the single requested utterance. While end-user audio is being
    /// processed, Dialogflow sends a series of results. Each result may contain a `transcript` value. A transcript
    /// represents a portion of the utterance. While the recognizer is processing audio, transcript values may be
    /// interim values or finalized values. Once a transcript is finalized, the `is_final` value is set to true and
    /// processing continues for the next transcript. If
    /// `StreamingDetectIntentRequest.query_input.audio_config.single_utterance` was true, and the recognizer has
    /// completed processing audio, the `message_type` value is set to `END_OF_SINGLE_UTTERANCE and the following (last)
    /// result contains the last finalized transcript. The complete end-user utterance is determined by concatenating
    /// the finalized transcript values received for the series of results. In the following example, single utterance
    /// is enabled. In the case where single utterance is not enabled, result 7 would not occur.
    /// ```
    /// Num | transcript |
    /// message_type | is_final --- | ----------------------- | ----------------------- | -------- 1 | "tube" |
    /// TRANSCRIPT | false 2 | "to be a" | TRANSCRIPT | false 3 | "to be" | TRANSCRIPT | false 4 | "to be or not to be"
    /// | TRANSCRIPT | true 5 | "that's" | TRANSCRIPT | false 6 | "that is | TRANSCRIPT | false 7 | unset |
    /// END_OF_SINGLE_UTTERANCE | unset 8 | " that is the question" | TRANSCRIPT | true
    /// ```
    /// Concatenating the finalized
    /// transcripts with `is_final` set to true, the complete utterance becomes "to be or not to be that is the
    /// question".
    /// </summary>
    public class GoogleCloudDialogflowV2beta1StreamingRecognitionResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Speech confidence between 0.0 and 1.0 for the current portion of audio. A higher number indicates an
        /// estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value
        /// indicating that confidence was not set. This field is typically only provided if `is_final` is true and you
        /// should not rely on it being accurate or even set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("confidence")]
        public virtual System.Nullable<float> Confidence { get; set; }

        /// <summary>DTMF digits. Populated if and only if `message_type` = `DTMF_DIGITS`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfDigits")]
        public virtual GoogleCloudDialogflowV2beta1TelephonyDtmfEvents DtmfDigits { get; set; }

        /// <summary>
        /// If `false`, the `StreamingRecognitionResult` represents an interim result that may change. If `true`, the
        /// recognizer will not return any further hypotheses about this piece of the audio. May only be populated for
        /// `message_type` = `TRANSCRIPT`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isFinal")]
        public virtual System.Nullable<bool> IsFinal { get; set; }

        /// <summary>Detected language code for the transcript.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Type of the result message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageType")]
        public virtual string MessageType { get; set; }

        /// <summary>
        /// Time offset of the end of this Speech recognition result relative to the beginning of the audio. Only
        /// populated for `message_type` = `TRANSCRIPT`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechEndOffset")]
        public virtual object SpeechEndOffset { get; set; }

        /// <summary>
        /// Word-specific information for the words recognized by Speech in transcript. Populated if and only if
        /// `message_type` = `TRANSCRIPT` and [InputAudioConfig.enable_word_info] is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("speechWordInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1SpeechWordInfo> SpeechWordInfo { get; set; }

        /// <summary>
        /// An estimate of the likelihood that the speech recognizer will not change its guess about this interim
        /// recognition result: * If the value is unspecified or 0.0, Dialogflow didn't compute the stability. In
        /// particular, Dialogflow will only provide stability for `TRANSCRIPT` results with `is_final = false`. *
        /// Otherwise, the value is in (0.0, 1.0] where 0.0 means completely unstable and 1.0 means completely stable.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stability")]
        public virtual System.Nullable<float> Stability { get; set; }

        /// <summary>
        /// Transcript text representing the words that the user spoke. Populated if and only if `message_type` =
        /// `TRANSCRIPT`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transcript")]
        public virtual string Transcript { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.SuggestArticles.</summary>
    public class GoogleCloudDialogflowV2beta1SuggestArticlesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Articles ordered by score in descending order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("articleAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1ArticleAnswer> ArticleAnswers { get; set; }

        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestArticlesResponse.context_size field in the request if there aren't that many messages in the
        /// conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to compile suggestion for. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.SuggestDialogflowAssists.</summary>
    public class GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestDialogflowAssistsRequest.context_size field in the request if there aren't that many messages in
        /// the conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// Output only. Multiple reply options provided by Dialogflow assist service. The order is based on the rank of
        /// the model prediction.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAssistAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1DialogflowAssistAnswer> DialogflowAssistAnswers { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to suggest answer. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Participants.SuggestFaqAnswers.</summary>
    public class GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the
        /// conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>Output only. Answers extracted from FAQ documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("faqAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1FaqAnswer> FaqAnswers { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to compile suggestion for. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.SuggestKnowledgeAssist.</summary>
    public class GoogleCloudDialogflowV2beta1SuggestKnowledgeAssistResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestKnowledgeAssistRequest.context_size field in the request if there are fewer messages in the
        /// conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>Output only. Knowledge Assist suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("knowledgeAssistAnswer")]
        public virtual GoogleCloudDialogflowV2beta1KnowledgeAssistAnswer KnowledgeAssistAnswer { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to compile suggestion for. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Participants.SuggestSmartReplies.</summary>
    public class GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than
        /// the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the
        /// conversation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextSize")]
        public virtual System.Nullable<int> ContextSize { get; set; }

        /// <summary>
        /// The name of the latest conversation message used to compile suggestion for. Format:
        /// `projects//locations//conversations//messages/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestMessage")]
        public virtual string LatestMessage { get; set; }

        /// <summary>
        /// Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the
        /// model prediction. The maximum number of the returned replies is set in SmartReplyConfig.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("smartReplyAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1SmartReplyAnswer> SmartReplyAnswers { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// One response of different type of suggestion response which is used in the response of
    /// Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.
    /// </summary>
    public class GoogleCloudDialogflowV2beta1SuggestionResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Error status if the request failed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>Suggestions generated using generators triggered by customer or agent messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generateSuggestionsResponse")]
        public virtual GoogleCloudDialogflowV2beta1GenerateSuggestionsResponse GenerateSuggestionsResponse { get; set; }

        /// <summary>SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestArticlesResponse")]
        public virtual GoogleCloudDialogflowV2beta1SuggestArticlesResponse SuggestArticlesResponse { get; set; }

        /// <summary>SuggestDialogflowAssistsResponse if request is for DIALOGFLOW_ASSIST.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestDialogflowAssistsResponse")]
        public virtual GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse SuggestDialogflowAssistsResponse { get; set; }

        /// <summary>SuggestDialogflowAssistsResponse if request is for ENTITY_EXTRACTION.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestEntityExtractionResponse")]
        public virtual GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse SuggestEntityExtractionResponse { get; set; }

        /// <summary>SuggestFaqAnswersResponse if request is for FAQ_ANSWER.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestFaqAnswersResponse")]
        public virtual GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse SuggestFaqAnswersResponse { get; set; }

        /// <summary>SuggestKnowledgeAssistResponse if request is for KNOWLEDGE_ASSIST.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestKnowledgeAssistResponse")]
        public virtual GoogleCloudDialogflowV2beta1SuggestKnowledgeAssistResponse SuggestKnowledgeAssistResponse { get; set; }

        /// <summary>SuggestSmartRepliesResponse if request is for SMART_REPLY.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestSmartRepliesResponse")]
        public virtual GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse SuggestSmartRepliesResponse { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggested summary of the conversation.</summary>
    public class GoogleCloudDialogflowV2beta1SummarySuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. All the parts of generated summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySections")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1SummarySuggestionSummarySection> SummarySections { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A component of the generated summary.</summary>
    public class GoogleCloudDialogflowV2beta1SummarySuggestionSummarySection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Name of the section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("section")]
        public virtual string Section { get; set; }

        /// <summary>Required. Summary text for the section.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A wrapper of repeated TelephonyDtmf digits.</summary>
    public class GoogleCloudDialogflowV2beta1TelephonyDtmfEvents : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sequence of TelephonyDtmf digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfEvents")]
        public virtual System.Collections.Generic.IList<string> DtmfEvents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a call of a specific tool's action with the specified inputs.</summary>
    public class GoogleCloudDialogflowV2beta1ToolCall : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the tool's action associated with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Create time of the tool call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Optional. The action's input parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputParameters")]
        public virtual System.Collections.Generic.IDictionary<string, object> InputParameters { get; set; }

        /// <summary>Required. The tool associated with this call. Format: `projects//locations//tools/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tool")]
        public virtual string Tool { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The result of calling a tool's action.</summary>
    public class GoogleCloudDialogflowV2beta1ToolCallResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The name of the tool's action associated with this call.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        /// <summary>Only populated if the response content is utf-8 encoded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Create time of the tool call result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The tool call's error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleCloudDialogflowV2beta1ToolCallResultError Error { get; set; }

        /// <summary>
        /// Only populated if the response content is not utf-8 encoded. (by definition byte fields are base64 encoded).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawContent")]
        public virtual string RawContent { get; set; }

        /// <summary>Required. The tool associated with this call. Format: `projects//locations//tools/`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tool")]
        public virtual string Tool { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An error produced by the tool call.</summary>
    public class GoogleCloudDialogflowV2beta1ToolCallResultError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The error message of the function.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for a webhook call.</summary>
    public class GoogleCloudDialogflowV2beta1WebhookRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Alternative query results from KnowledgeService.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alternativeQueryResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1QueryResult> AlternativeQueryResults { get; set; }

        /// <summary>
        /// Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalDetectIntentRequest")]
        public virtual GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest OriginalDetectIntentRequest { get; set; }

        /// <summary>
        /// The result of the conversational query or event processing. Contains the same value as
        /// `[Streaming]DetectIntentResponse.query_result`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryResult")]
        public virtual GoogleCloudDialogflowV2beta1QueryResult QueryResult { get; set; }

        /// <summary>
        /// The unique identifier of the response. Contains the same value as
        /// `[Streaming]DetectIntentResponse.response_id`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseId")]
        public virtual string ResponseId { get; set; }

        /// <summary>
        /// The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook
        /// implementation. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
        /// `projects//agent/environments//users//sessions/`, -
        /// `projects//locations//agent/environments//users//sessions/`,
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The response message for a webhook call. This response is validated by the Dialogflow server. If validation
    /// fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value
    /// with the wrong type is a common error. To avoid this error: - Use `""` for empty strings - Use `{}` or `null`
    /// for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language
    /// Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
    /// </summary>
    public class GoogleCloudDialogflowV2beta1WebhookResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or
        /// Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endInteraction")]
        public virtual System.Nullable<bool> EndInteraction { get; set; }

        /// <summary>
        /// Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`,
        /// `fulfillment_messages`, and `payload` fields.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followupEventInput")]
        public virtual GoogleCloudDialogflowV2beta1EventInput FollowupEventInput { get; set; }

        /// <summary>
        /// Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to
        /// populate QueryResult.fulfillment_messages sent to the integration or API caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentMessages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1IntentMessage> FulfillmentMessages { get; set; }

        /// <summary>
        /// Optional. The text response message intended for the end-user. It is recommended to use
        /// `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate
        /// QueryResult.fulfillment_text sent to the integration or API caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fulfillmentText")]
        public virtual string FulfillmentText { get; set; }

        /// <summary>
        /// Indicates that a live agent should be brought in to handle the interaction with the user. In most cases,
        /// when you set this flag to true, you would also want to set end_interaction to true as well. Default is
        /// false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("liveAgentHandoff")]
        public virtual System.Nullable<bool> LiveAgentHandoff { get; set; }

        /// <summary>
        /// Optional. The collection of output contexts that will overwrite currently active contexts for the session
        /// and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts
        /// sent to the integration or API caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("outputContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1Context> OutputContexts { get; set; }

        /// <summary>
        /// Optional. This field can be used to pass custom data from your webhook to the integration or API caller.
        /// Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate
        /// QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google
        /// Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response
        /// messages. See the format definition at [Google Assistant Dialogflow webhook
        /// format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual System.Collections.Generic.IDictionary<string, object> Payload { get; set; }

        /// <summary>
        /// Optional. Additional session entity types to replace or extend developer entity types with. The entity
        /// synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the
        /// session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType
        /// management methods.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionEntityTypes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDialogflowV2beta1SessionEntityType> SessionEntityTypes { get; set; }

        /// <summary>
        /// Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When
        /// provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API
        /// caller.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to
    /// BigQuery.
    /// </summary>
    public class GoogleCloudDialogflowV3alpha1ConversationSignals : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Turn signals for the current turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("turnSignals")]
        public virtual GoogleCloudDialogflowV3alpha1TurnSignals TurnSignals { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Collection of all signals that were extracted for a single turn of the conversation.</summary>
    public class GoogleCloudDialogflowV3alpha1TurnSignals : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether agent responded with LiveAgentHandoff fulfillment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentEscalated")]
        public virtual System.Nullable<bool> AgentEscalated { get; set; }

        /// <summary>Whether user was using DTMF input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dtmfUsed")]
        public virtual System.Nullable<bool> DtmfUsed { get; set; }

        /// <summary>Failure reasons of the turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReasons")]
        public virtual System.Collections.Generic.IList<string> FailureReasons { get; set; }

        /// <summary>Whether NLU predicted NO_MATCH.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noMatch")]
        public virtual System.Nullable<bool> NoMatch { get; set; }

        /// <summary>Whether user provided no input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noUserInput")]
        public virtual System.Nullable<bool> NoUserInput { get; set; }

        /// <summary>Whether turn resulted in End Session page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachedEndPage")]
        public virtual System.Nullable<bool> ReachedEndPage { get; set; }

        /// <summary>
        /// Sentiment magnitude of the user utterance if
        /// [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentMagnitude")]
        public virtual System.Nullable<float> SentimentMagnitude { get; set; }

        /// <summary>
        /// Sentiment score of the user utterance if
        /// [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sentimentScore")]
        public virtual System.Nullable<float> SentimentScore { get; set; }

        /// <summary>Whether agent has triggered the event corresponding to user abandoning the conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("triggeredAbandonmentEvent")]
        public virtual System.Nullable<bool> TriggeredAbandonmentEvent { get; set; }

        /// <summary>Whether user was specifically asking for a live agent.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userEscalated")]
        public virtual System.Nullable<bool> UserEscalated { get; set; }

        /// <summary>Human-readable statuses of the webhooks triggered during this turn.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webhookStatuses")]
        public virtual System.Collections.Generic.IList<string> WebhookStatuses { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Locations.ListLocations.</summary>
    public class GoogleCloudLocationListLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of locations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<GoogleCloudLocationLocation> Locations { get; set; }

        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A resource that represents a Google Cloud location.</summary>
    public class GoogleCloudLocationLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The friendly name for this location, typically a nearby city name. For example, "Tokyo".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>The canonical id for this location. For example: `"us-east1"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; }

        /// <summary>Service-specific metadata. For example the available capacity at the given location.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>
        /// Resource name for the location, which may vary between implementations. For example:
        /// `"projects/example-project/locations/us-east1"`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Operations.ListOperations.</summary>
    public class GoogleLongrunningListOperationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>A list of operations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operations")]
        public virtual System.Collections.Generic.IList<GoogleLongrunningOperation> Operations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class GoogleLongrunningOperation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed,
        /// and either `error` or `response` is available.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; }

        /// <summary>The error result of the operation in case of failure or cancellation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>
        /// Service-specific metadata associated with the operation. It typically contains progress information and
        /// common metadata such as create time. Some services might not provide such metadata. Any method that returns
        /// a long-running operation should document the metadata type, if any.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>
        /// The server-assigned name, which is only unique within the same service that originally returns it. If you
        /// use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The normal, successful response of the operation. If the original method returns no data on success, such as
        /// `Delete`, the response is `google.protobuf.Empty`. If the original method is standard
        /// `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have
        /// the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is
        /// `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string, object> Response { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical
    /// example is to use it as the request or the response type of an API method. For instance: service Foo { rpc
    /// Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    /// </summary>
    public class GoogleProtobufEmpty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The `Status` type defines a logical error model that is suitable for different programming environments,
    /// including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains
    /// three pieces of data: error code, error message, and error details. You can find out more about this error model
    /// and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
    /// </summary>
    public class GoogleRpcStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; }

        /// <summary>
        /// A list of messages that carry the error details. There is a common set of message types for APIs to use.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, object>> Details { get; set; }

        /// <summary>
        /// A developer-facing error message, which should be in English. Any user-facing error message should be
        /// localized and sent in the google.rpc.Status.details field, or localized by the client.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees
    /// latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard.
    /// Values must be within normalized ranges.
    /// </summary>
    public class GoogleTypeLatLng : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The latitude in degrees. It must be in the range [-90.0, +90.0].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude { get; set; }

        /// <summary>The longitude in degrees. It must be in the range [-180.0, +180.0].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
