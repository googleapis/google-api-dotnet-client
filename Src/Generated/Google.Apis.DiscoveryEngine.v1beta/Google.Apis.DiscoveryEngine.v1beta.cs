// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated code. DO NOT EDIT!

namespace Google.Apis.DiscoveryEngine.v1beta
{
    /// <summary>The DiscoveryEngine Service.</summary>
    public class DiscoveryEngineService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1beta";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public DiscoveryEngineService() : this(new Google.Apis.Services.BaseClientService.Initializer())
        {
        }

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public DiscoveryEngineService(Google.Apis.Services.BaseClientService.Initializer initializer) : base(initializer)
        {
            Projects = new ProjectsResource(this);
            BaseUri = GetEffectiveUri(BaseUriOverride, "https://discoveryengine.googleapis.com/");
            BatchUri = GetEffectiveUri(null, "https://discoveryengine.googleapis.com/batch");
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features => new string[0];

        /// <summary>Gets the service name.</summary>
        public override string Name => "discoveryengine";

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri { get; }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath => "";

        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri { get; }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath => "batch";

        /// <summary>Available OAuth 2.0 scopes for use with the Discovery Engine API.</summary>
        public class Scope
        {
            /// <summary>
            /// See, edit, configure, and delete your Google Cloud data and see the email address for your Google
            /// Account.
            /// </summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";
        }

        /// <summary>Available OAuth 2.0 scope constants for use with the Discovery Engine API.</summary>
        public static class ScopeConstants
        {
            /// <summary>
            /// See, edit, configure, and delete your Google Cloud data and see the email address for your Google
            /// Account.
            /// </summary>
            public const string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";
        }

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects { get; }
    }

    /// <summary>A base abstract class for DiscoveryEngine requests.</summary>
    public abstract class DiscoveryEngineBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        /// <summary>Constructs a new DiscoveryEngineBaseServiceRequest instance.</summary>
        protected DiscoveryEngineBaseServiceRequest(Google.Apis.Services.IClientService service) : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1 = 0,

            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2 = 1,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json = 0,

            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media = 1,

            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto = 2,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>
        /// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required
        /// unless you provide an OAuth 2.0 token.
        /// </summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>
        /// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a
        /// user, but should not exceed 40 characters.
        /// </summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes DiscoveryEngine parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();
            RequestParameters.Add("$.xgafv", new Google.Apis.Discovery.Parameter
            {
                Name = "$.xgafv",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("access_token", new Google.Apis.Discovery.Parameter
            {
                Name = "access_token",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("alt", new Google.Apis.Discovery.Parameter
            {
                Name = "alt",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = "json",
                Pattern = null,
            });
            RequestParameters.Add("callback", new Google.Apis.Discovery.Parameter
            {
                Name = "callback",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("fields", new Google.Apis.Discovery.Parameter
            {
                Name = "fields",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("key", new Google.Apis.Discovery.Parameter
            {
                Name = "key",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("oauth_token", new Google.Apis.Discovery.Parameter
            {
                Name = "oauth_token",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("prettyPrint", new Google.Apis.Discovery.Parameter
            {
                Name = "prettyPrint",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = "true",
                Pattern = null,
            });
            RequestParameters.Add("quotaUser", new Google.Apis.Discovery.Parameter
            {
                Name = "quotaUser",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("uploadType", new Google.Apis.Discovery.Parameter
            {
                Name = "uploadType",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("upload_protocol", new Google.Apis.Discovery.Parameter
            {
                Name = "upload_protocol",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            Locations = new LocationsResource(service);
            Operations = new OperationsResource(service);
        }

        /// <summary>Gets the Locations resource.</summary>
        public virtual LocationsResource Locations { get; }

        /// <summary>The "locations" collection of methods.</summary>
        public class LocationsResource
        {
            private const string Resource = "locations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public LocationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                Collections = new CollectionsResource(service);
                DataStores = new DataStoresResource(service);
                Evaluations = new EvaluationsResource(service);
                GroundingConfigs = new GroundingConfigsResource(service);
                IdentityMappingStores = new IdentityMappingStoresResource(service);
                Operations = new OperationsResource(service);
                RankingConfigs = new RankingConfigsResource(service);
                SampleQuerySets = new SampleQuerySetsResource(service);
                UserEvents = new UserEventsResource(service);
            }

            /// <summary>Gets the Collections resource.</summary>
            public virtual CollectionsResource Collections { get; }

            /// <summary>The "collections" collection of methods.</summary>
            public class CollectionsResource
            {
                private const string Resource = "collections";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public CollectionsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    DataConnector = new DataConnectorResource(service);
                    DataStores = new DataStoresResource(service);
                    Engines = new EnginesResource(service);
                    Operations = new OperationsResource(service);
                }

                /// <summary>Gets the DataConnector resource.</summary>
                public virtual DataConnectorResource DataConnector { get; }

                /// <summary>The "dataConnector" collection of methods.</summary>
                public class DataConnectorResource
                {
                    private const string Resource = "dataConnector";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public DataConnectorResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Operations = new OperationsResource(service);
                    }

                    /// <summary>Gets the Operations resource.</summary>
                    public virtual OperationsResource Operations { get; }

                    /// <summary>The "operations" collection of methods.</summary>
                    public class OperationsResource
                    {
                        private const string Resource = "operations";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public OperationsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        /// <param name="name">The name of the operation resource.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataConnector/operations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        /// <param name="name">The name of the operation's parent resource.</param>
                        public virtual ListRequest List(string name)
                        {
                            return new ListRequest(this.service, name);
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation's parent resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>The standard list filter.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>The standard list page size.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>The standard list page token.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}/operations";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataConnector$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }
                }

                /// <summary>Gets the DataStores resource.</summary>
                public virtual DataStoresResource DataStores { get; }

                /// <summary>The "dataStores" collection of methods.</summary>
                public class DataStoresResource
                {
                    private const string Resource = "dataStores";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public DataStoresResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Branches = new BranchesResource(service);
                        CompletionConfig = new CompletionConfigResource(service);
                        CompletionSuggestions = new CompletionSuggestionsResource(service);
                        Controls = new ControlsResource(service);
                        Conversations = new ConversationsResource(service);
                        CustomModels = new CustomModelsResource(service);
                        Models = new ModelsResource(service);
                        Operations = new OperationsResource(service);
                        Schemas = new SchemasResource(service);
                        ServingConfigs = new ServingConfigsResource(service);
                        Sessions = new SessionsResource(service);
                        SiteSearchEngine = new SiteSearchEngineResource(service);
                        SuggestionDenyListEntries = new SuggestionDenyListEntriesResource(service);
                        UserEvents = new UserEventsResource(service);
                    }

                    /// <summary>Gets the Branches resource.</summary>
                    public virtual BranchesResource Branches { get; }

                    /// <summary>The "branches" collection of methods.</summary>
                    public class BranchesResource
                    {
                        private const string Resource = "branches";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public BranchesResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Documents = new DocumentsResource(service);
                            Operations = new OperationsResource(service);
                        }

                        /// <summary>Gets the Documents resource.</summary>
                        public virtual DocumentsResource Documents { get; }

                        /// <summary>The "documents" collection of methods.</summary>
                        public class DocumentsResource
                        {
                            private const string Resource = "documents";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public DocumentsResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>Creates a Document.</summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="parent">
                            /// Required. The parent resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// </param>
                            public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument body, string parent)
                            {
                                return new CreateRequest(this.service, body, parent);
                            }

                            /// <summary>Creates a Document.</summary>
                            public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument>
                            {
                                /// <summary>Constructs a new Create request.</summary>
                                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument body, string parent) : base(service)
                                {
                                    Parent = parent;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The parent resource name, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Required. The ID to use for the Document, which becomes the final component of the
                                /// Document.name. If the caller does not have permission to create the Document,
                                /// regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned.
                                /// This field must be unique among all Documents with the same parent. Otherwise, an
                                /// `ALREADY_EXISTS` error is returned. This field must conform to
                                /// [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 128
                                /// characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("documentId", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string DocumentId { get; set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "create";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/documents";

                                /// <summary>Initializes Create parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                    });
                                    RequestParameters.Add("documentId", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "documentId",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }

                            /// <summary>Deletes a Document.</summary>
                            /// <param name="name">
                            /// Required. Full resource name of Document, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
                            /// If the caller does not have permission to delete the Document, regardless of whether or
                            /// not it exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does
                            /// not exist, a `NOT_FOUND` error is returned.
                            /// </param>
                            public virtual DeleteRequest Delete(string name)
                            {
                                return new DeleteRequest(this.service, name);
                            }

                            /// <summary>Deletes a Document.</summary>
                            public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                            {
                                /// <summary>Constructs a new Delete request.</summary>
                                public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. Full resource name of Document, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
                                /// If the caller does not have permission to delete the Document, regardless of whether
                                /// or not it exists, a `PERMISSION_DENIED` error is returned. If the Document to delete
                                /// does not exist, a `NOT_FOUND` error is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "delete";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "DELETE";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Delete parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>Gets a Document.</summary>
                            /// <param name="name">
                            /// Required. Full resource name of Document, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
                            /// If the caller does not have permission to access the Document, regardless of whether or
                            /// not it exists, a `PERMISSION_DENIED` error is returned. If the requested Document does
                            /// not exist, a `NOT_FOUND` error is returned.
                            /// </param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>Gets a Document.</summary>
                            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. Full resource name of Document, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
                                /// If the caller does not have permission to access the Document, regardless of whether
                                /// or not it exists, a `PERMISSION_DENIED` error is returned. If the requested Document
                                /// does not exist, a `NOT_FOUND` error is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Bulk import of multiple Documents. Request processing may be synchronous. Non-existing
                            /// items are created. Note: It is possible for a subset of the Documents to be successfully
                            /// updated.
                            /// </summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="parent">
                            /// Required. The parent branch resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// Requires create/update permission.
                            /// </param>
                            public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportDocumentsRequest body, string parent)
                            {
                                return new ImportRequest(this.service, body, parent);
                            }

                            /// <summary>
                            /// Bulk import of multiple Documents. Request processing may be synchronous. Non-existing
                            /// items are created. Note: It is possible for a subset of the Documents to be successfully
                            /// updated.
                            /// </summary>
                            public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Import request.</summary>
                                public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportDocumentsRequest body, string parent) : base(service)
                                {
                                    Parent = parent;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The parent branch resource name, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                                /// Requires create/update permission.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportDocumentsRequest Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "import";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/documents:import";

                                /// <summary>Initializes Import parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>Gets a list of Documents.</summary>
                            /// <param name="parent">
                            /// Required. The parent branch resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// Use `default_branch` as the branch ID, to list documents under the default branch. If
                            /// the caller does not have permission to list Documents under this branch, regardless of
                            /// whether or not this branch exists, a `PERMISSION_DENIED` error is returned.
                            /// </param>
                            public virtual ListRequest List(string parent)
                            {
                                return new ListRequest(this.service, parent);
                            }

                            /// <summary>Gets a list of Documents.</summary>
                            public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListDocumentsResponse>
                            {
                                /// <summary>Constructs a new List request.</summary>
                                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                                {
                                    Parent = parent;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The parent branch resource name, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                                /// Use `default_branch` as the branch ID, to list documents under the default branch.
                                /// If the caller does not have permission to list Documents under this branch,
                                /// regardless of whether or not this branch exists, a `PERMISSION_DENIED` error is
                                /// returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Maximum number of Documents to return. If unspecified, defaults to 100. The maximum
                                /// allowed value is 1000. Values above 1000 are set to 1000. If this field is negative,
                                /// an `INVALID_ARGUMENT` error is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<int> PageSize { get; set; }

                                /// <summary>
                                /// A page token ListDocumentsResponse.next_page_token, received from a previous
                                /// DocumentService.ListDocuments call. Provide this to retrieve the subsequent page.
                                /// When paginating, all other parameters provided to DocumentService.ListDocuments must
                                /// match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error
                                /// is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string PageToken { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "list";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/documents";

                                /// <summary>Initializes List parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                    });
                                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageSize",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageToken",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }

                            /// <summary>Updates a Document.</summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="name">
                            /// Immutable. The full resource name of the document. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
                            /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                            /// </param>
                            public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument body, string name)
                            {
                                return new PatchRequest(this.service, body, name);
                            }

                            /// <summary>Updates a Document.</summary>
                            public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument>
                            {
                                /// <summary>Constructs a new Patch request.</summary>
                                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument body, string name) : base(service)
                                {
                                    Name = name;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Immutable. The full resource name of the document. Format:
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
                                /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>
                                /// If set to `true` and the Document is not found, a new Document is be created.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("allowMissing", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<bool> AllowMissing { get; set; }

                                /// <summary>
                                /// Indicates which fields in the provided imported 'document' to update. If not set, by
                                /// default updates all fields.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual object UpdateMask { get; set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "patch";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "PATCH";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Patch parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$",
                                    });
                                    RequestParameters.Add("allowMissing", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "allowMissing",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "updateMask",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }

                            /// <summary>
                            /// Permanently deletes all selected Documents in a branch. This process is asynchronous.
                            /// Depending on the number of Documents to be deleted, this operation can take hours to
                            /// complete. Before the delete operation completes, some Documents might still be returned
                            /// by DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the
                            /// Documents to be deleted, set PurgeDocumentsRequest.force to false.
                            /// </summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="parent">
                            /// Required. The parent resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// </param>
                            public virtual PurgeRequest Purge(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest body, string parent)
                            {
                                return new PurgeRequest(this.service, body, parent);
                            }

                            /// <summary>
                            /// Permanently deletes all selected Documents in a branch. This process is asynchronous.
                            /// Depending on the number of Documents to be deleted, this operation can take hours to
                            /// complete. Before the delete operation completes, some Documents might still be returned
                            /// by DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the
                            /// Documents to be deleted, set PurgeDocumentsRequest.force to false.
                            /// </summary>
                            public class PurgeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Purge request.</summary>
                                public PurgeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest body, string parent) : base(service)
                                {
                                    Parent = parent;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The parent resource name, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "purge";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/documents:purge";

                                /// <summary>Initializes Purge parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                    });
                                }
                            }
                        }

                        /// <summary>Gets the Operations resource.</summary>
                        public virtual OperationsResource Operations { get; }

                        /// <summary>The "operations" collection of methods.</summary>
                        public class OperationsResource
                        {
                            private const string Resource = "operations";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public OperationsResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>
                            /// Starts asynchronous cancellation on a long-running operation. The server makes a best
                            /// effort to cancel the operation, but success is not guaranteed. If the server doesn't
                            /// support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use
                            /// Operations.GetOperation or other methods to check whether the cancellation succeeded or
                            /// whether the operation completed despite cancellation. On successful cancellation, the
                            /// operation is not deleted; instead, it becomes an operation with an Operation.error value
                            /// with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
                            /// </summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="name">The name of the operation resource to be cancelled.</param>
                            public virtual CancelRequest Cancel(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningCancelOperationRequest body, string name)
                            {
                                return new CancelRequest(this.service, body, name);
                            }

                            /// <summary>
                            /// Starts asynchronous cancellation on a long-running operation. The server makes a best
                            /// effort to cancel the operation, but success is not guaranteed. If the server doesn't
                            /// support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use
                            /// Operations.GetOperation or other methods to check whether the cancellation succeeded or
                            /// whether the operation completed despite cancellation. On successful cancellation, the
                            /// operation is not deleted; instead, it becomes an operation with an Operation.error value
                            /// with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`.
                            /// </summary>
                            public class CancelRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                            {
                                /// <summary>Constructs a new Cancel request.</summary>
                                public CancelRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningCancelOperationRequest body, string name) : base(service)
                                {
                                    Name = name;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation resource to be cancelled.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningCancelOperationRequest Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "cancel";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}:cancel";

                                /// <summary>Initializes Cancel parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Gets the latest state of a long-running operation. Clients can use this method to poll
                            /// the operation result at intervals as recommended by the API service.
                            /// </summary>
                            /// <param name="name">The name of the operation resource.</param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>
                            /// Gets the latest state of a long-running operation. Clients can use this method to poll
                            /// the operation result at intervals as recommended by the API service.
                            /// </summary>
                            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation resource.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Lists operations that match the specified filter in the request. If the server doesn't
                            /// support this method, it returns `UNIMPLEMENTED`.
                            /// </summary>
                            /// <param name="name">The name of the operation's parent resource.</param>
                            public virtual ListRequest List(string name)
                            {
                                return new ListRequest(this.service, name);
                            }

                            /// <summary>
                            /// Lists operations that match the specified filter in the request. If the server doesn't
                            /// support this method, it returns `UNIMPLEMENTED`.
                            /// </summary>
                            public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                            {
                                /// <summary>Constructs a new List request.</summary>
                                public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation's parent resource.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>The standard list filter.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string Filter { get; set; }

                                /// <summary>The standard list page size.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<int> PageSize { get; set; }

                                /// <summary>The standard list page token.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string PageToken { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "list";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}/operations";

                                /// <summary>Initializes List parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                    });
                                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "filter",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageSize",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageToken",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }
                        }

                        /// <summary>
                        /// Gets index freshness metadata for Documents. Supported for website search only.
                        /// </summary>
                        /// <param name="parent">
                        /// Required. The parent branch resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                        /// </param>
                        public virtual BatchGetDocumentsMetadataRequest BatchGetDocumentsMetadata(string parent)
                        {
                            return new BatchGetDocumentsMetadataRequest(this.service, parent);
                        }

                        /// <summary>
                        /// Gets index freshness metadata for Documents. Supported for website search only.
                        /// </summary>
                        public class BatchGetDocumentsMetadataRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponse>
                        {
                            /// <summary>Constructs a new BatchGetDocumentsMetadata request.</summary>
                            public BatchGetDocumentsMetadataRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent branch resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The FHIR resources to match by. Format:
                            /// projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}/fhir/{resource_type}/{fhir_resource_id}
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("matcher.fhirMatcher.fhirResources", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual Google.Apis.Util.Repeatable<string> MatcherFhirMatcherFhirResources { get; set; }

                            /// <summary>The exact URIs to match by.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("matcher.urisMatcher.uris", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual Google.Apis.Util.Repeatable<string> MatcherUrisMatcherUris { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "batchGetDocumentsMetadata";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/batchGetDocumentsMetadata";

                            /// <summary>Initializes BatchGetDocumentsMetadata parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                });
                                RequestParameters.Add("matcher.fhirMatcher.fhirResources", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "matcher.fhirMatcher.fhirResources",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("matcher.urisMatcher.uris", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "matcher.urisMatcher.uris",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the CompletionConfig resource.</summary>
                    public virtual CompletionConfigResource CompletionConfig { get; }

                    /// <summary>The "completionConfig" collection of methods.</summary>
                    public class CompletionConfigResource
                    {
                        private const string Resource = "completionConfig";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public CompletionConfigResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Completes the user input with advanced keyword suggestions.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="completionConfig">
                        /// Required. The completion_config of the parent dataStore or engine resource name for which
                        /// the completion is performed, such as
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/completionConfig`
                        /// `projects/*/locations/global/collections/default_collection/engines/*/completionConfig`.
                        /// </param>
                        public virtual CompleteQueryRequest CompleteQuery(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest body, string completionConfig)
                        {
                            return new CompleteQueryRequest(this.service, body, completionConfig);
                        }

                        /// <summary>Completes the user input with advanced keyword suggestions.</summary>
                        public class CompleteQueryRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>
                        {
                            /// <summary>Constructs a new CompleteQuery request.</summary>
                            public CompleteQueryRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest body, string completionConfig) : base(service)
                            {
                                CompletionConfig = completionConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The completion_config of the parent dataStore or engine resource name for
                            /// which the completion is performed, such as
                            /// `projects/*/locations/global/collections/default_collection/dataStores/*/completionConfig`
                            /// `projects/*/locations/global/collections/default_collection/engines/*/completionConfig`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("completionConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string CompletionConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "completeQuery";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+completionConfig}:completeQuery";

                            /// <summary>Initializes CompleteQuery parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("completionConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "completionConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/completionConfig$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the CompletionSuggestions resource.</summary>
                    public virtual CompletionSuggestionsResource CompletionSuggestions { get; }

                    /// <summary>The "completionSuggestions" collection of methods.</summary>
                    public class CompletionSuggestionsResource
                    {
                        private const string Resource = "completionSuggestions";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public CompletionSuggestionsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Imports CompletionSuggestions for a DataStore.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent data store resource name for which to import customer autocomplete
                        /// suggestions. Follows pattern `projects/*/locations/*/collections/*/dataStores/*`
                        /// </param>
                        public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest body, string parent)
                        {
                            return new ImportRequest(this.service, body, parent);
                        }

                        /// <summary>Imports CompletionSuggestions for a DataStore.</summary>
                        public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Import request.</summary>
                            public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent data store resource name for which to import customer autocomplete
                            /// suggestions. Follows pattern `projects/*/locations/*/collections/*/dataStores/*`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "import";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/completionSuggestions:import";

                            /// <summary>Initializes Import parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Permanently deletes all CompletionSuggestions for a DataStore.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent data store resource name for which to purge completion suggestions.
                        /// Follows pattern projects/*/locations/*/collections/*/dataStores/*.
                        /// </param>
                        public virtual PurgeRequest Purge(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest body, string parent)
                        {
                            return new PurgeRequest(this.service, body, parent);
                        }

                        /// <summary>Permanently deletes all CompletionSuggestions for a DataStore.</summary>
                        public class PurgeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Purge request.</summary>
                            public PurgeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent data store resource name for which to purge completion suggestions.
                            /// Follows pattern projects/*/locations/*/collections/*/dataStores/*.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "purge";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/completionSuggestions:purge";

                            /// <summary>Initializes Purge parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Controls resource.</summary>
                    public virtual ControlsResource Controls { get; }

                    /// <summary>The "controls" collection of methods.</summary>
                    public class ControlsResource
                    {
                        private const string Resource = "controls";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ControlsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Creates a Control. By default 1000 controls are allowed for a data store. A request can be
                        /// submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS
                        /// error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                        /// or
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a Control. By default 1000 controls are allowed for a data store. A request can be
                        /// submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS
                        /// error is returned.
                        /// </summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of parent data store. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                            /// or
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The ID to use for the Control, which will become the final component of the
                            /// Control's resource name. This value must be within 1-63 characters. Valid characters are
                            /// /a-z-_/.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("controlId", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string ControlId { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/controls";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("controlId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "controlId",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Control to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Control to delete. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/controls/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a Control.</summary>
                        /// <param name="name">
                        /// Required. The resource name of the Control to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Control.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Control to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/controls/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists all Controls by their parent DataStore.</summary>
                        /// <param name="parent">
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                        /// or
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists all Controls by their parent DataStore.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListControlsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The data store resource name. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                            /// or
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. A filter to apply on the list results. Supported features: * List all the
                            /// products under the parent branch if filter is unset. Currently this field is
                            /// unsupported.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// Optional. Maximum number of results to return. If unspecified, defaults to 50. Max
                            /// allowed value is 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. A page token, received from a previous `ListControls` call. Provide this to
                            /// retrieve the subsequent page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/controls";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates a Control. Control action type cannot be changed. If the Control to update does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates a Control. Control action type cannot be changed. If the Control to update does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Optional. Indicates which fields in the provided Control to update. The following are
                            /// NOT supported: * Control.name * Control.solution_type If not set or empty, all supported
                            /// fields are updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/controls/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Conversations resource.</summary>
                    public virtual ConversationsResource Conversations { get; }

                    /// <summary>The "conversations" collection of methods.</summary>
                    public class ConversationsResource
                    {
                        private const string Resource = "conversations";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ConversationsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Converses a conversation.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Required. The resource name of the Conversation to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
                        /// Use
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
                        /// to activate auto session mode, which automatically creates a new conversation inside a
                        /// ConverseConversation session.
                        /// </param>
                        public virtual ConverseRequest Converse(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest body, string name)
                        {
                            return new ConverseRequest(this.service, body, name);
                        }

                        /// <summary>Converses a conversation.</summary>
                        public class ConverseRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationResponse>
                        {
                            /// <summary>Constructs a new Converse request.</summary>
                            public ConverseRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Conversation to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
                            /// Use
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
                            /// to activate auto session mode, which automatically creates a new conversation inside a
                            /// ConverseConversation session.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "converse";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}:converse";

                            /// <summary>Initializes Converse parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS
                        /// error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS
                        /// error is returned.
                        /// </summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of parent data store. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/conversations";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
                        /// returned.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Conversation to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
                        /// returned.
                        /// </summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Conversation to delete. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a Conversation.</summary>
                        /// <param name="name">
                        /// Required. The resource name of the Conversation to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Conversation.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Conversation to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists all Conversations by their parent DataStore.</summary>
                        /// <param name="parent">
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists all Conversations by their parent DataStore.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListConversationsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The data store resource name. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// A filter to apply on the list results. The supported features are: user_pseudo_id,
                            /// state. Example: "user_pseudo_id = some_id"
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
                            /// after a field name for descending. Supported fields: * `update_time` * `create_time` *
                            /// `conversation_name` Example: "update_time desc" "create_time"
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string OrderBy { get; set; }

                            /// <summary>
                            /// Maximum number of results to return. If unspecified, defaults to 50. Max allowed value
                            /// is 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// A page token, received from a previous `ListConversations` call. Provide this to
                            /// retrieve the subsequent page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/conversations";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("orderBy", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "orderBy",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
                        /// update does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/global/collections/{collection}/dataStore/*/conversations/*`
                        /// or `projects/{project}/locations/global/collections/{collection}/engines/*/conversations/*`.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
                        /// update does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. Fully qualified name
                            /// `projects/{project}/locations/global/collections/{collection}/dataStore/*/conversations/*`
                            /// or
                            /// `projects/{project}/locations/global/collections/{collection}/engines/*/conversations/*`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Indicates which fields in the provided Conversation to update. The following are NOT
                            /// supported: * Conversation.name If not set or empty, all supported fields are updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/conversations/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the CustomModels resource.</summary>
                    public virtual CustomModelsResource CustomModels { get; }

                    /// <summary>The "customModels" collection of methods.</summary>
                    public class CustomModelsResource
                    {
                        private const string Resource = "customModels";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public CustomModelsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Gets a list of all the custom models.</summary>
                        /// <param name="dataStore">
                        /// Required. The resource name of the parent Data Store, such as
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.
                        /// This field is used to identify the data store where to fetch the models from.
                        /// </param>
                        public virtual ListRequest List(string dataStore)
                        {
                            return new ListRequest(this.service, dataStore);
                        }

                        /// <summary>Gets a list of all the custom models.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListCustomModelsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string dataStore) : base(service)
                            {
                                DataStore = dataStore;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the parent Data Store, such as
                            /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.
                            /// This field is used to identify the data store where to fetch the models from.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("dataStore", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string DataStore { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+dataStore}/customModels";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("dataStore", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "dataStore",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Models resource.</summary>
                    public virtual ModelsResource Models { get; }

                    /// <summary>The "models" collection of methods.</summary>
                    public class ModelsResource
                    {
                        private const string Resource = "models";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ModelsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Operations = new OperationsResource(service);
                        }

                        /// <summary>Gets the Operations resource.</summary>
                        public virtual OperationsResource Operations { get; }

                        /// <summary>The "operations" collection of methods.</summary>
                        public class OperationsResource
                        {
                            private const string Resource = "operations";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public OperationsResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>
                            /// Gets the latest state of a long-running operation. Clients can use this method to poll
                            /// the operation result at intervals as recommended by the API service.
                            /// </summary>
                            /// <param name="name">The name of the operation resource.</param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>
                            /// Gets the latest state of a long-running operation. Clients can use this method to poll
                            /// the operation result at intervals as recommended by the API service.
                            /// </summary>
                            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation resource.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/models/[^/]+/operations/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Lists operations that match the specified filter in the request. If the server doesn't
                            /// support this method, it returns `UNIMPLEMENTED`.
                            /// </summary>
                            /// <param name="name">The name of the operation's parent resource.</param>
                            public virtual ListRequest List(string name)
                            {
                                return new ListRequest(this.service, name);
                            }

                            /// <summary>
                            /// Lists operations that match the specified filter in the request. If the server doesn't
                            /// support this method, it returns `UNIMPLEMENTED`.
                            /// </summary>
                            public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                            {
                                /// <summary>Constructs a new List request.</summary>
                                public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation's parent resource.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>The standard list filter.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string Filter { get; set; }

                                /// <summary>The standard list page size.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<int> PageSize { get; set; }

                                /// <summary>The standard list page token.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string PageToken { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "list";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}/operations";

                                /// <summary>Initializes List parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/models/[^/]+$",
                                    });
                                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "filter",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageSize",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageToken",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }
                        }
                    }

                    /// <summary>Gets the Operations resource.</summary>
                    public virtual OperationsResource Operations { get; }

                    /// <summary>The "operations" collection of methods.</summary>
                    public class OperationsResource
                    {
                        private const string Resource = "operations";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public OperationsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        /// <param name="name">The name of the operation resource.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/operations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        /// <param name="name">The name of the operation's parent resource.</param>
                        public virtual ListRequest List(string name)
                        {
                            return new ListRequest(this.service, name);
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation's parent resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>The standard list filter.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>The standard list page size.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>The standard list page token.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}/operations";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Schemas resource.</summary>
                    public virtual SchemasResource Schemas { get; }

                    /// <summary>The "schemas" collection of methods.</summary>
                    public class SchemasResource
                    {
                        private const string Resource = "schemas";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public SchemasResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Operations = new OperationsResource(service);
                        }

                        /// <summary>Gets the Operations resource.</summary>
                        public virtual OperationsResource Operations { get; }

                        /// <summary>The "operations" collection of methods.</summary>
                        public class OperationsResource
                        {
                            private const string Resource = "operations";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public OperationsResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>
                            /// Gets the latest state of a long-running operation. Clients can use this method to poll
                            /// the operation result at intervals as recommended by the API service.
                            /// </summary>
                            /// <param name="name">The name of the operation resource.</param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>
                            /// Gets the latest state of a long-running operation. Clients can use this method to poll
                            /// the operation result at intervals as recommended by the API service.
                            /// </summary>
                            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation resource.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+/operations/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Lists operations that match the specified filter in the request. If the server doesn't
                            /// support this method, it returns `UNIMPLEMENTED`.
                            /// </summary>
                            /// <param name="name">The name of the operation's parent resource.</param>
                            public virtual ListRequest List(string name)
                            {
                                return new ListRequest(this.service, name);
                            }

                            /// <summary>
                            /// Lists operations that match the specified filter in the request. If the server doesn't
                            /// support this method, it returns `UNIMPLEMENTED`.
                            /// </summary>
                            public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                            {
                                /// <summary>Constructs a new List request.</summary>
                                public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation's parent resource.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>The standard list filter.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string Filter { get; set; }

                                /// <summary>The standard list page size.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<int> PageSize { get; set; }

                                /// <summary>The standard list page token.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string PageToken { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "list";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}/operations";

                                /// <summary>Initializes List parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$",
                                    });
                                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "filter",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageSize",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageToken",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }
                        }

                        /// <summary>Creates a Schema.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent data store resource name, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates a Schema.</summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent data store resource name, in the format of
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The ID to use for the Schema, which becomes the final component of the
                            /// Schema.name. This field should conform to
                            /// [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
                            /// characters.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("schemaId", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string SchemaId { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/schemas";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("schemaId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "schemaId",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Deletes a Schema.</summary>
                        /// <param name="name">
                        /// Required. The full resource name of the schema, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>Deletes a Schema.</summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The full resource name of the schema, in the format of
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a Schema.</summary>
                        /// <param name="name">
                        /// Required. The full resource name of the schema, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Schema.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The full resource name of the schema, in the format of
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a list of Schemas.</summary>
                        /// <param name="parent">
                        /// Required. The parent data store resource name, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Gets a list of Schemas.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListSchemasResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent data store resource name, in the format of
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// The maximum number of Schemas to return. The service may return fewer than this value.
                            /// If unspecified, at most 100 Schemas are returned. The maximum value is 1000; values
                            /// above 1000 are set to 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// A page token, received from a previous SchemaService.ListSchemas call. Provide this to
                            /// retrieve the subsequent page. When paginating, all other parameters provided to
                            /// SchemaService.ListSchemas must match the call that provided the page token.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/schemas";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Updates a Schema.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. The full resource name of the schema, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>Updates a Schema.</summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. The full resource name of the schema, in the format of
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                            /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// If set to true, and the Schema is not found, a new Schema is created. In this situation,
                            /// `update_mask` is ignored.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("allowMissing", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<bool> AllowMissing { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/schemas/[^/]+$",
                                });
                                RequestParameters.Add("allowMissing", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "allowMissing",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the ServingConfigs resource.</summary>
                    public virtual ServingConfigsResource ServingConfigs { get; }

                    /// <summary>The "servingConfigs" collection of methods.</summary>
                    public class ServingConfigsResource
                    {
                        private const string Resource = "servingConfigs";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ServingConfigsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Answer query method.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </param>
                        public virtual AnswerRequest Answer(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig)
                        {
                            return new AnswerRequest(this.service, body, servingConfig);
                        }

                        /// <summary>Answer query method.</summary>
                        public class AnswerRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>
                        {
                            /// <summary>Constructs a new Answer request.</summary>
                            public AnswerRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Search serving config, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                            /// or
                            /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                            /// This field is used to identify the serving configuration name, set of models used to
                            /// make the search.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "answer";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:answer";

                            /// <summary>Initializes Answer parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the ServingConfig to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
                        /// </summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the ServingConfig to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists all ServingConfigs linked to this dataStore.</summary>
                        /// <param name="parent">
                        /// Required. Full resource name of the parent resource. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists all ServingConfigs linked to this dataStore.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListServingConfigsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of the parent resource. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. Maximum number of results to return. If unspecified, defaults to 100. If a
                            /// value greater than 100 is provided, at most 100 results are returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. A page token, received from a previous `ListServingConfigs` call. Provide this
                            /// to retrieve the subsequent page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/servingConfigs";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
                        /// </summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. Fully qualified name
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Indicates which fields in the provided ServingConfig to update. The following are NOT
                            /// supported: * ServingConfig.name If not set, all supported fields are updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Makes a recommendation, which requires a contextual user event.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. Full resource name of a ServingConfig:
                        /// `projects/*/locations/global/collections/*/engines/*/servingConfigs/*`, or
                        /// `projects/*/locations/global/collections/*/dataStores/*/servingConfigs/*` One default
                        /// serving config is created along with your recommendation engine creation. The engine ID is
                        /// used as the ID of the default serving config. For example, for Engine
                        /// `projects/*/locations/global/collections/*/engines/my-engine`, you can use
                        /// `projects/*/locations/global/collections/*/engines/my-engine/servingConfigs/my-engine` for
                        /// your RecommendationService.Recommend requests.
                        /// </param>
                        public virtual RecommendRequest Recommend(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest body, string servingConfig)
                        {
                            return new RecommendRequest(this.service, body, servingConfig);
                        }

                        /// <summary>Makes a recommendation, which requires a contextual user event.</summary>
                        public class RecommendRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendResponse>
                        {
                            /// <summary>Constructs a new Recommend request.</summary>
                            public RecommendRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of a ServingConfig:
                            /// `projects/*/locations/global/collections/*/engines/*/servingConfigs/*`, or
                            /// `projects/*/locations/global/collections/*/dataStores/*/servingConfigs/*` One default
                            /// serving config is created along with your recommendation engine creation. The engine ID
                            /// is used as the ID of the default serving config. For example, for Engine
                            /// `projects/*/locations/global/collections/*/engines/my-engine`, you can use
                            /// `projects/*/locations/global/collections/*/engines/my-engine/servingConfigs/my-engine`
                            /// for your RecommendationService.Recommend requests.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "recommend";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:recommend";

                            /// <summary>Initializes Recommend parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Performs a search.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </param>
                        public virtual SearchRequest Search(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig)
                        {
                            return new SearchRequest(this.service, body, servingConfig);
                        }

                        /// <summary>Performs a search.</summary>
                        public class SearchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchResponse>
                        {
                            /// <summary>Constructs a new Search request.</summary>
                            public SearchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Search serving config, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                            /// or
                            /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                            /// This field is used to identify the serving configuration name, set of models used to
                            /// make the search.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "search";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:search";

                            /// <summary>Initializes Search parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Performs a search. Similar to the SearchService.Search method, but a lite version that
                        /// allows API key for authentication, where OAuth and IAM checks are not required. Only public
                        /// website search is supported by this method. If data stores and engines not associated with
                        /// public website search are specified, a `FAILED_PRECONDITION` error is returned. This method
                        /// can be used for easy onboarding without having to implement an authentication backend.
                        /// However, it is strongly recommended to use SearchService.Search instead with required OAuth
                        /// and IAM checks to provide better data security.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </param>
                        public virtual SearchLiteRequest SearchLite(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig)
                        {
                            return new SearchLiteRequest(this.service, body, servingConfig);
                        }

                        /// <summary>
                        /// Performs a search. Similar to the SearchService.Search method, but a lite version that
                        /// allows API key for authentication, where OAuth and IAM checks are not required. Only public
                        /// website search is supported by this method. If data stores and engines not associated with
                        /// public website search are specified, a `FAILED_PRECONDITION` error is returned. This method
                        /// can be used for easy onboarding without having to implement an authentication backend.
                        /// However, it is strongly recommended to use SearchService.Search instead with required OAuth
                        /// and IAM checks to provide better data security.
                        /// </summary>
                        public class SearchLiteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchResponse>
                        {
                            /// <summary>Constructs a new SearchLite request.</summary>
                            public SearchLiteRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Search serving config, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                            /// or
                            /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                            /// This field is used to identify the serving configuration name, set of models used to
                            /// make the search.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "searchLite";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:searchLite";

                            /// <summary>Initializes SearchLite parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple
                        /// AnswerQueryResponse messages in a stream.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </param>
                        public virtual StreamAnswerRequest StreamAnswer(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig)
                        {
                            return new StreamAnswerRequest(this.service, body, servingConfig);
                        }

                        /// <summary>
                        /// Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple
                        /// AnswerQueryResponse messages in a stream.
                        /// </summary>
                        public class StreamAnswerRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>
                        {
                            /// <summary>Constructs a new StreamAnswer request.</summary>
                            public StreamAnswerRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Search serving config, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                            /// or
                            /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                            /// This field is used to identify the serving configuration name, set of models used to
                            /// make the search.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "streamAnswer";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:streamAnswer";

                            /// <summary>Initializes StreamAnswer parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Sessions resource.</summary>
                    public virtual SessionsResource Sessions { get; }

                    /// <summary>The "sessions" collection of methods.</summary>
                    public class SessionsResource
                    {
                        private const string Resource = "sessions";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public SessionsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Answers = new AnswersResource(service);
                        }

                        /// <summary>Gets the Answers resource.</summary>
                        public virtual AnswersResource Answers { get; }

                        /// <summary>The "answers" collection of methods.</summary>
                        public class AnswersResource
                        {
                            private const string Resource = "answers";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public AnswersResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>Gets a Answer.</summary>
                            /// <param name="name">
                            /// Required. The resource name of the Answer to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
                            /// </param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>Gets a Answer.</summary>
                            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswer>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The resource name of the Answer to get. Format:
                                /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+/answers/[^/]+$",
                                    });
                                }
                            }
                        }

                        /// <summary>
                        /// Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is
                        /// returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is
                        /// returned.
                        /// </summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of parent data store. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/sessions";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Session to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Session to delete. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a Session.</summary>
                        /// <param name="name">
                        /// Required. The resource name of the Session to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Session.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Session to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Optional. If set to true, the full session including all answer details will be
                            /// returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("includeAnswerDetails", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<bool> IncludeAnswerDetails { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$",
                                });
                                RequestParameters.Add("includeAnswerDetails", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "includeAnswerDetails",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Lists all Sessions by their parent DataStore.</summary>
                        /// <param name="parent">
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists all Sessions by their parent DataStore.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListSessionsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The data store resource name. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// A filter to apply on the list results. The supported features are: user_pseudo_id,
                            /// state. Example: "user_pseudo_id = some_id"
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
                            /// after a field name for descending. Supported fields: * `update_time` * `create_time` *
                            /// `session_name` * `is_pinned` Example: * "update_time desc" * "create_time" * "is_pinned
                            /// desc,update_time desc": list sessions by is_pinned first, then by update_time.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string OrderBy { get; set; }

                            /// <summary>
                            /// Maximum number of results to return. If unspecified, defaults to 50. Max allowed value
                            /// is 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// A page token, received from a previous `ListSessions` call. Provide this to retrieve the
                            /// subsequent page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/sessions";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("orderBy", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "orderBy",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates a Session. Session action type cannot be changed. If the Session to update does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates a Session. Session action type cannot be changed. If the Session to update does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. Fully qualified name
                            /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Indicates which fields in the provided Session to update. The following are NOT
                            /// supported: * Session.name If not set or empty, all supported fields are updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/sessions/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the SiteSearchEngine resource.</summary>
                    public virtual SiteSearchEngineResource SiteSearchEngine { get; }

                    /// <summary>The "siteSearchEngine" collection of methods.</summary>
                    public class SiteSearchEngineResource
                    {
                        private const string Resource = "siteSearchEngine";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public SiteSearchEngineResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Operations = new OperationsResource(service);
                            Sitemaps = new SitemapsResource(service);
                            TargetSites = new TargetSitesResource(service);
                        }

                        /// <summary>Gets the Operations resource.</summary>
                        public virtual OperationsResource Operations { get; }

                        /// <summary>The "operations" collection of methods.</summary>
                        public class OperationsResource
                        {
                            private const string Resource = "operations";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public OperationsResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>
                            /// Gets the latest state of a long-running operation. Clients can use this method to poll
                            /// the operation result at intervals as recommended by the API service.
                            /// </summary>
                            /// <param name="name">The name of the operation resource.</param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>
                            /// Gets the latest state of a long-running operation. Clients can use this method to poll
                            /// the operation result at intervals as recommended by the API service.
                            /// </summary>
                            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation resource.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/operations/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>
                            /// Lists operations that match the specified filter in the request. If the server doesn't
                            /// support this method, it returns `UNIMPLEMENTED`.
                            /// </summary>
                            /// <param name="name">The name of the operation's parent resource.</param>
                            public virtual ListRequest List(string name)
                            {
                                return new ListRequest(this.service, name);
                            }

                            /// <summary>
                            /// Lists operations that match the specified filter in the request. If the server doesn't
                            /// support this method, it returns `UNIMPLEMENTED`.
                            /// </summary>
                            public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                            {
                                /// <summary>Constructs a new List request.</summary>
                                public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>The name of the operation's parent resource.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>The standard list filter.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string Filter { get; set; }

                                /// <summary>The standard list page size.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<int> PageSize { get; set; }

                                /// <summary>The standard list page token.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string PageToken { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "list";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}/operations";

                                /// <summary>Initializes List parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                    });
                                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "filter",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageSize",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageToken",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }
                        }

                        /// <summary>Gets the Sitemaps resource.</summary>
                        public virtual SitemapsResource Sitemaps { get; }

                        /// <summary>The "sitemaps" collection of methods.</summary>
                        public class SitemapsResource
                        {
                            private const string Resource = "sitemaps";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public SitemapsResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>Creates a Sitemap.</summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="parent">
                            /// Required. Parent resource name of the SiteSearchEngine, such as
                            /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                            /// </param>
                            public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSitemap body, string parent)
                            {
                                return new CreateRequest(this.service, body, parent);
                            }

                            /// <summary>Creates a Sitemap.</summary>
                            public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Create request.</summary>
                                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSitemap body, string parent) : base(service)
                                {
                                    Parent = parent;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. Parent resource name of the SiteSearchEngine, such as
                                /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSitemap Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "create";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/sitemaps";

                                /// <summary>Initializes Create parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                    });
                                }
                            }

                            /// <summary>Deletes a Sitemap.</summary>
                            /// <param name="name">
                            /// Required. Full resource name of Sitemap, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/sitemaps/{sitemap}`.
                            /// If the caller does not have permission to access the Sitemap, regardless of whether or
                            /// not it exists, a PERMISSION_DENIED error is returned. If the requested Sitemap does not
                            /// exist, a NOT_FOUND error is returned.
                            /// </param>
                            public virtual DeleteRequest Delete(string name)
                            {
                                return new DeleteRequest(this.service, name);
                            }

                            /// <summary>Deletes a Sitemap.</summary>
                            public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Delete request.</summary>
                                public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. Full resource name of Sitemap, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/sitemaps/{sitemap}`.
                                /// If the caller does not have permission to access the Sitemap, regardless of whether
                                /// or not it exists, a PERMISSION_DENIED error is returned. If the requested Sitemap
                                /// does not exist, a NOT_FOUND error is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "delete";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "DELETE";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Delete parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/sitemaps/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>Fetch Sitemaps in a DataStore.</summary>
                            /// <param name="parent">
                            /// Required. Parent resource name of the SiteSearchEngine, such as
                            /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                            /// </param>
                            public virtual FetchRequest Fetch(string parent)
                            {
                                return new FetchRequest(this.service, parent);
                            }

                            /// <summary>Fetch Sitemaps in a DataStore.</summary>
                            public class FetchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaFetchSitemapsResponse>
                            {
                                /// <summary>Constructs a new Fetch request.</summary>
                                public FetchRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                                {
                                    Parent = parent;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. Parent resource name of the SiteSearchEngine, such as
                                /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>The Sitemap uris.</summary>
                                [Google.Apis.Util.RequestParameterAttribute("matcher.urisMatcher.uris", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual Google.Apis.Util.Repeatable<string> MatcherUrisMatcherUris { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "fetch";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/sitemaps:fetch";

                                /// <summary>Initializes Fetch parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                    });
                                    RequestParameters.Add("matcher.urisMatcher.uris", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "matcher.urisMatcher.uris",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }
                        }

                        /// <summary>Gets the TargetSites resource.</summary>
                        public virtual TargetSitesResource TargetSites { get; }

                        /// <summary>The "targetSites" collection of methods.</summary>
                        public class TargetSitesResource
                        {
                            private const string Resource = "targetSites";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public TargetSitesResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                                Operations = new OperationsResource(service);
                            }

                            /// <summary>Gets the Operations resource.</summary>
                            public virtual OperationsResource Operations { get; }

                            /// <summary>The "operations" collection of methods.</summary>
                            public class OperationsResource
                            {
                                private const string Resource = "operations";

                                /// <summary>The service which this resource belongs to.</summary>
                                private readonly Google.Apis.Services.IClientService service;

                                /// <summary>Constructs a new resource.</summary>
                                public OperationsResource(Google.Apis.Services.IClientService service)
                                {
                                    this.service = service;
                                }

                                /// <summary>
                                /// Gets the latest state of a long-running operation. Clients can use this method to
                                /// poll the operation result at intervals as recommended by the API service.
                                /// </summary>
                                /// <param name="name">The name of the operation resource.</param>
                                public virtual GetRequest Get(string name)
                                {
                                    return new GetRequest(this.service, name);
                                }

                                /// <summary>
                                /// Gets the latest state of a long-running operation. Clients can use this method to
                                /// poll the operation result at intervals as recommended by the API service.
                                /// </summary>
                                public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                                {
                                    /// <summary>Constructs a new Get request.</summary>
                                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                    {
                                        Name = name;
                                        InitParameters();
                                    }

                                    /// <summary>The name of the operation resource.</summary>
                                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Name { get; private set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "get";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v1beta/{+name}";

                                    /// <summary>Initializes Get parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "name",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/operations/[^/]+$",
                                        });
                                    }
                                }

                                /// <summary>
                                /// Lists operations that match the specified filter in the request. If the server
                                /// doesn't support this method, it returns `UNIMPLEMENTED`.
                                /// </summary>
                                /// <param name="name">The name of the operation's parent resource.</param>
                                public virtual ListRequest List(string name)
                                {
                                    return new ListRequest(this.service, name);
                                }

                                /// <summary>
                                /// Lists operations that match the specified filter in the request. If the server
                                /// doesn't support this method, it returns `UNIMPLEMENTED`.
                                /// </summary>
                                public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                                {
                                    /// <summary>Constructs a new List request.</summary>
                                    public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                    {
                                        Name = name;
                                        InitParameters();
                                    }

                                    /// <summary>The name of the operation's parent resource.</summary>
                                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                    public virtual string Name { get; private set; }

                                    /// <summary>The standard list filter.</summary>
                                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual string Filter { get; set; }

                                    /// <summary>The standard list page size.</summary>
                                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual System.Nullable<int> PageSize { get; set; }

                                    /// <summary>The standard list page token.</summary>
                                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                    public virtual string PageToken { get; set; }

                                    /// <summary>Gets the method name.</summary>
                                    public override string MethodName => "list";

                                    /// <summary>Gets the HTTP method.</summary>
                                    public override string HttpMethod => "GET";

                                    /// <summary>Gets the REST path.</summary>
                                    public override string RestPath => "v1beta/{+name}/operations";

                                    /// <summary>Initializes List parameter list.</summary>
                                    protected override void InitParameters()
                                    {
                                        base.InitParameters();
                                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "name",
                                            IsRequired = true,
                                            ParameterType = "path",
                                            DefaultValue = null,
                                            Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites$",
                                        });
                                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "filter",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "pageSize",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                        {
                                            Name = "pageToken",
                                            IsRequired = false,
                                            ParameterType = "query",
                                            DefaultValue = null,
                                            Pattern = null,
                                        });
                                    }
                                }
                            }

                            /// <summary>Creates TargetSite in a batch.</summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="parent">
                            /// Required. The parent resource shared by all TargetSites being created.
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                            /// The parent field in the CreateBookRequest messages must either be empty or match this
                            /// field.
                            /// </param>
                            public virtual BatchCreateRequest BatchCreate(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest body, string parent)
                            {
                                return new BatchCreateRequest(this.service, body, parent);
                            }

                            /// <summary>Creates TargetSite in a batch.</summary>
                            public class BatchCreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new BatchCreate request.</summary>
                                public BatchCreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest body, string parent) : base(service)
                                {
                                    Parent = parent;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The parent resource shared by all TargetSites being created.
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                                /// The parent field in the CreateBookRequest messages must either be empty or match
                                /// this field.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "batchCreate";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/targetSites:batchCreate";

                                /// <summary>Initializes BatchCreate parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                    });
                                }
                            }

                            /// <summary>Creates a TargetSite.</summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="parent">
                            /// Required. Parent resource name of TargetSite, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                            /// </param>
                            public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite body, string parent)
                            {
                                return new CreateRequest(this.service, body, parent);
                            }

                            /// <summary>Creates a TargetSite.</summary>
                            public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Create request.</summary>
                                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite body, string parent) : base(service)
                                {
                                    Parent = parent;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. Parent resource name of TargetSite, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "create";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "POST";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/targetSites";

                                /// <summary>Initializes Create parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                    });
                                }
                            }

                            /// <summary>Deletes a TargetSite.</summary>
                            /// <param name="name">
                            /// Required. Full resource name of TargetSite, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
                            /// If the caller does not have permission to access the TargetSite, regardless of whether
                            /// or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite
                            /// does not exist, a NOT_FOUND error is returned.
                            /// </param>
                            public virtual DeleteRequest Delete(string name)
                            {
                                return new DeleteRequest(this.service, name);
                            }

                            /// <summary>Deletes a TargetSite.</summary>
                            public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Delete request.</summary>
                                public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. Full resource name of TargetSite, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
                                /// If the caller does not have permission to access the TargetSite, regardless of
                                /// whether or not it exists, a PERMISSION_DENIED error is returned. If the requested
                                /// TargetSite does not exist, a NOT_FOUND error is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "delete";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "DELETE";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Delete parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>Gets a TargetSite.</summary>
                            /// <param name="name">
                            /// Required. Full resource name of TargetSite, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
                            /// If the caller does not have permission to access the TargetSite, regardless of whether
                            /// or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite
                            /// does not exist, a NOT_FOUND error is returned.
                            /// </param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>Gets a TargetSite.</summary>
                            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. Full resource name of TargetSite, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
                                /// If the caller does not have permission to access the TargetSite, regardless of
                                /// whether or not it exists, a PERMISSION_DENIED error is returned. If the requested
                                /// TargetSite does not exist, a NOT_FOUND error is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$",
                                    });
                                }
                            }

                            /// <summary>Gets a list of TargetSites.</summary>
                            /// <param name="parent">
                            /// Required. The parent site search engine resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                            /// If the caller does not have permission to list TargetSites under this site search
                            /// engine, regardless of whether or not this branch exists, a PERMISSION_DENIED error is
                            /// returned.
                            /// </param>
                            public virtual ListRequest List(string parent)
                            {
                                return new ListRequest(this.service, parent);
                            }

                            /// <summary>Gets a list of TargetSites.</summary>
                            public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListTargetSitesResponse>
                            {
                                /// <summary>Constructs a new List request.</summary>
                                public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                                {
                                    Parent = parent;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The parent site search engine resource name, such as
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                                /// If the caller does not have permission to list TargetSites under this site search
                                /// engine, regardless of whether or not this branch exists, a PERMISSION_DENIED error
                                /// is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Parent { get; private set; }

                                /// <summary>
                                /// Requested page size. Server may return fewer items than requested. If unspecified,
                                /// server will pick an appropriate default. The maximum value is 1000; values above
                                /// 1000 will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error
                                /// is returned.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual System.Nullable<int> PageSize { get; set; }

                                /// <summary>
                                /// A page token, received from a previous `ListTargetSites` call. Provide this to
                                /// retrieve the subsequent page. When paginating, all other parameters provided to
                                /// `ListTargetSites` must match the call that provided the page token.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                                public virtual string PageToken { get; set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "list";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+parent}/targetSites";

                                /// <summary>Initializes List parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "parent",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                    });
                                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageSize",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "pageToken",
                                        IsRequired = false,
                                        ParameterType = "query",
                                        DefaultValue = null,
                                        Pattern = null,
                                    });
                                }
                            }

                            /// <summary>Updates a TargetSite.</summary>
                            /// <param name="body">The body of the request.</param>
                            /// <param name="name">
                            /// Output only. The fully qualified resource name of the target site.
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
                            /// The `target_site_id` is system-generated.
                            /// </param>
                            public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite body, string name)
                            {
                                return new PatchRequest(this.service, body, name);
                            }

                            /// <summary>Updates a TargetSite.</summary>
                            public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                            {
                                /// <summary>Constructs a new Patch request.</summary>
                                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite body, string name) : base(service)
                                {
                                    Name = name;
                                    Body = body;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Output only. The fully qualified resource name of the target site.
                                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
                                /// The `target_site_id` is system-generated.
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets or sets the body of this request.</summary>
                                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite Body { get; set; }

                                /// <summary>Returns the body of the request.</summary>
                                protected override object GetBody() => Body;

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "patch";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "PATCH";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Patch parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$",
                                    });
                                }
                            }
                        }

                        /// <summary>
                        /// Verify target sites' ownership and validity. This API sends all the target sites under site
                        /// search engine for verification.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent resource shared by all TargetSites being verified.
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                        /// </param>
                        public virtual BatchVerifyTargetSitesRequest BatchVerifyTargetSites(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest body, string parent)
                        {
                            return new BatchVerifyTargetSitesRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Verify target sites' ownership and validity. This API sends all the target sites under site
                        /// search engine for verification.
                        /// </summary>
                        public class BatchVerifyTargetSitesRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new BatchVerifyTargetSites request.</summary>
                            public BatchVerifyTargetSitesRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent resource shared by all TargetSites being verified.
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "batchVerifyTargetSites";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}:batchVerifyTargetSites";

                            /// <summary>Initializes BatchVerifyTargetSites parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                            }
                        }

                        /// <summary>Downgrade from advanced site search to basic site search.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="siteSearchEngine">
                        /// Required. Full resource name of the SiteSearchEngine, such as
                        /// `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
                        /// </param>
                        public virtual DisableAdvancedSiteSearchRequest DisableAdvancedSiteSearch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest body, string siteSearchEngine)
                        {
                            return new DisableAdvancedSiteSearchRequest(this.service, body, siteSearchEngine);
                        }

                        /// <summary>Downgrade from advanced site search to basic site search.</summary>
                        public class DisableAdvancedSiteSearchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new DisableAdvancedSiteSearch request.</summary>
                            public DisableAdvancedSiteSearchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest body, string siteSearchEngine) : base(service)
                            {
                                SiteSearchEngine = siteSearchEngine;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of the SiteSearchEngine, such as
                            /// `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("siteSearchEngine", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string SiteSearchEngine { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "disableAdvancedSiteSearch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+siteSearchEngine}:disableAdvancedSiteSearch";

                            /// <summary>Initializes DisableAdvancedSiteSearch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("siteSearchEngine", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "siteSearchEngine",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                            }
                        }

                        /// <summary>Upgrade from basic site search to advanced site search.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="siteSearchEngine">
                        /// Required. Full resource name of the SiteSearchEngine, such as
                        /// `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
                        /// </param>
                        public virtual EnableAdvancedSiteSearchRequest EnableAdvancedSiteSearch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest body, string siteSearchEngine)
                        {
                            return new EnableAdvancedSiteSearchRequest(this.service, body, siteSearchEngine);
                        }

                        /// <summary>Upgrade from basic site search to advanced site search.</summary>
                        public class EnableAdvancedSiteSearchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new EnableAdvancedSiteSearch request.</summary>
                            public EnableAdvancedSiteSearchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest body, string siteSearchEngine) : base(service)
                            {
                                SiteSearchEngine = siteSearchEngine;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of the SiteSearchEngine, such as
                            /// `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("siteSearchEngine", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string SiteSearchEngine { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "enableAdvancedSiteSearch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+siteSearchEngine}:enableAdvancedSiteSearch";

                            /// <summary>Initializes EnableAdvancedSiteSearch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("siteSearchEngine", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "siteSearchEngine",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                            }
                        }

                        /// <summary>
                        /// Returns list of target sites with its domain verification status. This method can only be
                        /// called under data store with BASIC_SITE_SEARCH state at the moment.
                        /// </summary>
                        /// <param name="siteSearchEngine">
                        /// Required. The site search engine resource under which we fetch all the domain verification
                        /// status.
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                        /// </param>
                        public virtual FetchDomainVerificationStatusRequest FetchDomainVerificationStatus(string siteSearchEngine)
                        {
                            return new FetchDomainVerificationStatusRequest(this.service, siteSearchEngine);
                        }

                        /// <summary>
                        /// Returns list of target sites with its domain verification status. This method can only be
                        /// called under data store with BASIC_SITE_SEARCH state at the moment.
                        /// </summary>
                        public class FetchDomainVerificationStatusRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaFetchDomainVerificationStatusResponse>
                        {
                            /// <summary>Constructs a new FetchDomainVerificationStatus request.</summary>
                            public FetchDomainVerificationStatusRequest(Google.Apis.Services.IClientService service, string siteSearchEngine) : base(service)
                            {
                                SiteSearchEngine = siteSearchEngine;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The site search engine resource under which we fetch all the domain
                            /// verification status.
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("siteSearchEngine", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string SiteSearchEngine { get; private set; }

                            /// <summary>
                            /// Requested page size. Server may return fewer items than requested. If unspecified,
                            /// server will pick an appropriate default. The maximum value is 1000; values above 1000
                            /// will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is
                            /// returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// A page token, received from a previous `FetchDomainVerificationStatus` call. Provide
                            /// this to retrieve the subsequent page. When paginating, all other parameters provided to
                            /// `FetchDomainVerificationStatus` must match the call that provided the page token.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "fetchDomainVerificationStatus";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+siteSearchEngine}:fetchDomainVerificationStatus";

                            /// <summary>Initializes FetchDomainVerificationStatus parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("siteSearchEngine", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "siteSearchEngine",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Request on-demand recrawl for a list of URIs.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="siteSearchEngine">
                        /// Required. Full resource name of the SiteSearchEngine, such as
                        /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                        /// </param>
                        public virtual RecrawlUrisRequest RecrawlUris(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest body, string siteSearchEngine)
                        {
                            return new RecrawlUrisRequest(this.service, body, siteSearchEngine);
                        }

                        /// <summary>Request on-demand recrawl for a list of URIs.</summary>
                        public class RecrawlUrisRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new RecrawlUris request.</summary>
                            public RecrawlUrisRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest body, string siteSearchEngine) : base(service)
                            {
                                SiteSearchEngine = siteSearchEngine;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of the SiteSearchEngine, such as
                            /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("siteSearchEngine", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string SiteSearchEngine { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "recrawlUris";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+siteSearchEngine}:recrawlUris";

                            /// <summary>Initializes RecrawlUris parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("siteSearchEngine", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "siteSearchEngine",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the SuggestionDenyListEntries resource.</summary>
                    public virtual SuggestionDenyListEntriesResource SuggestionDenyListEntries { get; }

                    /// <summary>The "suggestionDenyListEntries" collection of methods.</summary>
                    public class SuggestionDenyListEntriesResource
                    {
                        private const string Resource = "suggestionDenyListEntries";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public SuggestionDenyListEntriesResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Imports all SuggestionDenyListEntry for a DataStore.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent data store resource name for which to import denylist entries. Follows
                        /// pattern projects/*/locations/*/collections/*/dataStores/*.
                        /// </param>
                        public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest body, string parent)
                        {
                            return new ImportRequest(this.service, body, parent);
                        }

                        /// <summary>Imports all SuggestionDenyListEntry for a DataStore.</summary>
                        public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Import request.</summary>
                            public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent data store resource name for which to import denylist entries.
                            /// Follows pattern projects/*/locations/*/collections/*/dataStores/*.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "import";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/suggestionDenyListEntries:import";

                            /// <summary>Initializes Import parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Permanently deletes all SuggestionDenyListEntry for a DataStore.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent data store resource name for which to import denylist entries. Follows
                        /// pattern projects/*/locations/*/collections/*/dataStores/*.
                        /// </param>
                        public virtual PurgeRequest Purge(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest body, string parent)
                        {
                            return new PurgeRequest(this.service, body, parent);
                        }

                        /// <summary>Permanently deletes all SuggestionDenyListEntry for a DataStore.</summary>
                        public class PurgeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Purge request.</summary>
                            public PurgeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent data store resource name for which to import denylist entries.
                            /// Follows pattern projects/*/locations/*/collections/*/dataStores/*.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "purge";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/suggestionDenyListEntries:purge";

                            /// <summary>Initializes Purge parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the UserEvents resource.</summary>
                    public virtual UserEventsResource UserEvents { get; }

                    /// <summary>The "userEvents" collection of methods.</summary>
                    public class UserEventsResource
                    {
                        private const string Resource = "userEvents";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public UserEventsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Writes a single user event from the browser. This uses a GET request to due to browser
                        /// restriction of POST-ing to a third-party domain. This method is used only by the Discovery
                        /// Engine API JavaScript pixel and Google Tag Manager. Users should not call this method
                        /// directly.
                        /// </summary>
                        /// <param name="parent">
                        /// Required. The parent resource name. If the collect user event action is applied in DataStore
                        /// level, the format is:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                        /// If the collect user event action is applied in Location level, for example, the event with
                        /// Document across multiple DataStore, the format is:
                        /// `projects/{project}/locations/{location}`.
                        /// </param>
                        public virtual CollectRequest Collect(string parent)
                        {
                            return new CollectRequest(this.service, parent);
                        }

                        /// <summary>
                        /// Writes a single user event from the browser. This uses a GET request to due to browser
                        /// restriction of POST-ing to a third-party domain. This method is used only by the Discovery
                        /// Engine API JavaScript pixel and Google Tag Manager. Users should not call this method
                        /// directly.
                        /// </summary>
                        public class CollectRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleApiHttpBody>
                        {
                            /// <summary>Constructs a new Collect request.</summary>
                            public CollectRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent resource name. If the collect user event action is applied in
                            /// DataStore level, the format is:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                            /// If the collect user event action is applied in Location level, for example, the event
                            /// with Document across multiple DataStore, the format is:
                            /// `projects/{project}/locations/{location}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// The event timestamp in milliseconds. This prevents browser caching of otherwise
                            /// identical get requests. The name is abbreviated to reduce the payload bytes.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("ets", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<long> Ets { get; set; }

                            /// <summary>
                            /// The URL including cgi-parameters but excluding the hash fragment with a length limit of
                            /// 5,000 characters. This is often more useful than the referer URL, because many browsers
                            /// only send the domain for third-party requests.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("uri", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Uri { get; set; }

                            /// <summary>
                            /// Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("userEvent", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string UserEvent { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "collect";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/userEvents:collect";

                            /// <summary>Initializes Collect parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("ets", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "ets",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("uri", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "uri",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("userEvent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "userEvent",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Bulk import of user events. Request processing might be synchronous. Events that already
                        /// exist are skipped. Use this method for backfilling historical user events.
                        /// Operation.response is of type ImportResponse. Note that it is possible for a subset of the
                        /// items to be successfully inserted. Operation.metadata is of type ImportMetadata.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Parent DataStore resource name, of the form
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
                        /// </param>
                        public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest body, string parent)
                        {
                            return new ImportRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Bulk import of user events. Request processing might be synchronous. Events that already
                        /// exist are skipped. Use this method for backfilling historical user events.
                        /// Operation.response is of type ImportResponse. Note that it is possible for a subset of the
                        /// items to be successfully inserted. Operation.metadata is of type ImportMetadata.
                        /// </summary>
                        public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Import request.</summary>
                            public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Parent DataStore resource name, of the form
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "import";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/userEvents:import";

                            /// <summary>Initializes Import parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes permanently all user events specified by the filter provided. Depending on the
                        /// number of events specified by the filter, this operation could take hours or days to
                        /// complete. To test a filter, use the list command first.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The resource name of the catalog under which the events are created. The format is
                        /// `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`.
                        /// </param>
                        public virtual PurgeRequest Purge(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest body, string parent)
                        {
                            return new PurgeRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Deletes permanently all user events specified by the filter provided. Depending on the
                        /// number of events specified by the filter, this operation could take hours or days to
                        /// complete. To test a filter, use the list command first.
                        /// </summary>
                        public class PurgeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Purge request.</summary>
                            public PurgeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the catalog under which the events are created. The
                            /// format is
                            /// `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "purge";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/userEvents:purge";

                            /// <summary>Initializes Purge parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Writes a single user event.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent resource name. If the write user event action is applied in DataStore
                        /// level, the format is:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                        /// If the write user event action is applied in Location level, for example, the event with
                        /// Document across multiple DataStore, the format is:
                        /// `projects/{project}/locations/{location}`.
                        /// </param>
                        public virtual WriteRequest Write(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent body, string parent)
                        {
                            return new WriteRequest(this.service, body, parent);
                        }

                        /// <summary>Writes a single user event.</summary>
                        public class WriteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent>
                        {
                            /// <summary>Constructs a new Write request.</summary>
                            public WriteRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent resource name. If the write user event action is applied in
                            /// DataStore level, the format is:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                            /// If the write user event action is applied in Location level, for example, the event with
                            /// Document across multiple DataStore, the format is:
                            /// `projects/{project}/locations/{location}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// If set to true, the user event is written asynchronously after validation, and the API
                            /// responds without waiting for the write.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("writeAsync", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<bool> WriteAsync { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "write";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/userEvents:write";

                            /// <summary>Initializes Write parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                                });
                                RequestParameters.Add("writeAsync", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "writeAsync",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Completes the specified user input with keyword suggestions.</summary>
                    /// <param name="dataStore">
                    /// Required. The parent data store resource name for which the completion is performed, such as
                    /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.
                    /// </param>
                    public virtual CompleteQueryRequest CompleteQuery(string dataStore)
                    {
                        return new CompleteQueryRequest(this.service, dataStore);
                    }

                    /// <summary>Completes the specified user input with keyword suggestions.</summary>
                    public class CompleteQueryRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaCompleteQueryResponse>
                    {
                        /// <summary>Constructs a new CompleteQuery request.</summary>
                        public CompleteQueryRequest(Google.Apis.Services.IClientService service, string dataStore) : base(service)
                        {
                            DataStore = dataStore;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent data store resource name for which the completion is performed, such as
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("dataStore", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string DataStore { get; private set; }

                        /// <summary>
                        /// Indicates if tail suggestions should be returned if there are no suggestions that match the
                        /// full query. Even if set to true, if there are suggestions that match the full query, those
                        /// are returned and no tail suggestions are returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("includeTailSuggestions", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<bool> IncludeTailSuggestions { get; set; }

                        /// <summary>
                        /// Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("query", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Query { get; set; }

                        /// <summary>
                        /// Specifies the autocomplete data model. This overrides any model specified in the
                        /// Configuration &amp;gt; Autocomplete section of the Cloud console. Currently supported
                        /// values: * `document` - Using suggestions generated from user-imported documents. *
                        /// `search-history` - Using suggestions generated from the past history of SearchService.Search
                        /// API calls. Do not use it when there is no traffic for Search API. * `user-event` - Using
                        /// suggestions generated from user-imported search events. * `document-completable` - Using
                        /// suggestions taken directly from user-imported document fields marked as completable. Default
                        /// values: * `document` is the default model for regular dataStores. * `search-history` is the
                        /// default model for site search dataStores.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("queryModel", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string QueryModel { get; set; }

                        /// <summary>
                        /// A unique identifier for tracking visitors. For example, this could be implemented with an
                        /// HTTP cookie, which should be able to uniquely identify a visitor on a single device. This
                        /// unique identifier should not change if the visitor logs in or out of the website. This field
                        /// should NOT have a fixed value such as `unknown_visitor`. This should be the same identifier
                        /// as UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8
                        /// encoded string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error
                        /// is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("userPseudoId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string UserPseudoId { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "completeQuery";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+dataStore}:completeQuery";

                        /// <summary>Initializes CompleteQuery parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("dataStore", new Google.Apis.Discovery.Parameter
                            {
                                Name = "dataStore",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("includeTailSuggestions", new Google.Apis.Discovery.Parameter
                            {
                                Name = "includeTailSuggestions",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("query", new Google.Apis.Discovery.Parameter
                            {
                                Name = "query",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("queryModel", new Google.Apis.Discovery.Parameter
                            {
                                Name = "queryModel",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("userPseudoId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "userPseudoId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or
                    /// Recommendation use case, an Engine needs to be created separately.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent resource name, such as
                    /// `projects/{project}/locations/{location}/collections/{collection}`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or
                    /// Recommendation use case, an Engine needs to be created separately.
                    /// </summary>
                    public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Resource name of the CmekConfig to use for protecting this DataStore.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("cmekConfigName", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string CmekConfigName { get; set; }

                        /// <summary>
                        /// A boolean flag indicating whether user want to directly create an advanced data store for
                        /// site search. If the data store is not configured as site search (GENERIC vertical and
                        /// PUBLIC_WEBSITE content_config), this flag will be ignored.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("createAdvancedSiteSearch", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<bool> CreateAdvancedSiteSearch { get; set; }

                        /// <summary>
                        /// Required. The ID to use for the DataStore, which will become the final component of the
                        /// DataStore's resource name. This field must conform to
                        /// [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
                        /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("dataStoreId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string DataStoreId { get; set; }

                        /// <summary>
                        /// DataStore without CMEK protections. If a default CmekConfig is set for the project, setting
                        /// this field will override the default CmekConfig as well.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("disableCmek", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<bool> DisableCmek { get; set; }

                        /// <summary>
                        /// A boolean flag indicating whether to skip the default schema creation for the data store.
                        /// Only enable this flag if you are certain that the default schema is incompatible with your
                        /// use case. If set to true, you must manually create a schema for the data store before any
                        /// documents can be ingested. This flag cannot be specified if `data_store.starting_schema` is
                        /// specified.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("skipDefaultSchemaCreation", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<bool> SkipDefaultSchemaCreation { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/dataStores";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+$",
                            });
                            RequestParameters.Add("cmekConfigName", new Google.Apis.Discovery.Parameter
                            {
                                Name = "cmekConfigName",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("createAdvancedSiteSearch", new Google.Apis.Discovery.Parameter
                            {
                                Name = "createAdvancedSiteSearch",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("dataStoreId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "dataStoreId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("disableCmek", new Google.Apis.Discovery.Parameter
                            {
                                Name = "disableCmek",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("skipDefaultSchemaCreation", new Google.Apis.Discovery.Parameter
                            {
                                Name = "skipDefaultSchemaCreation",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Deletes a DataStore.</summary>
                    /// <param name="name">
                    /// Required. Full resource name of DataStore, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                    /// If the caller does not have permission to delete the DataStore, regardless of whether or not it
                    /// exists, a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a
                    /// NOT_FOUND error is returned.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes a DataStore.</summary>
                    public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of DataStore, such as
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                        /// If the caller does not have permission to delete the DataStore, regardless of whether or not
                        /// it exists, a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist,
                        /// a NOT_FOUND error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a DataStore.</summary>
                    /// <param name="name">
                    /// Required. Full resource name of DataStore, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                    /// If the caller does not have permission to access the DataStore, regardless of whether or not it
                    /// exists, a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a
                    /// NOT_FOUND error is returned.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets a DataStore.</summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of DataStore, such as
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                        /// If the caller does not have permission to access the DataStore, regardless of whether or not
                        /// it exists, a PERMISSION_DENIED error is returned. If the requested DataStore does not exist,
                        /// a NOT_FOUND error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets the SiteSearchEngine.</summary>
                    /// <param name="name">
                    /// Required. Resource name of SiteSearchEngine, such as
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                    /// If the caller does not have permission to access the [SiteSearchEngine], regardless of whether
                    /// or not it exists, a PERMISSION_DENIED error is returned.
                    /// </param>
                    public virtual GetSiteSearchEngineRequest GetSiteSearchEngine(string name)
                    {
                        return new GetSiteSearchEngineRequest(this.service, name);
                    }

                    /// <summary>Gets the SiteSearchEngine.</summary>
                    public class GetSiteSearchEngineRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSiteSearchEngine>
                    {
                        /// <summary>Constructs a new GetSiteSearchEngine request.</summary>
                        public GetSiteSearchEngineRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Resource name of SiteSearchEngine, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                        /// If the caller does not have permission to access the [SiteSearchEngine], regardless of
                        /// whether or not it exists, a PERMISSION_DENIED error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "getSiteSearchEngine";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes GetSiteSearchEngine parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                            });
                        }
                    }

                    /// <summary>Lists all the DataStores associated with the project.</summary>
                    /// <param name="parent">
                    /// Required. The parent branch resource name, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does not
                    /// have permission to list DataStores under this location, regardless of whether or not this data
                    /// store exists, a PERMISSION_DENIED error is returned.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists all the DataStores associated with the project.</summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListDataStoresResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent branch resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does
                        /// not have permission to list DataStores under this location, regardless of whether or not
                        /// this data store exists, a PERMISSION_DENIED error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Filter by solution type . For example: `filter = 'solution_type:SOLUTION_TYPE_SEARCH'`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum allowed
                        /// value is 50. Values above 50 will be coerced to 50. If this field is negative, an
                        /// INVALID_ARGUMENT is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// A page token ListDataStoresResponse.next_page_token, received from a previous
                        /// DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page. When
                        /// paginating, all other parameters provided to DataStoreService.ListDataStores must match the
                        /// call that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/dataStores";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates a DataStore</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Immutable. The full resource name of the data store. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                    /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates a DataStore</summary>
                    public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Immutable. The full resource name of the data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Indicates which fields in the provided DataStore to update. If an unsupported or unknown
                        /// field is provided, an INVALID_ARGUMENT error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Trains a custom model.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="dataStore">
                    /// Required. The resource name of the Data Store, such as
                    /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`. This
                    /// field is used to identify the data store where to train the models.
                    /// </param>
                    public virtual TrainCustomModelRequest TrainCustomModel(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTrainCustomModelRequest body, string dataStore)
                    {
                        return new TrainCustomModelRequest(this.service, body, dataStore);
                    }

                    /// <summary>Trains a custom model.</summary>
                    public class TrainCustomModelRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new TrainCustomModel request.</summary>
                        public TrainCustomModelRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTrainCustomModelRequest body, string dataStore) : base(service)
                        {
                            DataStore = dataStore;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Data Store, such as
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.
                        /// This field is used to identify the data store where to train the models.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("dataStore", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string DataStore { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTrainCustomModelRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "trainCustomModel";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+dataStore}:trainCustomModel";

                        /// <summary>Initializes TrainCustomModel parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("dataStore", new Google.Apis.Discovery.Parameter
                            {
                                Name = "dataStore",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the Engines resource.</summary>
                public virtual EnginesResource Engines { get; }

                /// <summary>The "engines" collection of methods.</summary>
                public class EnginesResource
                {
                    private const string Resource = "engines";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public EnginesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        CompletionConfig = new CompletionConfigResource(service);
                        Controls = new ControlsResource(service);
                        Conversations = new ConversationsResource(service);
                        Operations = new OperationsResource(service);
                        ServingConfigs = new ServingConfigsResource(service);
                        Sessions = new SessionsResource(service);
                    }

                    /// <summary>Gets the CompletionConfig resource.</summary>
                    public virtual CompletionConfigResource CompletionConfig { get; }

                    /// <summary>The "completionConfig" collection of methods.</summary>
                    public class CompletionConfigResource
                    {
                        private const string Resource = "completionConfig";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public CompletionConfigResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Completes the user input with advanced keyword suggestions.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="completionConfig">
                        /// Required. The completion_config of the parent dataStore or engine resource name for which
                        /// the completion is performed, such as
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/completionConfig`
                        /// `projects/*/locations/global/collections/default_collection/engines/*/completionConfig`.
                        /// </param>
                        public virtual CompleteQueryRequest CompleteQuery(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest body, string completionConfig)
                        {
                            return new CompleteQueryRequest(this.service, body, completionConfig);
                        }

                        /// <summary>Completes the user input with advanced keyword suggestions.</summary>
                        public class CompleteQueryRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>
                        {
                            /// <summary>Constructs a new CompleteQuery request.</summary>
                            public CompleteQueryRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest body, string completionConfig) : base(service)
                            {
                                CompletionConfig = completionConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The completion_config of the parent dataStore or engine resource name for
                            /// which the completion is performed, such as
                            /// `projects/*/locations/global/collections/default_collection/dataStores/*/completionConfig`
                            /// `projects/*/locations/global/collections/default_collection/engines/*/completionConfig`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("completionConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string CompletionConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "completeQuery";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+completionConfig}:completeQuery";

                            /// <summary>Initializes CompleteQuery parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("completionConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "completionConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/completionConfig$",
                                });
                            }
                        }

                        /// <summary>
                        /// Removes the search history suggestion in an engine for a user. This will remove the
                        /// suggestion from being returned in the
                        /// AdvancedCompleteQueryResponse.recent_search_suggestions for this user. If the user searches
                        /// the same suggestion again, the new history will override and suggest this suggestion again.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="completionConfig">
                        /// Required. The completion_config of the parent engine resource name for which the search
                        /// history suggestion is to be removed, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/completionConfig`.
                        /// </param>
                        public virtual RemoveSuggestionRequest RemoveSuggestion(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRemoveSuggestionRequest body, string completionConfig)
                        {
                            return new RemoveSuggestionRequest(this.service, body, completionConfig);
                        }

                        /// <summary>
                        /// Removes the search history suggestion in an engine for a user. This will remove the
                        /// suggestion from being returned in the
                        /// AdvancedCompleteQueryResponse.recent_search_suggestions for this user. If the user searches
                        /// the same suggestion again, the new history will override and suggest this suggestion again.
                        /// </summary>
                        public class RemoveSuggestionRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRemoveSuggestionResponse>
                        {
                            /// <summary>Constructs a new RemoveSuggestion request.</summary>
                            public RemoveSuggestionRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRemoveSuggestionRequest body, string completionConfig) : base(service)
                            {
                                CompletionConfig = completionConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The completion_config of the parent engine resource name for which the search
                            /// history suggestion is to be removed, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/completionConfig`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("completionConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string CompletionConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRemoveSuggestionRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "removeSuggestion";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+completionConfig}:removeSuggestion";

                            /// <summary>Initializes RemoveSuggestion parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("completionConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "completionConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/completionConfig$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Controls resource.</summary>
                    public virtual ControlsResource Controls { get; }

                    /// <summary>The "controls" collection of methods.</summary>
                    public class ControlsResource
                    {
                        private const string Resource = "controls";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ControlsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Creates a Control. By default 1000 controls are allowed for a data store. A request can be
                        /// submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS
                        /// error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                        /// or
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a Control. By default 1000 controls are allowed for a data store. A request can be
                        /// submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS
                        /// error is returned.
                        /// </summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of parent data store. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                            /// or
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The ID to use for the Control, which will become the final component of the
                            /// Control's resource name. This value must be within 1-63 characters. Valid characters are
                            /// /a-z-_/.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("controlId", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string ControlId { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/controls";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                                });
                                RequestParameters.Add("controlId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "controlId",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Control to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Control to delete. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/controls/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a Control.</summary>
                        /// <param name="name">
                        /// Required. The resource name of the Control to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Control.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Control to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/controls/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists all Controls by their parent DataStore.</summary>
                        /// <param name="parent">
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                        /// or
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists all Controls by their parent DataStore.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListControlsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The data store resource name. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                            /// or
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. A filter to apply on the list results. Supported features: * List all the
                            /// products under the parent branch if filter is unset. Currently this field is
                            /// unsupported.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// Optional. Maximum number of results to return. If unspecified, defaults to 50. Max
                            /// allowed value is 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. A page token, received from a previous `ListControls` call. Provide this to
                            /// retrieve the subsequent page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/controls";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates a Control. Control action type cannot be changed. If the Control to update does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates a Control. Control action type cannot be changed. If the Control to update does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Optional. Indicates which fields in the provided Control to update. The following are
                            /// NOT supported: * Control.name * Control.solution_type If not set or empty, all supported
                            /// fields are updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/controls/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Conversations resource.</summary>
                    public virtual ConversationsResource Conversations { get; }

                    /// <summary>The "conversations" collection of methods.</summary>
                    public class ConversationsResource
                    {
                        private const string Resource = "conversations";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ConversationsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Converses a conversation.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Required. The resource name of the Conversation to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
                        /// Use
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
                        /// to activate auto session mode, which automatically creates a new conversation inside a
                        /// ConverseConversation session.
                        /// </param>
                        public virtual ConverseRequest Converse(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest body, string name)
                        {
                            return new ConverseRequest(this.service, body, name);
                        }

                        /// <summary>Converses a conversation.</summary>
                        public class ConverseRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationResponse>
                        {
                            /// <summary>Constructs a new Converse request.</summary>
                            public ConverseRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Conversation to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
                            /// Use
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
                            /// to activate auto session mode, which automatically creates a new conversation inside a
                            /// ConverseConversation session.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "converse";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}:converse";

                            /// <summary>Initializes Converse parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS
                        /// error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS
                        /// error is returned.
                        /// </summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of parent data store. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/conversations";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
                        /// returned.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Conversation to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
                        /// returned.
                        /// </summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Conversation to delete. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a Conversation.</summary>
                        /// <param name="name">
                        /// Required. The resource name of the Conversation to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Conversation.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Conversation to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists all Conversations by their parent DataStore.</summary>
                        /// <param name="parent">
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists all Conversations by their parent DataStore.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListConversationsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The data store resource name. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// A filter to apply on the list results. The supported features are: user_pseudo_id,
                            /// state. Example: "user_pseudo_id = some_id"
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
                            /// after a field name for descending. Supported fields: * `update_time` * `create_time` *
                            /// `conversation_name` Example: "update_time desc" "create_time"
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string OrderBy { get; set; }

                            /// <summary>
                            /// Maximum number of results to return. If unspecified, defaults to 50. Max allowed value
                            /// is 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// A page token, received from a previous `ListConversations` call. Provide this to
                            /// retrieve the subsequent page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/conversations";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("orderBy", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "orderBy",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
                        /// update does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/global/collections/{collection}/dataStore/*/conversations/*`
                        /// or `projects/{project}/locations/global/collections/{collection}/engines/*/conversations/*`.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
                        /// update does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. Fully qualified name
                            /// `projects/{project}/locations/global/collections/{collection}/dataStore/*/conversations/*`
                            /// or
                            /// `projects/{project}/locations/global/collections/{collection}/engines/*/conversations/*`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Indicates which fields in the provided Conversation to update. The following are NOT
                            /// supported: * Conversation.name If not set or empty, all supported fields are updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/conversations/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Operations resource.</summary>
                    public virtual OperationsResource Operations { get; }

                    /// <summary>The "operations" collection of methods.</summary>
                    public class OperationsResource
                    {
                        private const string Resource = "operations";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public OperationsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        /// <param name="name">The name of the operation resource.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/operations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        /// <param name="name">The name of the operation's parent resource.</param>
                        public virtual ListRequest List(string name)
                        {
                            return new ListRequest(this.service, name);
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation's parent resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>The standard list filter.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>The standard list page size.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>The standard list page token.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}/operations";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the ServingConfigs resource.</summary>
                    public virtual ServingConfigsResource ServingConfigs { get; }

                    /// <summary>The "servingConfigs" collection of methods.</summary>
                    public class ServingConfigsResource
                    {
                        private const string Resource = "servingConfigs";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public ServingConfigsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Answer query method.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </param>
                        public virtual AnswerRequest Answer(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig)
                        {
                            return new AnswerRequest(this.service, body, servingConfig);
                        }

                        /// <summary>Answer query method.</summary>
                        public class AnswerRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>
                        {
                            /// <summary>Constructs a new Answer request.</summary>
                            public AnswerRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Search serving config, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                            /// or
                            /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                            /// This field is used to identify the serving configuration name, set of models used to
                            /// make the search.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "answer";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:answer";

                            /// <summary>Initializes Answer parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the ServingConfig to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
                        /// </summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the ServingConfig to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Lists all ServingConfigs linked to this dataStore.</summary>
                        /// <param name="parent">
                        /// Required. Full resource name of the parent resource. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists all ServingConfigs linked to this dataStore.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListServingConfigsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of the parent resource. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Optional. Maximum number of results to return. If unspecified, defaults to 100. If a
                            /// value greater than 100 is provided, at most 100 results are returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// Optional. A page token, received from a previous `ListServingConfigs` call. Provide this
                            /// to retrieve the subsequent page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/servingConfigs";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
                        /// </summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. Fully qualified name
                            /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Indicates which fields in the provided ServingConfig to update. The following are NOT
                            /// supported: * ServingConfig.name If not set, all supported fields are updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Makes a recommendation, which requires a contextual user event.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. Full resource name of a ServingConfig:
                        /// `projects/*/locations/global/collections/*/engines/*/servingConfigs/*`, or
                        /// `projects/*/locations/global/collections/*/dataStores/*/servingConfigs/*` One default
                        /// serving config is created along with your recommendation engine creation. The engine ID is
                        /// used as the ID of the default serving config. For example, for Engine
                        /// `projects/*/locations/global/collections/*/engines/my-engine`, you can use
                        /// `projects/*/locations/global/collections/*/engines/my-engine/servingConfigs/my-engine` for
                        /// your RecommendationService.Recommend requests.
                        /// </param>
                        public virtual RecommendRequest Recommend(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest body, string servingConfig)
                        {
                            return new RecommendRequest(this.service, body, servingConfig);
                        }

                        /// <summary>Makes a recommendation, which requires a contextual user event.</summary>
                        public class RecommendRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendResponse>
                        {
                            /// <summary>Constructs a new Recommend request.</summary>
                            public RecommendRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of a ServingConfig:
                            /// `projects/*/locations/global/collections/*/engines/*/servingConfigs/*`, or
                            /// `projects/*/locations/global/collections/*/dataStores/*/servingConfigs/*` One default
                            /// serving config is created along with your recommendation engine creation. The engine ID
                            /// is used as the ID of the default serving config. For example, for Engine
                            /// `projects/*/locations/global/collections/*/engines/my-engine`, you can use
                            /// `projects/*/locations/global/collections/*/engines/my-engine/servingConfigs/my-engine`
                            /// for your RecommendationService.Recommend requests.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "recommend";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:recommend";

                            /// <summary>Initializes Recommend parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Performs a search.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </param>
                        public virtual SearchRequest Search(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig)
                        {
                            return new SearchRequest(this.service, body, servingConfig);
                        }

                        /// <summary>Performs a search.</summary>
                        public class SearchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchResponse>
                        {
                            /// <summary>Constructs a new Search request.</summary>
                            public SearchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Search serving config, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                            /// or
                            /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                            /// This field is used to identify the serving configuration name, set of models used to
                            /// make the search.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "search";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:search";

                            /// <summary>Initializes Search parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Performs a search. Similar to the SearchService.Search method, but a lite version that
                        /// allows API key for authentication, where OAuth and IAM checks are not required. Only public
                        /// website search is supported by this method. If data stores and engines not associated with
                        /// public website search are specified, a `FAILED_PRECONDITION` error is returned. This method
                        /// can be used for easy onboarding without having to implement an authentication backend.
                        /// However, it is strongly recommended to use SearchService.Search instead with required OAuth
                        /// and IAM checks to provide better data security.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </param>
                        public virtual SearchLiteRequest SearchLite(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig)
                        {
                            return new SearchLiteRequest(this.service, body, servingConfig);
                        }

                        /// <summary>
                        /// Performs a search. Similar to the SearchService.Search method, but a lite version that
                        /// allows API key for authentication, where OAuth and IAM checks are not required. Only public
                        /// website search is supported by this method. If data stores and engines not associated with
                        /// public website search are specified, a `FAILED_PRECONDITION` error is returned. This method
                        /// can be used for easy onboarding without having to implement an authentication backend.
                        /// However, it is strongly recommended to use SearchService.Search instead with required OAuth
                        /// and IAM checks to provide better data security.
                        /// </summary>
                        public class SearchLiteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchResponse>
                        {
                            /// <summary>Constructs a new SearchLite request.</summary>
                            public SearchLiteRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Search serving config, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                            /// or
                            /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                            /// This field is used to identify the serving configuration name, set of models used to
                            /// make the search.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "searchLite";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:searchLite";

                            /// <summary>Initializes SearchLite parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple
                        /// AnswerQueryResponse messages in a stream.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="servingConfig">
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </param>
                        public virtual StreamAnswerRequest StreamAnswer(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig)
                        {
                            return new StreamAnswerRequest(this.service, body, servingConfig);
                        }

                        /// <summary>
                        /// Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple
                        /// AnswerQueryResponse messages in a stream.
                        /// </summary>
                        public class StreamAnswerRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>
                        {
                            /// <summary>Constructs a new StreamAnswer request.</summary>
                            public StreamAnswerRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig) : base(service)
                            {
                                ServingConfig = servingConfig;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Search serving config, such as
                            /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                            /// or
                            /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                            /// This field is used to identify the serving configuration name, set of models used to
                            /// make the search.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string ServingConfig { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "streamAnswer";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+servingConfig}:streamAnswer";

                            /// <summary>Initializes StreamAnswer parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "servingConfig",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/servingConfigs/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Sessions resource.</summary>
                    public virtual SessionsResource Sessions { get; }

                    /// <summary>The "sessions" collection of methods.</summary>
                    public class SessionsResource
                    {
                        private const string Resource = "sessions";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public SessionsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                            Answers = new AnswersResource(service);
                        }

                        /// <summary>Gets the Answers resource.</summary>
                        public virtual AnswersResource Answers { get; }

                        /// <summary>The "answers" collection of methods.</summary>
                        public class AnswersResource
                        {
                            private const string Resource = "answers";

                            /// <summary>The service which this resource belongs to.</summary>
                            private readonly Google.Apis.Services.IClientService service;

                            /// <summary>Constructs a new resource.</summary>
                            public AnswersResource(Google.Apis.Services.IClientService service)
                            {
                                this.service = service;
                            }

                            /// <summary>Gets a Answer.</summary>
                            /// <param name="name">
                            /// Required. The resource name of the Answer to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
                            /// </param>
                            public virtual GetRequest Get(string name)
                            {
                                return new GetRequest(this.service, name);
                            }

                            /// <summary>Gets a Answer.</summary>
                            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswer>
                            {
                                /// <summary>Constructs a new Get request.</summary>
                                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                                {
                                    Name = name;
                                    InitParameters();
                                }

                                /// <summary>
                                /// Required. The resource name of the Answer to get. Format:
                                /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
                                /// </summary>
                                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                                public virtual string Name { get; private set; }

                                /// <summary>Gets the method name.</summary>
                                public override string MethodName => "get";

                                /// <summary>Gets the HTTP method.</summary>
                                public override string HttpMethod => "GET";

                                /// <summary>Gets the REST path.</summary>
                                public override string RestPath => "v1beta/{+name}";

                                /// <summary>Initializes Get parameter list.</summary>
                                protected override void InitParameters()
                                {
                                    base.InitParameters();
                                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                    {
                                        Name = "name",
                                        IsRequired = true,
                                        ParameterType = "path",
                                        DefaultValue = null,
                                        Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+/answers/[^/]+$",
                                    });
                                }
                            }
                        }

                        /// <summary>
                        /// Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is
                        /// returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is
                        /// returned.
                        /// </summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of parent data store. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/sessions";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="name">
                        /// Required. The resource name of the Session to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>
                        /// Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Session to delete. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a Session.</summary>
                        /// <param name="name">
                        /// Required. The resource name of the Session to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Session.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Session to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Optional. If set to true, the full session including all answer details will be
                            /// returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("includeAnswerDetails", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<bool> IncludeAnswerDetails { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$",
                                });
                                RequestParameters.Add("includeAnswerDetails", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "includeAnswerDetails",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Lists all Sessions by their parent DataStore.</summary>
                        /// <param name="parent">
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Lists all Sessions by their parent DataStore.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListSessionsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The data store resource name. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// A filter to apply on the list results. The supported features are: user_pseudo_id,
                            /// state. Example: "user_pseudo_id = some_id"
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>
                            /// A comma-separated list of fields to order by, sorted in ascending order. Use "desc"
                            /// after a field name for descending. Supported fields: * `update_time` * `create_time` *
                            /// `session_name` * `is_pinned` Example: * "update_time desc" * "create_time" * "is_pinned
                            /// desc,update_time desc": list sessions by is_pinned first, then by update_time.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string OrderBy { get; set; }

                            /// <summary>
                            /// Maximum number of results to return. If unspecified, defaults to 50. Max allowed value
                            /// is 1000.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// A page token, received from a previous `ListSessions` call. Provide this to retrieve the
                            /// subsequent page.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/sessions";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("orderBy", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "orderBy",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Updates a Session. Session action type cannot be changed. If the Session to update does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Updates a Session. Session action type cannot be changed. If the Session to update does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. Fully qualified name
                            /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// Indicates which fields in the provided Session to update. The following are NOT
                            /// supported: * Session.name If not set or empty, all supported fields are updated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+/sessions/[^/]+$",
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Creates a Engine.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent resource name, such as
                    /// `projects/{project}/locations/{location}/collections/{collection}`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates a Engine.</summary>
                    public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The ID to use for the Engine, which will become the final component of the
                        /// Engine's resource name. This field must conform to
                        /// [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
                        /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("engineId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string EngineId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/engines";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+$",
                            });
                            RequestParameters.Add("engineId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "engineId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Deletes a Engine.</summary>
                    /// <param name="name">
                    /// Required. Full resource name of Engine, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. If
                    /// the caller does not have permission to delete the Engine, regardless of whether or not it
                    /// exists, a PERMISSION_DENIED error is returned. If the Engine to delete does not exist, a
                    /// NOT_FOUND error is returned.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes a Engine.</summary>
                    public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of Engine, such as
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                        /// If the caller does not have permission to delete the Engine, regardless of whether or not it
                        /// exists, a PERMISSION_DENIED error is returned. If the Engine to delete does not exist, a
                        /// NOT_FOUND error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a Engine.</summary>
                    /// <param name="name">
                    /// Required. Full resource name of Engine, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets a Engine.</summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of Engine, such as
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Lists all the Engines associated with the project.</summary>
                    /// <param name="parent">
                    /// Required. The parent resource name, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}`.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists all the Engines associated with the project.</summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListEnginesResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. Filter by solution type. For example: solution_type=SOLUTION_TYPE_SEARCH
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>Optional. Not supported.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>Optional. Not supported.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/engines";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates an Engine</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded
                    /// string with a length limit of 1024 characters. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine
                    /// should be 1-63 characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT
                    /// error is returned.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates an Engine</summary>
                    public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Immutable. The fully qualified resource name of the engine. This field must be a UTF-8
                        /// encoded string with a length limit of 1024 characters. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine
                        /// should be 1-63 characters, and valid characters are /a-z0-9*/. Otherwise, an
                        /// INVALID_ARGUMENT error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Indicates which fields in the provided Engine to update. If an unsupported or unknown field
                        /// is provided, an INVALID_ARGUMENT error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Pauses the training of an existing engine. Only applicable if SolutionType is
                    /// SOLUTION_TYPE_RECOMMENDATION.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the engine to pause. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
                    /// </param>
                    public virtual PauseRequest Pause(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPauseEngineRequest body, string name)
                    {
                        return new PauseRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Pauses the training of an existing engine. Only applicable if SolutionType is
                    /// SOLUTION_TYPE_RECOMMENDATION.
                    /// </summary>
                    public class PauseRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine>
                    {
                        /// <summary>Constructs a new Pause request.</summary>
                        public PauseRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPauseEngineRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the engine to pause. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPauseEngineRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "pause";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}:pause";

                        /// <summary>Initializes Pause parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Resumes the training of an existing engine. Only applicable if SolutionType is
                    /// SOLUTION_TYPE_RECOMMENDATION.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The name of the engine to resume. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
                    /// </param>
                    public virtual ResumeRequest Resume(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaResumeEngineRequest body, string name)
                    {
                        return new ResumeRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Resumes the training of an existing engine. Only applicable if SolutionType is
                    /// SOLUTION_TYPE_RECOMMENDATION.
                    /// </summary>
                    public class ResumeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEngine>
                    {
                        /// <summary>Constructs a new Resume request.</summary>
                        public ResumeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaResumeEngineRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The name of the engine to resume. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaResumeEngineRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "resume";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}:resume";

                        /// <summary>Initializes Resume parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Tunes an existing engine. Only applicable if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The resource name of the engine to tune. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
                    /// </param>
                    public virtual TuneRequest Tune(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTuneEngineRequest body, string name)
                    {
                        return new TuneRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Tunes an existing engine. Only applicable if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
                    /// </summary>
                    public class TuneRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Tune request.</summary>
                        public TuneRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTuneEngineRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the engine to tune. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTuneEngineRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "tune";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}:tune";

                        /// <summary>Initializes Tune parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/engines/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the Operations resource.</summary>
                public virtual OperationsResource Operations { get; }

                /// <summary>The "operations" collection of methods.</summary>
                public class OperationsResource
                {
                    private const string Resource = "operations";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public OperationsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    /// <param name="name">The name of the operation resource.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+/operations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Lists operations that match the specified filter in the request. If the server doesn't support
                    /// this method, it returns `UNIMPLEMENTED`.
                    /// </summary>
                    /// <param name="name">The name of the operation's parent resource.</param>
                    public virtual ListRequest List(string name)
                    {
                        return new ListRequest(this.service, name);
                    }

                    /// <summary>
                    /// Lists operations that match the specified filter in the request. If the server doesn't support
                    /// this method, it returns `UNIMPLEMENTED`.
                    /// </summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation's parent resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>The standard list filter.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>The standard list page size.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>The standard list page token.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}/operations";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/collections/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }
            }

            /// <summary>Gets the DataStores resource.</summary>
            public virtual DataStoresResource DataStores { get; }

            /// <summary>The "dataStores" collection of methods.</summary>
            public class DataStoresResource
            {
                private const string Resource = "dataStores";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public DataStoresResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Branches = new BranchesResource(service);
                    CompletionConfig = new CompletionConfigResource(service);
                    CompletionSuggestions = new CompletionSuggestionsResource(service);
                    Controls = new ControlsResource(service);
                    Conversations = new ConversationsResource(service);
                    Models = new ModelsResource(service);
                    Operations = new OperationsResource(service);
                    Schemas = new SchemasResource(service);
                    ServingConfigs = new ServingConfigsResource(service);
                    Sessions = new SessionsResource(service);
                    SiteSearchEngine = new SiteSearchEngineResource(service);
                    SuggestionDenyListEntries = new SuggestionDenyListEntriesResource(service);
                    UserEvents = new UserEventsResource(service);
                }

                /// <summary>Gets the Branches resource.</summary>
                public virtual BranchesResource Branches { get; }

                /// <summary>The "branches" collection of methods.</summary>
                public class BranchesResource
                {
                    private const string Resource = "branches";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public BranchesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Documents = new DocumentsResource(service);
                        Operations = new OperationsResource(service);
                    }

                    /// <summary>Gets the Documents resource.</summary>
                    public virtual DocumentsResource Documents { get; }

                    /// <summary>The "documents" collection of methods.</summary>
                    public class DocumentsResource
                    {
                        private const string Resource = "documents";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public DocumentsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Creates a Document.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates a Document.</summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Required. The ID to use for the Document, which becomes the final component of the
                            /// Document.name. If the caller does not have permission to create the Document, regardless
                            /// of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must be
                            /// unique among all Documents with the same parent. Otherwise, an `ALREADY_EXISTS` error is
                            /// returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034)
                            /// standard with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error
                            /// is returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("documentId", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string DocumentId { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/documents";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                });
                                RequestParameters.Add("documentId", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "documentId",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Deletes a Document.</summary>
                        /// <param name="name">
                        /// Required. Full resource name of Document, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
                        /// If the caller does not have permission to delete the Document, regardless of whether or not
                        /// it exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does not
                        /// exist, a `NOT_FOUND` error is returned.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>Deletes a Document.</summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of Document, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
                            /// If the caller does not have permission to delete the Document, regardless of whether or
                            /// not it exists, a `PERMISSION_DENIED` error is returned. If the Document to delete does
                            /// not exist, a `NOT_FOUND` error is returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a Document.</summary>
                        /// <param name="name">
                        /// Required. Full resource name of Document, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
                        /// If the caller does not have permission to access the Document, regardless of whether or not
                        /// it exists, a `PERMISSION_DENIED` error is returned. If the requested Document does not
                        /// exist, a `NOT_FOUND` error is returned.
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Document.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of Document, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document}`.
                            /// If the caller does not have permission to access the Document, regardless of whether or
                            /// not it exists, a `PERMISSION_DENIED` error is returned. If the requested Document does
                            /// not exist, a `NOT_FOUND` error is returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items
                        /// are created. Note: It is possible for a subset of the Documents to be successfully updated.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent branch resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                        /// Requires create/update permission.
                        /// </param>
                        public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportDocumentsRequest body, string parent)
                        {
                            return new ImportRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Bulk import of multiple Documents. Request processing may be synchronous. Non-existing items
                        /// are created. Note: It is possible for a subset of the Documents to be successfully updated.
                        /// </summary>
                        public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Import request.</summary>
                            public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportDocumentsRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent branch resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// Requires create/update permission.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportDocumentsRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "import";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/documents:import";

                            /// <summary>Initializes Import parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a list of Documents.</summary>
                        /// <param name="parent">
                        /// Required. The parent branch resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                        /// Use `default_branch` as the branch ID, to list documents under the default branch. If the
                        /// caller does not have permission to list Documents under this branch, regardless of whether
                        /// or not this branch exists, a `PERMISSION_DENIED` error is returned.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Gets a list of Documents.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListDocumentsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent branch resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// Use `default_branch` as the branch ID, to list documents under the default branch. If
                            /// the caller does not have permission to list Documents under this branch, regardless of
                            /// whether or not this branch exists, a `PERMISSION_DENIED` error is returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Maximum number of Documents to return. If unspecified, defaults to 100. The maximum
                            /// allowed value is 1000. Values above 1000 are set to 1000. If this field is negative, an
                            /// `INVALID_ARGUMENT` error is returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// A page token ListDocumentsResponse.next_page_token, received from a previous
                            /// DocumentService.ListDocuments call. Provide this to retrieve the subsequent page. When
                            /// paginating, all other parameters provided to DocumentService.ListDocuments must match
                            /// the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is
                            /// returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/documents";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Updates a Document.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Immutable. The full resource name of the document. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
                        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>Updates a Document.</summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Immutable. The full resource name of the document. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
                            /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>
                            /// If set to `true` and the Document is not found, a new Document is be created.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("allowMissing", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<bool> AllowMissing { get; set; }

                            /// <summary>
                            /// Indicates which fields in the provided imported 'document' to update. If not set, by
                            /// default updates all fields.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual object UpdateMask { get; set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDocument Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/documents/[^/]+$",
                                });
                                RequestParameters.Add("allowMissing", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "allowMissing",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "updateMask",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>
                        /// Permanently deletes all selected Documents in a branch. This process is asynchronous.
                        /// Depending on the number of Documents to be deleted, this operation can take hours to
                        /// complete. Before the delete operation completes, some Documents might still be returned by
                        /// DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents
                        /// to be deleted, set PurgeDocumentsRequest.force to false.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                        /// </param>
                        public virtual PurgeRequest Purge(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest body, string parent)
                        {
                            return new PurgeRequest(this.service, body, parent);
                        }

                        /// <summary>
                        /// Permanently deletes all selected Documents in a branch. This process is asynchronous.
                        /// Depending on the number of Documents to be deleted, this operation can take hours to
                        /// complete. Before the delete operation completes, some Documents might still be returned by
                        /// DocumentService.GetDocument or DocumentService.ListDocuments. To get a list of the Documents
                        /// to be deleted, set PurgeDocumentsRequest.force to false.
                        /// </summary>
                        public class PurgeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Purge request.</summary>
                            public PurgeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "purge";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/documents:purge";

                            /// <summary>Initializes Purge parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Gets the Operations resource.</summary>
                    public virtual OperationsResource Operations { get; }

                    /// <summary>The "operations" collection of methods.</summary>
                    public class OperationsResource
                    {
                        private const string Resource = "operations";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public OperationsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Starts asynchronous cancellation on a long-running operation. The server makes a best effort
                        /// to cancel the operation, but success is not guaranteed. If the server doesn't support this
                        /// method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
                        /// or other methods to check whether the cancellation succeeded or whether the operation
                        /// completed despite cancellation. On successful cancellation, the operation is not deleted;
                        /// instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code
                        /// of `1`, corresponding to `Code.CANCELLED`.
                        /// </summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">The name of the operation resource to be cancelled.</param>
                        public virtual CancelRequest Cancel(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningCancelOperationRequest body, string name)
                        {
                            return new CancelRequest(this.service, body, name);
                        }

                        /// <summary>
                        /// Starts asynchronous cancellation on a long-running operation. The server makes a best effort
                        /// to cancel the operation, but success is not guaranteed. If the server doesn't support this
                        /// method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation
                        /// or other methods to check whether the cancellation succeeded or whether the operation
                        /// completed despite cancellation. On successful cancellation, the operation is not deleted;
                        /// instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code
                        /// of `1`, corresponding to `Code.CANCELLED`.
                        /// </summary>
                        public class CancelRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                        {
                            /// <summary>Constructs a new Cancel request.</summary>
                            public CancelRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningCancelOperationRequest body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>The name of the operation resource to be cancelled.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningCancelOperationRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "cancel";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}:cancel";

                            /// <summary>Initializes Cancel parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        /// <param name="name">The name of the operation resource.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+/operations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        /// <param name="name">The name of the operation's parent resource.</param>
                        public virtual ListRequest List(string name)
                        {
                            return new ListRequest(this.service, name);
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation's parent resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>The standard list filter.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>The standard list page size.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>The standard list page token.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}/operations";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>
                    /// Gets index freshness metadata for Documents. Supported for website search only.
                    /// </summary>
                    /// <param name="parent">
                    /// Required. The parent branch resource name, such as
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                    /// </param>
                    public virtual BatchGetDocumentsMetadataRequest BatchGetDocumentsMetadata(string parent)
                    {
                        return new BatchGetDocumentsMetadataRequest(this.service, parent);
                    }

                    /// <summary>
                    /// Gets index freshness metadata for Documents. Supported for website search only.
                    /// </summary>
                    public class BatchGetDocumentsMetadataRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponse>
                    {
                        /// <summary>Constructs a new BatchGetDocumentsMetadata request.</summary>
                        public BatchGetDocumentsMetadataRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent branch resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The FHIR resources to match by. Format:
                        /// projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}/fhir/{resource_type}/{fhir_resource_id}
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("matcher.fhirMatcher.fhirResources", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual Google.Apis.Util.Repeatable<string> MatcherFhirMatcherFhirResources { get; set; }

                        /// <summary>The exact URIs to match by.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("matcher.urisMatcher.uris", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual Google.Apis.Util.Repeatable<string> MatcherUrisMatcherUris { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "batchGetDocumentsMetadata";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/batchGetDocumentsMetadata";

                        /// <summary>Initializes BatchGetDocumentsMetadata parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/branches/[^/]+$",
                            });
                            RequestParameters.Add("matcher.fhirMatcher.fhirResources", new Google.Apis.Discovery.Parameter
                            {
                                Name = "matcher.fhirMatcher.fhirResources",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("matcher.urisMatcher.uris", new Google.Apis.Discovery.Parameter
                            {
                                Name = "matcher.urisMatcher.uris",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the CompletionConfig resource.</summary>
                public virtual CompletionConfigResource CompletionConfig { get; }

                /// <summary>The "completionConfig" collection of methods.</summary>
                public class CompletionConfigResource
                {
                    private const string Resource = "completionConfig";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public CompletionConfigResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Completes the user input with advanced keyword suggestions.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="completionConfig">
                    /// Required. The completion_config of the parent dataStore or engine resource name for which the
                    /// completion is performed, such as
                    /// `projects/*/locations/global/collections/default_collection/dataStores/*/completionConfig`
                    /// `projects/*/locations/global/collections/default_collection/engines/*/completionConfig`.
                    /// </param>
                    public virtual CompleteQueryRequest CompleteQuery(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest body, string completionConfig)
                    {
                        return new CompleteQueryRequest(this.service, body, completionConfig);
                    }

                    /// <summary>Completes the user input with advanced keyword suggestions.</summary>
                    public class CompleteQueryRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse>
                    {
                        /// <summary>Constructs a new CompleteQuery request.</summary>
                        public CompleteQueryRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest body, string completionConfig) : base(service)
                        {
                            CompletionConfig = completionConfig;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The completion_config of the parent dataStore or engine resource name for which
                        /// the completion is performed, such as
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/completionConfig`
                        /// `projects/*/locations/global/collections/default_collection/engines/*/completionConfig`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("completionConfig", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string CompletionConfig { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "completeQuery";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+completionConfig}:completeQuery";

                        /// <summary>Initializes CompleteQuery parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("completionConfig", new Google.Apis.Discovery.Parameter
                            {
                                Name = "completionConfig",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/completionConfig$",
                            });
                        }
                    }
                }

                /// <summary>Gets the CompletionSuggestions resource.</summary>
                public virtual CompletionSuggestionsResource CompletionSuggestions { get; }

                /// <summary>The "completionSuggestions" collection of methods.</summary>
                public class CompletionSuggestionsResource
                {
                    private const string Resource = "completionSuggestions";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public CompletionSuggestionsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Imports CompletionSuggestions for a DataStore.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent data store resource name for which to import customer autocomplete
                    /// suggestions. Follows pattern `projects/*/locations/*/collections/*/dataStores/*`
                    /// </param>
                    public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest body, string parent)
                    {
                        return new ImportRequest(this.service, body, parent);
                    }

                    /// <summary>Imports CompletionSuggestions for a DataStore.</summary>
                    public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Import request.</summary>
                        public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent data store resource name for which to import customer autocomplete
                        /// suggestions. Follows pattern `projects/*/locations/*/collections/*/dataStores/*`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "import";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/completionSuggestions:import";

                        /// <summary>Initializes Import parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Permanently deletes all CompletionSuggestions for a DataStore.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent data store resource name for which to purge completion suggestions. Follows
                    /// pattern projects/*/locations/*/collections/*/dataStores/*.
                    /// </param>
                    public virtual PurgeRequest Purge(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest body, string parent)
                    {
                        return new PurgeRequest(this.service, body, parent);
                    }

                    /// <summary>Permanently deletes all CompletionSuggestions for a DataStore.</summary>
                    public class PurgeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Purge request.</summary>
                        public PurgeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent data store resource name for which to purge completion suggestions.
                        /// Follows pattern projects/*/locations/*/collections/*/dataStores/*.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "purge";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/completionSuggestions:purge";

                        /// <summary>Initializes Purge parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the Controls resource.</summary>
                public virtual ControlsResource Controls { get; }

                /// <summary>The "controls" collection of methods.</summary>
                public class ControlsResource
                {
                    private const string Resource = "controls";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public ControlsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Creates a Control. By default 1000 controls are allowed for a data store. A request can be
                    /// submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS error
                    /// is returned.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. Full resource name of parent data store. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                    /// or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a Control. By default 1000 controls are allowed for a data store. A request can be
                    /// submitted to adjust this limit. If the Control to create already exists, an ALREADY_EXISTS error
                    /// is returned.
                    /// </summary>
                    public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                        /// or
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The ID to use for the Control, which will become the final component of the
                        /// Control's resource name. This value must be within 1-63 characters. Valid characters are
                        /// /a-z-_/.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("controlId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string ControlId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/controls";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("controlId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "controlId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned.
                    /// </summary>
                    /// <param name="name">
                    /// Required. The resource name of the Control to delete. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes a Control. If the Control to delete does not exist, a NOT_FOUND error is returned.
                    /// </summary>
                    public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Control to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/controls/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a Control.</summary>
                    /// <param name="name">
                    /// Required. The resource name of the Control to get. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets a Control.</summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Control to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/controls/{control_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/controls/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Lists all Controls by their parent DataStore.</summary>
                    /// <param name="parent">
                    /// Required. The data store resource name. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                    /// or `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists all Controls by their parent DataStore.</summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListControlsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`
                        /// or
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. A filter to apply on the list results. Supported features: * List all the products
                        /// under the parent branch if filter is unset. Currently this field is unsupported.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// Optional. Maximum number of results to return. If unspecified, defaults to 50. Max allowed
                        /// value is 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. A page token, received from a previous `ListControls` call. Provide this to
                        /// retrieve the subsequent page.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/controls";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates a Control. Control action type cannot be changed. If the Control to update does not
                    /// exist, a NOT_FOUND error is returned.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates a Control. Control action type cannot be changed. If the Control to update does not
                    /// exist, a NOT_FOUND error is returned.
                    /// </summary>
                    public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Optional. Indicates which fields in the provided Control to update. The following are NOT
                        /// supported: * Control.name * Control.solution_type If not set or empty, all supported fields
                        /// are updated.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaControl Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/controls/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Conversations resource.</summary>
                public virtual ConversationsResource Conversations { get; }

                /// <summary>The "conversations" collection of methods.</summary>
                public class ConversationsResource
                {
                    private const string Resource = "conversations";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public ConversationsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Converses a conversation.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Required. The resource name of the Conversation to get. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
                    /// Use
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
                    /// to activate auto session mode, which automatically creates a new conversation inside a
                    /// ConverseConversation session.
                    /// </param>
                    public virtual ConverseRequest Converse(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest body, string name)
                    {
                        return new ConverseRequest(this.service, body, name);
                    }

                    /// <summary>Converses a conversation.</summary>
                    public class ConverseRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationResponse>
                    {
                        /// <summary>Constructs a new Converse request.</summary>
                        public ConverseRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Conversation to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`.
                        /// Use
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/-`
                        /// to activate auto session mode, which automatically creates a new conversation inside a
                        /// ConverseConversation session.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConverseConversationRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "converse";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}:converse";

                        /// <summary>Initializes Converse parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is
                    /// returned.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. Full resource name of parent data store. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a Conversation. If the Conversation to create already exists, an ALREADY_EXISTS error is
                    /// returned.
                    /// </summary>
                    public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/conversations";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
                    /// returned.
                    /// </summary>
                    /// <param name="name">
                    /// Required. The resource name of the Conversation to delete. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes a Conversation. If the Conversation to delete does not exist, a NOT_FOUND error is
                    /// returned.
                    /// </summary>
                    public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Conversation to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a Conversation.</summary>
                    /// <param name="name">
                    /// Required. The resource name of the Conversation to get. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets a Conversation.</summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Conversation to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/conversations/{conversation_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Lists all Conversations by their parent DataStore.</summary>
                    /// <param name="parent">
                    /// Required. The data store resource name. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists all Conversations by their parent DataStore.</summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListConversationsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// A filter to apply on the list results. The supported features are: user_pseudo_id, state.
                        /// Example: "user_pseudo_id = some_id"
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a
                        /// field name for descending. Supported fields: * `update_time` * `create_time` *
                        /// `conversation_name` Example: "update_time desc" "create_time"
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string OrderBy { get; set; }

                        /// <summary>
                        /// Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// A page token, received from a previous `ListConversations` call. Provide this to retrieve
                        /// the subsequent page.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/conversations";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("orderBy", new Google.Apis.Discovery.Parameter
                            {
                                Name = "orderBy",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
                    /// update does not exist, a NOT_FOUND error is returned.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Immutable. Fully qualified name
                    /// `projects/{project}/locations/global/collections/{collection}/dataStore/*/conversations/*` or
                    /// `projects/{project}/locations/global/collections/{collection}/engines/*/conversations/*`.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates a Conversation. Conversation action type cannot be changed. If the Conversation to
                    /// update does not exist, a NOT_FOUND error is returned.
                    /// </summary>
                    public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/global/collections/{collection}/dataStore/*/conversations/*`
                        /// or `projects/{project}/locations/global/collections/{collection}/engines/*/conversations/*`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Indicates which fields in the provided Conversation to update. The following are NOT
                        /// supported: * Conversation.name If not set or empty, all supported fields are updated.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaConversation Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/conversations/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Models resource.</summary>
                public virtual ModelsResource Models { get; }

                /// <summary>The "models" collection of methods.</summary>
                public class ModelsResource
                {
                    private const string Resource = "models";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public ModelsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Operations = new OperationsResource(service);
                    }

                    /// <summary>Gets the Operations resource.</summary>
                    public virtual OperationsResource Operations { get; }

                    /// <summary>The "operations" collection of methods.</summary>
                    public class OperationsResource
                    {
                        private const string Resource = "operations";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public OperationsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        /// <param name="name">The name of the operation resource.</param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>
                        /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                        /// operation result at intervals as recommended by the API service.
                        /// </summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/models/[^/]+/operations/[^/]+$",
                                });
                            }
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        /// <param name="name">The name of the operation's parent resource.</param>
                        public virtual ListRequest List(string name)
                        {
                            return new ListRequest(this.service, name);
                        }

                        /// <summary>
                        /// Lists operations that match the specified filter in the request. If the server doesn't
                        /// support this method, it returns `UNIMPLEMENTED`.
                        /// </summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>The name of the operation's parent resource.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>The standard list filter.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string Filter { get; set; }

                            /// <summary>The standard list page size.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>The standard list page token.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}/operations";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/models/[^/]+$",
                                });
                                RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "filter",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }
                }

                /// <summary>Gets the Operations resource.</summary>
                public virtual OperationsResource Operations { get; }

                /// <summary>The "operations" collection of methods.</summary>
                public class OperationsResource
                {
                    private const string Resource = "operations";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public OperationsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    /// <param name="name">The name of the operation resource.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/operations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Lists operations that match the specified filter in the request. If the server doesn't support
                    /// this method, it returns `UNIMPLEMENTED`.
                    /// </summary>
                    /// <param name="name">The name of the operation's parent resource.</param>
                    public virtual ListRequest List(string name)
                    {
                        return new ListRequest(this.service, name);
                    }

                    /// <summary>
                    /// Lists operations that match the specified filter in the request. If the server doesn't support
                    /// this method, it returns `UNIMPLEMENTED`.
                    /// </summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation's parent resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>The standard list filter.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>The standard list page size.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>The standard list page token.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}/operations";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the Schemas resource.</summary>
                public virtual SchemasResource Schemas { get; }

                /// <summary>The "schemas" collection of methods.</summary>
                public class SchemasResource
                {
                    private const string Resource = "schemas";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public SchemasResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Creates a Schema.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent data store resource name, in the format of
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates a Schema.</summary>
                    public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent data store resource name, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The ID to use for the Schema, which becomes the final component of the
                        /// Schema.name. This field should conform to [RFC-1034](https://tools.ietf.org/html/rfc1034)
                        /// standard with a length limit of 63 characters.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("schemaId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string SchemaId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/schemas";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("schemaId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "schemaId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Deletes a Schema.</summary>
                    /// <param name="name">
                    /// Required. The full resource name of the schema, in the format of
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes a Schema.</summary>
                    public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The full resource name of the schema, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a Schema.</summary>
                    /// <param name="name">
                    /// Required. The full resource name of the schema, in the format of
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets a Schema.</summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The full resource name of the schema, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a list of Schemas.</summary>
                    /// <param name="parent">
                    /// Required. The parent data store resource name, in the format of
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Gets a list of Schemas.</summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListSchemasResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent data store resource name, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// The maximum number of Schemas to return. The service may return fewer than this value. If
                        /// unspecified, at most 100 Schemas are returned. The maximum value is 1000; values above 1000
                        /// are set to 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// A page token, received from a previous SchemaService.ListSchemas call. Provide this to
                        /// retrieve the subsequent page. When paginating, all other parameters provided to
                        /// SchemaService.ListSchemas must match the call that provided the page token.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/schemas";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates a Schema.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Immutable. The full resource name of the schema, in the format of
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                    /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates a Schema.</summary>
                    public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Immutable. The full resource name of the schema, in the format of
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
                        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// If set to true, and the Schema is not found, a new Schema is created. In this situation,
                        /// `update_mask` is ignored.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("allowMissing", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<bool> AllowMissing { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSchema Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/schemas/[^/]+$",
                            });
                            RequestParameters.Add("allowMissing", new Google.Apis.Discovery.Parameter
                            {
                                Name = "allowMissing",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the ServingConfigs resource.</summary>
                public virtual ServingConfigsResource ServingConfigs { get; }

                /// <summary>The "servingConfigs" collection of methods.</summary>
                public class ServingConfigsResource
                {
                    private const string Resource = "servingConfigs";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public ServingConfigsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Answer query method.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="servingConfig">
                    /// Required. The resource name of the Search serving config, such as
                    /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                    /// or
                    /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                    /// This field is used to identify the serving configuration name, set of models used to make the
                    /// search.
                    /// </param>
                    public virtual AnswerRequest Answer(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig)
                    {
                        return new AnswerRequest(this.service, body, servingConfig);
                    }

                    /// <summary>Answer query method.</summary>
                    public class AnswerRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>
                    {
                        /// <summary>Constructs a new Answer request.</summary>
                        public AnswerRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig) : base(service)
                        {
                            ServingConfig = servingConfig;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServingConfig { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "answer";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+servingConfig}:answer";

                        /// <summary>Initializes Answer parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servingConfig",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
                    /// </summary>
                    /// <param name="name">
                    /// Required. The resource name of the ServingConfig to get. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>
                    /// Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not exist.
                    /// </summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the ServingConfig to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}/servingConfigs/{serving_config_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Lists all ServingConfigs linked to this dataStore.</summary>
                    /// <param name="parent">
                    /// Required. Full resource name of the parent resource. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists all ServingConfigs linked to this dataStore.</summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListServingConfigsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of the parent resource. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Optional. Maximum number of results to return. If unspecified, defaults to 100. If a value
                        /// greater than 100 is provided, at most 100 results are returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// Optional. A page token, received from a previous `ListServingConfigs` call. Provide this to
                        /// retrieve the subsequent page.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/servingConfigs";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Immutable. Fully qualified name
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates a ServingConfig. Returns a NOT_FOUND error if the ServingConfig does not exist.
                    /// </summary>
                    public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Indicates which fields in the provided ServingConfig to update. The following are NOT
                        /// supported: * ServingConfig.name If not set, all supported fields are updated.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaServingConfig Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Makes a recommendation, which requires a contextual user event.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="servingConfig">
                    /// Required. Full resource name of a ServingConfig:
                    /// `projects/*/locations/global/collections/*/engines/*/servingConfigs/*`, or
                    /// `projects/*/locations/global/collections/*/dataStores/*/servingConfigs/*` One default serving
                    /// config is created along with your recommendation engine creation. The engine ID is used as the
                    /// ID of the default serving config. For example, for Engine
                    /// `projects/*/locations/global/collections/*/engines/my-engine`, you can use
                    /// `projects/*/locations/global/collections/*/engines/my-engine/servingConfigs/my-engine` for your
                    /// RecommendationService.Recommend requests.
                    /// </param>
                    public virtual RecommendRequest Recommend(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest body, string servingConfig)
                    {
                        return new RecommendRequest(this.service, body, servingConfig);
                    }

                    /// <summary>Makes a recommendation, which requires a contextual user event.</summary>
                    public class RecommendRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendResponse>
                    {
                        /// <summary>Constructs a new Recommend request.</summary>
                        public RecommendRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest body, string servingConfig) : base(service)
                        {
                            ServingConfig = servingConfig;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of a ServingConfig:
                        /// `projects/*/locations/global/collections/*/engines/*/servingConfigs/*`, or
                        /// `projects/*/locations/global/collections/*/dataStores/*/servingConfigs/*` One default
                        /// serving config is created along with your recommendation engine creation. The engine ID is
                        /// used as the ID of the default serving config. For example, for Engine
                        /// `projects/*/locations/global/collections/*/engines/my-engine`, you can use
                        /// `projects/*/locations/global/collections/*/engines/my-engine/servingConfigs/my-engine` for
                        /// your RecommendationService.Recommend requests.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServingConfig { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecommendRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "recommend";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+servingConfig}:recommend";

                        /// <summary>Initializes Recommend parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servingConfig",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Performs a search.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="servingConfig">
                    /// Required. The resource name of the Search serving config, such as
                    /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                    /// or
                    /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                    /// This field is used to identify the serving configuration name, set of models used to make the
                    /// search.
                    /// </param>
                    public virtual SearchRequest Search(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig)
                    {
                        return new SearchRequest(this.service, body, servingConfig);
                    }

                    /// <summary>Performs a search.</summary>
                    public class SearchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchResponse>
                    {
                        /// <summary>Constructs a new Search request.</summary>
                        public SearchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig) : base(service)
                        {
                            ServingConfig = servingConfig;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServingConfig { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "search";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+servingConfig}:search";

                        /// <summary>Initializes Search parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servingConfig",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Performs a search. Similar to the SearchService.Search method, but a lite version that allows
                    /// API key for authentication, where OAuth and IAM checks are not required. Only public website
                    /// search is supported by this method. If data stores and engines not associated with public
                    /// website search are specified, a `FAILED_PRECONDITION` error is returned. This method can be used
                    /// for easy onboarding without having to implement an authentication backend. However, it is
                    /// strongly recommended to use SearchService.Search instead with required OAuth and IAM checks to
                    /// provide better data security.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="servingConfig">
                    /// Required. The resource name of the Search serving config, such as
                    /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                    /// or
                    /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                    /// This field is used to identify the serving configuration name, set of models used to make the
                    /// search.
                    /// </param>
                    public virtual SearchLiteRequest SearchLite(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig)
                    {
                        return new SearchLiteRequest(this.service, body, servingConfig);
                    }

                    /// <summary>
                    /// Performs a search. Similar to the SearchService.Search method, but a lite version that allows
                    /// API key for authentication, where OAuth and IAM checks are not required. Only public website
                    /// search is supported by this method. If data stores and engines not associated with public
                    /// website search are specified, a `FAILED_PRECONDITION` error is returned. This method can be used
                    /// for easy onboarding without having to implement an authentication backend. However, it is
                    /// strongly recommended to use SearchService.Search instead with required OAuth and IAM checks to
                    /// provide better data security.
                    /// </summary>
                    public class SearchLiteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchResponse>
                    {
                        /// <summary>Constructs a new SearchLite request.</summary>
                        public SearchLiteRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest body, string servingConfig) : base(service)
                        {
                            ServingConfig = servingConfig;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServingConfig { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSearchRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "searchLite";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+servingConfig}:searchLite";

                        /// <summary>Initializes SearchLite parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servingConfig",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple
                    /// AnswerQueryResponse messages in a stream.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="servingConfig">
                    /// Required. The resource name of the Search serving config, such as
                    /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                    /// or
                    /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                    /// This field is used to identify the serving configuration name, set of models used to make the
                    /// search.
                    /// </param>
                    public virtual StreamAnswerRequest StreamAnswer(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig)
                    {
                        return new StreamAnswerRequest(this.service, body, servingConfig);
                    }

                    /// <summary>
                    /// Answer query method (streaming). It takes one AnswerQueryRequest and returns multiple
                    /// AnswerQueryResponse messages in a stream.
                    /// </summary>
                    public class StreamAnswerRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryResponse>
                    {
                        /// <summary>Constructs a new StreamAnswer request.</summary>
                        public StreamAnswerRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest body, string servingConfig) : base(service)
                        {
                            ServingConfig = servingConfig;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Search serving config, such as
                        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
                        /// or
                        /// `projects/*/locations/global/collections/default_collection/dataStores/*/servingConfigs/default_serving_config`.
                        /// This field is used to identify the serving configuration name, set of models used to make
                        /// the search.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("servingConfig", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string ServingConfig { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswerQueryRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "streamAnswer";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+servingConfig}:streamAnswer";

                        /// <summary>Initializes StreamAnswer parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("servingConfig", new Google.Apis.Discovery.Parameter
                            {
                                Name = "servingConfig",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/servingConfigs/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the Sessions resource.</summary>
                public virtual SessionsResource Sessions { get; }

                /// <summary>The "sessions" collection of methods.</summary>
                public class SessionsResource
                {
                    private const string Resource = "sessions";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public SessionsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Answers = new AnswersResource(service);
                    }

                    /// <summary>Gets the Answers resource.</summary>
                    public virtual AnswersResource Answers { get; }

                    /// <summary>The "answers" collection of methods.</summary>
                    public class AnswersResource
                    {
                        private const string Resource = "answers";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public AnswersResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Gets a Answer.</summary>
                        /// <param name="name">
                        /// Required. The resource name of the Answer to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a Answer.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaAnswer>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The resource name of the Answer to get. Format:
                            /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine_id}/sessions/{session_id}/answers/{answer_id}`
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+/answers/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>
                    /// Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is returned.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. Full resource name of parent data store. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Creates a Session. If the Session to create already exists, an ALREADY_EXISTS error is returned.
                    /// </summary>
                    public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of parent data store. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/sessions";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
                    /// </summary>
                    /// <param name="name">
                    /// Required. The resource name of the Session to delete. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>
                    /// Deletes a Session. If the Session to delete does not exist, a NOT_FOUND error is returned.
                    /// </summary>
                    public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Session to delete. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a Session.</summary>
                    /// <param name="name">
                    /// Required. The resource name of the Session to get. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets a Session.</summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the Session to get. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Optional. If set to true, the full session including all answer details will be returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("includeAnswerDetails", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<bool> IncludeAnswerDetails { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$",
                            });
                            RequestParameters.Add("includeAnswerDetails", new Google.Apis.Discovery.Parameter
                            {
                                Name = "includeAnswerDetails",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Lists all Sessions by their parent DataStore.</summary>
                    /// <param name="parent">
                    /// Required. The data store resource name. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Lists all Sessions by their parent DataStore.</summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListSessionsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The data store resource name. Format:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// A filter to apply on the list results. The supported features are: user_pseudo_id, state.
                        /// Example: "user_pseudo_id = some_id"
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>
                        /// A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a
                        /// field name for descending. Supported fields: * `update_time` * `create_time` *
                        /// `session_name` * `is_pinned` Example: * "update_time desc" * "create_time" * "is_pinned
                        /// desc,update_time desc": list sessions by is_pinned first, then by update_time.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("orderBy", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string OrderBy { get; set; }

                        /// <summary>
                        /// Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is
                        /// 1000.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// A page token, received from a previous `ListSessions` call. Provide this to retrieve the
                        /// subsequent page.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/sessions";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("orderBy", new Google.Apis.Discovery.Parameter
                            {
                                Name = "orderBy",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Updates a Session. Session action type cannot be changed. If the Session to update does not
                    /// exist, a NOT_FOUND error is returned.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Immutable. Fully qualified name
                    /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>
                    /// Updates a Session. Session action type cannot be changed. If the Session to update does not
                    /// exist, a NOT_FOUND error is returned.
                    /// </summary>
                    public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Immutable. Fully qualified name
                        /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Indicates which fields in the provided Session to update. The following are NOT supported: *
                        /// Session.name If not set or empty, all supported fields are updated.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSession Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/sessions/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Gets the SiteSearchEngine resource.</summary>
                public virtual SiteSearchEngineResource SiteSearchEngine { get; }

                /// <summary>The "siteSearchEngine" collection of methods.</summary>
                public class SiteSearchEngineResource
                {
                    private const string Resource = "siteSearchEngine";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public SiteSearchEngineResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                        Sitemaps = new SitemapsResource(service);
                        TargetSites = new TargetSitesResource(service);
                    }

                    /// <summary>Gets the Sitemaps resource.</summary>
                    public virtual SitemapsResource Sitemaps { get; }

                    /// <summary>The "sitemaps" collection of methods.</summary>
                    public class SitemapsResource
                    {
                        private const string Resource = "sitemaps";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public SitemapsResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Creates a Sitemap.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Parent resource name of the SiteSearchEngine, such as
                        /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSitemap body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates a Sitemap.</summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSitemap body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Parent resource name of the SiteSearchEngine, such as
                            /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSitemap Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/sitemaps";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                            }
                        }

                        /// <summary>Deletes a Sitemap.</summary>
                        /// <param name="name">
                        /// Required. Full resource name of Sitemap, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/sitemaps/{sitemap}`.
                        /// If the caller does not have permission to access the Sitemap, regardless of whether or not
                        /// it exists, a PERMISSION_DENIED error is returned. If the requested Sitemap does not exist, a
                        /// NOT_FOUND error is returned.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>Deletes a Sitemap.</summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of Sitemap, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/sitemaps/{sitemap}`.
                            /// If the caller does not have permission to access the Sitemap, regardless of whether or
                            /// not it exists, a PERMISSION_DENIED error is returned. If the requested Sitemap does not
                            /// exist, a NOT_FOUND error is returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/sitemaps/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Fetch Sitemaps in a DataStore.</summary>
                        /// <param name="parent">
                        /// Required. Parent resource name of the SiteSearchEngine, such as
                        /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                        /// </param>
                        public virtual FetchRequest Fetch(string parent)
                        {
                            return new FetchRequest(this.service, parent);
                        }

                        /// <summary>Fetch Sitemaps in a DataStore.</summary>
                        public class FetchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaFetchSitemapsResponse>
                        {
                            /// <summary>Constructs a new Fetch request.</summary>
                            public FetchRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Parent resource name of the SiteSearchEngine, such as
                            /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>The Sitemap uris.</summary>
                            [Google.Apis.Util.RequestParameterAttribute("matcher.urisMatcher.uris", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual Google.Apis.Util.Repeatable<string> MatcherUrisMatcherUris { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "fetch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/sitemaps:fetch";

                            /// <summary>Initializes Fetch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                                RequestParameters.Add("matcher.urisMatcher.uris", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "matcher.urisMatcher.uris",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }
                    }

                    /// <summary>Gets the TargetSites resource.</summary>
                    public virtual TargetSitesResource TargetSites { get; }

                    /// <summary>The "targetSites" collection of methods.</summary>
                    public class TargetSitesResource
                    {
                        private const string Resource = "targetSites";

                        /// <summary>The service which this resource belongs to.</summary>
                        private readonly Google.Apis.Services.IClientService service;

                        /// <summary>Constructs a new resource.</summary>
                        public TargetSitesResource(Google.Apis.Services.IClientService service)
                        {
                            this.service = service;
                        }

                        /// <summary>Creates TargetSite in a batch.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. The parent resource shared by all TargetSites being created.
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                        /// The parent field in the CreateBookRequest messages must either be empty or match this field.
                        /// </param>
                        public virtual BatchCreateRequest BatchCreate(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest body, string parent)
                        {
                            return new BatchCreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates TargetSite in a batch.</summary>
                        public class BatchCreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new BatchCreate request.</summary>
                            public BatchCreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent resource shared by all TargetSites being created.
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                            /// The parent field in the CreateBookRequest messages must either be empty or match this
                            /// field.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "batchCreate";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/targetSites:batchCreate";

                            /// <summary>Initializes BatchCreate parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                            }
                        }

                        /// <summary>Creates a TargetSite.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="parent">
                        /// Required. Parent resource name of TargetSite, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                        /// </param>
                        public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite body, string parent)
                        {
                            return new CreateRequest(this.service, body, parent);
                        }

                        /// <summary>Creates a TargetSite.</summary>
                        public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Create request.</summary>
                            public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite body, string parent) : base(service)
                            {
                                Parent = parent;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Parent resource name of TargetSite, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "create";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "POST";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/targetSites";

                            /// <summary>Initializes Create parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                            }
                        }

                        /// <summary>Deletes a TargetSite.</summary>
                        /// <param name="name">
                        /// Required. Full resource name of TargetSite, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
                        /// If the caller does not have permission to access the TargetSite, regardless of whether or
                        /// not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </param>
                        public virtual DeleteRequest Delete(string name)
                        {
                            return new DeleteRequest(this.service, name);
                        }

                        /// <summary>Deletes a TargetSite.</summary>
                        public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Delete request.</summary>
                            public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of TargetSite, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
                            /// If the caller does not have permission to access the TargetSite, regardless of whether
                            /// or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite
                            /// does not exist, a NOT_FOUND error is returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "delete";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "DELETE";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Delete parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a TargetSite.</summary>
                        /// <param name="name">
                        /// Required. Full resource name of TargetSite, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
                        /// If the caller does not have permission to access the TargetSite, regardless of whether or
                        /// not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </param>
                        public virtual GetRequest Get(string name)
                        {
                            return new GetRequest(this.service, name);
                        }

                        /// <summary>Gets a TargetSite.</summary>
                        public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite>
                        {
                            /// <summary>Constructs a new Get request.</summary>
                            public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                            {
                                Name = name;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. Full resource name of TargetSite, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`.
                            /// If the caller does not have permission to access the TargetSite, regardless of whether
                            /// or not it exists, a PERMISSION_DENIED error is returned. If the requested TargetSite
                            /// does not exist, a NOT_FOUND error is returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "get";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Get parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$",
                                });
                            }
                        }

                        /// <summary>Gets a list of TargetSites.</summary>
                        /// <param name="parent">
                        /// Required. The parent site search engine resource name, such as
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                        /// If the caller does not have permission to list TargetSites under this site search engine,
                        /// regardless of whether or not this branch exists, a PERMISSION_DENIED error is returned.
                        /// </param>
                        public virtual ListRequest List(string parent)
                        {
                            return new ListRequest(this.service, parent);
                        }

                        /// <summary>Gets a list of TargetSites.</summary>
                        public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListTargetSitesResponse>
                        {
                            /// <summary>Constructs a new List request.</summary>
                            public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                            {
                                Parent = parent;
                                InitParameters();
                            }

                            /// <summary>
                            /// Required. The parent site search engine resource name, such as
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                            /// If the caller does not have permission to list TargetSites under this site search
                            /// engine, regardless of whether or not this branch exists, a PERMISSION_DENIED error is
                            /// returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Parent { get; private set; }

                            /// <summary>
                            /// Requested page size. Server may return fewer items than requested. If unspecified,
                            /// server will pick an appropriate default. The maximum value is 1000; values above 1000
                            /// will be coerced to 1000. If this field is negative, an INVALID_ARGUMENT error is
                            /// returned.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual System.Nullable<int> PageSize { get; set; }

                            /// <summary>
                            /// A page token, received from a previous `ListTargetSites` call. Provide this to retrieve
                            /// the subsequent page. When paginating, all other parameters provided to `ListTargetSites`
                            /// must match the call that provided the page token.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                            public virtual string PageToken { get; set; }

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "list";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "GET";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+parent}/targetSites";

                            /// <summary>Initializes List parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "parent",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                                });
                                RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageSize",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "pageToken",
                                    IsRequired = false,
                                    ParameterType = "query",
                                    DefaultValue = null,
                                    Pattern = null,
                                });
                            }
                        }

                        /// <summary>Updates a TargetSite.</summary>
                        /// <param name="body">The body of the request.</param>
                        /// <param name="name">
                        /// Output only. The fully qualified resource name of the target site.
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
                        /// The `target_site_id` is system-generated.
                        /// </param>
                        public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite body, string name)
                        {
                            return new PatchRequest(this.service, body, name);
                        }

                        /// <summary>Updates a TargetSite.</summary>
                        public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                        {
                            /// <summary>Constructs a new Patch request.</summary>
                            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite body, string name) : base(service)
                            {
                                Name = name;
                                Body = body;
                                InitParameters();
                            }

                            /// <summary>
                            /// Output only. The fully qualified resource name of the target site.
                            /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
                            /// The `target_site_id` is system-generated.
                            /// </summary>
                            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                            public virtual string Name { get; private set; }

                            /// <summary>Gets or sets the body of this request.</summary>
                            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaTargetSite Body { get; set; }

                            /// <summary>Returns the body of the request.</summary>
                            protected override object GetBody() => Body;

                            /// <summary>Gets the method name.</summary>
                            public override string MethodName => "patch";

                            /// <summary>Gets the HTTP method.</summary>
                            public override string HttpMethod => "PATCH";

                            /// <summary>Gets the REST path.</summary>
                            public override string RestPath => "v1beta/{+name}";

                            /// <summary>Initializes Patch parameter list.</summary>
                            protected override void InitParameters()
                            {
                                base.InitParameters();
                                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                                {
                                    Name = "name",
                                    IsRequired = true,
                                    ParameterType = "path",
                                    DefaultValue = null,
                                    Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine/targetSites/[^/]+$",
                                });
                            }
                        }
                    }

                    /// <summary>Downgrade from advanced site search to basic site search.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="siteSearchEngine">
                    /// Required. Full resource name of the SiteSearchEngine, such as
                    /// `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
                    /// </param>
                    public virtual DisableAdvancedSiteSearchRequest DisableAdvancedSiteSearch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest body, string siteSearchEngine)
                    {
                        return new DisableAdvancedSiteSearchRequest(this.service, body, siteSearchEngine);
                    }

                    /// <summary>Downgrade from advanced site search to basic site search.</summary>
                    public class DisableAdvancedSiteSearchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new DisableAdvancedSiteSearch request.</summary>
                        public DisableAdvancedSiteSearchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest body, string siteSearchEngine) : base(service)
                        {
                            SiteSearchEngine = siteSearchEngine;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of the SiteSearchEngine, such as
                        /// `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("siteSearchEngine", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string SiteSearchEngine { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "disableAdvancedSiteSearch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+siteSearchEngine}:disableAdvancedSiteSearch";

                        /// <summary>Initializes DisableAdvancedSiteSearch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("siteSearchEngine", new Google.Apis.Discovery.Parameter
                            {
                                Name = "siteSearchEngine",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                            });
                        }
                    }

                    /// <summary>Upgrade from basic site search to advanced site search.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="siteSearchEngine">
                    /// Required. Full resource name of the SiteSearchEngine, such as
                    /// `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
                    /// </param>
                    public virtual EnableAdvancedSiteSearchRequest EnableAdvancedSiteSearch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest body, string siteSearchEngine)
                    {
                        return new EnableAdvancedSiteSearchRequest(this.service, body, siteSearchEngine);
                    }

                    /// <summary>Upgrade from basic site search to advanced site search.</summary>
                    public class EnableAdvancedSiteSearchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new EnableAdvancedSiteSearch request.</summary>
                        public EnableAdvancedSiteSearchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest body, string siteSearchEngine) : base(service)
                        {
                            SiteSearchEngine = siteSearchEngine;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of the SiteSearchEngine, such as
                        /// `projects/{project}/locations/{location}/dataStores/{data_store_id}/siteSearchEngine`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("siteSearchEngine", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string SiteSearchEngine { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "enableAdvancedSiteSearch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+siteSearchEngine}:enableAdvancedSiteSearch";

                        /// <summary>Initializes EnableAdvancedSiteSearch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("siteSearchEngine", new Google.Apis.Discovery.Parameter
                            {
                                Name = "siteSearchEngine",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                            });
                        }
                    }

                    /// <summary>Request on-demand recrawl for a list of URIs.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="siteSearchEngine">
                    /// Required. Full resource name of the SiteSearchEngine, such as
                    /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                    /// </param>
                    public virtual RecrawlUrisRequest RecrawlUris(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest body, string siteSearchEngine)
                    {
                        return new RecrawlUrisRequest(this.service, body, siteSearchEngine);
                    }

                    /// <summary>Request on-demand recrawl for a list of URIs.</summary>
                    public class RecrawlUrisRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new RecrawlUris request.</summary>
                        public RecrawlUrisRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest body, string siteSearchEngine) : base(service)
                        {
                            SiteSearchEngine = siteSearchEngine;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of the SiteSearchEngine, such as
                        /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("siteSearchEngine", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string SiteSearchEngine { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "recrawlUris";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+siteSearchEngine}:recrawlUris";

                        /// <summary>Initializes RecrawlUris parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("siteSearchEngine", new Google.Apis.Discovery.Parameter
                            {
                                Name = "siteSearchEngine",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                            });
                        }
                    }
                }

                /// <summary>Gets the SuggestionDenyListEntries resource.</summary>
                public virtual SuggestionDenyListEntriesResource SuggestionDenyListEntries { get; }

                /// <summary>The "suggestionDenyListEntries" collection of methods.</summary>
                public class SuggestionDenyListEntriesResource
                {
                    private const string Resource = "suggestionDenyListEntries";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public SuggestionDenyListEntriesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Imports all SuggestionDenyListEntry for a DataStore.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent data store resource name for which to import denylist entries. Follows
                    /// pattern projects/*/locations/*/collections/*/dataStores/*.
                    /// </param>
                    public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest body, string parent)
                    {
                        return new ImportRequest(this.service, body, parent);
                    }

                    /// <summary>Imports all SuggestionDenyListEntry for a DataStore.</summary>
                    public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Import request.</summary>
                        public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent data store resource name for which to import denylist entries. Follows
                        /// pattern projects/*/locations/*/collections/*/dataStores/*.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "import";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/suggestionDenyListEntries:import";

                        /// <summary>Initializes Import parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Permanently deletes all SuggestionDenyListEntry for a DataStore.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent data store resource name for which to import denylist entries. Follows
                    /// pattern projects/*/locations/*/collections/*/dataStores/*.
                    /// </param>
                    public virtual PurgeRequest Purge(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest body, string parent)
                    {
                        return new PurgeRequest(this.service, body, parent);
                    }

                    /// <summary>Permanently deletes all SuggestionDenyListEntry for a DataStore.</summary>
                    public class PurgeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Purge request.</summary>
                        public PurgeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent data store resource name for which to import denylist entries. Follows
                        /// pattern projects/*/locations/*/collections/*/dataStores/*.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "purge";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/suggestionDenyListEntries:purge";

                        /// <summary>Initializes Purge parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/.*$",
                            });
                        }
                    }
                }

                /// <summary>Gets the UserEvents resource.</summary>
                public virtual UserEventsResource UserEvents { get; }

                /// <summary>The "userEvents" collection of methods.</summary>
                public class UserEventsResource
                {
                    private const string Resource = "userEvents";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public UserEventsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Writes a single user event from the browser. This uses a GET request to due to browser
                    /// restriction of POST-ing to a third-party domain. This method is used only by the Discovery
                    /// Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
                    /// </summary>
                    /// <param name="parent">
                    /// Required. The parent resource name. If the collect user event action is applied in DataStore
                    /// level, the format is:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If
                    /// the collect user event action is applied in Location level, for example, the event with Document
                    /// across multiple DataStore, the format is: `projects/{project}/locations/{location}`.
                    /// </param>
                    public virtual CollectRequest Collect(string parent)
                    {
                        return new CollectRequest(this.service, parent);
                    }

                    /// <summary>
                    /// Writes a single user event from the browser. This uses a GET request to due to browser
                    /// restriction of POST-ing to a third-party domain. This method is used only by the Discovery
                    /// Engine API JavaScript pixel and Google Tag Manager. Users should not call this method directly.
                    /// </summary>
                    public class CollectRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleApiHttpBody>
                    {
                        /// <summary>Constructs a new Collect request.</summary>
                        public CollectRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent resource name. If the collect user event action is applied in DataStore
                        /// level, the format is:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                        /// If the collect user event action is applied in Location level, for example, the event with
                        /// Document across multiple DataStore, the format is:
                        /// `projects/{project}/locations/{location}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// The event timestamp in milliseconds. This prevents browser caching of otherwise identical
                        /// get requests. The name is abbreviated to reduce the payload bytes.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("ets", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<long> Ets { get; set; }

                        /// <summary>
                        /// The URL including cgi-parameters but excluding the hash fragment with a length limit of
                        /// 5,000 characters. This is often more useful than the referer URL, because many browsers only
                        /// send the domain for third-party requests.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("uri", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Uri { get; set; }

                        /// <summary>
                        /// Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("userEvent", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string UserEvent { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "collect";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/userEvents:collect";

                        /// <summary>Initializes Collect parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("ets", new Google.Apis.Discovery.Parameter
                            {
                                Name = "ets",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("uri", new Google.Apis.Discovery.Parameter
                            {
                                Name = "uri",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("userEvent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "userEvent",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>
                    /// Bulk import of user events. Request processing might be synchronous. Events that already exist
                    /// are skipped. Use this method for backfilling historical user events. Operation.response is of
                    /// type ImportResponse. Note that it is possible for a subset of the items to be successfully
                    /// inserted. Operation.metadata is of type ImportMetadata.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. Parent DataStore resource name, of the form
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
                    /// </param>
                    public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest body, string parent)
                    {
                        return new ImportRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Bulk import of user events. Request processing might be synchronous. Events that already exist
                    /// are skipped. Use this method for backfilling historical user events. Operation.response is of
                    /// type ImportResponse. Note that it is possible for a subset of the items to be successfully
                    /// inserted. Operation.metadata is of type ImportMetadata.
                    /// </summary>
                    public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Import request.</summary>
                        public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Parent DataStore resource name, of the form
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "import";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/userEvents:import";

                        /// <summary>Initializes Import parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Deletes permanently all user events specified by the filter provided. Depending on the number of
                    /// events specified by the filter, this operation could take hours or days to complete. To test a
                    /// filter, use the list command first.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The resource name of the catalog under which the events are created. The format is
                    /// `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`.
                    /// </param>
                    public virtual PurgeRequest Purge(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest body, string parent)
                    {
                        return new PurgeRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Deletes permanently all user events specified by the filter provided. Depending on the number of
                    /// events specified by the filter, this operation could take hours or days to complete. To test a
                    /// filter, use the list command first.
                    /// </summary>
                    public class PurgeRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Purge request.</summary>
                        public PurgeRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The resource name of the catalog under which the events are created. The format is
                        /// `projects/{project}/locations/global/collections/{collection}/dataStores/{dataStore}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "purge";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/userEvents:purge";

                        /// <summary>Initializes Purge parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Writes a single user event.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent resource name. If the write user event action is applied in DataStore
                    /// level, the format is:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If
                    /// the write user event action is applied in Location level, for example, the event with Document
                    /// across multiple DataStore, the format is: `projects/{project}/locations/{location}`.
                    /// </param>
                    public virtual WriteRequest Write(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent body, string parent)
                    {
                        return new WriteRequest(this.service, body, parent);
                    }

                    /// <summary>Writes a single user event.</summary>
                    public class WriteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent>
                    {
                        /// <summary>Constructs a new Write request.</summary>
                        public WriteRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent resource name. If the write user event action is applied in DataStore
                        /// level, the format is:
                        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
                        /// If the write user event action is applied in Location level, for example, the event with
                        /// Document across multiple DataStore, the format is:
                        /// `projects/{project}/locations/{location}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// If set to true, the user event is written asynchronously after validation, and the API
                        /// responds without waiting for the write.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("writeAsync", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<bool> WriteAsync { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "write";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/userEvents:write";

                        /// <summary>Initializes Write parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                            });
                            RequestParameters.Add("writeAsync", new Google.Apis.Discovery.Parameter
                            {
                                Name = "writeAsync",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Completes the specified user input with keyword suggestions.</summary>
                /// <param name="dataStore">
                /// Required. The parent data store resource name for which the completion is performed, such as
                /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.
                /// </param>
                public virtual CompleteQueryRequest CompleteQuery(string dataStore)
                {
                    return new CompleteQueryRequest(this.service, dataStore);
                }

                /// <summary>Completes the specified user input with keyword suggestions.</summary>
                public class CompleteQueryRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaCompleteQueryResponse>
                {
                    /// <summary>Constructs a new CompleteQuery request.</summary>
                    public CompleteQueryRequest(Google.Apis.Services.IClientService service, string dataStore) : base(service)
                    {
                        DataStore = dataStore;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent data store resource name for which the completion is performed, such as
                    /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("dataStore", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string DataStore { get; private set; }

                    /// <summary>
                    /// Indicates if tail suggestions should be returned if there are no suggestions that match the full
                    /// query. Even if set to true, if there are suggestions that match the full query, those are
                    /// returned and no tail suggestions are returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("includeTailSuggestions", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> IncludeTailSuggestions { get; set; }

                    /// <summary>
                    /// Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("query", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Query { get; set; }

                    /// <summary>
                    /// Specifies the autocomplete data model. This overrides any model specified in the Configuration
                    /// &amp;gt; Autocomplete section of the Cloud console. Currently supported values: * `document` -
                    /// Using suggestions generated from user-imported documents. * `search-history` - Using suggestions
                    /// generated from the past history of SearchService.Search API calls. Do not use it when there is
                    /// no traffic for Search API. * `user-event` - Using suggestions generated from user-imported
                    /// search events. * `document-completable` - Using suggestions taken directly from user-imported
                    /// document fields marked as completable. Default values: * `document` is the default model for
                    /// regular dataStores. * `search-history` is the default model for site search dataStores.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("queryModel", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string QueryModel { get; set; }

                    /// <summary>
                    /// A unique identifier for tracking visitors. For example, this could be implemented with an HTTP
                    /// cookie, which should be able to uniquely identify a visitor on a single device. This unique
                    /// identifier should not change if the visitor logs in or out of the website. This field should NOT
                    /// have a fixed value such as `unknown_visitor`. This should be the same identifier as
                    /// UserEvent.user_pseudo_id and SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded
                    /// string with a length limit of 128 characters. Otherwise, an `INVALID_ARGUMENT` error is
                    /// returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("userPseudoId", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string UserPseudoId { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "completeQuery";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+dataStore}:completeQuery";

                    /// <summary>Initializes CompleteQuery parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("dataStore", new Google.Apis.Discovery.Parameter
                        {
                            Name = "dataStore",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                        });
                        RequestParameters.Add("includeTailSuggestions", new Google.Apis.Discovery.Parameter
                        {
                            Name = "includeTailSuggestions",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("query", new Google.Apis.Discovery.Parameter
                        {
                            Name = "query",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("queryModel", new Google.Apis.Discovery.Parameter
                        {
                            Name = "queryModel",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("userPseudoId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "userPseudoId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or
                /// Recommendation use case, an Engine needs to be created separately.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The parent resource name, such as
                /// `projects/{project}/locations/{location}/collections/{collection}`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates a DataStore. DataStore is for storing Documents. To serve these documents for Search, or
                /// Recommendation use case, an Engine needs to be created separately.
                /// </summary>
                public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent resource name, such as
                    /// `projects/{project}/locations/{location}/collections/{collection}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Resource name of the CmekConfig to use for protecting this DataStore.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("cmekConfigName", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string CmekConfigName { get; set; }

                    /// <summary>
                    /// A boolean flag indicating whether user want to directly create an advanced data store for site
                    /// search. If the data store is not configured as site search (GENERIC vertical and PUBLIC_WEBSITE
                    /// content_config), this flag will be ignored.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("createAdvancedSiteSearch", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> CreateAdvancedSiteSearch { get; set; }

                    /// <summary>
                    /// Required. The ID to use for the DataStore, which will become the final component of the
                    /// DataStore's resource name. This field must conform to
                    /// [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
                    /// Otherwise, an INVALID_ARGUMENT error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("dataStoreId", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string DataStoreId { get; set; }

                    /// <summary>
                    /// DataStore without CMEK protections. If a default CmekConfig is set for the project, setting this
                    /// field will override the default CmekConfig as well.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("disableCmek", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> DisableCmek { get; set; }

                    /// <summary>
                    /// A boolean flag indicating whether to skip the default schema creation for the data store. Only
                    /// enable this flag if you are certain that the default schema is incompatible with your use case.
                    /// If set to true, you must manually create a schema for the data store before any documents can be
                    /// ingested. This flag cannot be specified if `data_store.starting_schema` is specified.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("skipDefaultSchemaCreation", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> SkipDefaultSchemaCreation { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/dataStores";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("cmekConfigName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "cmekConfigName",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("createAdvancedSiteSearch", new Google.Apis.Discovery.Parameter
                        {
                            Name = "createAdvancedSiteSearch",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("dataStoreId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "dataStoreId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("disableCmek", new Google.Apis.Discovery.Parameter
                        {
                            Name = "disableCmek",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("skipDefaultSchemaCreation", new Google.Apis.Discovery.Parameter
                        {
                            Name = "skipDefaultSchemaCreation",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Deletes a DataStore.</summary>
                /// <param name="name">
                /// Required. Full resource name of DataStore, such as
                /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. If
                /// the caller does not have permission to delete the DataStore, regardless of whether or not it exists,
                /// a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a NOT_FOUND error
                /// is returned.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Deletes a DataStore.</summary>
                public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Full resource name of DataStore, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                    /// If the caller does not have permission to delete the DataStore, regardless of whether or not it
                    /// exists, a PERMISSION_DENIED error is returned. If the DataStore to delete does not exist, a
                    /// NOT_FOUND error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets a DataStore.</summary>
                /// <param name="name">
                /// Required. Full resource name of DataStore, such as
                /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. If
                /// the caller does not have permission to access the DataStore, regardless of whether or not it exists,
                /// a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a NOT_FOUND error
                /// is returned.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Gets a DataStore.</summary>
                public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Full resource name of DataStore, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                    /// If the caller does not have permission to access the DataStore, regardless of whether or not it
                    /// exists, a PERMISSION_DENIED error is returned. If the requested DataStore does not exist, a
                    /// NOT_FOUND error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets the SiteSearchEngine.</summary>
                /// <param name="name">
                /// Required. Resource name of SiteSearchEngine, such as
                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                /// If the caller does not have permission to access the [SiteSearchEngine], regardless of whether or
                /// not it exists, a PERMISSION_DENIED error is returned.
                /// </param>
                public virtual GetSiteSearchEngineRequest GetSiteSearchEngine(string name)
                {
                    return new GetSiteSearchEngineRequest(this.service, name);
                }

                /// <summary>Gets the SiteSearchEngine.</summary>
                public class GetSiteSearchEngineRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSiteSearchEngine>
                {
                    /// <summary>Constructs a new GetSiteSearchEngine request.</summary>
                    public GetSiteSearchEngineRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Resource name of SiteSearchEngine, such as
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
                    /// If the caller does not have permission to access the [SiteSearchEngine], regardless of whether
                    /// or not it exists, a PERMISSION_DENIED error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "getSiteSearchEngine";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes GetSiteSearchEngine parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+/siteSearchEngine$",
                        });
                    }
                }

                /// <summary>Lists all the DataStores associated with the project.</summary>
                /// <param name="parent">
                /// Required. The parent branch resource name, such as
                /// `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does not have
                /// permission to list DataStores under this location, regardless of whether or not this data store
                /// exists, a PERMISSION_DENIED error is returned.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Lists all the DataStores associated with the project.</summary>
                public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListDataStoresResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent branch resource name, such as
                    /// `projects/{project}/locations/{location}/collections/{collection_id}`. If the caller does not
                    /// have permission to list DataStores under this location, regardless of whether or not this data
                    /// store exists, a PERMISSION_DENIED error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Filter by solution type . For example: `filter = 'solution_type:SOLUTION_TYPE_SEARCH'`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>
                    /// Maximum number of DataStores to return. If unspecified, defaults to 10. The maximum allowed
                    /// value is 50. Values above 50 will be coerced to 50. If this field is negative, an
                    /// INVALID_ARGUMENT is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>
                    /// A page token ListDataStoresResponse.next_page_token, received from a previous
                    /// DataStoreService.ListDataStores call. Provide this to retrieve the subsequent page. When
                    /// paginating, all other parameters provided to DataStoreService.ListDataStores must match the call
                    /// that provided the page token. Otherwise, an INVALID_ARGUMENT error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/dataStores";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Updates a DataStore</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Immutable. The full resource name of the data store. Format:
                /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>Updates a DataStore</summary>
                public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Immutable. The full resource name of the data store. Format:
                    /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
                    /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Indicates which fields in the provided DataStore to update. If an unsupported or unknown field
                    /// is provided, an INVALID_ARGUMENT error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaDataStore Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/dataStores/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the Evaluations resource.</summary>
            public virtual EvaluationsResource Evaluations { get; }

            /// <summary>The "evaluations" collection of methods.</summary>
            public class EvaluationsResource
            {
                private const string Resource = "evaluations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public EvaluationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Operations = new OperationsResource(service);
                }

                /// <summary>Gets the Operations resource.</summary>
                public virtual OperationsResource Operations { get; }

                /// <summary>The "operations" collection of methods.</summary>
                public class OperationsResource
                {
                    private const string Resource = "operations";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public OperationsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    /// <param name="name">The name of the operation resource.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/evaluations/[^/]+/operations/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>
                /// Creates a Evaluation. Upon creation, the evaluation will be automatically triggered and begin
                /// execution.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The parent resource name, such as `projects/{project}/locations/{location}`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEvaluation body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>
                /// Creates a Evaluation. Upon creation, the evaluation will be automatically triggered and begin
                /// execution.
                /// </summary>
                public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEvaluation body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent resource name, such as `projects/{project}/locations/{location}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEvaluation Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/evaluations";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets a Evaluation.</summary>
                /// <param name="name">
                /// Required. Full resource name of Evaluation, such as
                /// `projects/{project}/locations/{location}/evaluations/{evaluation}`. If the caller does not have
                /// permission to access the Evaluation, regardless of whether or not it exists, a PERMISSION_DENIED
                /// error is returned. If the requested Evaluation does not exist, a NOT_FOUND error is returned.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Gets a Evaluation.</summary>
                public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaEvaluation>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Full resource name of Evaluation, such as
                    /// `projects/{project}/locations/{location}/evaluations/{evaluation}`. If the caller does not have
                    /// permission to access the Evaluation, regardless of whether or not it exists, a PERMISSION_DENIED
                    /// error is returned. If the requested Evaluation does not exist, a NOT_FOUND error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/evaluations/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets a list of Evaluations.</summary>
                /// <param name="parent">
                /// Required. The parent location resource name, such as `projects/{project}/locations/{location}`. If
                /// the caller does not have permission to list Evaluations under this location, regardless of whether
                /// or not this location exists, a `PERMISSION_DENIED` error is returned.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Gets a list of Evaluations.</summary>
                public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListEvaluationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent location resource name, such as `projects/{project}/locations/{location}`.
                    /// If the caller does not have permission to list Evaluations under this location, regardless of
                    /// whether or not this location exists, a `PERMISSION_DENIED` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Maximum number of Evaluations to return. If unspecified, defaults to 100. The maximum allowed
                    /// value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an
                    /// `INVALID_ARGUMENT` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>
                    /// A page token ListEvaluationsResponse.next_page_token, received from a previous
                    /// EvaluationService.ListEvaluations call. Provide this to retrieve the subsequent page. When
                    /// paginating, all other parameters provided to EvaluationService.ListEvaluations must match the
                    /// call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/evaluations";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Gets a list of results for a given a Evaluation.</summary>
                /// <param name="evaluation">
                /// Required. The evaluation resource name, such as
                /// `projects/{project}/locations/{location}/evaluations/{evaluation}`. If the caller does not have
                /// permission to list ListEvaluationResultsResponse.EvaluationResult under this evaluation, regardless
                /// of whether or not this evaluation set exists, a `PERMISSION_DENIED` error is returned.
                /// </param>
                public virtual ListResultsRequest ListResults(string evaluation)
                {
                    return new ListResultsRequest(this.service, evaluation);
                }

                /// <summary>Gets a list of results for a given a Evaluation.</summary>
                public class ListResultsRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListEvaluationResultsResponse>
                {
                    /// <summary>Constructs a new ListResults request.</summary>
                    public ListResultsRequest(Google.Apis.Services.IClientService service, string evaluation) : base(service)
                    {
                        Evaluation = evaluation;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The evaluation resource name, such as
                    /// `projects/{project}/locations/{location}/evaluations/{evaluation}`. If the caller does not have
                    /// permission to list ListEvaluationResultsResponse.EvaluationResult under this evaluation,
                    /// regardless of whether or not this evaluation set exists, a `PERMISSION_DENIED` error is
                    /// returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("evaluation", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Evaluation { get; private set; }

                    /// <summary>
                    /// Maximum number of ListEvaluationResultsResponse.EvaluationResult to return. If unspecified,
                    /// defaults to 100. The maximum allowed value is 1000. Values above 1000 will be coerced to 1000.
                    /// If this field is negative, an `INVALID_ARGUMENT` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>
                    /// A page token ListEvaluationResultsResponse.next_page_token, received from a previous
                    /// EvaluationService.ListEvaluationResults call. Provide this to retrieve the subsequent page. When
                    /// paginating, all other parameters provided to EvaluationService.ListEvaluationResults must match
                    /// the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "listResults";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+evaluation}:listResults";

                    /// <summary>Initializes ListResults parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("evaluation", new Google.Apis.Discovery.Parameter
                        {
                            Name = "evaluation",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/evaluations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the GroundingConfigs resource.</summary>
            public virtual GroundingConfigsResource GroundingConfigs { get; }

            /// <summary>The "groundingConfigs" collection of methods.</summary>
            public class GroundingConfigsResource
            {
                private const string Resource = "groundingConfigs";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public GroundingConfigsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>Performs a grounding check.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="groundingConfig">
                /// Required. The resource name of the grounding config, such as
                /// `projects/*/locations/global/groundingConfigs/default_grounding_config`.
                /// </param>
                public virtual CheckRequest Check(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaCheckGroundingRequest body, string groundingConfig)
                {
                    return new CheckRequest(this.service, body, groundingConfig);
                }

                /// <summary>Performs a grounding check.</summary>
                public class CheckRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaCheckGroundingResponse>
                {
                    /// <summary>Constructs a new Check request.</summary>
                    public CheckRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaCheckGroundingRequest body, string groundingConfig) : base(service)
                    {
                        GroundingConfig = groundingConfig;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The resource name of the grounding config, such as
                    /// `projects/*/locations/global/groundingConfigs/default_grounding_config`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("groundingConfig", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string GroundingConfig { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaCheckGroundingRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "check";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+groundingConfig}:check";

                    /// <summary>Initializes Check parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("groundingConfig", new Google.Apis.Discovery.Parameter
                        {
                            Name = "groundingConfig",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/groundingConfigs/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Gets the IdentityMappingStores resource.</summary>
            public virtual IdentityMappingStoresResource IdentityMappingStores { get; }

            /// <summary>The "identityMappingStores" collection of methods.</summary>
            public class IdentityMappingStoresResource
            {
                private const string Resource = "identityMappingStores";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public IdentityMappingStoresResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Operations = new OperationsResource(service);
                }

                /// <summary>Gets the Operations resource.</summary>
                public virtual OperationsResource Operations { get; }

                /// <summary>The "operations" collection of methods.</summary>
                public class OperationsResource
                {
                    private const string Resource = "operations";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public OperationsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    /// <param name="name">The name of the operation resource.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/identityMappingStores/[^/]+/operations/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Lists operations that match the specified filter in the request. If the server doesn't support
                    /// this method, it returns `UNIMPLEMENTED`.
                    /// </summary>
                    /// <param name="name">The name of the operation's parent resource.</param>
                    public virtual ListRequest List(string name)
                    {
                        return new ListRequest(this.service, name);
                    }

                    /// <summary>
                    /// Lists operations that match the specified filter in the request. If the server doesn't support
                    /// this method, it returns `UNIMPLEMENTED`.
                    /// </summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation's parent resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>The standard list filter.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string Filter { get; set; }

                        /// <summary>The standard list page size.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>The standard list page token.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}/operations";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/identityMappingStores/[^/]+$",
                            });
                            RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                            {
                                Name = "filter",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Creates a new Identity Mapping Store.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The parent collection resource name, such as `projects/{project}/locations/{location}`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaIdentityMappingStore body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>Creates a new Identity Mapping Store.</summary>
                public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaIdentityMappingStore>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaIdentityMappingStore body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent collection resource name, such as
                    /// `projects/{project}/locations/{location}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Resource name of the CmekConfig to use for protecting this Identity Mapping Store.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("cmekConfigName", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string CmekConfigName { get; set; }

                    /// <summary>
                    /// Identity Mapping Store without CMEK protections. If a default CmekConfig is set for the project,
                    /// setting this field will override the default CmekConfig as well.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("disableCmek", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> DisableCmek { get; set; }

                    /// <summary>
                    /// Required. The ID of the Identity Mapping Store to create. The ID must contain only letters (a-z,
                    /// A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 63 characters.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("identityMappingStoreId", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string IdentityMappingStoreId { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaIdentityMappingStore Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/identityMappingStores";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("cmekConfigName", new Google.Apis.Discovery.Parameter
                        {
                            Name = "cmekConfigName",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("disableCmek", new Google.Apis.Discovery.Parameter
                        {
                            Name = "disableCmek",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("identityMappingStoreId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "identityMappingStoreId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Deletes the Identity Mapping Store.</summary>
                /// <param name="name">
                /// Required. The name of the Identity Mapping Store to delete. Format:
                /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Deletes the Identity Mapping Store.</summary>
                public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the Identity Mapping Store to delete. Format:
                    /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/identityMappingStores/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets the Identity Mapping Store.</summary>
                /// <param name="name">
                /// Required. The name of the Identity Mapping Store to get. Format:
                /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Gets the Identity Mapping Store.</summary>
                public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaIdentityMappingStore>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the Identity Mapping Store to get. Format:
                    /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/identityMappingStores/[^/]+$",
                        });
                    }
                }

                /// <summary>Imports a list of Identity Mapping Entries to an Identity Mapping Store.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="identityMappingStore">
                /// Required. The name of the Identity Mapping Store to import Identity Mapping Entries to. Format:
                /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                /// </param>
                public virtual ImportIdentityMappingsRequest ImportIdentityMappings(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequest body, string identityMappingStore)
                {
                    return new ImportIdentityMappingsRequest(this.service, body, identityMappingStore);
                }

                /// <summary>Imports a list of Identity Mapping Entries to an Identity Mapping Store.</summary>
                public class ImportIdentityMappingsRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new ImportIdentityMappings request.</summary>
                    public ImportIdentityMappingsRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequest body, string identityMappingStore) : base(service)
                    {
                        IdentityMappingStore = identityMappingStore;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the Identity Mapping Store to import Identity Mapping Entries to. Format:
                    /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("identityMappingStore", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string IdentityMappingStore { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "importIdentityMappings";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+identityMappingStore}:importIdentityMappings";

                    /// <summary>Initializes ImportIdentityMappings parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("identityMappingStore", new Google.Apis.Discovery.Parameter
                        {
                            Name = "identityMappingStore",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/identityMappingStores/[^/]+$",
                        });
                    }
                }

                /// <summary>Lists all Identity Mapping Stores.</summary>
                /// <param name="parent">
                /// Required. The parent of the Identity Mapping Stores to list. Format:
                /// `projects/{project}/locations/{location}`.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Lists all Identity Mapping Stores.</summary>
                public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListIdentityMappingStoresResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent of the Identity Mapping Stores to list. Format:
                    /// `projects/{project}/locations/{location}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Maximum number of IdentityMappingStores to return. If unspecified, defaults to 100. The maximum
                    /// allowed value is 1000. Values above 1000 will be coerced to 1000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>
                    /// A page token, received from a previous `ListIdentityMappingStores` call. Provide this to
                    /// retrieve the subsequent page. When paginating, all other parameters provided to
                    /// `ListIdentityMappingStores` must match the call that provided the page token.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/identityMappingStores";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Lists Identity Mappings in an Identity Mapping Store.</summary>
                /// <param name="identityMappingStore">
                /// Required. The name of the Identity Mapping Store to list Identity Mapping Entries in. Format:
                /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                /// </param>
                public virtual ListIdentityMappingsRequest ListIdentityMappings(string identityMappingStore)
                {
                    return new ListIdentityMappingsRequest(this.service, identityMappingStore);
                }

                /// <summary>Lists Identity Mappings in an Identity Mapping Store.</summary>
                public class ListIdentityMappingsRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListIdentityMappingsResponse>
                {
                    /// <summary>Constructs a new ListIdentityMappings request.</summary>
                    public ListIdentityMappingsRequest(Google.Apis.Services.IClientService service, string identityMappingStore) : base(service)
                    {
                        IdentityMappingStore = identityMappingStore;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the Identity Mapping Store to list Identity Mapping Entries in. Format:
                    /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("identityMappingStore", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string IdentityMappingStore { get; private set; }

                    /// <summary>
                    /// Maximum number of IdentityMappings to return. If unspecified, defaults to 2000. The maximum
                    /// allowed value is 10000. Values above 10000 will be coerced to 10000.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>
                    /// A page token, received from a previous `ListIdentityMappings` call. Provide this to retrieve the
                    /// subsequent page. When paginating, all other parameters provided to `ListIdentityMappings` must
                    /// match the call that provided the page token.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "listIdentityMappings";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+identityMappingStore}:listIdentityMappings";

                    /// <summary>Initializes ListIdentityMappings parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("identityMappingStore", new Google.Apis.Discovery.Parameter
                        {
                            Name = "identityMappingStore",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/identityMappingStores/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Purges specified or all Identity Mapping Entries from an Identity Mapping Store.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="identityMappingStore">
                /// Required. The name of the Identity Mapping Store to purge Identity Mapping Entries from. Format:
                /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                /// </param>
                public virtual PurgeIdentityMappingsRequest PurgeIdentityMappings(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequest body, string identityMappingStore)
                {
                    return new PurgeIdentityMappingsRequest(this.service, body, identityMappingStore);
                }

                /// <summary>Purges specified or all Identity Mapping Entries from an Identity Mapping Store.</summary>
                public class PurgeIdentityMappingsRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new PurgeIdentityMappings request.</summary>
                    public PurgeIdentityMappingsRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequest body, string identityMappingStore) : base(service)
                    {
                        IdentityMappingStore = identityMappingStore;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The name of the Identity Mapping Store to purge Identity Mapping Entries from. Format:
                    /// `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("identityMappingStore", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string IdentityMappingStore { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "purgeIdentityMappings";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+identityMappingStore}:purgeIdentityMappings";

                    /// <summary>Initializes PurgeIdentityMappings parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("identityMappingStore", new Google.Apis.Discovery.Parameter
                        {
                            Name = "identityMappingStore",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/identityMappingStores/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Gets the Operations resource.</summary>
            public virtual OperationsResource Operations { get; }

            /// <summary>The "operations" collection of methods.</summary>
            public class OperationsResource
            {
                private const string Resource = "operations";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public OperationsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Gets the latest state of a long-running operation. Clients can use this method to poll the operation
                /// result at intervals as recommended by the API service.
                /// </summary>
                /// <param name="name">The name of the operation resource.</param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>
                /// Gets the latest state of a long-running operation. Clients can use this method to poll the operation
                /// result at intervals as recommended by the API service.
                /// </summary>
                public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>The name of the operation resource.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                        });
                    }
                }

                /// <summary>
                /// Lists operations that match the specified filter in the request. If the server doesn't support this
                /// method, it returns `UNIMPLEMENTED`.
                /// </summary>
                /// <param name="name">The name of the operation's parent resource.</param>
                public virtual ListRequest List(string name)
                {
                    return new ListRequest(this.service, name);
                }

                /// <summary>
                /// Lists operations that match the specified filter in the request. If the server doesn't support this
                /// method, it returns `UNIMPLEMENTED`.
                /// </summary>
                public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>The name of the operation's parent resource.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>The standard list filter.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Filter { get; set; }

                    /// <summary>The standard list page size.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>The standard list page token.</summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}/operations";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                        {
                            Name = "filter",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the RankingConfigs resource.</summary>
            public virtual RankingConfigsResource RankingConfigs { get; }

            /// <summary>The "rankingConfigs" collection of methods.</summary>
            public class RankingConfigsResource
            {
                private const string Resource = "rankingConfigs";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public RankingConfigsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>Ranks a list of text records based on the given input query.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="rankingConfig">
                /// Required. The resource name of the rank service config, such as
                /// `projects/{project_num}/locations/{location}/rankingConfigs/default_ranking_config`.
                /// </param>
                public virtual RankRequest Rank(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRankRequest body, string rankingConfig)
                {
                    return new RankRequest(this.service, body, rankingConfig);
                }

                /// <summary>Ranks a list of text records based on the given input query.</summary>
                public class RankRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRankResponse>
                {
                    /// <summary>Constructs a new Rank request.</summary>
                    public RankRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRankRequest body, string rankingConfig) : base(service)
                    {
                        RankingConfig = rankingConfig;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The resource name of the rank service config, such as
                    /// `projects/{project_num}/locations/{location}/rankingConfigs/default_ranking_config`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("rankingConfig", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string RankingConfig { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRankRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "rank";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+rankingConfig}:rank";

                    /// <summary>Initializes Rank parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("rankingConfig", new Google.Apis.Discovery.Parameter
                        {
                            Name = "rankingConfig",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/rankingConfigs/[^/]+$",
                        });
                    }
                }
            }

            /// <summary>Gets the SampleQuerySets resource.</summary>
            public virtual SampleQuerySetsResource SampleQuerySets { get; }

            /// <summary>The "sampleQuerySets" collection of methods.</summary>
            public class SampleQuerySetsResource
            {
                private const string Resource = "sampleQuerySets";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public SampleQuerySetsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                    Operations = new OperationsResource(service);
                    SampleQueries = new SampleQueriesResource(service);
                }

                /// <summary>Gets the Operations resource.</summary>
                public virtual OperationsResource Operations { get; }

                /// <summary>The "operations" collection of methods.</summary>
                public class OperationsResource
                {
                    private const string Resource = "operations";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public OperationsResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    /// <param name="name">The name of the operation resource.</param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>
                    /// Gets the latest state of a long-running operation. Clients can use this method to poll the
                    /// operation result at intervals as recommended by the API service.
                    /// </summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>The name of the operation resource.</summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+/operations/[^/]+$",
                            });
                        }
                    }
                }

                /// <summary>Gets the SampleQueries resource.</summary>
                public virtual SampleQueriesResource SampleQueries { get; }

                /// <summary>The "sampleQueries" collection of methods.</summary>
                public class SampleQueriesResource
                {
                    private const string Resource = "sampleQueries";

                    /// <summary>The service which this resource belongs to.</summary>
                    private readonly Google.Apis.Services.IClientService service;

                    /// <summary>Constructs a new resource.</summary>
                    public SampleQueriesResource(Google.Apis.Services.IClientService service)
                    {
                        this.service = service;
                    }

                    /// <summary>Creates a SampleQuery</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent resource name, such as
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
                    /// </param>
                    public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery body, string parent)
                    {
                        return new CreateRequest(this.service, body, parent);
                    }

                    /// <summary>Creates a SampleQuery</summary>
                    public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery>
                    {
                        /// <summary>Constructs a new Create request.</summary>
                        public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent resource name, such as
                        /// `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Required. The ID to use for the SampleQuery, which will become the final component of the
                        /// SampleQuery.name. If the caller does not have permission to create the SampleQuery,
                        /// regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field
                        /// must be unique among all SampleQuerys with the same parent. Otherwise, an `ALREADY_EXISTS`
                        /// error is returned. This field must conform to
                        /// [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63
                        /// characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("sampleQueryId", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string SampleQueryId { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "create";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/sampleQueries";

                        /// <summary>Initializes Create parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+$",
                            });
                            RequestParameters.Add("sampleQueryId", new Google.Apis.Discovery.Parameter
                            {
                                Name = "sampleQueryId",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Deletes a SampleQuery.</summary>
                    /// <param name="name">
                    /// Required. Full resource name of SampleQuery, such as
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
                    /// If the caller does not have permission to delete the SampleQuery, regardless of whether or not
                    /// it exists, a `PERMISSION_DENIED` error is returned. If the SampleQuery to delete does not exist,
                    /// a `NOT_FOUND` error is returned.
                    /// </param>
                    public virtual DeleteRequest Delete(string name)
                    {
                        return new DeleteRequest(this.service, name);
                    }

                    /// <summary>Deletes a SampleQuery.</summary>
                    public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                    {
                        /// <summary>Constructs a new Delete request.</summary>
                        public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of SampleQuery, such as
                        /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
                        /// If the caller does not have permission to delete the SampleQuery, regardless of whether or
                        /// not it exists, a `PERMISSION_DENIED` error is returned. If the SampleQuery to delete does
                        /// not exist, a `NOT_FOUND` error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "delete";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "DELETE";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Delete parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+/sampleQueries/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a SampleQuery.</summary>
                    /// <param name="name">
                    /// Required. Full resource name of SampleQuery, such as
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
                    /// If the caller does not have permission to access the SampleQuery, regardless of whether or not
                    /// it exists, a PERMISSION_DENIED error is returned. If the requested SampleQuery does not exist, a
                    /// NOT_FOUND error is returned.
                    /// </param>
                    public virtual GetRequest Get(string name)
                    {
                        return new GetRequest(this.service, name);
                    }

                    /// <summary>Gets a SampleQuery.</summary>
                    public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery>
                    {
                        /// <summary>Constructs a new Get request.</summary>
                        public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                        {
                            Name = name;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. Full resource name of SampleQuery, such as
                        /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
                        /// If the caller does not have permission to access the SampleQuery, regardless of whether or
                        /// not it exists, a PERMISSION_DENIED error is returned. If the requested SampleQuery does not
                        /// exist, a NOT_FOUND error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "get";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Get parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+/sampleQueries/[^/]+$",
                            });
                        }
                    }

                    /// <summary>
                    /// Bulk import of multiple SampleQuerys. Sample queries that already exist may be deleted. Note: It
                    /// is possible for a subset of the SampleQuerys to be successfully imported.
                    /// </summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="parent">
                    /// Required. The parent sample query set resource name, such as
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. If the caller does
                    /// not have permission to list SampleQuerys under this sample query set, regardless of whether or
                    /// not this sample query set exists, a `PERMISSION_DENIED` error is returned.
                    /// </param>
                    public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequest body, string parent)
                    {
                        return new ImportRequest(this.service, body, parent);
                    }

                    /// <summary>
                    /// Bulk import of multiple SampleQuerys. Sample queries that already exist may be deleted. Note: It
                    /// is possible for a subset of the SampleQuerys to be successfully imported.
                    /// </summary>
                    public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                    {
                        /// <summary>Constructs a new Import request.</summary>
                        public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequest body, string parent) : base(service)
                        {
                            Parent = parent;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent sample query set resource name, such as
                        /// `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. If the caller
                        /// does not have permission to list SampleQuerys under this sample query set, regardless of
                        /// whether or not this sample query set exists, a `PERMISSION_DENIED` error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequest Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "import";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "POST";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/sampleQueries:import";

                        /// <summary>Initializes Import parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+$",
                            });
                        }
                    }

                    /// <summary>Gets a list of SampleQuerys.</summary>
                    /// <param name="parent">
                    /// Required. The parent sample query set resource name, such as
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. If the caller does
                    /// not have permission to list SampleQuerys under this sample query set, regardless of whether or
                    /// not this sample query set exists, a `PERMISSION_DENIED` error is returned.
                    /// </param>
                    public virtual ListRequest List(string parent)
                    {
                        return new ListRequest(this.service, parent);
                    }

                    /// <summary>Gets a list of SampleQuerys.</summary>
                    public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListSampleQueriesResponse>
                    {
                        /// <summary>Constructs a new List request.</summary>
                        public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                        {
                            Parent = parent;
                            InitParameters();
                        }

                        /// <summary>
                        /// Required. The parent sample query set resource name, such as
                        /// `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`. If the caller
                        /// does not have permission to list SampleQuerys under this sample query set, regardless of
                        /// whether or not this sample query set exists, a `PERMISSION_DENIED` error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Parent { get; private set; }

                        /// <summary>
                        /// Maximum number of SampleQuerys to return. If unspecified, defaults to 100. The maximum
                        /// allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative,
                        /// an `INVALID_ARGUMENT` error is returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual System.Nullable<int> PageSize { get; set; }

                        /// <summary>
                        /// A page token ListSampleQueriesResponse.next_page_token, received from a previous
                        /// SampleQueryService.ListSampleQueries call. Provide this to retrieve the subsequent page.
                        /// When paginating, all other parameters provided to SampleQueryService.ListSampleQueries must
                        /// match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is
                        /// returned.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual string PageToken { get; set; }

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "list";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "GET";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+parent}/sampleQueries";

                        /// <summary>Initializes List parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+$",
                            });
                            RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageSize",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                            RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                            {
                                Name = "pageToken",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }

                    /// <summary>Updates a SampleQuery.</summary>
                    /// <param name="body">The body of the request.</param>
                    /// <param name="name">
                    /// Identifier. The full resource name of the sample query, in the format of
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
                    /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                    /// </param>
                    public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery body, string name)
                    {
                        return new PatchRequest(this.service, body, name);
                    }

                    /// <summary>Updates a SampleQuery.</summary>
                    public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery>
                    {
                        /// <summary>Constructs a new Patch request.</summary>
                        public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery body, string name) : base(service)
                        {
                            Name = name;
                            Body = body;
                            InitParameters();
                        }

                        /// <summary>
                        /// Identifier. The full resource name of the sample query, in the format of
                        /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
                        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                        public virtual string Name { get; private set; }

                        /// <summary>
                        /// Indicates which fields in the provided imported 'simple query' to update. If not set, will
                        /// by default update all fields.
                        /// </summary>
                        [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                        public virtual object UpdateMask { get; set; }

                        /// <summary>Gets or sets the body of this request.</summary>
                        Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuery Body { get; set; }

                        /// <summary>Returns the body of the request.</summary>
                        protected override object GetBody() => Body;

                        /// <summary>Gets the method name.</summary>
                        public override string MethodName => "patch";

                        /// <summary>Gets the HTTP method.</summary>
                        public override string HttpMethod => "PATCH";

                        /// <summary>Gets the REST path.</summary>
                        public override string RestPath => "v1beta/{+name}";

                        /// <summary>Initializes Patch parameter list.</summary>
                        protected override void InitParameters()
                        {
                            base.InitParameters();
                            RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+/sampleQueries/[^/]+$",
                            });
                            RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                            {
                                Name = "updateMask",
                                IsRequired = false,
                                ParameterType = "query",
                                DefaultValue = null,
                                Pattern = null,
                            });
                        }
                    }
                }

                /// <summary>Creates a SampleQuerySet</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The parent resource name, such as `projects/{project}/locations/{location}`.
                /// </param>
                public virtual CreateRequest Create(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet body, string parent)
                {
                    return new CreateRequest(this.service, body, parent);
                }

                /// <summary>Creates a SampleQuerySet</summary>
                public class CreateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent resource name, such as `projects/{project}/locations/{location}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Required. The ID to use for the SampleQuerySet, which will become the final component of the
                    /// SampleQuerySet.name. If the caller does not have permission to create the SampleQuerySet,
                    /// regardless of whether or not it exists, a `PERMISSION_DENIED` error is returned. This field must
                    /// be unique among all SampleQuerySets with the same parent. Otherwise, an `ALREADY_EXISTS` error
                    /// is returned. This field must conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard
                    /// with a length limit of 63 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("sampleQuerySetId", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string SampleQuerySetId { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "create";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/sampleQuerySets";

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("sampleQuerySetId", new Google.Apis.Discovery.Parameter
                        {
                            Name = "sampleQuerySetId",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Deletes a SampleQuerySet.</summary>
                /// <param name="name">
                /// Required. Full resource name of SampleQuerySet, such as
                /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. If the caller does not
                /// have permission to delete the SampleQuerySet, regardless of whether or not it exists, a
                /// `PERMISSION_DENIED` error is returned. If the SampleQuerySet to delete does not exist, a `NOT_FOUND`
                /// error is returned.
                /// </param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(this.service, name);
                }

                /// <summary>Deletes a SampleQuerySet.</summary>
                public class DeleteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleProtobufEmpty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Full resource name of SampleQuerySet, such as
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. If the caller does
                    /// not have permission to delete the SampleQuerySet, regardless of whether or not it exists, a
                    /// `PERMISSION_DENIED` error is returned. If the SampleQuerySet to delete does not exist, a
                    /// `NOT_FOUND` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "delete";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "DELETE";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets a SampleQuerySet.</summary>
                /// <param name="name">
                /// Required. Full resource name of SampleQuerySet, such as
                /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. If the caller does not
                /// have permission to access the SampleQuerySet, regardless of whether or not it exists, a
                /// PERMISSION_DENIED error is returned. If the requested SampleQuerySet does not exist, a NOT_FOUND
                /// error is returned.
                /// </param>
                public virtual GetRequest Get(string name)
                {
                    return new GetRequest(this.service, name);
                }

                /// <summary>Gets a SampleQuerySet.</summary>
                public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet>
                {
                    /// <summary>Constructs a new Get request.</summary>
                    public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Full resource name of SampleQuerySet, such as
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. If the caller does
                    /// not have permission to access the SampleQuerySet, regardless of whether or not it exists, a
                    /// PERMISSION_DENIED error is returned. If the requested SampleQuerySet does not exist, a NOT_FOUND
                    /// error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "get";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Get parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+$",
                        });
                    }
                }

                /// <summary>Gets a list of SampleQuerySets.</summary>
                /// <param name="parent">
                /// Required. The parent location resource name, such as `projects/{project}/locations/{location}`. If
                /// the caller does not have permission to list SampleQuerySets under this location, regardless of
                /// whether or not this location exists, a `PERMISSION_DENIED` error is returned.
                /// </param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(this.service, parent);
                }

                /// <summary>Gets a list of SampleQuerySets.</summary>
                public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaListSampleQuerySetsResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent location resource name, such as `projects/{project}/locations/{location}`.
                    /// If the caller does not have permission to list SampleQuerySets under this location, regardless
                    /// of whether or not this location exists, a `PERMISSION_DENIED` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// Maximum number of SampleQuerySets to return. If unspecified, defaults to 100. The maximum
                    /// allowed value is 1000. Values above 1000 will be coerced to 1000. If this field is negative, an
                    /// `INVALID_ARGUMENT` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<int> PageSize { get; set; }

                    /// <summary>
                    /// A page token ListSampleQuerySetsResponse.next_page_token, received from a previous
                    /// SampleQuerySetService.ListSampleQuerySets call. Provide this to retrieve the subsequent page.
                    /// When paginating, all other parameters provided to SampleQuerySetService.ListSampleQuerySets must
                    /// match the call that provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string PageToken { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "list";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/sampleQuerySets";

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>Updates a SampleQuerySet.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="name">
                /// Identifier. The full resource name of the SampleQuerySet, in the format of
                /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. This field must be a
                /// UTF-8 encoded string with a length limit of 1024 characters.
                /// </param>
                public virtual PatchRequest Patch(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet body, string name)
                {
                    return new PatchRequest(this.service, body, name);
                }

                /// <summary>Updates a SampleQuerySet.</summary>
                public class PatchRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet>
                {
                    /// <summary>Constructs a new Patch request.</summary>
                    public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet body, string name) : base(service)
                    {
                        Name = name;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Identifier. The full resource name of the SampleQuerySet, in the format of
                    /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. This field must be
                    /// a UTF-8 encoded string with a length limit of 1024 characters.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }

                    /// <summary>
                    /// Indicates which fields in the provided imported 'sample query set' to update. If not set, will
                    /// by default update all fields.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual object UpdateMask { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSampleQuerySet Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "patch";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "PATCH";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+name}";

                    /// <summary>Initializes Patch parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+/sampleQuerySets/[^/]+$",
                        });
                        RequestParameters.Add("updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Gets the UserEvents resource.</summary>
            public virtual UserEventsResource UserEvents { get; }

            /// <summary>The "userEvents" collection of methods.</summary>
            public class UserEventsResource
            {
                private const string Resource = "userEvents";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public UserEventsResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;
                }

                /// <summary>
                /// Writes a single user event from the browser. This uses a GET request to due to browser restriction
                /// of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript
                /// pixel and Google Tag Manager. Users should not call this method directly.
                /// </summary>
                /// <param name="parent">
                /// Required. The parent resource name. If the collect user event action is applied in DataStore level,
                /// the format is:
                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the
                /// collect user event action is applied in Location level, for example, the event with Document across
                /// multiple DataStore, the format is: `projects/{project}/locations/{location}`.
                /// </param>
                public virtual CollectRequest Collect(string parent)
                {
                    return new CollectRequest(this.service, parent);
                }

                /// <summary>
                /// Writes a single user event from the browser. This uses a GET request to due to browser restriction
                /// of POST-ing to a third-party domain. This method is used only by the Discovery Engine API JavaScript
                /// pixel and Google Tag Manager. Users should not call this method directly.
                /// </summary>
                public class CollectRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleApiHttpBody>
                {
                    /// <summary>Constructs a new Collect request.</summary>
                    public CollectRequest(Google.Apis.Services.IClientService service, string parent) : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent resource name. If the collect user event action is applied in DataStore
                    /// level, the format is:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If
                    /// the collect user event action is applied in Location level, for example, the event with Document
                    /// across multiple DataStore, the format is: `projects/{project}/locations/{location}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// The event timestamp in milliseconds. This prevents browser caching of otherwise identical get
                    /// requests. The name is abbreviated to reduce the payload bytes.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("ets", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<long> Ets { get; set; }

                    /// <summary>
                    /// The URL including cgi-parameters but excluding the hash fragment with a length limit of 5,000
                    /// characters. This is often more useful than the referer URL, because many browsers only send the
                    /// domain for third-party requests.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("uri", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string Uri { get; set; }

                    /// <summary>
                    /// Required. URL encoded UserEvent proto with a length limit of 2,000,000 characters.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("userEvent", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual string UserEvent { get; set; }

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "collect";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "GET";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/userEvents:collect";

                    /// <summary>Initializes Collect parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("ets", new Google.Apis.Discovery.Parameter
                        {
                            Name = "ets",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("uri", new Google.Apis.Discovery.Parameter
                        {
                            Name = "uri",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                        RequestParameters.Add("userEvent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "userEvent",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }

                /// <summary>
                /// Bulk import of user events. Request processing might be synchronous. Events that already exist are
                /// skipped. Use this method for backfilling historical user events. Operation.response is of type
                /// ImportResponse. Note that it is possible for a subset of the items to be successfully inserted.
                /// Operation.metadata is of type ImportMetadata.
                /// </summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. Parent DataStore resource name, of the form
                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
                /// </param>
                public virtual ImportRequest Import(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest body, string parent)
                {
                    return new ImportRequest(this.service, body, parent);
                }

                /// <summary>
                /// Bulk import of user events. Request processing might be synchronous. Events that already exist are
                /// skipped. Use this method for backfilling historical user events. Operation.response is of type
                /// ImportResponse. Note that it is possible for a subset of the items to be successfully inserted.
                /// Operation.metadata is of type ImportMetadata.
                /// </summary>
                public class ImportRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
                {
                    /// <summary>Constructs a new Import request.</summary>
                    public ImportRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. Parent DataStore resource name, of the form
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaImportUserEventsRequest Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "import";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/userEvents:import";

                    /// <summary>Initializes Import parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                    }
                }

                /// <summary>Writes a single user event.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">
                /// Required. The parent resource name. If the write user event action is applied in DataStore level,
                /// the format is:
                /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If the
                /// write user event action is applied in Location level, for example, the event with Document across
                /// multiple DataStore, the format is: `projects/{project}/locations/{location}`.
                /// </param>
                public virtual WriteRequest Write(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent body, string parent)
                {
                    return new WriteRequest(this.service, body, parent);
                }

                /// <summary>Writes a single user event.</summary>
                public class WriteRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent>
                {
                    /// <summary>Constructs a new Write request.</summary>
                    public WriteRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent body, string parent) : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }

                    /// <summary>
                    /// Required. The parent resource name. If the write user event action is applied in DataStore
                    /// level, the format is:
                    /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`. If
                    /// the write user event action is applied in Location level, for example, the event with Document
                    /// across multiple DataStore, the format is: `projects/{project}/locations/{location}`.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }

                    /// <summary>
                    /// If set to true, the user event is written asynchronously after validation, and the API responds
                    /// without waiting for the write.
                    /// </summary>
                    [Google.Apis.Util.RequestParameterAttribute("writeAsync", Google.Apis.Util.RequestParameterType.Query)]
                    public virtual System.Nullable<bool> WriteAsync { get; set; }

                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaUserEvent Body { get; set; }

                    /// <summary>Returns the body of the request.</summary>
                    protected override object GetBody() => Body;

                    /// <summary>Gets the method name.</summary>
                    public override string MethodName => "write";

                    /// <summary>Gets the HTTP method.</summary>
                    public override string HttpMethod => "POST";

                    /// <summary>Gets the REST path.</summary>
                    public override string RestPath => "v1beta/{+parent}/userEvents:write";

                    /// <summary>Initializes Write parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();
                        RequestParameters.Add("parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/locations/[^/]+$",
                        });
                        RequestParameters.Add("writeAsync", new Google.Apis.Discovery.Parameter
                        {
                            Name = "writeAsync",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    }
                }
            }

            /// <summary>Generates grounded content.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="location">
            /// Required. Location resource. Format: `projects/{project}/locations/{location}`.
            /// </param>
            public virtual GenerateGroundedContentRequest GenerateGroundedContent(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequest body, string location)
            {
                return new GenerateGroundedContentRequest(this.service, body, location);
            }

            /// <summary>Generates grounded content.</summary>
            public class GenerateGroundedContentRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponse>
            {
                /// <summary>Constructs a new GenerateGroundedContent request.</summary>
                public GenerateGroundedContentRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequest body, string location) : base(service)
                {
                    Location = location;
                    Body = body;
                    InitParameters();
                }

                /// <summary>Required. Location resource. Format: `projects/{project}/locations/{location}`.</summary>
                [Google.Apis.Util.RequestParameterAttribute("location", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Location { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "generateGroundedContent";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v1beta/{+location}:generateGroundedContent";

                /// <summary>Initializes GenerateGroundedContent parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("location", new Google.Apis.Discovery.Parameter
                    {
                        Name = "location",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Obtains the time series data of organic or dedicated crawl rate for monitoring. When dedicated crawl
            /// rate is not set, it will return vertex AI's organic crawl rate time series. Organic crawl means Google
            /// automatically crawl the internet at its own convenience. When dedicated crawl rate is set, it will
            /// return vertex AI's dedicated crawl rate time series.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="location">
            /// Required. The location resource where crawl rate management will be performed. Format:
            /// `projects/{project}/locations/{location}`
            /// </param>
            public virtual ObtainCrawlRateRequest ObtainCrawlRate(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaObtainCrawlRateRequest body, string location)
            {
                return new ObtainCrawlRateRequest(this.service, body, location);
            }

            /// <summary>
            /// Obtains the time series data of organic or dedicated crawl rate for monitoring. When dedicated crawl
            /// rate is not set, it will return vertex AI's organic crawl rate time series. Organic crawl means Google
            /// automatically crawl the internet at its own convenience. When dedicated crawl rate is set, it will
            /// return vertex AI's dedicated crawl rate time series.
            /// </summary>
            public class ObtainCrawlRateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse>
            {
                /// <summary>Constructs a new ObtainCrawlRate request.</summary>
                public ObtainCrawlRateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaObtainCrawlRateRequest body, string location) : base(service)
                {
                    Location = location;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The location resource where crawl rate management will be performed. Format:
                /// `projects/{project}/locations/{location}`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("location", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Location { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaObtainCrawlRateRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "obtainCrawlRate";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v1beta/{+location}:obtainCrawlRate";

                /// <summary>Initializes ObtainCrawlRate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("location", new Google.Apis.Discovery.Parameter
                    {
                        Name = "location",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Removes the dedicated crawl rate for a craw_rate_scope. If the dedicated crawl rate was set, this will
            /// disable vertex AI's crawl bot from using the dedicated crawl rate for crawling. If the dedicated crawl
            /// rate was not set, this is a no-op.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="location">
            /// Required. The location resource where crawl rate management will be performed. Format:
            /// `projects/{project}/locations/{location}`
            /// </param>
            public virtual RemoveDedicatedCrawlRateRequest RemoveDedicatedCrawlRate(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateRequest body, string location)
            {
                return new RemoveDedicatedCrawlRateRequest(this.service, body, location);
            }

            /// <summary>
            /// Removes the dedicated crawl rate for a craw_rate_scope. If the dedicated crawl rate was set, this will
            /// disable vertex AI's crawl bot from using the dedicated crawl rate for crawling. If the dedicated crawl
            /// rate was not set, this is a no-op.
            /// </summary>
            public class RemoveDedicatedCrawlRateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new RemoveDedicatedCrawlRate request.</summary>
                public RemoveDedicatedCrawlRateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateRequest body, string location) : base(service)
                {
                    Location = location;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The location resource where crawl rate management will be performed. Format:
                /// `projects/{project}/locations/{location}`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("location", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Location { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "removeDedicatedCrawlRate";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v1beta/{+location}:removeDedicatedCrawlRate";

                /// <summary>Initializes RemoveDedicatedCrawlRate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("location", new Google.Apis.Discovery.Parameter
                    {
                        Name = "location",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Sets the dedicated crawl rate for a crawl_rate_scope. If the dedicated crawl rate was not set, this will
            /// enable vertex AI's crawl bot to use the new dedicated crawl rate for crawling. If the dedicated crawl
            /// rate was set, vertex AI's crawl bot will try to update the rate to the new value. If the new value is
            /// too high, the crawl bot may crawl at a lower rate to avoid overloading the user's website.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="location">
            /// Required. The location resource where crawl rate management will be performed. Format:
            /// `projects/{project}/locations/{location}`
            /// </param>
            public virtual SetDedicatedCrawlRateRequest SetDedicatedCrawlRate(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateRequest body, string location)
            {
                return new SetDedicatedCrawlRateRequest(this.service, body, location);
            }

            /// <summary>
            /// Sets the dedicated crawl rate for a crawl_rate_scope. If the dedicated crawl rate was not set, this will
            /// enable vertex AI's crawl bot to use the new dedicated crawl rate for crawling. If the dedicated crawl
            /// rate was set, vertex AI's crawl bot will try to update the rate to the new value. If the new value is
            /// too high, the crawl bot may crawl at a lower rate to avoid overloading the user's website.
            /// </summary>
            public class SetDedicatedCrawlRateRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new SetDedicatedCrawlRate request.</summary>
                public SetDedicatedCrawlRateRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateRequest body, string location) : base(service)
                {
                    Location = location;
                    Body = body;
                    InitParameters();
                }

                /// <summary>
                /// Required. The location resource where crawl rate management will be performed. Format:
                /// `projects/{project}/locations/{location}`
                /// </summary>
                [Google.Apis.Util.RequestParameterAttribute("location", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Location { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateRequest Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "setDedicatedCrawlRate";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v1beta/{+location}:setDedicatedCrawlRate";

                /// <summary>Initializes SetDedicatedCrawlRate parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("location", new Google.Apis.Discovery.Parameter
                    {
                        Name = "location",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/locations/[^/]+$",
                    });
                }
            }
        }

        /// <summary>Gets the Operations resource.</summary>
        public virtual OperationsResource Operations { get; }

        /// <summary>The "operations" collection of methods.</summary>
        public class OperationsResource
        {
            private const string Resource = "operations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public OperationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>
            /// Gets the latest state of a long-running operation. Clients can use this method to poll the operation
            /// result at intervals as recommended by the API service.
            /// </summary>
            /// <param name="name">The name of the operation resource.</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(this.service, name);
            }

            /// <summary>
            /// Gets the latest state of a long-running operation. Clients can use this method to poll the operation
            /// result at intervals as recommended by the API service.
            /// </summary>
            public class GetRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>The name of the operation resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v1beta/{+name}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/operations/[^/]+$",
                    });
                }
            }

            /// <summary>
            /// Lists operations that match the specified filter in the request. If the server doesn't support this
            /// method, it returns `UNIMPLEMENTED`.
            /// </summary>
            /// <param name="name">The name of the operation's parent resource.</param>
            public virtual ListRequest List(string name)
            {
                return new ListRequest(this.service, name);
            }

            /// <summary>
            /// Lists operations that match the specified filter in the request. If the server doesn't support this
            /// method, it returns `UNIMPLEMENTED`.
            /// </summary>
            public class ListRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningListOperationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string name) : base(service)
                {
                    Name = name;
                    InitParameters();
                }

                /// <summary>The name of the operation's parent resource.</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>The standard list filter.</summary>
                [Google.Apis.Util.RequestParameterAttribute("filter", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string Filter { get; set; }

                /// <summary>The standard list page size.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }

                /// <summary>The standard list page token.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "v1beta/{+name}/operations";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                    RequestParameters.Add("filter", new Google.Apis.Discovery.Parameter
                    {
                        Name = "filter",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>
        /// Provisions the project resource. During the process, related systems will get prepared and initialized.
        /// Caller must read the [Terms for data use](https://cloud.google.com/retail/data-use-terms), and optionally
        /// specify in request to provide consent to that service terms.
        /// </summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">
        /// Required. Full resource name of a Project, such as `projects/{project_id_or_number}`.
        /// </param>
        public virtual ProvisionRequest Provision(Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaProvisionProjectRequest body, string name)
        {
            return new ProvisionRequest(this.service, body, name);
        }

        /// <summary>
        /// Provisions the project resource. During the process, related systems will get prepared and initialized.
        /// Caller must read the [Terms for data use](https://cloud.google.com/retail/data-use-terms), and optionally
        /// specify in request to provide consent to that service terms.
        /// </summary>
        public class ProvisionRequest : DiscoveryEngineBaseServiceRequest<Google.Apis.DiscoveryEngine.v1beta.Data.GoogleLongrunningOperation>
        {
            /// <summary>Constructs a new Provision request.</summary>
            public ProvisionRequest(Google.Apis.Services.IClientService service, Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaProvisionProjectRequest body, string name) : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }

            /// <summary>Required. Full resource name of a Project, such as `projects/{project_id_or_number}`.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.DiscoveryEngine.v1beta.Data.GoogleCloudDiscoveryengineV1betaProvisionProjectRequest Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "provision";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "v1beta/{+name}:provision";

            /// <summary>Initializes Provision parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                {
                    Name = "name",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^projects/[^/]+$",
                });
            }
        }
    }
}
namespace Google.Apis.DiscoveryEngine.v1beta.Data
{
    /// <summary>
    /// `Distribution` contains summary statistics for a population of values. It optionally contains a histogram
    /// representing the distribution of those values across a set of buckets. The summary statistics are the count,
    /// mean, sum of the squared deviation from the mean, the minimum, and the maximum of the set of population of
    /// values. The histogram is based on a sequence of buckets and gives a count of values that fall into each bucket.
    /// The boundaries of the buckets are given either explicitly or by formulas for buckets of fixed or exponentially
    /// increasing widths. Although it is not forbidden, it is generally a bad idea to include non-finite values
    /// (infinities or NaNs) in the population of values, as this will render the `mean` and `sum_of_squared_deviation`
    /// fields meaningless.
    /// </summary>
    public class GoogleApiDistribution : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The number of values in each bucket of the histogram, as described in `bucket_options`. If the distribution
        /// does not have a histogram, then omit this field. If there is a histogram, then the sum of the values in
        /// `bucket_counts` must equal the value in the `count` field of the distribution. If present, `bucket_counts`
        /// should contain N values, where N is the number of buckets specified in `bucket_options`. If you supply fewer
        /// than N values, the remaining values are assumed to be 0. The order of the values in `bucket_counts` follows
        /// the bucket numbering schemes described for the three bucket types. The first value must be the count for the
        /// underflow bucket (number 0). The next N-2 values are the counts for the finite buckets (number 1 through
        /// N-2). The N'th value in `bucket_counts` is the count for the overflow bucket (number N-1).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketCounts")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> BucketCounts { get; set; }

        /// <summary>
        /// Defines the histogram bucket boundaries. If the distribution does not contain a histogram, then omit this
        /// field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bucketOptions")]
        public virtual GoogleApiDistributionBucketOptions BucketOptions { get; set; }

        /// <summary>
        /// The number of values in the population. Must be non-negative. This value must equal the sum of the values in
        /// `bucket_counts` if a histogram is provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<long> Count { get; set; }

        /// <summary>Must be in increasing order of `value` field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exemplars")]
        public virtual System.Collections.Generic.IList<GoogleApiDistributionExemplar> Exemplars { get; set; }

        /// <summary>
        /// The arithmetic mean of the values in the population. If `count` is zero then this field must be zero.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mean")]
        public virtual System.Nullable<double> Mean { get; set; }

        /// <summary>
        /// If specified, contains the range of the population values. The field must not be present if the `count` is
        /// zero.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("range")]
        public virtual GoogleApiDistributionRange Range { get; set; }

        /// <summary>
        /// The sum of squared deviations from the mean of the values in the population. For values x_i this is:
        /// Sum[i=1..n]((x_i - mean)^2) Knuth, "The Art of Computer Programming", Vol. 2, page 232, 3rd edition
        /// describes Welford's method for accumulating this sum in one pass. If `count` is zero then this field must be
        /// zero.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sumOfSquaredDeviation")]
        public virtual System.Nullable<double> SumOfSquaredDeviation { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// `BucketOptions` describes the bucket boundaries used to create a histogram for the distribution. The buckets can
    /// be in a linear sequence, an exponential sequence, or each bucket can be specified explicitly. `BucketOptions`
    /// does not include the number of values in each bucket. A bucket has an inclusive lower bound and exclusive upper
    /// bound for the values that are counted for that bucket. The upper bound of a bucket must be strictly greater than
    /// the lower bound. The sequence of N buckets for a distribution consists of an underflow bucket (number 0), zero
    /// or more finite buckets (number 1 through N - 2) and an overflow bucket (number N - 1). The buckets are
    /// contiguous: the lower bound of bucket i (i &amp;gt; 0) is the same as the upper bound of bucket i - 1. The
    /// buckets span the whole range of finite values: lower bound of the underflow bucket is -infinity and the upper
    /// bound of the overflow bucket is +infinity. The finite buckets are so-called because both bounds are finite.
    /// </summary>
    public class GoogleApiDistributionBucketOptions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The explicit buckets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("explicitBuckets")]
        public virtual GoogleApiDistributionBucketOptionsExplicit ExplicitBuckets { get; set; }

        /// <summary>The exponential buckets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exponentialBuckets")]
        public virtual GoogleApiDistributionBucketOptionsExponential ExponentialBuckets { get; set; }

        /// <summary>The linear bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linearBuckets")]
        public virtual GoogleApiDistributionBucketOptionsLinear LinearBuckets { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies a set of buckets with arbitrary widths. There are `size(bounds) + 1` (= N) buckets. Bucket `i` has the
    /// following boundaries: Upper bound (0 &amp;lt;= i &amp;lt; N-1): bounds[i] Lower bound (1 &amp;lt;= i &amp;lt;
    /// N); bounds[i - 1] The `bounds` field must contain at least one element. If `bounds` has only one element, then
    /// there are no finite buckets, and that single element is the common boundary of the overflow and underflow
    /// buckets.
    /// </summary>
    public class GoogleApiDistributionBucketOptionsExplicit : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The values must be monotonically increasing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bounds")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Bounds { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies an exponential sequence of buckets that have a width that is proportional to the value of the lower
    /// bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket. There are
    /// `num_finite_buckets + 2` (= N) buckets. Bucket `i` has the following boundaries: Upper bound (0 &amp;lt;= i
    /// &amp;lt; N-1): scale * (growth_factor ^ i). Lower bound (1 &amp;lt;= i &amp;lt; N): scale * (growth_factor ^ (i
    /// - 1)).
    /// </summary>
    public class GoogleApiDistributionBucketOptionsExponential : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Must be greater than 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("growthFactor")]
        public virtual System.Nullable<double> GrowthFactor { get; set; }

        /// <summary>Must be greater than 0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numFiniteBuckets")]
        public virtual System.Nullable<int> NumFiniteBuckets { get; set; }

        /// <summary>Must be greater than 0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scale")]
        public virtual System.Nullable<double> Scale { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies a linear sequence of buckets that all have the same width (except overflow and underflow). Each bucket
    /// represents a constant absolute uncertainty on the specific value in the bucket. There are `num_finite_buckets +
    /// 2` (= N) buckets. Bucket `i` has the following boundaries: Upper bound (0 &amp;lt;= i &amp;lt; N-1): offset +
    /// (width * i). Lower bound (1 &amp;lt;= i &amp;lt; N): offset + (width * (i - 1)).
    /// </summary>
    public class GoogleApiDistributionBucketOptionsLinear : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Must be greater than 0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numFiniteBuckets")]
        public virtual System.Nullable<int> NumFiniteBuckets { get; set; }

        /// <summary>Lower bound of the first bucket.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual System.Nullable<double> Offset { get; set; }

        /// <summary>Must be greater than 0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual System.Nullable<double> Width { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Exemplars are example points that may be used to annotate aggregated distribution values. They are metadata that
    /// gives information about a particular value added to a Distribution bucket, such as a trace ID that was active
    /// when a value was added. They may contain further information, such as a example values and timestamps, origin,
    /// etc.
    /// </summary>
    public class GoogleApiDistributionExemplar : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Contextual information about the example value. Examples are: Trace:
        /// type.googleapis.com/google.monitoring.v3.SpanContext Literal string:
        /// type.googleapis.com/google.protobuf.StringValue Labels dropped during aggregation:
        /// type.googleapis.com/google.monitoring.v3.DroppedLabels There may be only a single attachment of any given
        /// message type in a single exemplar, and this is enforced by the system.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attachments")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, object>> Attachments { get; set; }

        private string _timestampRaw;

        private object _timestamp;

        /// <summary>The observation (sampling) time of the above value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timestamp")]
        public virtual string TimestampRaw
        {
            get => _timestampRaw;
            set
            {
                _timestamp = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _timestampRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="TimestampRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use TimestampDateTimeOffset instead.")]
        public virtual object Timestamp
        {
            get => _timestamp;
            set
            {
                _timestampRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _timestamp = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="TimestampRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? TimestampDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(TimestampRaw);
            set => TimestampRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Value of the exemplar point. This value determines to which bucket the exemplar belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual System.Nullable<double> Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The range of the population values.</summary>
    public class GoogleApiDistributionRange : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The maximum of the population values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("max")]
        public virtual System.Nullable<double> Max { get; set; }

        /// <summary>The minimum of the population values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("min")]
        public virtual System.Nullable<double> Min { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be
    /// represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and
    /// non-streaming API methods in the request as well as the response. It can be used as a top-level request field,
    /// which is convenient if one wants to extract parameters from either the URL or HTTP template into the request
    /// fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id.
    /// string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service
    /// ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
    /// UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service
    /// CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc
    /// UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes
    /// how the request and response bodies are handled, all other features will continue to work unchanged.
    /// </summary>
    public class GoogleApiHttpBody : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The HTTP Content-Type header value specifying the content type of the body.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType { get; set; }

        /// <summary>The HTTP request/response body as raw binary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("data")]
        public virtual string Data { get; set; }

        /// <summary>
        /// Application specific response metadata. Must be set in the first response for streaming APIs.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extensions")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, object>> Extensions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A specific metric, identified by specifying values for all of the labels of a `MetricDescriptor`.
    /// </summary>
    public class GoogleApiMetric : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The set of label values that uniquely identify this metric. All labels listed in the `MetricDescriptor` must
        /// be assigned values.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// An existing metric type, see google.api.MetricDescriptor. For example,
        /// `custom.googleapis.com/invoice/paid/amount`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An object representing a resource that can be used for monitoring, logging, billing, or other purposes. Examples
    /// include virtual machine instances, databases, and storage devices such as disks. The `type` field identifies a
    /// MonitoredResourceDescriptor object that describes the resource's schema. Information in the `labels` field
    /// identifies the actual resource and its attributes according to the schema. For example, a particular Compute
    /// Engine VM instance could be represented by the following object, because the MonitoredResourceDescriptor for
    /// `"gce_instance"` has labels `"project_id"`, `"instance_id"` and `"zone"`: { "type": "gce_instance", "labels": {
    /// "project_id": "my-project", "instance_id": "12345678901234", "zone": "us-central1-a" }}
    /// </summary>
    public class GoogleApiMonitoredResource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Values for all of the labels listed in the associated monitored resource descriptor. For example,
        /// Compute Engine VM instances use the labels `"project_id"`, `"instance_id"`, and `"zone"`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("labels")]
        public virtual System.Collections.Generic.IDictionary<string, string> Labels { get; set; }

        /// <summary>
        /// Required. The monitored resource type. This field must match the `type` field of a
        /// MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is `gce_instance`.
        /// Some descriptors include the service name in the type; for example, the type of a Datastream stream is
        /// `datastream.googleapis.com/Stream`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Auxiliary metadata for a MonitoredResource object. MonitoredResource objects contain the minimum set of
    /// information to uniquely identify a monitored resource instance. There is some other useful auxiliary metadata.
    /// Monitoring and Logging use an ingestion pipeline to extract metadata for cloud resources of all types, and store
    /// the metadata in this message.
    /// </summary>
    public class GoogleApiMonitoredResourceMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by
        /// Google, including "machine_image", "vpc", "subnet_id", "security_group", "name", etc. System label values
        /// can be only strings, Boolean values, or a list of strings. For example: { "name": "my-test-instance",
        /// "security_group": ["a", "b", "c"], "spot_instance": false }
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("systemLabels")]
        public virtual System.Collections.Generic.IDictionary<string, object> SystemLabels { get; set; }

        /// <summary>Output only. A map of user-defined metadata labels.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A description of the context in which an error occurred.</summary>
    public class GoogleCloudDiscoveryengineLoggingErrorContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The HTTP request which was processed when the error was triggered.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("httpRequest")]
        public virtual GoogleCloudDiscoveryengineLoggingHttpRequestContext HttpRequest { get; set; }

        /// <summary>
        /// The location in the source code where the decision was made to report the error, usually the place where it
        /// was logged.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportLocation")]
        public virtual GoogleCloudDiscoveryengineLoggingSourceLocation ReportLocation { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>An error log which is reported to the Error Reporting system.</summary>
    public class GoogleCloudDiscoveryengineLoggingErrorLog : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A description of the context in which the error occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("context")]
        public virtual GoogleCloudDiscoveryengineLoggingErrorContext Context { get; set; }

        /// <summary>The error payload that is populated on LRO import APIs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("importPayload")]
        public virtual GoogleCloudDiscoveryengineLoggingImportErrorContext ImportPayload { get; set; }

        /// <summary>A message describing the error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>
        /// The API request payload, represented as a protocol buffer. Most API request types are supported—for example:
        /// * `type.googleapis.com/google.cloud.discoveryengine.v1alpha.DocumentService.CreateDocumentRequest` *
        /// `type.googleapis.com/google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEventRequest`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requestPayload")]
        public virtual System.Collections.Generic.IDictionary<string, object> RequestPayload { get; set; }

        /// <summary>
        /// The API response payload, represented as a protocol buffer. This is used to log some "soft errors", where
        /// the response is valid but we consider there are some quality issues like unjoined events. The following API
        /// responses are supported, and no PII is included: *
        /// `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend` *
        /// `google.cloud.discoveryengine.v1alpha.UserEventService.WriteUserEvent` *
        /// `google.cloud.discoveryengine.v1alpha.UserEventService.CollectUserEvent`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responsePayload")]
        public virtual System.Collections.Generic.IDictionary<string, object> ResponsePayload { get; set; }

        /// <summary>The service context in which this error has occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceContext")]
        public virtual GoogleCloudDiscoveryengineLoggingServiceContext ServiceContext { get; set; }

        /// <summary>The RPC status associated with the error log.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual GoogleRpcStatus Status { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>HTTP request data that is related to a reported error.</summary>
    public class GoogleCloudDiscoveryengineLoggingHttpRequestContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The HTTP response status code for the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseStatusCode")]
        public virtual System.Nullable<int> ResponseStatusCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The error payload that is populated on LRO import APIs, including the following: *
    /// `google.cloud.discoveryengine.v1alpha.DocumentService.ImportDocuments` *
    /// `google.cloud.discoveryengine.v1alpha.UserEventService.ImportUserEvents`
    /// </summary>
    public class GoogleCloudDiscoveryengineLoggingImportErrorContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The detailed content which caused the error on importing a document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>
        /// Google Cloud Storage file path of the import source. Can be set for batch operation error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsPath")]
        public virtual string GcsPath { get; set; }

        /// <summary>
        /// Line number of the content in file. Should be empty for permission or batch operation error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lineNumber")]
        public virtual string LineNumber { get; set; }

        /// <summary>The operation resource name of the LRO.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operation")]
        public virtual string Operation { get; set; }

        /// <summary>The detailed content which caused the error on importing a user event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userEvent")]
        public virtual string UserEvent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes a running service that sends errors.</summary>
    public class GoogleCloudDiscoveryengineLoggingServiceContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>An identifier of the service—for example, `discoveryengine.googleapis.com`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("service")]
        public virtual string Service { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Indicates a location in the source code of the service for which errors are reported.</summary>
    public class GoogleCloudDiscoveryengineLoggingSourceLocation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Human-readable name of a function or method—for example,
        /// `google.cloud.discoveryengine.v1alpha.RecommendationService.Recommend`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("functionName")]
        public virtual string FunctionName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration data for advance site search.</summary>
    public class GoogleCloudDiscoveryengineV1AdvancedSiteSearchConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set true, automatic refresh is disabled for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableAutomaticRefresh")]
        public virtual System.Nullable<bool> DisableAutomaticRefresh { get; set; }

        /// <summary>If set true, initial indexing is disabled for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableInitialIndex")]
        public virtual System.Nullable<bool> DisableInitialIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.BatchCreateTargetSites operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1BatchCreateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.BatchCreateTargetSites method.</summary>
    public class GoogleCloudDiscoveryengineV1BatchCreateTargetSitesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>TargetSites created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSites")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1TargetSite> TargetSites { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations used to enable CMEK data encryption with Cloud KMS keys.</summary>
    public class GoogleCloudDiscoveryengineV1CmekConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The default CmekConfig for the Customer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isDefault")]
        public virtual System.Nullable<bool> IsDefault { get; set; }

        /// <summary>
        /// KMS key resource name which will be used to encrypt resources
        /// `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKey")]
        public virtual string KmsKey { get; set; }

        /// <summary>
        /// KMS key version resource name which will be used to encrypt resources `/cryptoKeyVersions/{keyVersion}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyVersion")]
        public virtual string KmsKeyVersion { get; set; }

        /// <summary>Output only. The timestamp of the last key rotation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastRotationTimestampMicros")]
        public virtual System.Nullable<long> LastRotationTimestampMicros { get; set; }

        /// <summary>
        /// Required. The name of the CmekConfig of the form `projects/{project}/locations/{location}/cmekConfig` or
        /// `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Optional. Single-regional CMEKs that are required for some VAIS features.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("singleRegionKeys")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1SingleRegionKey> SingleRegionKeys { get; set; }

        /// <summary>Output only. The states of the CmekConfig.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines circumstances to be checked before allowing a behavior</summary>
    public class GoogleCloudDiscoveryengineV1Condition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Range of time(s) specifying when condition is active. Maximum of 10 time ranges.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeTimeRange")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1ConditionTimeRange> ActiveTimeRange { get; set; }

        /// <summary>
        /// Optional. Query regex to match the whole search query. Cannot be set when Condition.query_terms is set. This
        /// is currently supporting promotion use case.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryRegex")]
        public virtual string QueryRegex { get; set; }

        /// <summary>
        /// Search only A list of terms to match the query on. Cannot be set when Condition.query_regex is set. Maximum
        /// of 10 query terms.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryTerms")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1ConditionQueryTerm> QueryTerms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Matcher for search request query</summary>
    public class GoogleCloudDiscoveryengineV1ConditionQueryTerm : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether the search query needs to exactly match the query term.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fullMatch")]
        public virtual System.Nullable<bool> FullMatch { get; set; }

        /// <summary>
        /// The specific query value to match against Must be lowercase, must be UTF-8. Can have at most 3 space
        /// separated terms if full_match is true. Cannot be an empty string. Maximum length of 5000 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Used for time-dependent conditions.</summary>
    public class GoogleCloudDiscoveryengineV1ConditionTimeRange : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _endTimeRaw;

        private object _endTime;

        /// <summary>End of time range. Range is inclusive. Must be in the future.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Start of time range. Range is inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Defines a conditioned behavior to employ during serving. Must be attached to a ServingConfig to be considered at
    /// serving time. Permitted actions dependent on `SolutionType`.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1Control : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. List of all ServingConfig IDs this control is attached to. May take up to 10 minutes to update
        /// after changes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("associatedServingConfigIds")]
        public virtual System.Collections.Generic.IList<string> AssociatedServingConfigIds { get; set; }

        /// <summary>Defines a boost-type control</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAction")]
        public virtual GoogleCloudDiscoveryengineV1ControlBoostAction BoostAction { get; set; }

        /// <summary>
        /// Determines when the associated action will trigger. Omit to always apply the action. Currently only a single
        /// condition may be specified. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1Condition> Conditions { get; set; }

        /// <summary>
        /// Required. Human readable name. The identifier used in UI views. Must be UTF-8 encoded string. Length limit
        /// is 128 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Defines a filter-type control Currently not supported by Recommendation</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterAction")]
        public virtual GoogleCloudDiscoveryengineV1ControlFilterAction FilterAction { get; set; }

        /// <summary>Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Promote certain links based on predefined trigger queries. This now only supports basic site search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promoteAction")]
        public virtual GoogleCloudDiscoveryengineV1ControlPromoteAction PromoteAction { get; set; }

        /// <summary>Defines a redirect-type control.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectAction")]
        public virtual GoogleCloudDiscoveryengineV1ControlRedirectAction RedirectAction { get; set; }

        /// <summary>
        /// Required. Immutable. What solution the control belongs to. Must be compatible with vertical of resource.
        /// Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionType")]
        public virtual string SolutionType { get; set; }

        /// <summary>Treats a group of terms as synonyms of one another.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonymsAction")]
        public virtual GoogleCloudDiscoveryengineV1ControlSynonymsAction SynonymsAction { get; set; }

        /// <summary>
        /// Specifies the use case for the control. Affects what condition fields can be set. Only applies to
        /// SOLUTION_TYPE_SEARCH. Currently only allow one use case per control. Must be set when solution_type is
        /// SolutionType.SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useCases")]
        public virtual System.Collections.Generic.IList<string> UseCases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Adjusts order of products in returned list.</summary>
    public class GoogleCloudDiscoveryengineV1ControlBoostAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boost")]
        public virtual System.Nullable<float> Boost { get; set; }

        /// <summary>
        /// Required. Specifies which data store's documents can be boosted by this control. Full data store name e.g.
        /// projects/123/locations/global/collections/default_collection/dataStores/default_data_store
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Required. Specifies which products to apply the boost to. If no filter is provided all products will be
        /// boosted (No-op). Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length
        /// is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// Optional. Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0
        /// (No-op).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fixedBoost")]
        public virtual System.Nullable<float> FixedBoost { get; set; }

        /// <summary>
        /// Optional. Complex specification for custom ranking based on customer defined attribute value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationBoostSpec")]
        public virtual GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec InterpolationBoostSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specification for custom ranking based on customer specified attribute value. It provides more controls for
    /// customized ranking than the simple (condition, boost) combination above.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The attribute type to be used to determine the boost amount. The attribute value can be derived
        /// from the field value of the specified field_name. In the case of numerical it is straightforward i.e.
        /// attribute_value = numerical_field_value. In the case of freshness however, attribute_value = (time.now() -
        /// datetime_field_value).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeType")]
        public virtual string AttributeType { get; set; }

        /// <summary>
        /// Optional. The control points used to define the curve. The monotonic function (defined through the
        /// interpolation_type above) passes through the control points listed here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("controlPoints")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint> ControlPoints { get; set; }

        /// <summary>Optional. The name of the field whose value will be used to determine the boost amount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>
        /// Optional. The interpolation type to be applied to connect the control points listed below.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationType")]
        public virtual string InterpolationType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The control points used to define the curve. The curve defined through these control points can only be
    /// monotonically increasing or decreasing(constant values are acceptable).
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ControlBoostActionInterpolationBoostSpecControlPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be
        /// formatted as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern
        /// for this is: `nDnM]`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeValue")]
        public virtual string AttributeValue { get; set; }

        /// <summary>
        /// Optional. The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the
        /// value specified above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAmount")]
        public virtual System.Nullable<float> BoostAmount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specified which products may be included in results. Uses same filter as boost.</summary>
    public class GoogleCloudDiscoveryengineV1ControlFilterAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Specifies which data store's documents can be filtered by this control. Full data store name e.g.
        /// projects/123/locations/global/collections/default_collection/dataStores/default_data_store
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Required. A filter to apply on the matching condition results. Required Syntax documentation:
        /// https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an
        /// INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Promote certain links based on some trigger queries. Example: Promote shoe store link when searching for `shoe`
    /// keyword. The link can be outside of associated data store.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ControlPromoteAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Data store with which this promotion is attached to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>Required. Promotion attached to this action.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchLinkPromotion")]
        public virtual GoogleCloudDiscoveryengineV1SearchLinkPromotion SearchLinkPromotion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Redirects a shopper to the provided URI.</summary>
    public class GoogleCloudDiscoveryengineV1ControlRedirectAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The URI to which the shopper will be redirected. Required. URI must have length equal or less than
        /// 2000 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectUri")]
        public virtual string RedirectUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Creates a set of terms that will act as synonyms of one another. Example: "happy" will also be considered as
    /// "glad", "glad" will also be considered as "happy".
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ControlSynonymsAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms. Otherwise an
        /// INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the DataStoreService.CreateDataStore operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1CreateDataStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the EngineService.CreateEngine operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1CreateEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for Create Schema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1CreateSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.CreateSitemap operation. This will be returned
    /// by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1CreateSitemapMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.CreateTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1CreateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>DataStore captures global settings and configs at the DataStore level.</summary>
    public class GoogleCloudDiscoveryengineV1DataStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Configuration for advanced site search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSiteSearchConfig")]
        public virtual GoogleCloudDiscoveryengineV1AdvancedSiteSearchConfig AdvancedSiteSearchConfig { get; set; }

        /// <summary>Output only. Data size estimation for billing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingEstimation")]
        public virtual GoogleCloudDiscoveryengineV1DataStoreBillingEstimation BillingEstimation { get; set; }

        /// <summary>Output only. CMEK-related information for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cmekConfig")]
        public virtual GoogleCloudDiscoveryengineV1CmekConfig CmekConfig { get; set; }

        /// <summary>
        /// Immutable. The content config of the data store. If this field is unset, the server behavior defaults to
        /// ContentConfig.NO_CONTENT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentConfig")]
        public virtual string ContentConfig { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the DataStore was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The id of the default Schema associated to this data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultSchemaId")]
        public virtual string DefaultSchemaId { get; set; }

        /// <summary>
        /// Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128
        /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Configuration for Document understanding and enrichment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentProcessingConfig")]
        public virtual GoogleCloudDiscoveryengineV1DocumentProcessingConfig DocumentProcessingConfig { get; set; }

        /// <summary>Optional. Configuration for `HEALTHCARE_FHIR` vertical.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthcareFhirConfig")]
        public virtual GoogleCloudDiscoveryengineV1HealthcareFhirConfig HealthcareFhirConfig { get; set; }

        /// <summary>
        /// Immutable. The fully qualified resource name of the associated IdentityMappingStore. This field can only be
        /// set for acl_enabled DataStores with `THIRD_PARTY` or `GSUITE` IdP. Format:
        /// `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityMappingStore")]
        public virtual string IdentityMappingStore { get; set; }

        /// <summary>Immutable. The industry vertical that the data store registers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("industryVertical")]
        public virtual string IndustryVertical { get; set; }

        /// <summary>Optional. If set, this DataStore is an Infobot FAQ DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isInfobotFaqDataStore")]
        public virtual System.Nullable<bool> IsInfobotFaqDataStore { get; set; }

        /// <summary>
        /// Input only. The KMS key to be used to protect this DataStore at creation time. Must be set for requests that
        /// need to comply with CMEK Org Policy protections. If this field is set and processed successfully, the
        /// DataStore will be protected by the KMS key, as indicated in the cmek_config field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyName")]
        public virtual string KmsKeyName { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the data store. Format:
        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field
        /// must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Optional. Stores serving config at DataStore level.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingConfigDataStore")]
        public virtual GoogleCloudDiscoveryengineV1DataStoreServingConfigDataStore ServingConfigDataStore { get; set; }

        /// <summary>
        /// The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`:
        /// `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is
        /// automatically enrolled. Other solutions cannot be enrolled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionTypes")]
        public virtual System.Collections.Generic.IList<string> SolutionTypes { get; set; }

        /// <summary>
        /// The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized
        /// schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other
        /// APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema
        /// of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against
        /// certain rules on schema. Learn more from [this
        /// doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startingSchema")]
        public virtual GoogleCloudDiscoveryengineV1Schema StartingSchema { get; set; }

        /// <summary>
        /// Config to store data store type configuration for workspace data. This must be set when
        /// DataStore.content_config is set as DataStore.ContentConfig.GOOGLE_WORKSPACE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("workspaceConfig")]
        public virtual GoogleCloudDiscoveryengineV1WorkspaceConfig WorkspaceConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Estimation of data size per data store.</summary>
    public class GoogleCloudDiscoveryengineV1DataStoreBillingEstimation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Data size for structured data in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredDataSize")]
        public virtual System.Nullable<long> StructuredDataSize { get; set; }

        private string _structuredDataUpdateTimeRaw;

        private object _structuredDataUpdateTime;

        /// <summary>Last updated timestamp for structured data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredDataUpdateTime")]
        public virtual string StructuredDataUpdateTimeRaw
        {
            get => _structuredDataUpdateTimeRaw;
            set
            {
                _structuredDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _structuredDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StructuredDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StructuredDataUpdateTimeDateTimeOffset instead.")]
        public virtual object StructuredDataUpdateTime
        {
            get => _structuredDataUpdateTime;
            set
            {
                _structuredDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _structuredDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="StructuredDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StructuredDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StructuredDataUpdateTimeRaw);
            set => StructuredDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Data size for unstructured data in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDataSize")]
        public virtual System.Nullable<long> UnstructuredDataSize { get; set; }

        private string _unstructuredDataUpdateTimeRaw;

        private object _unstructuredDataUpdateTime;

        /// <summary>Last updated timestamp for unstructured data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDataUpdateTime")]
        public virtual string UnstructuredDataUpdateTimeRaw
        {
            get => _unstructuredDataUpdateTimeRaw;
            set
            {
                _unstructuredDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _unstructuredDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UnstructuredDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UnstructuredDataUpdateTimeDateTimeOffset instead.")]
        public virtual object UnstructuredDataUpdateTime
        {
            get => _unstructuredDataUpdateTime;
            set
            {
                _unstructuredDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _unstructuredDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="UnstructuredDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UnstructuredDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UnstructuredDataUpdateTimeRaw);
            set => UnstructuredDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Data size for websites in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteDataSize")]
        public virtual System.Nullable<long> WebsiteDataSize { get; set; }

        private string _websiteDataUpdateTimeRaw;

        private object _websiteDataUpdateTime;

        /// <summary>Last updated timestamp for websites.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteDataUpdateTime")]
        public virtual string WebsiteDataUpdateTimeRaw
        {
            get => _websiteDataUpdateTimeRaw;
            set
            {
                _websiteDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _websiteDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="WebsiteDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use WebsiteDataUpdateTimeDateTimeOffset instead.")]
        public virtual object WebsiteDataUpdateTime
        {
            get => _websiteDataUpdateTime;
            set
            {
                _websiteDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _websiteDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="WebsiteDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? WebsiteDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(WebsiteDataUpdateTimeRaw);
            set => WebsiteDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Stores information regarding the serving configurations at DataStore level.</summary>
    public class GoogleCloudDiscoveryengineV1DataStoreServingConfigDataStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set true, the DataStore will not be available for serving search requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disabledForServing")]
        public virtual System.Nullable<bool> DisabledForServing { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CmekConfigService.DeleteCmekConfig operation. This will be returned by
    /// the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1DeleteCmekConfigMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the DataStoreService.DeleteDataStore operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1DeleteDataStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the EngineService.DeleteEngine operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1DeleteEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the IdentityMappingStoreService.DeleteIdentityMappingStore operation. This
    /// will be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1DeleteIdentityMappingStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for DeleteSchema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1DeleteSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DeleteSitemap operation. This will be returned
    /// by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1DeleteSitemapMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DeleteTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1DeleteTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will
    /// be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.DisableAdvancedSiteSearch method.</summary>
    public class GoogleCloudDiscoveryengineV1DisableAdvancedSiteSearchResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A singleton resource of DataStore. If it's empty when DataStore is created and DataStore is set to
    /// DataStore.ContentConfig.CONTENT_REQUIRED, the default parser will default to digital parser.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1DocumentProcessingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether chunking mode is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkingConfig")]
        public virtual GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig ChunkingConfig { get; set; }

        /// <summary>
        /// Configurations for default Document parser. If not specified, we will configure it as default
        /// DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig DefaultParsingConfig { get; set; }

        /// <summary>
        /// The full resource name of the Document Processing Config. Format:
        /// `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Map from file type to override the default parsing configuration based on the file type. Supported keys: *
        /// `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is
        /// supported. * `html`: Override parsing config for HTML files, only digital parsing and layout parsing are
        /// supported. * `docx`: Override parsing config for DOCX files, only digital parsing and layout parsing are
        /// supported. * `pptx`: Override parsing config for PPTX files, only digital parsing and layout parsing are
        /// supported. * `xlsm`: Override parsing config for XLSM files, only digital parsing and layout parsing are
        /// supported. * `xlsx`: Override parsing config for XLSX files, only digital parsing and layout parsing are
        /// supported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parsingConfigOverrides")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig> ParsingConfigOverrides { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for chunking config.</summary>
    public class GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configuration for the layout based chunking.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layoutBasedChunkingConfig")]
        public virtual GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig LayoutBasedChunkingConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for the layout based chunking.</summary>
    public class GoogleCloudDiscoveryengineV1DocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkSize")]
        public virtual System.Nullable<int> ChunkSize { get; set; }

        /// <summary>
        /// Whether to include appending different levels of headings to chunks from the middle of the document to
        /// prevent context loss. Default value: False.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeAncestorHeadings")]
        public virtual System.Nullable<bool> IncludeAncestorHeadings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Related configurations applied to a specific type of document parser.</summary>
    public class GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configurations applied to digital parser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("digitalParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig DigitalParsingConfig { get; set; }

        /// <summary>Configurations applied to layout parser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layoutParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig LayoutParsingConfig { get; set; }

        /// <summary>Configurations applied to OCR parser. Currently it only applies to PDFs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ocrParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig OcrParsingConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The digital parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigDigitalParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The layout parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigLayoutParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The OCR parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1DocumentProcessingConfigParsingConfigOcrParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// [DEPRECATED] This field is deprecated. To use the additional enhanced document elements processing, please
        /// switch to `layout_parsing_config`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enhancedDocumentElements")]
        public virtual System.Collections.Generic.IList<string> EnhancedDocumentElements { get; set; }

        /// <summary>If true, will use native text instead of OCR text on pages containing native text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useNativeText")]
        public virtual System.Nullable<bool> UseNativeText { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.EnableAdvancedSiteSearch method.</summary>
    public class GoogleCloudDiscoveryengineV1EnableAdvancedSiteSearchResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata that describes the training and serving parameters of an Engine.</summary>
    public class GoogleCloudDiscoveryengineV1Engine : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chatEngineConfig")]
        public virtual GoogleCloudDiscoveryengineV1EngineChatEngineConfig ChatEngineConfig { get; set; }

        /// <summary>
        /// Output only. Additional information of the Chat Engine. Only applicable if solution_type is
        /// SOLUTION_TYPE_CHAT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chatEngineMetadata")]
        public virtual GoogleCloudDiscoveryengineV1EngineChatEngineMetadata ChatEngineMetadata { get; set; }

        /// <summary>Common config spec that specifies the metadata of the engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commonConfig")]
        public virtual GoogleCloudDiscoveryengineV1EngineCommonConfig CommonConfig { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the Recommendation Engine was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type
        /// of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT,
        /// multiple DataStores in the same Collection can be associated here. Note that when used in
        /// CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary
        /// initializations.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreIds")]
        public virtual System.Collections.Generic.IList<string> DataStoreIds { get; set; }

        /// <summary>Optional. Whether to disable analytics for searches performed on this engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableAnalytics")]
        public virtual System.Nullable<bool> DisableAnalytics { get; set; }

        /// <summary>
        /// Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024
        /// characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on
        /// DataStore: Vertical on Engine has to match vertical of the DataStore linked to the engine.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("industryVertical")]
        public virtual string IndustryVertical { get; set; }

        /// <summary>
        /// Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a
        /// length limit of 1024 characters. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63
        /// characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchEngineConfig")]
        public virtual GoogleCloudDiscoveryengineV1EngineSearchEngineConfig SearchEngineConfig { get; set; }

        /// <summary>Required. The solutions of the engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionType")]
        public virtual string SolutionType { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. Timestamp the Recommendation Engine was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations for a Chat Engine.</summary>
    public class GoogleCloudDiscoveryengineV1EngineChatEngineConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these
        /// configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved
        /// using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentCreationConfig")]
        public virtual GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig AgentCreationConfig { get; set; }

        /// <summary>
        /// The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide
        /// `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine.
        /// Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by
        /// and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or
        /// EngineService.ListEngines API after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
        /// agent association after Engine is created.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAgentToLink")]
        public virtual string DialogflowAgentToLink { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and
    /// passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or
    /// EngineService.ListEngines API after engine creation.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1EngineChatEngineConfigAgentCreationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Name of the company, organization or other entity that the agent represents. Used for knowledge connector
        /// LLM prompt and for knowledge search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("business")]
        public virtual string Business { get; set; }

        /// <summary>
        /// Required. The default language of the agent as a language tag. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultLanguageCode")]
        public virtual string DefaultLanguageCode { get; set; }

        /// <summary>
        /// Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create
        /// Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location { get; set; }

        /// <summary>
        /// Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g.,
        /// America/New_York, Europe/Paris.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional information of a Chat Engine. Fields in this message are output only.</summary>
    public class GoogleCloudDiscoveryengineV1EngineChatEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of a Dialogflow agent, that this Chat Engine refers to. Format:
        /// `projects//locations//agents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAgent")]
        public virtual string DialogflowAgent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Common configurations for an Engine.</summary>
    public class GoogleCloudDiscoveryengineV1EngineCommonConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The name of the company, business or entity that is associated with the engine. Setting this may help
        /// improve LLM related features.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companyName")]
        public virtual string CompanyName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations for a Search Engine.</summary>
    public class GoogleCloudDiscoveryengineV1EngineSearchEngineConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The add-on that this search engine enables.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchAddOns")]
        public virtual System.Collections.Generic.IList<string> SearchAddOns { get; set; }

        /// <summary>
        /// The search feature tier of this engine. Different tiers might have different pricing. To learn more, check
        /// the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchTier")]
        public virtual string SearchTier { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config to data store for `HEALTHCARE_FHIR` vertical.</summary>
    public class GoogleCloudDiscoveryengineV1HealthcareFhirConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set to `true`, the predefined
        /// healthcare fhir schema can be extended for more customized searching and filtering.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableConfigurableSchema")]
        public virtual System.Nullable<bool> EnableConfigurableSchema { get; set; }

        /// <summary>
        /// Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If set to `true`, the batch
        /// ingestion will be processed in a static indexing mode which is slower but more capable of handling larger
        /// volume.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableStaticIndexingForBatchIngestion")]
        public virtual System.Nullable<bool> EnableStaticIndexingForBatchIngestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// IdentityMappingEntry LongRunningOperation metadata for IdentityMappingStoreService.ImportIdentityMappings and
    /// IdentityMappingStoreService.PurgeIdentityMappings
    /// </summary>
    public class GoogleCloudDiscoveryengineV1IdentityMappingEntryOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of IdentityMappingEntries that failed to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>The number of IdentityMappingEntries that were successfully processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        /// <summary>The total number of IdentityMappingEntries that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<long> TotalCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportCompletionSuggestions operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of CompletionSuggestions that failed to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of CompletionSuggestions successfully imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the CompletionService.ImportCompletionSuggestions method. If the long running operation is done,
    /// this message is returned by the google.longrunning.Operations.response field if the operation is successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ImportCompletionSuggestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The desired location of errors incurred during the Import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1ImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportDocuments operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ImportDocumentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were processed successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        /// <summary>Total count of entries that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<long> TotalCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by
    /// the google.longrunning.Operations.response field if the operation was successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ImportDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors in the request if set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1ImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration of destination for Import related errors.</summary>
    public class GoogleCloudDiscoveryengineV1ImportErrorConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import
        /// errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status`
        /// message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsPrefix")]
        public virtual string GcsPrefix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for IdentityMappingStoreService.ImportIdentityMappings</summary>
    public class GoogleCloudDiscoveryengineV1ImportIdentityMappingsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.ImportSuggestionDenyListEntries method.</summary>
    public class GoogleCloudDiscoveryengineV1ImportSuggestionDenyListEntriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Count of deny list entries that failed to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failedEntriesCount")]
        public virtual System.Nullable<long> FailedEntriesCount { get; set; }

        /// <summary>Count of deny list entries successfully imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("importedEntriesCount")]
        public virtual System.Nullable<long> ImportedEntriesCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the Import operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ImportUserEventsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were processed successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is
    /// returned by the google.longrunning.Operations.response field if the operation was successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ImportUserEventsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors if this field was set in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1ImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Count of user events imported with complete existing Documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("joinedEventsCount")]
        public virtual System.Nullable<long> JoinedEventsCount { get; set; }

        /// <summary>
        /// Count of user events imported, but with Document information not found in the existing Branch.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unjoinedEventsCount")]
        public virtual System.Nullable<long> UnjoinedEventsCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata and configurations for a Google Cloud project in the service.</summary>
    public class GoogleCloudDiscoveryengineV1Project : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The timestamp when this project is created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. Full resource name of the project, for example `projects/{project}`. Note that when making
        /// requests, project number and project id are both acceptable, but the server will always respond in project
        /// number.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        private string _provisionCompletionTimeRaw;

        private object _provisionCompletionTime;

        /// <summary>
        /// Output only. The timestamp when this project is successfully provisioned. Empty value means this project is
        /// still provisioning and is not ready for use.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("provisionCompletionTime")]
        public virtual string ProvisionCompletionTimeRaw
        {
            get => _provisionCompletionTimeRaw;
            set
            {
                _provisionCompletionTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _provisionCompletionTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="ProvisionCompletionTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use ProvisionCompletionTimeDateTimeOffset instead.")]
        public virtual object ProvisionCompletionTime
        {
            get => _provisionCompletionTime;
            set
            {
                _provisionCompletionTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _provisionCompletionTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="ProvisionCompletionTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? ProvisionCompletionTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(ProvisionCompletionTimeRaw);
            set => ProvisionCompletionTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. A map of terms of services. The key is the `id` of ServiceTerms.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceTermsMap")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1ProjectServiceTerms> ServiceTermsMap { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata about the terms of service.</summary>
    public class GoogleCloudDiscoveryengineV1ProjectServiceTerms : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _acceptTimeRaw;

        private object _acceptTime;

        /// <summary>The last time when the project agreed to the terms of service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("acceptTime")]
        public virtual string AcceptTimeRaw
        {
            get => _acceptTimeRaw;
            set
            {
                _acceptTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _acceptTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="AcceptTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use AcceptTimeDateTimeOffset instead.")]
        public virtual object AcceptTime
        {
            get => _acceptTime;
            set
            {
                _acceptTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _acceptTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="AcceptTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? AcceptTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(AcceptTimeRaw);
            set => AcceptTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _declineTimeRaw;

        private object _declineTime;

        /// <summary>The last time when the project declined or revoked the agreement to terms of service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("declineTime")]
        public virtual string DeclineTimeRaw
        {
            get => _declineTimeRaw;
            set
            {
                _declineTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _declineTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="DeclineTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use DeclineTimeDateTimeOffset instead.")]
        public virtual object DeclineTime
        {
            get => _declineTime;
            set
            {
                _declineTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _declineTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="DeclineTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? DeclineTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(DeclineTimeRaw);
            set => DeclineTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// The unique identifier of this terms of service. Available terms: * `GA_DATA_USE_TERMS`: [Terms for data
        /// use](https://cloud.google.com/retail/data-use-terms). When using this as `id`, the acceptable version to
        /// provide is `2022-11-23`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Whether the project has accepted/rejected the service terms or it is still pending.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>
        /// The version string of the terms of service. For acceptable values, see the comments for id above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata associated with a project provision operation.</summary>
    public class GoogleCloudDiscoveryengineV1ProvisionProjectMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeCompletionSuggestions operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.PurgeCompletionSuggestions method.</summary>
    public class GoogleCloudDiscoveryengineV1PurgeCompletionSuggestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Whether the completion suggestions were successfully purged.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeSucceeded")]
        public virtual System.Nullable<bool> PurgeSucceeded { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeDocuments operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1PurgeDocumentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were ignored as entries were not found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoredCount")]
        public virtual System.Nullable<long> IgnoredCount { get; set; }

        /// <summary>Count of entries that were deleted successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done,
    /// then this message is returned by the google.longrunning.Operations.response field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1PurgeDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The total count of documents purged as a result of the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeCount")]
        public virtual System.Nullable<long> PurgeCount { get; set; }

        /// <summary>
        /// A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100
        /// names will be returned and the names are chosen at random.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeSample")]
        public virtual System.Collections.Generic.IList<string> PurgeSample { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.PurgeSuggestionDenyListEntries method.</summary>
    public class GoogleCloudDiscoveryengineV1PurgeSuggestionDenyListEntriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Number of suggestion deny list entries purged.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeCount")]
        public virtual System.Nullable<long> PurgeCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines the structure and layout of a type of document data.</summary>
    public class GoogleCloudDiscoveryengineV1Schema : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The JSON representation of the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jsonSchema")]
        public virtual string JsonSchema { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the schema, in the format of
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The structured representation of the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structSchema")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructSchema { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Promotion proto includes uri and other helping information to display the promotion.</summary>
    public class GoogleCloudDiscoveryengineV1SearchLinkPromotion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The Promotion description. Maximum length: 200 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Optional. The enabled promotion will be returned for any serving configs associated with the parent of the
        /// control this promotion is attached to. This flag is used for basic site search only.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>Optional. The promotion thumbnail image url.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; }

        /// <summary>Required. The title of the promotion. Maximum length: 160 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>Required. The URL for the page the user wants to promote.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring the behavior of content search.</summary>
    public class GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies the chunk spec to be returned from the search response. Only available if the
        /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkSpec")]
        public virtual GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec ChunkSpec { get; set; }

        /// <summary>
        /// If there is no extractive_content_spec provided, there will be no extractive answer in the search response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extractiveContentSpec")]
        public virtual GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec ExtractiveContentSpec { get; set; }

        /// <summary>
        /// Specifies the search result mode. If unspecified, the search result mode defaults to `DOCUMENTS`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResultMode")]
        public virtual string SearchResultMode { get; set; }

        /// <summary>If `snippetSpec` is not specified, snippets are not included in the search response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippetSpec")]
        public virtual GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec SnippetSpec { get; set; }

        /// <summary>If `summarySpec` is not specified, summaries are not included in the search response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySpec")]
        public virtual GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec SummarySpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies the chunk spec to be returned from the search response. Only available if the
    /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
    /// </summary>
    public class GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecChunkSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The number of next chunks to be returned of the current chunk. The maximum allowed value is 3. If not
        /// specified, no next chunks will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numNextChunks")]
        public virtual System.Nullable<int> NumNextChunks { get; set; }

        /// <summary>
        /// The number of previous chunks to be returned of the current chunk. The maximum allowed value is 3. If not
        /// specified, no previous chunks will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numPreviousChunks")]
        public virtual System.Nullable<int> NumPreviousChunks { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring the extractive content in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecExtractiveContentSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim
        /// answer extracted from the original document, which provides a precise and contextually relevant answer to
        /// the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return
        /// all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned
        /// for each SearchResult.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxExtractiveAnswerCount")]
        public virtual System.Nullable<int> MaxExtractiveAnswerCount { get; set; }

        /// <summary>
        /// The max number of extractive segments returned in each search result. Only applied if the DataStore is set
        /// to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive
        /// segment is a text segment extracted from the original document that is relevant to the search query, and, in
        /// general, more verbose than an extractive answer. The segment could then be used as input for LLMs to
        /// generate summaries and answers. If the number of matching segments is less than
        /// `max_extractive_segment_count`, return all of the segments. Otherwise, return the
        /// `max_extractive_segment_count`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxExtractiveSegmentCount")]
        public virtual System.Nullable<int> MaxExtractiveSegmentCount { get; set; }

        /// <summary>Return at most `num_next_segments` segments after each selected segments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numNextSegments")]
        public virtual System.Nullable<int> NumNextSegments { get; set; }

        /// <summary>
        /// Specifies whether to also include the adjacent from each selected segments. Return at most
        /// `num_previous_segments` segments before each selected segments.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numPreviousSegments")]
        public virtual System.Nullable<int> NumPreviousSegments { get; set; }

        /// <summary>
        /// Specifies whether to return the confidence score from the extractive segments in each search result. This
        /// feature is available only for new or allowlisted data stores. To allowlist your data store, contact your
        /// Customer Engineer. The default value is `false`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnExtractiveSegmentScore")]
        public virtual System.Nullable<bool> ReturnExtractiveSegmentScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring snippets in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSnippetSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards
        /// compatibility, we will return snippet if max_snippet_count &amp;gt; 0.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxSnippetCount")]
        public virtual System.Nullable<int> MaxSnippetCount { get; set; }

        /// <summary>[DEPRECATED] This field is deprecated and will have no affect on the snippet.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceOnly")]
        public virtual System.Nullable<bool> ReferenceOnly { get; set; }

        /// <summary>
        /// If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this
        /// page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnSnippet")]
        public virtual System.Nullable<bool> ReturnSnippet { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring a summary returned in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies whether to filter out adversarial queries. The default value is `false`. Google employs
        /// search-query classification to detect adversarial queries. No summary is returned if the search query is
        /// classified as an adversarial query. For example, a user might ask a question regarding negative comments
        /// about the company or submit a query designed to generate unsafe, policy-violating output. If this field is
        /// set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreAdversarialQuery")]
        public virtual System.Nullable<bool> IgnoreAdversarialQuery { get; set; }

        /// <summary>
        /// Optional. Specifies whether to filter out jail-breaking queries. The default value is `false`. Google
        /// employs search-query classification to detect jail-breaking queries. No summary is returned if the search
        /// query is classified as a jail-breaking query. A user might add instructions to the query to change the tone,
        /// style, language, content of the answer, or ask the model to act as a different entity, e.g. "Reply in the
        /// tone of a competing company's CEO". If this field is set to `true`, we skip generating summaries for
        /// jail-breaking queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreJailBreakingQuery")]
        public virtual System.Nullable<bool> IgnoreJailBreakingQuery { get; set; }

        /// <summary>
        /// Specifies whether to filter out queries that have low relevance. The default value is `false`. If this field
        /// is set to `false`, all search results are used regardless of relevance to generate answers. If set to
        /// `true`, only queries with high relevance search results will generate answers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreLowRelevantContent")]
        public virtual System.Nullable<bool> IgnoreLowRelevantContent { get; set; }

        /// <summary>
        /// Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google
        /// employs search-query classification to detect summary-seeking queries. No summary is returned if the search
        /// query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best
        /// soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not.
        /// They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for
        /// non-summary seeking queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreNonSummarySeekingQuery")]
        public virtual System.Nullable<bool> IgnoreNonSummarySeekingQuery { get; set; }

        /// <summary>
        /// Specifies whether to include citations in the summary. The default value is `false`. When this field is set
        /// to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is
        /// Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all
        /// data types, works across clouds, and has built-in machine learning and business intelligence, all within a
        /// unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For
        /// example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the
        /// sentence is attributed to both the second and third search results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeCitations")]
        public virtual System.Nullable<bool> IncludeCitations { get; set; }

        /// <summary>
        /// Language code for Summary. Use language tags defined by
        /// [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>If specified, the spec will be used to modify the prompt provided to the LLM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelPromptSpec")]
        public virtual GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec ModelPromptSpec { get; set; }

        /// <summary>
        /// If specified, the spec will be used to modify the model specification provided to the LLM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelSpec")]
        public virtual GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec ModelSpec { get; set; }

        /// <summary>
        /// The number of top results to generate the summary from. If the number of results returned is less than
        /// `summaryResultCount`, the summary is generated from all of the results. At most 10 results for documents
        /// mode, or 50 for chunks mode, can be used to generate a summary. The chunks mode is used when
        /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summaryResultCount")]
        public virtual System.Nullable<int> SummaryResultCount { get; set; }

        /// <summary>
        /// If true, answer will be generated from most relevant chunks from top search results. This feature will
        /// improve summary quality. Note that with this feature enabled, not all top search results will be referenced
        /// and included in the reference list, so the citation source index only points to the search results listed in
        /// the reference list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useSemanticChunks")]
        public virtual System.Nullable<bool> UseSemanticChunks { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification of the prompt to use with the model.</summary>
    public class GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelPromptSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("preamble")]
        public virtual string Preamble { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification of the model.</summary>
    public class GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpecSummarySpecModelSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The model version used to generate the summary. Supported values are: * `stable`: string. Default value when
        /// no value is specified. Uses a generally available, fine-tuned model. For more information, see [Answer
        /// generation model versions and
        /// lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). * `preview`:
        /// string. (Public preview) Uses a preview model. For more information, see [Answer generation model versions
        /// and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configures metadata that is used to generate serving time results (e.g. search results or recommendation
    /// predictions). The ServingConfig is passed in the search and predict request and generates results.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ServingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Boost controls to use in serving path. All triggered boost controls will be applied. Boost controls must be
        /// in the same data store as the serving config. Maximum of 20 boost controls.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostControlIds")]
        public virtual System.Collections.Generic.IList<string> BoostControlIds { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. ServingConfig created timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The human readable serving config display name. Used in Discovery UI. This field must be a UTF-8
        /// encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Condition do not associate specifications. If multiple do not associate conditions match, all matching do
        /// not associate controls in the list will execute. Order does not matter. Maximum number of specifications is
        /// 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dissociateControlIds")]
        public virtual System.Collections.Generic.IList<string> DissociateControlIds { get; set; }

        /// <summary>
        /// How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-diversity`.
        /// Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` *
        /// `auto-diversity` If not specified, we choose default based on recommendation model type. Default value:
        /// `no-diversity`. Can only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diversityLevel")]
        public virtual string DiversityLevel { get; set; }

        /// <summary>
        /// Filter controls to use in serving path. All triggered filter controls will be applied. Filter controls must
        /// be in the same data store as the serving config. Maximum of 20 filter controls.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterControlIds")]
        public virtual System.Collections.Generic.IList<string> FilterControlIds { get; set; }

        /// <summary>The GenericConfig of the serving configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genericConfig")]
        public virtual GoogleCloudDiscoveryengineV1ServingConfigGenericConfig GenericConfig { get; set; }

        /// <summary>
        /// Condition ignore specifications. If multiple ignore conditions match, all matching ignore controls in the
        /// list will execute. Order does not matter. Maximum number of specifications is 100.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreControlIds")]
        public virtual System.Collections.Generic.IList<string> IgnoreControlIds { get; set; }

        /// <summary>The MediaConfig of the serving configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaConfig")]
        public virtual GoogleCloudDiscoveryengineV1ServingConfigMediaConfig MediaConfig { get; set; }

        /// <summary>
        /// The id of the model to use at serving time. Currently only RecommendationModels are supported. Can be
        /// changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-like CVR). Required
        /// when SolutionType is SOLUTION_TYPE_RECOMMENDATION.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelId")]
        public virtual string ModelId { get; set; }

        /// <summary>
        /// Immutable. Fully qualified name
        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all matching oneway
        /// synonyms controls in the list will execute. Maximum number of specifications is 100. Can only be set if
        /// SolutionType is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("onewaySynonymsControlIds")]
        public virtual System.Collections.Generic.IList<string> OnewaySynonymsControlIds { get; set; }

        /// <summary>Condition promote specifications. Maximum number of specifications is 100.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promoteControlIds")]
        public virtual System.Collections.Generic.IList<string> PromoteControlIds { get; set; }

        /// <summary>
        /// The ranking expression controls the customized ranking on retrieval documents. To leverage this, document
        /// embedding is required. The ranking expression setting in ServingConfig applies to all search requests served
        /// by the serving config. However, if `SearchRequest.ranking_expression` is specified, it overrides the
        /// ServingConfig ranking expression. The ranking expression is a single function or multiple functions that are
        /// joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double *
        /// relevance_score * double * dotProduct(embedding_field_path) Function variables: * `relevance_score`:
        /// pre-defined keywords, used for measure relevance between query and document. * `embedding_field_path`: the
        /// document embedding field used with query embedding vector. * `dotProduct`: embedding function between
        /// embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding
        /// field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 *
        /// dotProduct(doc_embedding)`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rankingExpression")]
        public virtual string RankingExpression { get; set; }

        /// <summary>
        /// IDs of the redirect controls. Only the first triggered redirect action is applied, even if multiple apply.
        /// Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectControlIds")]
        public virtual System.Collections.Generic.IList<string> RedirectControlIds { get; set; }

        /// <summary>
        /// Condition replacement specifications. Applied according to the order in the list. A previously replaced term
        /// can not be re-replaced. Maximum number of specifications is 100. Can only be set if SolutionType is
        /// SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replacementControlIds")]
        public virtual System.Collections.Generic.IList<string> ReplacementControlIds { get; set; }

        /// <summary>
        /// Required. Immutable. Specifies the solution type that a serving config can be associated with.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionType")]
        public virtual string SolutionType { get; set; }

        /// <summary>
        /// Condition synonyms specifications. If multiple synonyms conditions match, all matching synonyms controls in
        /// the list will execute. Maximum number of specifications is 100. Can only be set if SolutionType is
        /// SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonymsControlIds")]
        public virtual System.Collections.Generic.IList<string> SynonymsControlIds { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. ServingConfig updated timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies the configurations needed for Generic Discovery.Currently we support: * `content_search_spec`:
    /// configuration for generic content search.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ServingConfigGenericConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies the expected behavior of content search. Only valid for content-search enabled data store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentSearchSpec")]
        public virtual GoogleCloudDiscoveryengineV1SearchRequestContentSearchSpec ContentSearchSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies the configurations needed for Media Discovery. Currently we support: * `demote_content_watched`:
    /// Threshold for watched content demotion. Customers can specify if using watched content demotion or use viewed
    /// detail page. Using the content watched demotion, customers need to specify the watched minutes or percentage
    /// exceeds the threshold, the content will be demoted in the recommendation result. * `promote_fresh_content`:
    /// cutoff days for fresh content promotion. Customers can specify if using content freshness promotion. If the
    /// content was published within the cutoff days, the content will be promoted in the recommendation result. Can
    /// only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1ServingConfigMediaConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies the content freshness used for recommendation result. Contents will be demoted if contents were
        /// published for more than content freshness cutoff days.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentFreshnessCutoffDays")]
        public virtual System.Nullable<int> ContentFreshnessCutoffDays { get; set; }

        /// <summary>
        /// Specifies the content watched percentage threshold for demotion. Threshold value must be between [0, 1.0]
        /// inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentWatchedPercentageThreshold")]
        public virtual System.Nullable<float> ContentWatchedPercentageThreshold { get; set; }

        /// <summary>Specifies the content watched minutes threshold for demotion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentWatchedSecondsThreshold")]
        public virtual System.Nullable<float> ContentWatchedSecondsThreshold { get; set; }

        /// <summary>
        /// Optional. Specifies the number of days to look back for demoting watched content. If set to zero or unset,
        /// defaults to the maximum of 365 days.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("demoteContentWatchedPastDays")]
        public virtual System.Nullable<int> DemoteContentWatchedPastDays { get; set; }

        /// <summary>
        /// Specifies the event type used for demoting recommendation result. Currently supported values: * `view-item`:
        /// Item viewed. * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`:
        /// Finished or stopped midway through a video, song, etc. If unset, watch history demotion will not be applied.
        /// Content freshness demotion will still be applied.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("demotionEventType")]
        public virtual string DemotionEventType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for single-regional CMEKs.</summary>
    public class GoogleCloudDiscoveryengineV1SingleRegionKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Single-regional kms key resource name which will be used to encrypt resources
        /// `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKey")]
        public virtual string KmsKey { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Verification information for target sites in advanced site search.</summary>
    public class GoogleCloudDiscoveryengineV1SiteVerificationInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Site verification state indicating the ownership and validity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteVerificationState")]
        public virtual string SiteVerificationState { get; set; }

        private string _verifyTimeRaw;

        private object _verifyTime;

        /// <summary>Latest site verification time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verifyTime")]
        public virtual string VerifyTimeRaw
        {
            get => _verifyTimeRaw;
            set
            {
                _verifyTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _verifyTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="VerifyTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use VerifyTimeDateTimeOffset instead.")]
        public virtual object VerifyTime
        {
            get => _verifyTime;
            set
            {
                _verifyTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _verifyTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="VerifyTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? VerifyTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(VerifyTimeRaw);
            set => VerifyTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A sitemap for the SiteSearchEngine.</summary>
    public class GoogleCloudDiscoveryengineV1Sitemap : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The sitemap's creation time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The fully qualified resource name of the sitemap.
        /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine/sitemaps/*` The `sitemap_id` suffix is
        /// system-generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Public URI for the sitemap, e.g. `www.example.com/sitemap.xml`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A target site for the SiteSearchEngine.</summary>
    public class GoogleCloudDiscoveryengineV1TargetSite : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Immutable. If set to false, a uri_pattern is generated to include all pages whose address contains the
        /// provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the
        /// provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one.
        /// provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exactMatch")]
        public virtual System.Nullable<bool> ExactMatch { get; set; }

        /// <summary>Output only. Failure reason.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReason")]
        public virtual GoogleCloudDiscoveryengineV1TargetSiteFailureReason FailureReason { get; set; }

        /// <summary>Output only. This is system-generated based on the provided_uri_pattern.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatedUriPattern")]
        public virtual string GeneratedUriPattern { get; set; }

        /// <summary>Output only. Indexing status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexingStatus")]
        public virtual string IndexingStatus { get; set; }

        /// <summary>
        /// Output only. The fully qualified resource name of the target site.
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
        /// The `target_site_id` is system-generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("providedUriPattern")]
        public virtual string ProvidedUriPattern { get; set; }

        /// <summary>Output only. Root domain of the provided_uri_pattern.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rootDomainUri")]
        public virtual string RootDomainUri { get; set; }

        /// <summary>Output only. Site ownership and validity verification status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteVerificationInfo")]
        public virtual GoogleCloudDiscoveryengineV1SiteVerificationInfo SiteVerificationInfo { get; set; }

        /// <summary>The type of the target site, e.g., whether the site is to be included or excluded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. The target site's last updated time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Site search indexing failure reasons.</summary>
    public class GoogleCloudDiscoveryengineV1TargetSiteFailureReason : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Failed due to insufficient quota.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quotaFailure")]
        public virtual GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure QuotaFailure { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Failed due to insufficient quota.</summary>
    public class GoogleCloudDiscoveryengineV1TargetSiteFailureReasonQuotaFailure : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// This number is an estimation on how much total quota this project needs to successfully complete indexing.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalRequiredQuota")]
        public virtual System.Nullable<long> TotalRequiredQuota { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the TrainCustomModel operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1TrainCustomModelMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the TrainCustomModelRequest. This message is returned by the google.longrunning.Operations.response
    /// field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1TrainCustomModelResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors in the request if set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1ImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The metrics of the trained model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IDictionary<string, System.Nullable<double>> Metrics { get; set; }

        /// <summary>Fully qualified name of the CustomTuningModel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelName")]
        public virtual string ModelName { get; set; }

        /// <summary>
        /// The trained model status. Possible values are: * **bad-data**: The training data quality is bad. *
        /// **no-improvement**: Tuning didn't improve performance. Won't deploy. * **in-progress**: Model training job
        /// creation is in progress. * **training**: Model is actively training. * **evaluating**: The model is
        /// evaluating trained metrics. * **indexing**: The model trained metrics are indexing. * **ready**: The model
        /// is ready for serving.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelStatus")]
        public virtual string ModelStatus { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CmekConfigService.UpdateCmekConfig operation. This will be returned by
    /// the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1UpdateCmekConfigMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for UpdateSchema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1UpdateSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.UpdateTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1UpdateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config to store data store type configuration for workspace data</summary>
    public class GoogleCloudDiscoveryengineV1WorkspaceConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Obfuscated Dasher customer ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dasherCustomerId")]
        public virtual string DasherCustomerId { get; set; }

        /// <summary>
        /// Optional. The super admin email address for the workspace that will be used for access token generation. For
        /// now we only use it for Native Google Drive connector data ingestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("superAdminEmailAddress")]
        public virtual string SuperAdminEmailAddress { get; set; }

        /// <summary>
        /// Optional. The super admin service account for the workspace that will be used for access token generation.
        /// For now we only use it for Native Google Drive connector data ingestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("superAdminServiceAccount")]
        public virtual string SuperAdminServiceAccount { get; set; }

        /// <summary>The Google Workspace data source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Access Control Configuration.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAclConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Identity provider config.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idpConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaIdpConfig IdpConfig { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the acl configuration. Format:
        /// `projects/{project}/locations/{location}/aclConfig`. This field must be a UTF-8 encoded string with a length
        /// limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Informations to support actions on the connector.</summary>
    public class GoogleCloudDiscoveryengineV1alphaActionConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Params needed to support actions in the format of (Key, Value) pairs. Required parameters for
        /// sources that support OAUTH, i.e. `gmail`, `google_calendar`, `jira`, `workday`, `salesforce`, `confluence`:
        /// * Key: `client_id` * Value: type STRING. The client ID for the service provider to identify your
        /// application. * Key: `client_secret` * Value:type STRING. The client secret generated by the application's
        /// authorization server.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actionParams")]
        public virtual System.Collections.Generic.IDictionary<string, object> ActionParams { get; set; }

        /// <summary>
        /// Output only. The connector contains the necessary parameters and is configured to support actions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isActionConfigured")]
        public virtual System.Nullable<bool> IsActionConfigured { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration data for advance site search.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAdvancedSiteSearchConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set true, automatic refresh is disabled for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableAutomaticRefresh")]
        public virtual System.Nullable<bool> DisableAutomaticRefresh { get; set; }

        /// <summary>If set true, initial indexing is disabled for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableInitialIndex")]
        public virtual System.Nullable<bool> DisableInitialIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines an answer.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Additional answer-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this
        /// field is not set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerSkippedReasons")]
        public virtual System.Collections.Generic.IList<string> AnswerSkippedReasons { get; set; }

        /// <summary>The textual answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerText")]
        public virtual string AnswerText { get; set; }

        /// <summary>Citations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("citations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerCitation> Citations { get; set; }

        private string _completeTimeRaw;

        private object _completeTime;

        /// <summary>Output only. Answer completed timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("completeTime")]
        public virtual string CompleteTimeRaw
        {
            get => _completeTimeRaw;
            set
            {
                _completeTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _completeTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CompleteTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CompleteTimeDateTimeOffset instead.")]
        public virtual object CompleteTime
        {
            get => _completeTime;
            set
            {
                _completeTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _completeTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CompleteTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CompleteTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CompleteTimeRaw);
            set => CompleteTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Answer creation timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// A score in the range of [0, 1] describing how grounded the answer is by the reference chunks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingScore")]
        public virtual System.Nullable<double> GroundingScore { get; set; }

        /// <summary>Optional. Grounding supports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingSupports")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerGroundingSupport> GroundingSupports { get; set; }

        /// <summary>
        /// Immutable. Fully qualified name
        /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*/answers/*`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Query understanding information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryUnderstandingInfo")]
        public virtual GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo QueryUnderstandingInfo { get; set; }

        /// <summary>References.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("references")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerReference> References { get; set; }

        /// <summary>Suggested related questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relatedQuestions")]
        public virtual System.Collections.Generic.IList<string> RelatedQuestions { get; set; }

        /// <summary>Optional. Safety ratings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safetyRatings")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSafetyRating> SafetyRatings { get; set; }

        /// <summary>The state of the answer generation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>Answer generation steps.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("steps")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerStep> Steps { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Citation info for a segment.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerCitation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// End of the attributed segment, exclusive. Measured in bytes (UTF-8 unicode). If there are multi-byte
        /// characters,such as non-ASCII characters, the index measurement is longer than the string length.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endIndex")]
        public virtual System.Nullable<long> EndIndex { get; set; }

        /// <summary>Citation sources for the attributed segment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerCitationSource> Sources { get; set; }

        /// <summary>
        /// Index indicates the start of the segment, measured in bytes (UTF-8 unicode). If there are multi-byte
        /// characters,such as non-ASCII characters, the index measurement is longer than the string length.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startIndex")]
        public virtual System.Nullable<long> StartIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Citation source.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerCitationSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the citation source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceId")]
        public virtual string ReferenceId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Grounding support for a claim in `answer_text`.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerGroundingSupport : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. End of the claim, exclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endIndex")]
        public virtual System.Nullable<long> EndIndex { get; set; }

        /// <summary>
        /// Indicates that this claim required grounding check. When the system decided this claim didn't require
        /// attribution/grounding check, this field is set to false. In that case, no grounding check was done for the
        /// claim and therefore `grounding_score`, `sources` is not returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingCheckRequired")]
        public virtual System.Nullable<bool> GroundingCheckRequired { get; set; }

        /// <summary>
        /// A score in the range of [0, 1] describing how grounded is a specific claim by the references. Higher value
        /// means that the claim is better supported by the reference chunks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingScore")]
        public virtual System.Nullable<double> GroundingScore { get; set; }

        /// <summary>Optional. Citation sources for the claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerCitationSource> Sources { get; set; }

        /// <summary>Required. Index indicates the start of the claim, measured in bytes (UTF-8 unicode).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startIndex")]
        public virtual System.Nullable<long> StartIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query understanding information.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Query classification information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryClassificationInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo> QueryClassificationInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query classification information.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerQueryUnderstandingInfoQueryClassificationInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Classification output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positive")]
        public virtual System.Nullable<bool> Positive { get; set; }

        /// <summary>Query classification type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Reference.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkInfo")]
        public virtual GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo ChunkInfo { get; set; }

        /// <summary>Structured document information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredDocumentInfo")]
        public virtual GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo StructuredDocumentInfo { get; set; }

        /// <summary>Unstructured document information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDocumentInfo")]
        public virtual GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo UnstructuredDocumentInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk information.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunk")]
        public virtual string Chunk { get; set; }

        /// <summary>Chunk textual content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Document metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentMetadata")]
        public virtual GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata DocumentMetadata { get; set; }

        /// <summary>
        /// The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0
        /// (completely relevant). This value is for informational purpose only. It may change for the same query and
        /// chunk at any time due to a model retraining or change in implementation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceScore")]
        public virtual System.Nullable<float> RelevanceScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document metadata.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerReferenceChunkInfoDocumentMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>Page identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageIdentifier")]
        public virtual string PageIdentifier { get; set; }

        /// <summary>
        /// The structured JSON metadata for the document. It is populated from the struct data from the Chunk in search
        /// result.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI for the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Structured search information.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerReferenceStructuredDocumentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>Structured search data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Output only. The title of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>Output only. The URI of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Unstructured document information.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of cited chunk contents derived from document content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkContents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent> ChunkContents { get; set; }

        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>
        /// The structured JSON metadata for the document. It is populated from the struct data from the Chunk in search
        /// result.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI for the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk content.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerReferenceUnstructuredDocumentInfoChunkContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk textual content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Page identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageIdentifier")]
        public virtual string PageIdentifier { get; set; }

        /// <summary>
        /// The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0
        /// (completely relevant). This value is for informational purpose only. It may change for the same query and
        /// chunk at any time due to a model retraining or change in implementation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceScore")]
        public virtual System.Nullable<float> RelevanceScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Step information.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerStep : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Actions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerStepAction> Actions { get; set; }

        /// <summary>The description of the step.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>The state of the step.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The thought of the step.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thought")]
        public virtual string Thought { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Action.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerStepAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Observation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("observation")]
        public virtual GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation Observation { get; set; }

        /// <summary>Search action.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchAction")]
        public virtual GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction SearchAction { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Observation.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Search results observed by the search action, it can be snippets info or chunk info, depending on the
        /// citation type set by the user.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult> SearchResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If citation_type is CHUNK_LEVEL_CITATION and chunk mode is on, populate chunk info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo> ChunkInfo { get; set; }

        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>If citation_type is DOCUMENT_LEVEL_CITATION, populate document level snippets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippetInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo> SnippetInfo { get; set; }

        /// <summary>
        /// Data representation. The structured JSON data for the document. It's populated from the struct data from the
        /// Document, or the Chunk in search result.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI for the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk information.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultChunkInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunk")]
        public virtual string Chunk { get; set; }

        /// <summary>Chunk textual content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>
        /// The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0
        /// (completely relevant). This value is for informational purpose only. It may change for the same query and
        /// chunk at any time due to a model retraining or change in implementation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceScore")]
        public virtual System.Nullable<float> RelevanceScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Snippet information.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerStepActionObservationSearchResultSnippetInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Snippet content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual string Snippet { get; set; }

        /// <summary>Status of the snippet defined by the search team.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippetStatus")]
        public virtual string SnippetStatus { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Search action.</summary>
    public class GoogleCloudDiscoveryengineV1alphaAnswerStepActionSearchAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The query to search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.BatchCreateTargetSites operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.BatchCreateTargetSites method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaBatchCreateTargetSitesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>TargetSites created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSites")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaTargetSite> TargetSites { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations used to enable CMEK data encryption with Cloud KMS keys.</summary>
    public class GoogleCloudDiscoveryengineV1alphaCmekConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The default CmekConfig for the Customer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isDefault")]
        public virtual System.Nullable<bool> IsDefault { get; set; }

        /// <summary>
        /// KMS key resource name which will be used to encrypt resources
        /// `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKey")]
        public virtual string KmsKey { get; set; }

        /// <summary>
        /// KMS key version resource name which will be used to encrypt resources `/cryptoKeyVersions/{keyVersion}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyVersion")]
        public virtual string KmsKeyVersion { get; set; }

        /// <summary>Output only. The timestamp of the last key rotation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastRotationTimestampMicros")]
        public virtual System.Nullable<long> LastRotationTimestampMicros { get; set; }

        /// <summary>
        /// Required. The name of the CmekConfig of the form `projects/{project}/locations/{location}/cmekConfig` or
        /// `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Optional. Single-regional CMEKs that are required for some VAIS features.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("singleRegionKeys")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSingleRegionKey> SingleRegionKeys { get; set; }

        /// <summary>Output only. The states of the CmekConfig.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Collection is a container for configuring resources and access to a set of DataStores.</summary>
    public class GoogleCloudDiscoveryengineV1alphaCollection : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the Collection was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The data connector, if present, manages the connection for data stores in the Collection. To
        /// set up the connector, use DataConnectorService.SetUpDataConnector method, which creates a new Collection
        /// while setting up the DataConnector singleton resource. Setting up connector on an existing Collection is not
        /// supported. This output only field contains a subset of the DataConnector fields, including `name`,
        /// `data_source`, `entities.entity_name` and `entities.data_store`. To get more details about a data connector,
        /// use the DataConnectorService.GetDataConnector method.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataConnector")]
        public virtual GoogleCloudDiscoveryengineV1alphaDataConnector DataConnector { get; set; }

        /// <summary>
        /// Required. The Collection display name. This field must be a UTF-8 encoded string with a length limit of 128
        /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the Collection. Format:
        /// `projects/{project}/locations/{location}/collections/{collection_id}`. This field must be a UTF-8 encoded
        /// string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines circumstances to be checked before allowing a behavior</summary>
    public class GoogleCloudDiscoveryengineV1alphaCondition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Range of time(s) specifying when condition is active. Maximum of 10 time ranges.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeTimeRange")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaConditionTimeRange> ActiveTimeRange { get; set; }

        /// <summary>
        /// Optional. Query regex to match the whole search query. Cannot be set when Condition.query_terms is set. This
        /// is currently supporting promotion use case.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryRegex")]
        public virtual string QueryRegex { get; set; }

        /// <summary>
        /// Search only A list of terms to match the query on. Cannot be set when Condition.query_regex is set. Maximum
        /// of 10 query terms.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryTerms")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaConditionQueryTerm> QueryTerms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Matcher for search request query</summary>
    public class GoogleCloudDiscoveryengineV1alphaConditionQueryTerm : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether the search query needs to exactly match the query term.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fullMatch")]
        public virtual System.Nullable<bool> FullMatch { get; set; }

        /// <summary>
        /// The specific query value to match against Must be lowercase, must be UTF-8. Can have at most 3 space
        /// separated terms if full_match is true. Cannot be an empty string. Maximum length of 5000 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Used for time-dependent conditions.</summary>
    public class GoogleCloudDiscoveryengineV1alphaConditionTimeRange : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _endTimeRaw;

        private object _endTime;

        /// <summary>End of time range. Range is inclusive. Must be in the future.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Start of time range. Range is inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A data sync run of DataConnector. After DataConnector is successfully initialized, data syncs are scheduled at
    /// DataConnector.refresh_interval. A ConnectorRun represents a data sync either in the past or onging that the
    /// moment. //
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaConnectorRun : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _endTimeRaw;

        private object _endTime;

        /// <summary>Output only. The time when the connector run ended.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The details of the entities synced at the ConnectorRun. Each ConnectorRun consists of syncing
        /// one or more entities.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityRuns")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun> EntityRuns { get; set; }

        /// <summary>
        /// Contains info about errors incurred during the sync. Only exist if running into an error state. Contains
        /// error code and error message. Use with the `state` field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> Errors { get; set; }

        private string _latestPauseTimeRaw;

        private object _latestPauseTime;

        /// <summary>Output only. The time when the connector run was most recently paused.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestPauseTime")]
        public virtual string LatestPauseTimeRaw
        {
            get => _latestPauseTimeRaw;
            set
            {
                _latestPauseTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _latestPauseTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="LatestPauseTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use LatestPauseTimeDateTimeOffset instead.")]
        public virtual object LatestPauseTime
        {
            get => _latestPauseTime;
            set
            {
                _latestPauseTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _latestPauseTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="LatestPauseTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? LatestPauseTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(LatestPauseTimeRaw);
            set => LatestPauseTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The full resource name of the Connector Run. Format:
        /// `projects/*/locations/*/collections/*/dataConnector/connectorRuns/*`. The `connector_run_id` is
        /// system-generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Output only. The time when the connector run started.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The state of the sync run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        private string _stateUpdateTimeRaw;

        private object _stateUpdateTime;

        /// <summary>Timestamp at which the connector run sync state was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stateUpdateTime")]
        public virtual string StateUpdateTimeRaw
        {
            get => _stateUpdateTimeRaw;
            set
            {
                _stateUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _stateUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StateUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StateUpdateTimeDateTimeOffset instead.")]
        public virtual object StateUpdateTime
        {
            get => _stateUpdateTime;
            set
            {
                _stateUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _stateUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="StateUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StateUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StateUpdateTimeRaw);
            set => StateUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The trigger for this ConnectorRun.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trigger")]
        public virtual string Trigger { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an entity that was synced in this ConnectorRun.</summary>
    public class GoogleCloudDiscoveryengineV1alphaConnectorRunEntityRun : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of documents deleted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deletedRecordCount")]
        public virtual System.Nullable<long> DeletedRecordCount { get; set; }

        /// <summary>The name of the source entity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityName")]
        public virtual string EntityName { get; set; }

        /// <summary>The total number of documents failed at sync at any stage (extraction, indexing, etc).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorRecordCount")]
        public virtual System.Nullable<long> ErrorRecordCount { get; set; }

        /// <summary>
        /// The errors from the entity's sync run. Only exist if running into an error state. Contains error code and
        /// error message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> Errors { get; set; }

        /// <summary>The number of documents extracted from connector source, ready to be ingested to UCS.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extractedRecordCount")]
        public virtual System.Nullable<long> ExtractedRecordCount { get; set; }

        /// <summary>The number of documents indexed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexedRecordCount")]
        public virtual System.Nullable<long> IndexedRecordCount { get; set; }

        /// <summary>The number of requests sent to 3p API.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceApiRequestCount")]
        public virtual System.Nullable<long> SourceApiRequestCount { get; set; }

        /// <summary>The state of the entity's sync run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        private string _stateUpdateTimeRaw;

        private object _stateUpdateTime;

        /// <summary>Timestamp at which the entity sync state was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stateUpdateTime")]
        public virtual string StateUpdateTimeRaw
        {
            get => _stateUpdateTimeRaw;
            set
            {
                _stateUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _stateUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StateUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StateUpdateTimeDateTimeOffset instead.")]
        public virtual object StateUpdateTime
        {
            get => _stateUpdateTime;
            set
            {
                _stateUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _stateUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="StateUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StateUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StateUpdateTimeRaw);
            set => StateUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _statsUpdateTimeRaw;

        private object _statsUpdateTime;

        /// <summary>
        /// The timestamp for either extracted_documents_count, indexed_documents_count and error_documents_count was
        /// last updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statsUpdateTime")]
        public virtual string StatsUpdateTimeRaw
        {
            get => _statsUpdateTimeRaw;
            set
            {
                _statsUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _statsUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StatsUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StatsUpdateTimeDateTimeOffset instead.")]
        public virtual object StatsUpdateTime
        {
            get => _statsUpdateTime;
            set
            {
                _statsUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _statsUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="StatsUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StatsUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StatsUpdateTimeRaw);
            set => StatsUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Sync type of this run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("syncType")]
        public virtual string SyncType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Defines a conditioned behavior to employ during serving. Must be attached to a ServingConfig to be considered at
    /// serving time. Permitted actions dependent on `SolutionType`.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaControl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. List of all ServingConfig IDs this control is attached to. May take up to 10 minutes to update
        /// after changes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("associatedServingConfigIds")]
        public virtual System.Collections.Generic.IList<string> AssociatedServingConfigIds { get; set; }

        /// <summary>Defines a boost-type control</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAction")]
        public virtual GoogleCloudDiscoveryengineV1alphaControlBoostAction BoostAction { get; set; }

        /// <summary>
        /// Determines when the associated action will trigger. Omit to always apply the action. Currently only a single
        /// condition may be specified. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaCondition> Conditions { get; set; }

        /// <summary>
        /// Required. Human readable name. The identifier used in UI views. Must be UTF-8 encoded string. Length limit
        /// is 128 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Defines a filter-type control Currently not supported by Recommendation</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterAction")]
        public virtual GoogleCloudDiscoveryengineV1alphaControlFilterAction FilterAction { get; set; }

        /// <summary>Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Promote certain links based on predefined trigger queries. This now only supports basic site search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promoteAction")]
        public virtual GoogleCloudDiscoveryengineV1alphaControlPromoteAction PromoteAction { get; set; }

        /// <summary>Defines a redirect-type control.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectAction")]
        public virtual GoogleCloudDiscoveryengineV1alphaControlRedirectAction RedirectAction { get; set; }

        /// <summary>
        /// Required. Immutable. What solution the control belongs to. Must be compatible with vertical of resource.
        /// Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionType")]
        public virtual string SolutionType { get; set; }

        /// <summary>Treats a group of terms as synonyms of one another.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonymsAction")]
        public virtual GoogleCloudDiscoveryengineV1alphaControlSynonymsAction SynonymsAction { get; set; }

        /// <summary>
        /// Specifies the use case for the control. Affects what condition fields can be set. Only applies to
        /// SOLUTION_TYPE_SEARCH. Currently only allow one use case per control. Must be set when solution_type is
        /// SolutionType.SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useCases")]
        public virtual System.Collections.Generic.IList<string> UseCases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Adjusts order of products in returned list.</summary>
    public class GoogleCloudDiscoveryengineV1alphaControlBoostAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boost")]
        public virtual System.Nullable<float> Boost { get; set; }

        /// <summary>
        /// Required. Specifies which data store's documents can be boosted by this control. Full data store name e.g.
        /// projects/123/locations/global/collections/default_collection/dataStores/default_data_store
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Required. Specifies which products to apply the boost to. If no filter is provided all products will be
        /// boosted (No-op). Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length
        /// is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// Optional. Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0
        /// (No-op).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fixedBoost")]
        public virtual System.Nullable<float> FixedBoost { get; set; }

        /// <summary>
        /// Optional. Complex specification for custom ranking based on customer defined attribute value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationBoostSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec InterpolationBoostSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specification for custom ranking based on customer specified attribute value. It provides more controls for
    /// customized ranking than the simple (condition, boost) combination above.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The attribute type to be used to determine the boost amount. The attribute value can be derived
        /// from the field value of the specified field_name. In the case of numerical it is straightforward i.e.
        /// attribute_value = numerical_field_value. In the case of freshness however, attribute_value = (time.now() -
        /// datetime_field_value).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeType")]
        public virtual string AttributeType { get; set; }

        /// <summary>
        /// Optional. The control points used to define the curve. The monotonic function (defined through the
        /// interpolation_type above) passes through the control points listed here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("controlPoints")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpecControlPoint> ControlPoints { get; set; }

        /// <summary>Optional. The name of the field whose value will be used to determine the boost amount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>
        /// Optional. The interpolation type to be applied to connect the control points listed below.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationType")]
        public virtual string InterpolationType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The control points used to define the curve. The curve defined through these control points can only be
    /// monotonically increasing or decreasing(constant values are acceptable).
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaControlBoostActionInterpolationBoostSpecControlPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be
        /// formatted as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern
        /// for this is: `nDnM]`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeValue")]
        public virtual string AttributeValue { get; set; }

        /// <summary>
        /// Optional. The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the
        /// value specified above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAmount")]
        public virtual System.Nullable<float> BoostAmount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specified which products may be included in results. Uses same filter as boost.</summary>
    public class GoogleCloudDiscoveryengineV1alphaControlFilterAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Specifies which data store's documents can be filtered by this control. Full data store name e.g.
        /// projects/123/locations/global/collections/default_collection/dataStores/default_data_store
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Required. A filter to apply on the matching condition results. Required Syntax documentation:
        /// https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an
        /// INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Promote certain links based on some trigger queries. Example: Promote shoe store link when searching for `shoe`
    /// keyword. The link can be outside of associated data store.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaControlPromoteAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Data store with which this promotion is attached to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>Required. Promotion attached to this action.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchLinkPromotion")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchLinkPromotion SearchLinkPromotion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Redirects a shopper to the provided URI.</summary>
    public class GoogleCloudDiscoveryengineV1alphaControlRedirectAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The URI to which the shopper will be redirected. Required. URI must have length equal or less than
        /// 2000 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectUri")]
        public virtual string RedirectUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Creates a set of terms that will act as synonyms of one another. Example: "happy" will also be considered as
    /// "glad", "glad" will also be considered as "happy".
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaControlSynonymsAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms. Otherwise an
        /// INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The historical crawl rate timeseries data, used for monitoring.</summary>
    public class GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The QPS of the crawl rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("qpsTimeSeries")]
        public virtual GoogleMonitoringV3TimeSeries QpsTimeSeries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the DataStoreService.CreateDataStore operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaCreateDataStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the EngineService.CreateEngine operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaCreateEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for EvaluationService.CreateEvaluation method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaCreateEvaluationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for Create Schema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1alphaCreateSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.CreateSitemap operation. This will be returned
    /// by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaCreateSitemapMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.CreateTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaCreateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines custom fine tuning spec.</summary>
    public class GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether or not to enable and include custom fine tuned search adaptor model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableSearchAdaptor")]
        public virtual System.Nullable<bool> EnableSearchAdaptor { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Manages the connection to external data sources for all data stores grouped under a Collection. It's a singleton
    /// resource of Collection. The initialization is only supported through DataConnectorService.SetUpDataConnector
    /// method, which will create a new Collection and initialize its DataConnector.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDataConnector : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Action configurations to make the connector support actions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actionConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaActionConfig ActionConfig { get; set; }

        /// <summary>
        /// Indicates whether the connector is disabled for auto run. It can be used to pause periodical and real time
        /// sync.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoRunDisabled")]
        public virtual System.Nullable<bool> AutoRunDisabled { get; set; }

        /// <summary>
        /// Output only. User actions that must be completed before the connector can start syncing data.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blockingReasons")]
        public virtual System.Collections.Generic.IList<string> BlockingReasons { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the DataConnector was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The name of the data source. Supported values: `salesforce`, `jira`, `confluence`, `bigquery`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataSource")]
        public virtual string DataSource { get; set; }

        /// <summary>Optional. Any target destinations used to connect to third-party services.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinationConfigs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaDestinationConfig> DestinationConfigs { get; set; }

        /// <summary>List of entities from the connected data source to ingest.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entities")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity> Entities { get; set; }

        /// <summary>Output only. The errors from initialization or from the latest connector run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> Errors { get; set; }

        /// <summary>
        /// The refresh interval to sync the Access Control List information for the documents ingested by this
        /// connector. If not set, the access control list will be refreshed at the default interval of 30 minutes. The
        /// identity refresh interval can be at least 30 minutes and at most 7 days.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityRefreshInterval")]
        public virtual object IdentityRefreshInterval { get; set; }

        /// <summary>
        /// The configuration for the identity data synchronization runs. This contains the refresh interval to sync the
        /// Access Control List information for the documents ingested by this connector.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityScheduleConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig IdentityScheduleConfig { get; set; }

        /// <summary>
        /// Input only. The KMS key to be used to protect the DataStores managed by this connector. Must be set for
        /// requests that need to comply with CMEK Org Policy protections. If this field is set and processed
        /// successfully, the DataStores created by this connector will be protected by the KMS key.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyName")]
        public virtual string KmsKeyName { get; set; }

        private string _lastSyncTimeRaw;

        private object _lastSyncTime;

        /// <summary>Output only. For periodic connectors only, the last time a data sync was completed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastSyncTime")]
        public virtual string LastSyncTimeRaw
        {
            get => _lastSyncTimeRaw;
            set
            {
                _lastSyncTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _lastSyncTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="LastSyncTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use LastSyncTimeDateTimeOffset instead.")]
        public virtual object LastSyncTime
        {
            get => _lastSyncTime;
            set
            {
                _lastSyncTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _lastSyncTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="LastSyncTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? LastSyncTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(LastSyncTimeRaw);
            set => LastSyncTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _latestPauseTimeRaw;

        private object _latestPauseTime;

        /// <summary>
        /// Output only. The most recent timestamp when this DataConnector was paused, affecting all functionalities
        /// such as data synchronization. Pausing a connector has the following effects: - All functionalities,
        /// including data synchronization, are halted. - Any ongoing data synchronization job will be canceled. - No
        /// future data synchronization runs will be scheduled nor can be triggered.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestPauseTime")]
        public virtual string LatestPauseTimeRaw
        {
            get => _latestPauseTimeRaw;
            set
            {
                _latestPauseTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _latestPauseTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="LatestPauseTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use LatestPauseTimeDateTimeOffset instead.")]
        public virtual object LatestPauseTime
        {
            get => _latestPauseTime;
            set
            {
                _latestPauseTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _latestPauseTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="LatestPauseTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? LatestPauseTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(LatestPauseTimeRaw);
            set => LatestPauseTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The full resource name of the Data Connector. Format:
        /// `projects/*/locations/*/collections/*/dataConnector`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Defines the scheduled time for the next data synchronization. This field requires hour , minute, and
        /// time_zone from the [IANA Time Zone Database](https://www.iana.org/time-zones). This is utilized when the
        /// data connector has a refresh interval greater than 1 day. When the hours or minutes are not specified, we
        /// will assume a sync time of 0:00. The user must provide a time zone to avoid ambiguity.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextSyncTime")]
        public virtual GoogleTypeDateTime NextSyncTime { get; set; }

        /// <summary>
        /// Required. Params needed to access the source in the format of (Key, Value) pairs. Required parameters for
        /// all data sources: * Key: `instance_uri` * Value: type STRING. The uri to access the data source. Required
        /// parameters for sources that support OAUTH, i.e. `salesforce`: * Key: `client_id` * Value: type STRING. The
        /// client ID for the third party service provider to identify your application. * Key: `client_secret` *
        /// Value:type STRING. The client secret generated by the third party authorization server. * Key:
        /// `access_token` * Value: type STRING. OAuth token for UCS to access to the protected resource. * Key:
        /// `refresh_token` * Value: type STRING. OAuth refresh token for UCS to obtain a new access token without user
        /// interaction. Required parameters for sources that support basic API token auth, i.e. `jira`, `confluence`: *
        /// Key: `user_account` * Value: type STRING. The username or email with the source. * Key: `api_token` * Value:
        /// type STRING. The API token generated for the source account, that is used for authenticating anywhere where
        /// you would have used a password. Example:
        /// ```
        /// json { "instance_uri": "https://xxx.atlassian.net",
        /// "user_account": "xxxx.xxx@xxx.com", "api_token": "test-token" }
        /// ```
        /// Optional parameter to specify the
        /// authorization type to use for multiple authorization types support: * Key: `auth_type` * Value: type STRING.
        /// The authorization type for the data source. Supported values: `BASIC_AUTH`, `OAUTH`, `OAUTH_ACCESS_TOKEN`,
        /// `OAUTH_TWO_LEGGED`, `OAUTH_JWT_BEARER`, `OAUTH_PASSWORD_GRANT`, `JWT`, `API_TOKEN`, `FEDERATED_CREDENTIAL`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("params")]
        public virtual System.Collections.Generic.IDictionary<string, object> Params__ { get; set; }

        /// <summary>
        /// Output only. The tenant project ID associated with private connectivity connectors. This project must be
        /// allowlisted by in order for the connector to function.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privateConnectivityProjectId")]
        public virtual string PrivateConnectivityProjectId { get; set; }

        /// <summary>
        /// Required. The refresh interval for data sync. If duration is set to 0, the data will be synced in real time.
        /// The streaming feature is not supported yet. The minimum is 30 minutes and maximum is 7 days.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("refreshInterval")]
        public virtual object RefreshInterval { get; set; }

        /// <summary>Output only. State of the connector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>Output only. The static IP addresses used by this connector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("staticIpAddresses")]
        public virtual System.Collections.Generic.IList<string> StaticIpAddresses { get; set; }

        /// <summary>Optional. Whether customer has enabled static IP addresses for this connector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("staticIpEnabled")]
        public virtual System.Nullable<bool> StaticIpEnabled { get; set; }

        /// <summary>The data synchronization mode supported by the data connector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("syncMode")]
        public virtual string SyncMode { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. Timestamp the DataConnector was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an entity in the data source. For example, the `Account` object in Salesforce.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDataConnectorSourceEntity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. The full resource name of the associated data store for the source entity. Format:
        /// `projects/*/locations/*/collections/*/dataStores/*`. When the connector is initialized by the
        /// DataConnectorService.SetUpDataConnector method, a DataStore is automatically created for each source entity.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// The name of the entity. Supported values by data source: * Salesforce: `Lead`, `Opportunity`, `Contact`,
        /// `Account`, `Case`, `Contract`, `Campaign` * Jira: `Issue` * Confluence: `Content`, `Space`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entityName")]
        public virtual string EntityName { get; set; }

        /// <summary>Optional. Configuration for `HEALTHCARE_FHIR` vertical.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthcareFhirConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig HealthcareFhirConfig { get; set; }

        /// <summary>
        /// Attributes for indexing. Key: Field name. Value: The key property to map a field to, such as `title`, and
        /// `description`. Supported key properties: * `title`: The title for data record. This would be displayed on
        /// search results. * `description`: The description for data record. This would be displayed on search results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyPropertyMappings")]
        public virtual System.Collections.Generic.IDictionary<string, string> KeyPropertyMappings { get; set; }

        /// <summary>
        /// The parameters for the entity to facilitate data ingestion. E.g. for BigQuery connectors: * Key:
        /// `document_id_column` * Value: type STRING. The value of the column ID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("params")]
        public virtual System.Collections.Generic.IDictionary<string, object> Params__ { get; set; }

        /// <summary>
        /// Optional. The start schema to use for the DataStore created from this SourceEntity. If unset, a default
        /// vertical specialized schema will be used. This field is only used by SetUpDataConnector API, and will be
        /// ignored if used in other APIs. This field will be omitted from all API responses including GetDataConnector
        /// API. To retrieve a schema of a DataStore, use SchemaService.GetSchema API instead. The provided schema will
        /// be validated against certain rules on schema. Learn more from [this
        /// doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startingSchema")]
        public virtual GoogleCloudDiscoveryengineV1alphaSchema StartingSchema { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>DataStore captures global settings and configs at the DataStore level.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDataStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Immutable. Whether data in the DataStore has ACL information. If set to `true`, the source data must have
        /// ACL. ACL will be ingested when data is ingested by DocumentService.ImportDocuments methods. When ACL is
        /// enabled for the DataStore, Document can't be accessed by calling DocumentService.GetDocument or
        /// DocumentService.ListDocuments. Currently ACL is only supported in `GENERIC` industry vertical with
        /// non-`PUBLIC_WEBSITE` content config.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aclEnabled")]
        public virtual System.Nullable<bool> AclEnabled { get; set; }

        /// <summary>Optional. Configuration for advanced site search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSiteSearchConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaAdvancedSiteSearchConfig AdvancedSiteSearchConfig { get; set; }

        /// <summary>Output only. Data size estimation for billing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingEstimation")]
        public virtual GoogleCloudDiscoveryengineV1alphaDataStoreBillingEstimation BillingEstimation { get; set; }

        /// <summary>Output only. CMEK-related information for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cmekConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaCmekConfig CmekConfig { get; set; }

        /// <summary>
        /// Immutable. The content config of the data store. If this field is unset, the server behavior defaults to
        /// ContentConfig.NO_CONTENT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentConfig")]
        public virtual string ContentConfig { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the DataStore was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The id of the default Schema associated to this data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultSchemaId")]
        public virtual string DefaultSchemaId { get; set; }

        /// <summary>
        /// Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128
        /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Configuration for Document understanding and enrichment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentProcessingConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig DocumentProcessingConfig { get; set; }

        /// <summary>Optional. Configuration for `HEALTHCARE_FHIR` vertical.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthcareFhirConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig HealthcareFhirConfig { get; set; }

        /// <summary>
        /// Immutable. The fully qualified resource name of the associated IdentityMappingStore. This field can only be
        /// set for acl_enabled DataStores with `THIRD_PARTY` or `GSUITE` IdP. Format:
        /// `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityMappingStore")]
        public virtual string IdentityMappingStore { get; set; }

        /// <summary>Output only. Data store level identity provider config.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idpConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaIdpConfig IdpConfig { get; set; }

        /// <summary>Immutable. The industry vertical that the data store registers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("industryVertical")]
        public virtual string IndustryVertical { get; set; }

        /// <summary>Optional. If set, this DataStore is an Infobot FAQ DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isInfobotFaqDataStore")]
        public virtual System.Nullable<bool> IsInfobotFaqDataStore { get; set; }

        /// <summary>
        /// Input only. The KMS key to be used to protect this DataStore at creation time. Must be set for requests that
        /// need to comply with CMEK Org Policy protections. If this field is set and processed successfully, the
        /// DataStore will be protected by the KMS key, as indicated in the cmek_config field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyName")]
        public virtual string KmsKeyName { get; set; }

        /// <summary>Language info for DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageInfo")]
        public virtual GoogleCloudDiscoveryengineV1alphaLanguageInfo LanguageInfo { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the data store. Format:
        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field
        /// must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Optional. Configuration for Natural Language Query Understanding.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("naturalLanguageQueryUnderstandingConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig NaturalLanguageQueryUnderstandingConfig { get; set; }

        /// <summary>Optional. Stores serving config at DataStore level.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingConfigDataStore")]
        public virtual GoogleCloudDiscoveryengineV1alphaDataStoreServingConfigDataStore ServingConfigDataStore { get; set; }

        /// <summary>
        /// The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`:
        /// `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is
        /// automatically enrolled. Other solutions cannot be enrolled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionTypes")]
        public virtual System.Collections.Generic.IList<string> SolutionTypes { get; set; }

        /// <summary>
        /// The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized
        /// schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other
        /// APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema
        /// of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against
        /// certain rules on schema. Learn more from [this
        /// doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startingSchema")]
        public virtual GoogleCloudDiscoveryengineV1alphaSchema StartingSchema { get; set; }

        /// <summary>
        /// Config to store data store type configuration for workspace data. This must be set when
        /// DataStore.content_config is set as DataStore.ContentConfig.GOOGLE_WORKSPACE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("workspaceConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaWorkspaceConfig WorkspaceConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Estimation of data size per data store.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDataStoreBillingEstimation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Data size for structured data in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredDataSize")]
        public virtual System.Nullable<long> StructuredDataSize { get; set; }

        private string _structuredDataUpdateTimeRaw;

        private object _structuredDataUpdateTime;

        /// <summary>Last updated timestamp for structured data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredDataUpdateTime")]
        public virtual string StructuredDataUpdateTimeRaw
        {
            get => _structuredDataUpdateTimeRaw;
            set
            {
                _structuredDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _structuredDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StructuredDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StructuredDataUpdateTimeDateTimeOffset instead.")]
        public virtual object StructuredDataUpdateTime
        {
            get => _structuredDataUpdateTime;
            set
            {
                _structuredDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _structuredDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="StructuredDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StructuredDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StructuredDataUpdateTimeRaw);
            set => StructuredDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Data size for unstructured data in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDataSize")]
        public virtual System.Nullable<long> UnstructuredDataSize { get; set; }

        private string _unstructuredDataUpdateTimeRaw;

        private object _unstructuredDataUpdateTime;

        /// <summary>Last updated timestamp for unstructured data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDataUpdateTime")]
        public virtual string UnstructuredDataUpdateTimeRaw
        {
            get => _unstructuredDataUpdateTimeRaw;
            set
            {
                _unstructuredDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _unstructuredDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UnstructuredDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UnstructuredDataUpdateTimeDateTimeOffset instead.")]
        public virtual object UnstructuredDataUpdateTime
        {
            get => _unstructuredDataUpdateTime;
            set
            {
                _unstructuredDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _unstructuredDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="UnstructuredDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UnstructuredDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UnstructuredDataUpdateTimeRaw);
            set => UnstructuredDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Data size for websites in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteDataSize")]
        public virtual System.Nullable<long> WebsiteDataSize { get; set; }

        private string _websiteDataUpdateTimeRaw;

        private object _websiteDataUpdateTime;

        /// <summary>Last updated timestamp for websites.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteDataUpdateTime")]
        public virtual string WebsiteDataUpdateTimeRaw
        {
            get => _websiteDataUpdateTimeRaw;
            set
            {
                _websiteDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _websiteDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="WebsiteDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use WebsiteDataUpdateTimeDateTimeOffset instead.")]
        public virtual object WebsiteDataUpdateTime
        {
            get => _websiteDataUpdateTime;
            set
            {
                _websiteDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _websiteDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="WebsiteDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? WebsiteDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(WebsiteDataUpdateTimeRaw);
            set => WebsiteDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Stores information regarding the serving configurations at DataStore level.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDataStoreServingConfigDataStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set true, the DataStore will not be available for serving search requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disabledForServing")]
        public virtual System.Nullable<bool> DisabledForServing { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The historical dedicated crawl rate timeseries data, used for monitoring. Dedicated crawl is used by Vertex AI
    /// to crawl the user's website when dedicate crawl is set.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDedicatedCrawlRateTimeSeries : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Vertex AI's dedicated crawl rate time series of auto-refresh, which is the crawl rate of
        /// Google-CloudVertexBot when dedicate crawl is set, and the crawl rate is for best effort use cases like
        /// refreshing urls periodically.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoRefreshCrawlRate")]
        public virtual GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries AutoRefreshCrawlRate { get; set; }

        /// <summary>
        /// Vertex AI's dedicated crawl rate time series of user triggered crawl, which is the crawl rate of
        /// Google-CloudVertexBot when dedicate crawl is set, and user triggered crawl rate is for deterministic use
        /// cases like crawling urls or sitemaps specified by users.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userTriggeredCrawlRate")]
        public virtual GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries UserTriggeredCrawlRate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CmekConfigService.DeleteCmekConfig operation. This will be returned by
    /// the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteCmekConfigMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CollectionService.UpdateCollection operation. This will be returned by
    /// the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteCollectionMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the DataStoreService.DeleteDataStore operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteDataStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the EngineService.DeleteEngine operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the IdentityMappingStoreService.DeleteIdentityMappingStore operation. This
    /// will be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteIdentityMappingStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for DeleteSchema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request for DeleteSession method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteSessionRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The resource name of the Session to delete. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DeleteSitemap operation. This will be returned
    /// by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteSitemapMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DeleteTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDeleteTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines target endpoints used to connect to third-party sources.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDestinationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The destinations for the corresponding key.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("destinations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaDestinationConfigDestination> Destinations { get; set; }

        /// <summary>Optional. Unique destination identifier that is supported by the connector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; }

        /// <summary>Optional. Additional parameters for this destination config.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("params")]
        public virtual System.Collections.Generic.IDictionary<string, object> Params__ { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines a target endpoint</summary>
    public class GoogleCloudDiscoveryengineV1alphaDestinationConfigDestination : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Publicly routable host.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("host")]
        public virtual string Host { get; set; }

        /// <summary>Optional. Target port number accepted by the destination.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("port")]
        public virtual System.Nullable<int> Port { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will
    /// be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.DisableAdvancedSiteSearch method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDisableAdvancedSiteSearchResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A singleton resource of DataStore. If it's empty when DataStore is created and DataStore is set to
    /// DataStore.ContentConfig.CONTENT_REQUIRED, the default parser will default to digital parser.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether chunking mode is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkingConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig ChunkingConfig { get; set; }

        /// <summary>
        /// Configurations for default Document parser. If not specified, we will configure it as default
        /// DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig DefaultParsingConfig { get; set; }

        /// <summary>
        /// The full resource name of the Document Processing Config. Format:
        /// `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Map from file type to override the default parsing configuration based on the file type. Supported keys: *
        /// `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is
        /// supported. * `html`: Override parsing config for HTML files, only digital parsing and layout parsing are
        /// supported. * `docx`: Override parsing config for DOCX files, only digital parsing and layout parsing are
        /// supported. * `pptx`: Override parsing config for PPTX files, only digital parsing and layout parsing are
        /// supported. * `xlsm`: Override parsing config for XLSM files, only digital parsing and layout parsing are
        /// supported. * `xlsx`: Override parsing config for XLSX files, only digital parsing and layout parsing are
        /// supported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parsingConfigOverrides")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig> ParsingConfigOverrides { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for chunking config.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configuration for the layout based chunking.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layoutBasedChunkingConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig LayoutBasedChunkingConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for the layout based chunking.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkSize")]
        public virtual System.Nullable<int> ChunkSize { get; set; }

        /// <summary>
        /// Whether to include appending different levels of headings to chunks from the middle of the document to
        /// prevent context loss. Default value: False.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeAncestorHeadings")]
        public virtual System.Nullable<bool> IncludeAncestorHeadings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Related configurations applied to a specific type of document parser.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configurations applied to digital parser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("digitalParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig DigitalParsingConfig { get; set; }

        /// <summary>Configurations applied to layout parser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layoutParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig LayoutParsingConfig { get; set; }

        /// <summary>Configurations applied to OCR parser. Currently it only applies to PDFs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ocrParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig OcrParsingConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The digital parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigDigitalParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The layout parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigLayoutParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The OCR parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1alphaDocumentProcessingConfigParsingConfigOcrParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// [DEPRECATED] This field is deprecated. To use the additional enhanced document elements processing, please
        /// switch to `layout_parsing_config`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enhancedDocumentElements")]
        public virtual System.Collections.Generic.IList<string> EnhancedDocumentElements { get; set; }

        /// <summary>If true, will use native text instead of OCR text on pages containing native text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useNativeText")]
        public virtual System.Nullable<bool> UseNativeText { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.EnableAdvancedSiteSearch method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEnableAdvancedSiteSearchResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata that describes the training and serving parameters of an Engine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngine : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chatEngineConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig ChatEngineConfig { get; set; }

        /// <summary>
        /// Output only. Additional information of the Chat Engine. Only applicable if solution_type is
        /// SOLUTION_TYPE_CHAT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chatEngineMetadata")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata ChatEngineMetadata { get; set; }

        /// <summary>Common config spec that specifies the metadata of the engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commonConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineCommonConfig CommonConfig { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the Recommendation Engine was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type
        /// of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT,
        /// multiple DataStores in the same Collection can be associated here. Note that when used in
        /// CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary
        /// initializations.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreIds")]
        public virtual System.Collections.Generic.IList<string> DataStoreIds { get; set; }

        /// <summary>Optional. Whether to disable analytics for searches performed on this engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableAnalytics")]
        public virtual System.Nullable<bool> DisableAnalytics { get; set; }

        /// <summary>
        /// Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024
        /// characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on
        /// DataStore: Vertical on Engine has to match vertical of the DataStore linked to the engine.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("industryVertical")]
        public virtual string IndustryVertical { get; set; }

        /// <summary>
        /// Configurations for the Media Engine. Only applicable on the data stores with solution_type
        /// SOLUTION_TYPE_RECOMMENDATION and IndustryVertical.MEDIA vertical.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaRecommendationEngineConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig MediaRecommendationEngineConfig { get; set; }

        /// <summary>
        /// Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a
        /// length limit of 1024 characters. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63
        /// characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Output only. Additional information of a recommendation engine. Only applicable if solution_type is
        /// SOLUTION_TYPE_RECOMMENDATION.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recommendationMetadata")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata RecommendationMetadata { get; set; }

        /// <summary>
        /// Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchEngineConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig SearchEngineConfig { get; set; }

        /// <summary>Additional config specs for a `similar-items` engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("similarDocumentsConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig SimilarDocumentsConfig { get; set; }

        /// <summary>Required. The solutions of the engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionType")]
        public virtual string SolutionType { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. Timestamp the Recommendation Engine was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations for a Chat Engine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these
        /// configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved
        /// using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentCreationConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig AgentCreationConfig { get; set; }

        /// <summary>
        /// The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide
        /// `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine.
        /// Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by
        /// and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or
        /// EngineService.ListEngines API after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
        /// agent association after Engine is created.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAgentToLink")]
        public virtual string DialogflowAgentToLink { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and
    /// passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or
    /// EngineService.ListEngines API after engine creation.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineChatEngineConfigAgentCreationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Name of the company, organization or other entity that the agent represents. Used for knowledge connector
        /// LLM prompt and for knowledge search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("business")]
        public virtual string Business { get; set; }

        /// <summary>
        /// Required. The default language of the agent as a language tag. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultLanguageCode")]
        public virtual string DefaultLanguageCode { get; set; }

        /// <summary>
        /// Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create
        /// Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location { get; set; }

        /// <summary>
        /// Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g.,
        /// America/New_York, Europe/Paris.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional information of a Chat Engine. Fields in this message are output only.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineChatEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of a Dialogflow agent, that this Chat Engine refers to. Format:
        /// `projects//locations//agents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAgent")]
        public virtual string DialogflowAgent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Common configurations for an Engine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineCommonConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The name of the company, business or entity that is associated with the engine. Setting this may help
        /// improve LLM related features.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companyName")]
        public virtual string CompanyName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional config specs for a Media Recommendation engine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The optimization objective. e.g., `cvr`. This field together with optimization_objective describe engine
        /// metadata to use to control engine training and serving. Currently supported values: `ctr`, `cvr`. If not
        /// specified, we choose default based on engine type. Default depends on type of recommendation:
        /// `recommended-for-you` =&amp;gt; `ctr` `others-you-may-like` =&amp;gt; `ctr`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optimizationObjective")]
        public virtual string OptimizationObjective { get; set; }

        /// <summary>
        /// Name and value of the custom threshold for cvr optimization_objective. For target_field `watch-time`,
        /// target_field_value must be an integer value indicating the media progress time in seconds between (0, 86400]
        /// (excludes 0, includes 86400) (e.g., 90). For target_field `watch-percentage`, the target_field_value must be
        /// a valid float value between (0, 1.0] (excludes 0, includes 1.0) (e.g., 0.5).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optimizationObjectiveConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig OptimizationObjectiveConfig { get; set; }

        /// <summary>
        /// The training state that the engine is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running
        /// the service is frequency of training - this can be used to determine when to train engine in order to
        /// control cost. If not specified: the default value for `CreateEngine` method is `TRAINING`. The default value
        /// for `UpdateEngine` method is to keep the state the same as before.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingState")]
        public virtual string TrainingState { get; set; }

        /// <summary>
        /// Required. The type of engine. e.g., `recommended-for-you`. This field together with optimization_objective
        /// describe engine metadata to use to control engine training and serving. Currently supported values:
        /// `recommended-for-you`, `others-you-may-like`, `more-like-this`, `most-popular-items`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Custom threshold for `cvr` optimization_objective.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineMediaRecommendationEngineConfigOptimizationObjectiveConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The name of the field to target. Currently supported values: `watch-percentage`, `watch-time`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetField")]
        public virtual string TargetField { get; set; }

        /// <summary>Required. The threshold to be applied to the target (e.g., 0.5).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetFieldValueFloat")]
        public virtual System.Nullable<float> TargetFieldValueFloat { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional information of a recommendation engine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineRecommendationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. The state of data requirements for this engine: `DATA_OK` and `DATA_ERROR`. Engine cannot be
        /// trained if the data is in `DATA_ERROR` state. Engine can have `DATA_ERROR` state even if serving state is
        /// `ACTIVE`: engines were trained successfully before, but cannot be refreshed because the underlying engine no
        /// longer has sufficient data for training.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataState")]
        public virtual string DataState { get; set; }

        private string _lastTuneTimeRaw;

        private object _lastTuneTime;

        /// <summary>
        /// Output only. The timestamp when the latest successful tune finished. Only applicable on Media Recommendation
        /// engines.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastTuneTime")]
        public virtual string LastTuneTimeRaw
        {
            get => _lastTuneTimeRaw;
            set
            {
                _lastTuneTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _lastTuneTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="LastTuneTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use LastTuneTimeDateTimeOffset instead.")]
        public virtual object LastTuneTime
        {
            get => _lastTuneTime;
            set
            {
                _lastTuneTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _lastTuneTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="LastTuneTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? LastTuneTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(LastTuneTimeRaw);
            set => LastTuneTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The serving state of the engine: `ACTIVE`, `NOT_ACTIVE`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingState")]
        public virtual string ServingState { get; set; }

        /// <summary>
        /// Output only. The latest tune operation id associated with the engine. Only applicable on Media
        /// Recommendation engines. If present, this operation id can be used to determine if there is an ongoing tune
        /// for this engine. To check the operation status, send the GetOperation request with this operation id in the
        /// engine resource format. If no tuning has happened for this engine, the string is empty.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tuningOperation")]
        public virtual string TuningOperation { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations for a Search Engine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineSearchEngineConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The add-on that this search engine enables.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchAddOns")]
        public virtual System.Collections.Generic.IList<string> SearchAddOns { get; set; }

        /// <summary>
        /// The search feature tier of this engine. Different tiers might have different pricing. To learn more, check
        /// the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchTier")]
        public virtual string SearchTier { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional config specs for a `similar-items` engine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEngineSimilarDocumentsEngineConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the EstimateDataSize operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaEstimateDataSizeMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the EstimateDataSize request. If the long running operation was successful, then this message is
    /// returned by the google.longrunning.Operations.response field if the operation was successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaEstimateDataSizeResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Data size in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataSizeBytes")]
        public virtual System.Nullable<long> DataSizeBytes { get; set; }

        /// <summary>Total number of documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentCount")]
        public virtual System.Nullable<long> DocumentCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An evaluation is a single execution (or run) of an evaluation process. It encapsulates the state of the
    /// evaluation and the resulting data.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaEvaluation : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the Evaluation was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _endTimeRaw;

        private object _endTime;

        /// <summary>Output only. Timestamp the Evaluation was completed at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The error that occurred during evaluation. Only populated when the evaluation's state is
        /// FAILED.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>Output only. A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Required. The specification of the evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("evaluationSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec EvaluationSpec { get; set; }

        /// <summary>
        /// Identifier. The full resource name of the Evaluation, in the format of
        /// `projects/{project}/locations/{location}/evaluations/{evaluation}`. This field must be a UTF-8 encoded
        /// string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Output only. The metrics produced by the evaluation, averaged across all SampleQuerys in the SampleQuerySet.
        /// Only populated when the evaluation's state is SUCCEEDED.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("qualityMetrics")]
        public virtual GoogleCloudDiscoveryengineV1alphaQualityMetrics QualityMetrics { get; set; }

        /// <summary>Output only. The state of the evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the specification of the evaluation.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The specification of the query set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("querySetSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec QuerySetSpec { get; set; }

        /// <summary>
        /// Required. The search request that is used to perform the evaluation. Only the following fields within
        /// SearchRequest are supported; if any other fields are provided, an UNSUPPORTED error will be returned: *
        /// SearchRequest.serving_config * SearchRequest.branch * SearchRequest.canonical_filter *
        /// SearchRequest.query_expansion_spec * SearchRequest.spell_correction_spec * SearchRequest.content_search_spec
        /// * SearchRequest.user_pseudo_id
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchRequest")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequest SearchRequest { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the specification of the query set.</summary>
    public class GoogleCloudDiscoveryengineV1alphaEvaluationEvaluationSpecQuerySetSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The full resource name of the SampleQuerySet used for the evaluation, in the format of
        /// `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleQuerySet")]
        public virtual string SampleQuerySet { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configurations for fields of a schema. For example, configuring a field is indexable, or searchable.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaFieldConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If this field is set, only the corresponding source will be indexed for this field. Otherwise, the values
        /// from different sources are merged. Assuming a page with `` in meta tag, and `` in page map: if this enum is
        /// set to METATAGS, we will only index ``; if this enum is not set, we will merge them and index ``.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSiteSearchDataSources")]
        public virtual System.Collections.Generic.IList<string> AdvancedSiteSearchDataSources { get; set; }

        /// <summary>
        /// If completable_option is COMPLETABLE_ENABLED, field values are directly used and returned as suggestions for
        /// Autocomplete in CompletionService.CompleteQuery. If completable_option is unset, the server behavior
        /// defaults to COMPLETABLE_DISABLED for fields that support setting completable options, which are just
        /// `string` fields. For those fields that do not support setting completable options, the server will skip
        /// completable option setting, and setting completable_option for those fields will throw `INVALID_ARGUMENT`
        /// error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("completableOption")]
        public virtual string CompletableOption { get; set; }

        /// <summary>
        /// If dynamic_facetable_option is DYNAMIC_FACETABLE_ENABLED, field values are available for dynamic facet.
        /// Could only be DYNAMIC_FACETABLE_DISABLED if FieldConfig.indexable_option is INDEXABLE_DISABLED. Otherwise,
        /// an `INVALID_ARGUMENT` error will be returned. If dynamic_facetable_option is unset, the server behavior
        /// defaults to DYNAMIC_FACETABLE_DISABLED for fields that support setting dynamic facetable options. For those
        /// fields that do not support setting dynamic facetable options, such as `object` and `boolean`, the server
        /// will skip dynamic facetable option setting, and setting dynamic_facetable_option for those fields will throw
        /// `INVALID_ARGUMENT` error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicFacetableOption")]
        public virtual string DynamicFacetableOption { get; set; }

        /// <summary>
        /// Required. Field path of the schema field. For example: `title`, `description`, `release_info.release_year`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldPath")]
        public virtual string FieldPath { get; set; }

        /// <summary>Output only. Raw type of the field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldType")]
        public virtual string FieldType { get; set; }

        /// <summary>
        /// If indexable_option is INDEXABLE_ENABLED, field values are indexed so that it can be filtered or faceted in
        /// SearchService.Search. If indexable_option is unset, the server behavior defaults to INDEXABLE_DISABLED for
        /// fields that support setting indexable options. For those fields that do not support setting indexable
        /// options, such as `object` and `boolean` and key properties, the server will skip indexable_option setting,
        /// and setting indexable_option for those fields will throw `INVALID_ARGUMENT` error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexableOption")]
        public virtual string IndexableOption { get; set; }

        /// <summary>
        /// Output only. Type of the key property that this field is mapped to. Empty string if this is not annotated as
        /// mapped to a key property. Example types are `title`, `description`. Full list is defined by
        /// `keyPropertyMapping` in the schema field annotation. If the schema field has a `KeyPropertyMapping`
        /// annotation, `indexable_option` and `searchable_option` of this field cannot be modified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyPropertyType")]
        public virtual string KeyPropertyType { get; set; }

        /// <summary>
        /// Optional. The metatag name found in the HTML page. If user defines this field, the value of this metatag
        /// name will be used to extract metatag. If the user does not define this field, the FieldConfig.field_path
        /// will be used to extract metatag.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metatagName")]
        public virtual string MetatagName { get; set; }

        /// <summary>
        /// If recs_filterable_option is FILTERABLE_ENABLED, field values are filterable by filter expression in
        /// RecommendationService.Recommend. If FILTERABLE_ENABLED but the field type is numerical, field values are not
        /// filterable by text queries in RecommendationService.Recommend. Only textual fields are supported. If
        /// recs_filterable_option is unset, the default setting is FILTERABLE_DISABLED for fields that support setting
        /// filterable options. When a field set to [FILTERABLE_DISABLED] is filtered, a warning is generated and an
        /// empty result is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recsFilterableOption")]
        public virtual string RecsFilterableOption { get; set; }

        /// <summary>
        /// If retrievable_option is RETRIEVABLE_ENABLED, field values are included in the search results. If
        /// retrievable_option is unset, the server behavior defaults to RETRIEVABLE_DISABLED for fields that support
        /// setting retrievable options. For those fields that do not support setting retrievable options, such as
        /// `object` and `boolean`, the server will skip retrievable option setting, and setting retrievable_option for
        /// those fields will throw `INVALID_ARGUMENT` error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("retrievableOption")]
        public virtual string RetrievableOption { get; set; }

        /// <summary>
        /// Field paths for indexing custom attribute from schema.org data. More details of schema.org and its defined
        /// types can be found at [schema.org](https://schema.org). It is only used on advanced site search schema.
        /// Currently only support full path from root. The full path to a field is constructed by concatenating field
        /// names, starting from `_root`, with a period `.` as the delimiter. Examples: * Publish date of the root:
        /// _root.datePublished * Publish date of the reviews: _root.review.datePublished
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schemaOrgPaths")]
        public virtual System.Collections.Generic.IList<string> SchemaOrgPaths { get; set; }

        /// <summary>
        /// If searchable_option is SEARCHABLE_ENABLED, field values are searchable by text queries in
        /// SearchService.Search. If SEARCHABLE_ENABLED but field type is numerical, field values will not be searchable
        /// by text queries in SearchService.Search, as there are no text values associated to numerical fields. If
        /// searchable_option is unset, the server behavior defaults to SEARCHABLE_DISABLED for fields that support
        /// setting searchable options. Only `string` fields that have no key property mapping support setting
        /// searchable_option. For those fields that do not support setting searchable options, the server will skip
        /// searchable option setting, and setting searchable_option for those fields will throw `INVALID_ARGUMENT`
        /// error.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchableOption")]
        public virtual string SearchableOption { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request for GetSession method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaGetSessionRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. If set to true, the full session including all answer details will be returned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeAnswerDetails")]
        public virtual System.Nullable<bool> IncludeAnswerDetails { get; set; }

        /// <summary>
        /// Required. The resource name of the Session to get. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/sessions/{session_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.GetUriPatternDocumentData method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaGetUriPatternDocumentDataResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Document data keyed by URI pattern. For example: document_data_map = { "www.url1.com/*": { "Categories":
        /// ["category1", "category2"] }, "www.url2.com/*": { "Categories": ["category3"] } }
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentDataMap")]
        public virtual System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, object>> DocumentDataMap { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config to data store for `HEALTHCARE_FHIR` vertical.</summary>
    public class GoogleCloudDiscoveryengineV1alphaHealthcareFhirConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set to `true`, the predefined
        /// healthcare fhir schema can be extended for more customized searching and filtering.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableConfigurableSchema")]
        public virtual System.Nullable<bool> EnableConfigurableSchema { get; set; }

        /// <summary>
        /// Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If set to `true`, the batch
        /// ingestion will be processed in a static indexing mode which is slower but more capable of handling larger
        /// volume.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableStaticIndexingForBatchIngestion")]
        public virtual System.Nullable<bool> EnableStaticIndexingForBatchIngestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// IdentityMappingEntry LongRunningOperation metadata for IdentityMappingStoreService.ImportIdentityMappings and
    /// IdentityMappingStoreService.PurgeIdentityMappings
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaIdentityMappingEntryOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of IdentityMappingEntries that failed to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>The number of IdentityMappingEntries that were successfully processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        /// <summary>The total number of IdentityMappingEntries that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<long> TotalCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The configuration for the identity data synchronization runs.</summary>
    public class GoogleCloudDiscoveryengineV1alphaIdentityScheduleConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The UTC time when the next data sync is expected to start for the Data Connector. Customers are
        /// only able to specify the hour and minute to schedule the data sync. This is utilized when the data connector
        /// has a refresh interval greater than 1 day.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextSyncTime")]
        public virtual GoogleTypeDateTime NextSyncTime { get; set; }

        /// <summary>
        /// Optional. The refresh interval to sync the Access Control List information for the documents ingested by
        /// this connector. If not set, the access control list will be refreshed at the default interval of 30 minutes.
        /// The identity refresh interval can be at least 30 minutes and at most 7 days.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("refreshInterval")]
        public virtual object RefreshInterval { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Identity Provider Config.</summary>
    public class GoogleCloudDiscoveryengineV1alphaIdpConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>External Identity provider config.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("externalIdpConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig ExternalIdpConfig { get; set; }

        /// <summary>Identity provider type configured.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idpType")]
        public virtual string IdpType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Third party IDP Config.</summary>
    public class GoogleCloudDiscoveryengineV1alphaIdpConfigExternalIdpConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Workforce pool name. Example: "locations/global/workforcePools/pool_id"</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("workforcePoolName")]
        public virtual string WorkforcePoolName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportCompletionSuggestions operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of CompletionSuggestions that failed to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of CompletionSuggestions successfully imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the CompletionService.ImportCompletionSuggestions method. If the long running operation is done,
    /// this message is returned by the google.longrunning.Operations.response field if the operation is successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportCompletionSuggestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The desired location of errors incurred during the Import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportDocuments operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportDocumentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were processed successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        /// <summary>Total count of entries that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<long> TotalCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by
    /// the google.longrunning.Operations.response field if the operation was successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors in the request if set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration of destination for Import related errors.</summary>
    public class GoogleCloudDiscoveryengineV1alphaImportErrorConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import
        /// errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status`
        /// message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsPrefix")]
        public virtual string GcsPrefix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for IdentityMappingStoreService.ImportIdentityMappings</summary>
    public class GoogleCloudDiscoveryengineV1alphaImportIdentityMappingsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportSampleQueries operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportSampleQueriesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>ImportSampleQueries operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of SampleQuerys that failed to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of SampleQuerys successfully imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        /// <summary>Total count of SampleQuerys that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<long> TotalCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>
        /// ImportSampleQueries operation last update time. If the operation is done, this is also the finish time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the SampleQueryService.ImportSampleQueries method. If the long running operation is done, this
    /// message is returned by the google.longrunning.Operations.response field if the operation is successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportSampleQueriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The desired location of errors incurred during the Import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.ImportSuggestionDenyListEntries method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaImportSuggestionDenyListEntriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Count of deny list entries that failed to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failedEntriesCount")]
        public virtual System.Nullable<long> FailedEntriesCount { get; set; }

        /// <summary>Count of deny list entries successfully imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("importedEntriesCount")]
        public virtual System.Nullable<long> ImportedEntriesCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the Import operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportUserEventsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were processed successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is
    /// returned by the google.longrunning.Operations.response field if the operation was successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaImportUserEventsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors if this field was set in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Count of user events imported with complete existing Documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("joinedEventsCount")]
        public virtual System.Nullable<long> JoinedEventsCount { get; set; }

        /// <summary>
        /// Count of user events imported, but with Document information not found in the existing Branch.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unjoinedEventsCount")]
        public virtual System.Nullable<long> UnjoinedEventsCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A floating point interval.</summary>
    public class GoogleCloudDiscoveryengineV1alphaInterval : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Exclusive upper bound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exclusiveMaximum")]
        public virtual System.Nullable<double> ExclusiveMaximum { get; set; }

        /// <summary>Exclusive lower bound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exclusiveMinimum")]
        public virtual System.Nullable<double> ExclusiveMinimum { get; set; }

        /// <summary>Inclusive upper bound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximum")]
        public virtual System.Nullable<double> Maximum { get; set; }

        /// <summary>Inclusive lower bound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minimum")]
        public virtual System.Nullable<double> Minimum { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Language info for DataStore.</summary>
    public class GoogleCloudDiscoveryengineV1alphaLanguageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Language part of normalized_language_code. E.g.: `en-US` -&amp;gt; `en`, `zh-Hans-HK` -&amp;gt;
        /// `zh`, `en` -&amp;gt; `en`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("language")]
        public virtual string Language { get; set; }

        /// <summary>The language code for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// Output only. This is the normalized form of language_code. E.g.: language_code of `en-GB`, `en_GB`, `en-UK`
        /// or `en-gb` will have normalized_language_code of `en-GB`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("normalizedLanguageCode")]
        public virtual string NormalizedLanguageCode { get; set; }

        /// <summary>
        /// Output only. Region part of normalized_language_code, if present. E.g.: `en-US` -&amp;gt; `US`, `zh-Hans-HK`
        /// -&amp;gt; `HK`, `en` -&amp;gt; ``.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request for ListSessions method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaListSessionsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A filter to apply on the list results. The supported features are: user_pseudo_id, state. Example:
        /// "user_pseudo_id = some_id"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// A comma-separated list of fields to order by, sorted in ascending order. Use "desc" after a field name for
        /// descending. Supported fields: * `update_time` * `create_time` * `session_name` * `is_pinned` Example: *
        /// "update_time desc" * "create_time" * "is_pinned desc,update_time desc": list sessions by is_pinned first,
        /// then by update_time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; }

        /// <summary>
        /// Maximum number of results to return. If unspecified, defaults to 50. Max allowed value is 1000.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageSize")]
        public virtual System.Nullable<int> PageSize { get; set; }

        /// <summary>
        /// A page token, received from a previous `ListSessions` call. Provide this to retrieve the subsequent page.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageToken")]
        public virtual string PageToken { get; set; }

        /// <summary>
        /// Required. The data store resource name. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parent")]
        public virtual string Parent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response for ListSessions method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaListSessionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Pagination token, if not returned indicates the last page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>All the Sessions for a given data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSession> Sessions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for Natural Language Query Understanding.</summary>
    public class GoogleCloudDiscoveryengineV1alphaNaturalLanguageQueryUnderstandingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Mode of Natural Language Query Understanding. If this field is unset, the behavior defaults to
        /// NaturalLanguageQueryUnderstandingConfig.Mode.DISABLED.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mode")]
        public virtual string Mode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for CrawlRateManagementService.ObtainCrawlRate method. The response contains organcic or
    /// dedicated crawl rate time series data for monitoring, depending on whether dedicated crawl rate is set.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaObtainCrawlRateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The historical dedicated crawl rate timeseries data, used for monitoring.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dedicatedCrawlRateTimeSeries")]
        public virtual GoogleCloudDiscoveryengineV1alphaDedicatedCrawlRateTimeSeries DedicatedCrawlRateTimeSeries { get; set; }

        /// <summary>Errors from service when handling the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>The historical organic crawl rate timeseries data, used for monitoring.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organicCrawlRateTimeSeries")]
        public virtual GoogleCloudDiscoveryengineV1alphaOrganicCrawlRateTimeSeries OrganicCrawlRateTimeSeries { get; set; }

        /// <summary>Output only. The state of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The historical organic crawl rate timeseries data, used for monitoring. Organic crawl is auto-determined by
    /// Google to crawl the user's website when dedicate crawl is not set. Crawl rate is the QPS of crawl request Google
    /// sends to the user's website.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaOrganicCrawlRateTimeSeries : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Google's organic crawl rate time series, which is the sum of all googlebots' crawl rate. Please refer to
        /// https://developers.google.com/search/docs/crawling-indexing/overview-google-crawlers for more details about
        /// googlebots.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("googleOrganicCrawlRate")]
        public virtual GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries GoogleOrganicCrawlRate { get; set; }

        /// <summary>
        /// Vertex AI's organic crawl rate time series, which is the crawl rate of Google-CloudVertexBot when dedicate
        /// crawl is not set. Please refer to
        /// https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers#google-cloudvertexbot for
        /// more details about Google-CloudVertexBot.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vertexAiOrganicCrawlRate")]
        public virtual GoogleCloudDiscoveryengineV1alphaCrawlRateTimeSeries VertexAiOrganicCrawlRate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata and configurations for a Google Cloud project in the service.</summary>
    public class GoogleCloudDiscoveryengineV1alphaProject : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The timestamp when this project is created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. Full resource name of the project, for example `projects/{project}`. Note that when making
        /// requests, project number and project id are both acceptable, but the server will always respond in project
        /// number.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        private string _provisionCompletionTimeRaw;

        private object _provisionCompletionTime;

        /// <summary>
        /// Output only. The timestamp when this project is successfully provisioned. Empty value means this project is
        /// still provisioning and is not ready for use.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("provisionCompletionTime")]
        public virtual string ProvisionCompletionTimeRaw
        {
            get => _provisionCompletionTimeRaw;
            set
            {
                _provisionCompletionTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _provisionCompletionTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="ProvisionCompletionTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use ProvisionCompletionTimeDateTimeOffset instead.")]
        public virtual object ProvisionCompletionTime
        {
            get => _provisionCompletionTime;
            set
            {
                _provisionCompletionTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _provisionCompletionTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="ProvisionCompletionTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? ProvisionCompletionTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(ProvisionCompletionTimeRaw);
            set => ProvisionCompletionTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. A map of terms of services. The key is the `id` of ServiceTerms.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceTermsMap")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1alphaProjectServiceTerms> ServiceTermsMap { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata about the terms of service.</summary>
    public class GoogleCloudDiscoveryengineV1alphaProjectServiceTerms : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _acceptTimeRaw;

        private object _acceptTime;

        /// <summary>The last time when the project agreed to the terms of service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("acceptTime")]
        public virtual string AcceptTimeRaw
        {
            get => _acceptTimeRaw;
            set
            {
                _acceptTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _acceptTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="AcceptTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use AcceptTimeDateTimeOffset instead.")]
        public virtual object AcceptTime
        {
            get => _acceptTime;
            set
            {
                _acceptTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _acceptTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="AcceptTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? AcceptTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(AcceptTimeRaw);
            set => AcceptTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _declineTimeRaw;

        private object _declineTime;

        /// <summary>The last time when the project declined or revoked the agreement to terms of service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("declineTime")]
        public virtual string DeclineTimeRaw
        {
            get => _declineTimeRaw;
            set
            {
                _declineTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _declineTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="DeclineTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use DeclineTimeDateTimeOffset instead.")]
        public virtual object DeclineTime
        {
            get => _declineTime;
            set
            {
                _declineTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _declineTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="DeclineTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? DeclineTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(DeclineTimeRaw);
            set => DeclineTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// The unique identifier of this terms of service. Available terms: * `GA_DATA_USE_TERMS`: [Terms for data
        /// use](https://cloud.google.com/retail/data-use-terms). When using this as `id`, the acceptable version to
        /// provide is `2022-11-23`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Whether the project has accepted/rejected the service terms or it is still pending.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>
        /// The version string of the terms of service. For acceptable values, see the comments for id above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata associated with a project provision operation.</summary>
    public class GoogleCloudDiscoveryengineV1alphaProvisionProjectMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeCompletionSuggestions operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.PurgeCompletionSuggestions method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaPurgeCompletionSuggestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Whether the completion suggestions were successfully purged.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeSucceeded")]
        public virtual System.Nullable<bool> PurgeSucceeded { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeDocuments operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaPurgeDocumentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were ignored as entries were not found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoredCount")]
        public virtual System.Nullable<long> IgnoredCount { get; set; }

        /// <summary>Count of entries that were deleted successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done,
    /// then this message is returned by the google.longrunning.Operations.response field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaPurgeDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The total count of documents purged as a result of the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeCount")]
        public virtual System.Nullable<long> PurgeCount { get; set; }

        /// <summary>
        /// A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100
        /// names will be returned and the names are chosen at random.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeSample")]
        public virtual System.Collections.Generic.IList<string> PurgeSample { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.PurgeSuggestionDenyListEntries method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaPurgeSuggestionDenyListEntriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Number of suggestion deny list entries purged.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeCount")]
        public virtual System.Nullable<long> PurgeCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeUserEvents operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaPurgeUserEventsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were deleted successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the PurgeUserEventsRequest. If the long running operation is successfully done, then this message is
    /// returned by the google.longrunning.Operations.response field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaPurgeUserEventsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The total count of events purged as a result of the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeCount")]
        public virtual System.Nullable<long> PurgeCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the metrics produced by the evaluation.</summary>
    public class GoogleCloudDiscoveryengineV1alphaQualityMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Normalized discounted cumulative gain (NDCG) per document, at various top-k cutoff levels. NDCG measures the
        /// ranking quality, giving higher relevance to top results. Example (top-3): Suppose SampleQuery with three
        /// retrieved documents (D1, D2, D3) and binary relevance judgements (1 for relevant, 0 for not relevant):
        /// Retrieved: [D3 (0), D1 (1), D2 (1)] Ideal: [D1 (1), D2 (1), D3 (0)] Calculate NDCG@3 for each SampleQuery: *
        /// DCG@3: 0/log2(1+1) + 1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1)
        /// = 1.63 * NDCG@3: 1.13/1.63 = 0.693
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("docNdcg")]
        public virtual GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics DocNdcg { get; set; }

        /// <summary>
        /// Precision per document, at various top-k cutoff levels. Precision is the fraction of retrieved documents
        /// that are relevant. Example (top-5): * For a single SampleQuery, If 4 out of 5 retrieved documents in the
        /// top-5 are relevant, precision@5 = 4/5 = 0.8
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("docPrecision")]
        public virtual GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics DocPrecision { get; set; }

        /// <summary>
        /// Recall per document, at various top-k cutoff levels. Recall is the fraction of relevant documents retrieved
        /// out of all relevant documents. Example (top-5): * For a single SampleQuery, If 3 out of 5 relevant documents
        /// are retrieved in the top-5, recall@5 = 3/5 = 0.6
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("docRecall")]
        public virtual GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics DocRecall { get; set; }

        /// <summary>
        /// Normalized discounted cumulative gain (NDCG) per page, at various top-k cutoff levels. NDCG measures the
        /// ranking quality, giving higher relevance to top results. Example (top-3): Suppose SampleQuery with three
        /// retrieved pages (P1, P2, P3) and binary relevance judgements (1 for relevant, 0 for not relevant):
        /// Retrieved: [P3 (0), P1 (1), P2 (1)] Ideal: [P1 (1), P2 (1), P3 (0)] Calculate NDCG@3 for SampleQuery: *
        /// DCG@3: 0/log2(1+1) + 1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1)
        /// = 1.63 * NDCG@3: 1.13/1.63 = 0.693
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageNdcg")]
        public virtual GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics PageNdcg { get; set; }

        /// <summary>
        /// Recall per page, at various top-k cutoff levels. Recall is the fraction of relevant pages retrieved out of
        /// all relevant pages. Example (top-5): * For a single SampleQuery, if 3 out of 5 relevant pages are retrieved
        /// in the top-5, recall@5 = 3/5 = 0.6
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageRecall")]
        public virtual GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics PageRecall { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Stores the metric values at specific top-k levels.</summary>
    public class GoogleCloudDiscoveryengineV1alphaQualityMetricsTopkMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The top-1 value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top1")]
        public virtual System.Nullable<double> Top1 { get; set; }

        /// <summary>The top-10 value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top10")]
        public virtual System.Nullable<double> Top10 { get; set; }

        /// <summary>The top-3 value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top3")]
        public virtual System.Nullable<double> Top3 { get; set; }

        /// <summary>The top-5 value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top5")]
        public virtual System.Nullable<double> Top5 { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines a user inputed query.</summary>
    public class GoogleCloudDiscoveryengineV1alphaQuery : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Unique Id for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryId")]
        public virtual string QueryId { get; set; }

        /// <summary>Plain text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.RecrawlUris operation. This will be returned by
    /// the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Unique URIs in the request that have invalid format. Sample limited to 1000.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("invalidUris")]
        public virtual System.Collections.Generic.IList<string> InvalidUris { get; set; }

        /// <summary>Total number of unique URIs in the request that have invalid format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("invalidUrisCount")]
        public virtual System.Nullable<int> InvalidUrisCount { get; set; }

        /// <summary>URIs that have no index meta tag. Sample limited to 1000.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noindexUris")]
        public virtual System.Collections.Generic.IList<string> NoindexUris { get; set; }

        /// <summary>Total number of URIs that have no index meta tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("noindexUrisCount")]
        public virtual System.Nullable<int> NoindexUrisCount { get; set; }

        /// <summary>Total number of URIs that have yet to be crawled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pendingCount")]
        public virtual System.Nullable<int> PendingCount { get; set; }

        /// <summary>Total number of URIs that were rejected due to insufficient indexing resources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quotaExceededCount")]
        public virtual System.Nullable<int> QuotaExceededCount { get; set; }

        /// <summary>Total number of URIs that have been crawled so far.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<int> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Unique URIs in the request that don't match any TargetSite in the DataStore, only match TargetSites that
        /// haven't been fully indexed, or match a TargetSite with type EXCLUDE. Sample limited to 1000.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urisNotMatchingTargetSites")]
        public virtual System.Collections.Generic.IList<string> UrisNotMatchingTargetSites { get; set; }

        /// <summary>Total number of URIs that don't match any TargetSites.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urisNotMatchingTargetSitesCount")]
        public virtual System.Nullable<int> UrisNotMatchingTargetSitesCount { get; set; }

        /// <summary>Total number of unique URIs in the request that are not in invalid_uris.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validUrisCount")]
        public virtual System.Nullable<int> ValidUrisCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.RecrawlUris method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>URIs that were not crawled before the LRO terminated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failedUris")]
        public virtual System.Collections.Generic.IList<string> FailedUris { get; set; }

        /// <summary>Details for a sample of up to 10 `failed_uris`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureSamples")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo> FailureSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Details about why a particular URI failed to be crawled. Each FailureInfo contains one FailureReason per
    /// CorpusType.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of failure reasons by corpus type (e.g. desktop, mobile).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReasons")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason> FailureReasons { get; set; }

        /// <summary>URI that failed to be crawled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Details about why crawling failed for a particular CorpusType, e.g., DESKTOP and MOBILE crawling may fail for
    /// different reasons.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaRecrawlUrisResponseFailureInfoFailureReason : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>DESKTOP, MOBILE, or CORPUS_TYPE_UNSPECIFIED.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("corpusType")]
        public virtual string CorpusType { get; set; }

        /// <summary>Reason why the URI was not crawled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorMessage")]
        public virtual string ErrorMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CrawlRateManagementService.RemoveDedicatedCrawlRate operation. This will
    /// be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for CrawlRateManagementService.RemoveDedicatedCrawlRate method. It simply returns the state of
    /// the response, and an error message if the state is FAILED.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaRemoveDedicatedCrawlRateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Errors from service when handling the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>Output only. The state of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Safety rating corresponding to the generated content.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSafetyRating : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Indicates whether the content was filtered out because of this rating.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blocked")]
        public virtual System.Nullable<bool> Blocked { get; set; }

        /// <summary>Output only. Harm category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category { get; set; }

        /// <summary>Output only. Harm probability levels in the content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("probability")]
        public virtual string Probability { get; set; }

        /// <summary>Output only. Harm probability score.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("probabilityScore")]
        public virtual System.Nullable<float> ProbabilityScore { get; set; }

        /// <summary>Output only. Harm severity levels in the content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("severity")]
        public virtual string Severity { get; set; }

        /// <summary>Output only. Harm severity score.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("severityScore")]
        public virtual System.Nullable<float> SeverityScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines the structure and layout of a type of document data.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSchema : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Configurations for fields of the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldConfigs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaFieldConfig> FieldConfigs { get; set; }

        /// <summary>The JSON representation of the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jsonSchema")]
        public virtual string JsonSchema { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the schema, in the format of
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The structured representation of the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structSchema")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructSchema { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Promotion proto includes uri and other helping information to display the promotion.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchLinkPromotion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The Promotion description. Maximum length: 200 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Optional. The enabled promotion will be returned for any serving configs associated with the parent of the
        /// control this promotion is attached to. This flag is used for basic site search only.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>Optional. The promotion thumbnail image url.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; }

        /// <summary>Required. The title of the promotion. Maximum length: 160 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>Required. The URL for the page the user wants to promote.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SearchService.Search method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Boost specification to boost certain documents. For more information on boosting, see
        /// [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec BoostSpec { get; set; }

        /// <summary>
        /// The branch resource name, such as
        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`. Use
        /// `default_branch` as the branch ID or leave this field empty, to search documents under the default branch.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("branch")]
        public virtual string Branch { get; set; }

        /// <summary>
        /// The default filter that is applied when a user performs a search without checking any filters on the search
        /// page. The filter applied to every search request when quality improvement such as query expansion is needed.
        /// In the case a query does not have a sufficient amount of results this filter will be used to determine
        /// whether or not to enable the query expansion flow. The original filter will still be used for the query
        /// expanded search. This field is strongly recommended to achieve high search quality. For more information
        /// about filter syntax, see SearchRequest.filter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canonicalFilter")]
        public virtual string CanonicalFilter { get; set; }

        /// <summary>A specification for configuring the behavior of content search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentSearchSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec ContentSearchSpec { get; set; }

        /// <summary>
        /// Custom fine tuning configs. If set, it has higher priority than the configs set in
        /// ServingConfig.custom_fine_tuning_spec.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customFineTuningSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaCustomFineTuningSpec CustomFineTuningSpec { get; set; }

        /// <summary>
        /// Specs defining DataStores to filter on in a search call and configurations for those data stores. This is
        /// only considered for Engines with multiple data stores. For engines with a single data store, the specs
        /// directly under SearchRequest should be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec> DataStoreSpecs { get; set; }

        /// <summary>Optional. Config for display feature, like match highlighting on search results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displaySpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec DisplaySpec { get; set; }

        /// <summary>
        /// Uses the provided embedding to do additional semantic document retrieval. The retrieval is based on the dot
        /// product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document embedding that is provided in
        /// SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If
        /// SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not provided, it will use
        /// ServingConfig.EmbeddingConfig.field_path.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embeddingSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec EmbeddingSpec { get; set; }

        /// <summary>
        /// Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are
        /// allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("facetSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec> FacetSpecs { get; set; }

        /// <summary>
        /// The filter syntax consists of an expression language for constructing a predicate from one or more fields of
        /// the documents being filtered. Filter expression is case-sensitive. If this field is unrecognizable, an
        /// `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key
        /// property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema.
        /// For example a media customer might have a field 'name' in their schema. In this case the filter would look
        /// like this: filter --&amp;gt; name:'ANY("king kong")' For more information about filtering including syntax
        /// and filter operators, see
        /// [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>Raw image query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageQuery")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery ImageQuery { get; set; }

        /// <summary>
        /// The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see [Standard
        /// fields](https://cloud.google.com/apis/design/standard_fields). This field helps to better interpret the
        /// query. If a value isn't specified, the query language code is automatically detected, which may not be
        /// accurate.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// If `naturalLanguageQueryUnderstandingSpec` is not specified, no additional natural language query
        /// understanding will be done.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("naturalLanguageQueryUnderstandingSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec NaturalLanguageQueryUnderstandingSpec { get; set; }

        /// <summary>
        /// A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the
        /// Documents deemed by the API as relevant) in search results. This field is only considered if page_token is
        /// unset. If this field is negative, an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual System.Nullable<int> Offset { get; set; }

        /// <summary>
        /// The maximum number of results to return for OneBox. This applies to each OneBox type individually. Default
        /// number is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oneBoxPageSize")]
        public virtual System.Nullable<int> OneBoxPageSize { get; set; }

        /// <summary>
        /// The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave
        /// it unset if ordered by relevance. `order_by` expression is case-sensitive. For more information on ordering
        /// the website search results, see [Order web search
        /// results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results). For more
        /// information on ordering the healthcare search results, see [Order healthcare search
        /// results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results). If this field is
        /// unrecognizable, an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; }

        /// <summary>
        /// Maximum number of Documents to return. The maximum allowed value depends on the data type. Values above the
        /// maximum value are coerced to the maximum value. * Websites with basic indexing: Default `10`, Maximum `25`.
        /// * Websites with advanced indexing: Default `25`, Maximum `50`. * Other: Default `50`, Maximum `100`. If this
        /// field is negative, an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageSize")]
        public virtual System.Nullable<int> PageSize { get; set; }

        /// <summary>
        /// A page token received from a previous SearchService.Search call. Provide this to retrieve the subsequent
        /// page. When paginating, all other parameters provided to SearchService.Search must match the call that
        /// provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageToken")]
        public virtual string PageToken { get; set; }

        /// <summary>
        /// Additional search parameters. For public website search only, supported values are: * `user_country_code`:
        /// string. Default empty. If set to non-empty, results are restricted or boosted based on the location
        /// provided. For example, `user_country_code: "au"` For available codes see [Country
        /// Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) * `search_type`:
        /// double. Default empty. Enables non-webpage searching depending on the value. The only valid non-default
        /// value is 1, which enables image searching. For example, `search_type: 1`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("params")]
        public virtual System.Collections.Generic.IDictionary<string, object> Params__ { get; set; }

        /// <summary>
        /// The specification for personalization. Notice that if both ServingConfig.personalization_spec and
        /// SearchRequest.personalization_spec are set, SearchRequest.personalization_spec overrides
        /// ServingConfig.personalization_spec.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("personalizationSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec PersonalizationSpec { get; set; }

        /// <summary>Raw search query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; }

        /// <summary>
        /// The query expansion specification that specifies the conditions under which query expansion occurs.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryExpansionSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec QueryExpansionSpec { get; set; }

        /// <summary>
        /// The ranking expression controls the customized ranking on retrieval documents. This overrides
        /// ServingConfig.ranking_expression. The syntax and supported features depend on the ranking_expression_backend
        /// value. If ranking_expression_backend is not provided, it defaults to BYOE. === BYOE === If ranking
        /// expression is not provided or set to BYOE, it should be a single function or multiple functions that are
        /// joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double *
        /// relevance_score * double * dotProduct(embedding_field_path) Function variables: * `relevance_score`:
        /// pre-defined keywords, used for measure relevance between query and document. * `embedding_field_path`: the
        /// document embedding field used with query embedding vector. * `dotProduct`: embedding function between
        /// embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding
        /// field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 *
        /// dotProduct(doc_embedding)`. === CLEARBOX === If ranking expression is set to CLEARBOX, the following
        /// expression types (and combinations of those chained using + or * operators) are supported: * double * signal
        /// * log(signal) * exp(signal) * rr(signal, double &amp;gt; 0) -- reciprocal rank transformation with second
        /// argument being a denominator constant. * is_nan(signal) -- returns 0 if signal is NaN, 1 otherwise. *
        /// fill_nan(signal1, signal2 | double) -- if signal1 is NaN, returns signal2 | double, else returns signal1.
        /// Examples: * 0.2 * gecko_score + 0.8 * log(bm25_score) * 0.2 * exp(fill_nan(gecko_score, 0)) + 0.3 *
        /// is_nan(bm25_score) * 0.2 * rr(gecko_score, 16) + 0.8 * rr(bm25_score, 32) The following signals are
        /// supported: * gecko_score -- semantic similarity adjustment * bm25_score -- keyword match adjustment *
        /// jetstream_score -- semantic relevance adjustment * pctr_rank -- predicted conversion rate adjustment as a
        /// rank * freshness_rank -- freshness adjustment as a rank * base_rank -- the default rank of the result
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rankingExpression")]
        public virtual string RankingExpression { get; set; }

        /// <summary>Optional. The backend to use for the ranking expression evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rankingExpressionBackend")]
        public virtual string RankingExpressionBackend { get; set; }

        /// <summary>
        /// The Unicode country/region code (CLDR) of a location, such as "US" and "419". For more information, see
        /// [Standard fields](https://cloud.google.com/apis/design/standard_fields). If set, then results will be
        /// boosted based on the region_code provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCode")]
        public virtual string RegionCode { get; set; }

        /// <summary>
        /// The relevance threshold of the search results. Default to Google defined threshold, leveraging a balance of
        /// precision and recall to deliver both highly accurate results and comprehensive coverage of relevant
        /// information.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceThreshold")]
        public virtual string RelevanceThreshold { get; set; }

        /// <summary>Whether to turn on safe search. This is only supported for website search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safeSearch")]
        public virtual System.Nullable<bool> SafeSearch { get; set; }

        /// <summary>Search as you type configuration. Only supported for the IndustryVertical.MEDIA vertical.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchAsYouTypeSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec SearchAsYouTypeSpec { get; set; }

        /// <summary>
        /// Required. The resource name of the Search serving config, such as
        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
        /// or
        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
        /// This field is used to identify the serving configuration name, set of models used to make the search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingConfig")]
        public virtual string ServingConfig { get; set; }

        /// <summary>
        /// The session resource name. Optional. Session allows users to do multi-turn /search API calls or coordination
        /// between /search API calls and /answer API calls. Example #1 (multi-turn /search API calls): 1. Call /search
        /// API with the auto-session mode (see below). 2. Call /search API with the session ID generated in the first
        /// call. Here, the previous search query gets considered in query standing. I.e., if the first query is "How
        /// did Alphabet do in 2022?" and the current query is "How about 2023?", the current query will be interpreted
        /// as "How did Alphabet do in 2023?". Example #2 (coordination between /search API calls and /answer API
        /// calls): 1. Call /search API with the auto-session mode (see below). 2. Call /answer API with the session ID
        /// generated in the first call. Here, the answer generation happens in the context of the search results from
        /// the first search call. Auto-session mode: when `projects/.../sessions/-` is used, a new session gets
        /// automatically created. Otherwise, users can use the create-session API to create a session manually.
        /// Multi-turn Search feature is currently at private GA stage. Please use v1alpha or v1beta version instead
        /// before we launch this feature to public GA. Or ask for allowlisting through Google Support team.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; }

        /// <summary>Session specification. Can be used only when `session` is set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec SessionSpec { get; set; }

        /// <summary>
        /// The spell correction specification that specifies the mode under which spell correction takes effect.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spellCorrectionSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec SpellCorrectionSpec { get; set; }

        /// <summary>
        /// Information about the end user. Highly recommended for analytics and personalization. UserInfo.user_agent is
        /// used to deduce `device_type` for analytics.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInfo")]
        public virtual GoogleCloudDiscoveryengineV1alphaUserInfo UserInfo { get; set; }

        /// <summary>
        /// The user labels applied to a resource must meet the following requirements: * Each resource can have
        /// multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length
        /// of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a
        /// maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters,
        /// underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. *
        /// The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys
        /// must start with a lowercase letter or international character. See [Google Cloud
        /// Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>
        /// A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which
        /// should be able to uniquely identify a visitor on a single device. This unique identifier should not change
        /// if the visitor logs in or out of the website. This field should NOT have a fixed value such as
        /// `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and
        /// CompleteQueryRequest.user_pseudo_id The field must be a UTF-8 encoded string with a length limit of 128
        /// characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Boost specification to boost certain documents.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores
        /// from these specifications are all applied and combined in a non-linear way. Maximum number of specifications
        /// is 20.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditionBoostSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec> ConditionBoostSpecs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Boost applies to documents which match a condition.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0.
        /// Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted
        /// document will be the top result at all times, nor that other documents will be excluded. Results could still
        /// be shown even when none of them matches the condition. And results that are significantly more relevant to
        /// the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the
        /// document a big demotion. However, results that are deeply relevant might still be shown. The document will
        /// have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0
        /// means no boost applied. The boosting condition is ignored. Only one of the (condition, boost) combination or
        /// the boost_control_spec below are set. If both are set then the global boost is ignored and the more
        /// fine-grained boost_control_spec is applied.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boost")]
        public virtual System.Nullable<float> Boost { get; set; }

        /// <summary>Complex specification for custom ranking based on customer defined attribute value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostControlSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec BoostControlSpec { get; set; }

        /// <summary>
        /// An expression which specifies a boost condition. The syntax and supported fields are the same as a filter
        /// expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost documents with
        /// document ID "doc_1" or "doc_2", and color "Red" or "Blue": `(document_id: ANY("doc_1", "doc_2")) AND (color:
        /// ANY("Red", "Blue"))`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specification for custom ranking based on customer specified attribute value. It provides more controls for
    /// customized ranking than the simple (condition, boost) combination above.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The attribute type to be used to determine the boost amount. The attribute value can be derived from the
        /// field value of the specified field_name. In the case of numerical it is straightforward i.e. attribute_value
        /// = numerical_field_value. In the case of freshness however, attribute_value = (time.now() -
        /// datetime_field_value).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeType")]
        public virtual string AttributeType { get; set; }

        /// <summary>
        /// The control points used to define the curve. The monotonic function (defined through the interpolation_type
        /// above) passes through the control points listed here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("controlPoints")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint> ControlPoints { get; set; }

        /// <summary>The name of the field whose value will be used to determine the boost amount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>The interpolation type to be applied to connect the control points listed below.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationType")]
        public virtual string InterpolationType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The control points used to define the curve. The curve defined through these control points can only be
    /// monotonically increasing or decreasing(constant values are acceptable).
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be formatted
        /// as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern for this
        /// is: `nDnM]`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeValue")]
        public virtual string AttributeValue { get; set; }

        /// <summary>
        /// The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the value
        /// specified above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAmount")]
        public virtual System.Nullable<float> BoostAmount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring the behavior of content search.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies the chunk spec to be returned from the search response. Only available if the
        /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec ChunkSpec { get; set; }

        /// <summary>
        /// If there is no extractive_content_spec provided, there will be no extractive answer in the search response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extractiveContentSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec ExtractiveContentSpec { get; set; }

        /// <summary>
        /// Specifies the search result mode. If unspecified, the search result mode defaults to `DOCUMENTS`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResultMode")]
        public virtual string SearchResultMode { get; set; }

        /// <summary>If `snippetSpec` is not specified, snippets are not included in the search response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippetSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec SnippetSpec { get; set; }

        /// <summary>If `summarySpec` is not specified, summaries are not included in the search response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec SummarySpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies the chunk spec to be returned from the search response. Only available if the
    /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecChunkSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The number of next chunks to be returned of the current chunk. The maximum allowed value is 3. If not
        /// specified, no next chunks will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numNextChunks")]
        public virtual System.Nullable<int> NumNextChunks { get; set; }

        /// <summary>
        /// The number of previous chunks to be returned of the current chunk. The maximum allowed value is 3. If not
        /// specified, no previous chunks will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numPreviousChunks")]
        public virtual System.Nullable<int> NumPreviousChunks { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring the extractive content in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecExtractiveContentSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim
        /// answer extracted from the original document, which provides a precise and contextually relevant answer to
        /// the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return
        /// all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned
        /// for each SearchResult.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxExtractiveAnswerCount")]
        public virtual System.Nullable<int> MaxExtractiveAnswerCount { get; set; }

        /// <summary>
        /// The max number of extractive segments returned in each search result. Only applied if the DataStore is set
        /// to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive
        /// segment is a text segment extracted from the original document that is relevant to the search query, and, in
        /// general, more verbose than an extractive answer. The segment could then be used as input for LLMs to
        /// generate summaries and answers. If the number of matching segments is less than
        /// `max_extractive_segment_count`, return all of the segments. Otherwise, return the
        /// `max_extractive_segment_count`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxExtractiveSegmentCount")]
        public virtual System.Nullable<int> MaxExtractiveSegmentCount { get; set; }

        /// <summary>Return at most `num_next_segments` segments after each selected segments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numNextSegments")]
        public virtual System.Nullable<int> NumNextSegments { get; set; }

        /// <summary>
        /// Specifies whether to also include the adjacent from each selected segments. Return at most
        /// `num_previous_segments` segments before each selected segments.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numPreviousSegments")]
        public virtual System.Nullable<int> NumPreviousSegments { get; set; }

        /// <summary>
        /// Specifies whether to return the confidence score from the extractive segments in each search result. This
        /// feature is available only for new or allowlisted data stores. To allowlist your data store, contact your
        /// Customer Engineer. The default value is `false`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnExtractiveSegmentScore")]
        public virtual System.Nullable<bool> ReturnExtractiveSegmentScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring snippets in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSnippetSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards
        /// compatibility, we will return snippet if max_snippet_count &amp;gt; 0.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxSnippetCount")]
        public virtual System.Nullable<int> MaxSnippetCount { get; set; }

        /// <summary>[DEPRECATED] This field is deprecated and will have no affect on the snippet.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceOnly")]
        public virtual System.Nullable<bool> ReferenceOnly { get; set; }

        /// <summary>
        /// If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this
        /// page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnSnippet")]
        public virtual System.Nullable<bool> ReturnSnippet { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring a summary returned in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies whether to filter out adversarial queries. The default value is `false`. Google employs
        /// search-query classification to detect adversarial queries. No summary is returned if the search query is
        /// classified as an adversarial query. For example, a user might ask a question regarding negative comments
        /// about the company or submit a query designed to generate unsafe, policy-violating output. If this field is
        /// set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreAdversarialQuery")]
        public virtual System.Nullable<bool> IgnoreAdversarialQuery { get; set; }

        /// <summary>
        /// Optional. Specifies whether to filter out jail-breaking queries. The default value is `false`. Google
        /// employs search-query classification to detect jail-breaking queries. No summary is returned if the search
        /// query is classified as a jail-breaking query. A user might add instructions to the query to change the tone,
        /// style, language, content of the answer, or ask the model to act as a different entity, e.g. "Reply in the
        /// tone of a competing company's CEO". If this field is set to `true`, we skip generating summaries for
        /// jail-breaking queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreJailBreakingQuery")]
        public virtual System.Nullable<bool> IgnoreJailBreakingQuery { get; set; }

        /// <summary>
        /// Specifies whether to filter out queries that have low relevance. The default value is `false`. If this field
        /// is set to `false`, all search results are used regardless of relevance to generate answers. If set to
        /// `true`, only queries with high relevance search results will generate answers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreLowRelevantContent")]
        public virtual System.Nullable<bool> IgnoreLowRelevantContent { get; set; }

        /// <summary>
        /// Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google
        /// employs search-query classification to detect summary-seeking queries. No summary is returned if the search
        /// query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best
        /// soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not.
        /// They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for
        /// non-summary seeking queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreNonSummarySeekingQuery")]
        public virtual System.Nullable<bool> IgnoreNonSummarySeekingQuery { get; set; }

        /// <summary>
        /// Specifies whether to include citations in the summary. The default value is `false`. When this field is set
        /// to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is
        /// Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all
        /// data types, works across clouds, and has built-in machine learning and business intelligence, all within a
        /// unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For
        /// example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the
        /// sentence is attributed to both the second and third search results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeCitations")]
        public virtual System.Nullable<bool> IncludeCitations { get; set; }

        /// <summary>
        /// Language code for Summary. Use language tags defined by
        /// [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>If specified, the spec will be used to modify the prompt provided to the LLM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelPromptSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec ModelPromptSpec { get; set; }

        /// <summary>
        /// If specified, the spec will be used to modify the model specification provided to the LLM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec ModelSpec { get; set; }

        /// <summary>
        /// The number of top results to generate the summary from. If the number of results returned is less than
        /// `summaryResultCount`, the summary is generated from all of the results. At most 10 results for documents
        /// mode, or 50 for chunks mode, can be used to generate a summary. The chunks mode is used when
        /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summaryResultCount")]
        public virtual System.Nullable<int> SummaryResultCount { get; set; }

        /// <summary>
        /// If true, answer will be generated from most relevant chunks from top search results. This feature will
        /// improve summary quality. Note that with this feature enabled, not all top search results will be referenced
        /// and included in the reference list, so the citation source index only points to the search results listed in
        /// the reference list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useSemanticChunks")]
        public virtual System.Nullable<bool> UseSemanticChunks { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification of the prompt to use with the model.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelPromptSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("preamble")]
        public virtual string Preamble { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification of the model.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestContentSearchSpecSummarySpecModelSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The model version used to generate the summary. Supported values are: * `stable`: string. Default value when
        /// no value is specified. Uses a generally available, fine-tuned model. For more information, see [Answer
        /// generation model versions and
        /// lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). * `preview`:
        /// string. (Public preview) Uses a preview model. For more information, see [Answer generation model versions
        /// and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A struct to define data stores to filter on in a search call and configurations for those data stores.
    /// Otherwise, an `INVALID_ARGUMENT` error is returned.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestDataStoreSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Boost specification to boost certain documents. For more information on boosting, see
        /// [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostSpec")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestBoostSpec BoostSpec { get; set; }

        /// <summary>
        /// Required. Full resource name of DataStore, such as
        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Optional. Filter specification to filter documents in the data store specified by data_store field. For more
        /// information on filtering, see
        /// [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies features for display, like match highlighting.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestDisplaySpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The condition under which match highlighting should occur.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchHighlightingCondition")]
        public virtual string MatchHighlightingCondition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The specification that uses customized query embedding vector to do semantic document retrieval.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The embedding vector used for retrieval. Limit to 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embeddingVectors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector> EmbeddingVectors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Embedding vector.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestEmbeddingSpecEmbeddingVector : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Embedding field path in schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldPath")]
        public virtual string FieldPath { get; set; }

        /// <summary>Query embedding vector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vector")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> Vector { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A facet specification to perform faceted search.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the
        /// response is determined automatically. If dynamic facets are enabled, it is ordered together. If set to
        /// false, the position of this facet in the response is the same as in the request, and it is ranked before the
        /// facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating
        /// facet returned in the response, but it's not necessarily to always display the rating facet at the top. In
        /// that case, you can set enable_dynamic_position to true so that the position of rating facet in response is
        /// determined automatically. Another example, assuming you have the following facets in the request: *
        /// "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands",
        /// enable_dynamic_position = false And also you have a dynamic facets enabled, which generates a facet
        /// `gender`. Then the final order of the facets in the response can be ("price", "brands", "rating", "gender")
        /// or ("price", "brands", "gender", "rating") depends on how API orders "gender" and "rating" facets. However,
        /// notice that "price" and "brands" are always ranked at first and second position because their
        /// enable_dynamic_position is false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableDynamicPosition")]
        public virtual System.Nullable<bool> EnableDynamicPosition { get; set; }

        /// <summary>
        /// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is
        /// listed in this field. Listing a facet key in this field allows its values to appear as facet results, even
        /// when they are filtered out of search results. Using this field does not affect what search results are
        /// returned. For example, suppose there are 100 documents with the color facet "Red" and 200 documents with the
        /// color facet "Blue". A query containing the filter "color:ANY("Red")" and having "color" as FacetKey.key
        /// would by default return only "Red" documents in the search results, and also return "Red" with count 100 as
        /// the only color facet. Although there are also blue documents available, "Blue" would not be shown as an
        /// available facet value. If "color" is listed in "excludedFilterKeys", then the query returns the facet values
        /// "Red" with count 100 and "Blue" with count 200, because the "color" key is now excluded from the filter.
        /// Because this field doesn't affect search results, the search results are still correctly filtered to return
        /// only "Red" documents. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is
        /// returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludedFilterKeys")]
        public virtual System.Collections.Generic.IList<string> ExcludedFilterKeys { get; set; }

        /// <summary>Required. The facet key specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("facetKey")]
        public virtual GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey FacetKey { get; set; }

        /// <summary>
        /// Maximum facet values that are returned for this facet. If unspecified, defaults to 20. The maximum allowed
        /// value is 300. Values above 300 are coerced to 300. For aggregation in healthcare search, when the
        /// [FacetKey.key] is "healthcare_aggregation_key", the limit will be overridden to 10,000 internally,
        /// regardless of the value set here. If this field is negative, an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("limit")]
        public virtual System.Nullable<int> Limit { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies how a facet is computed.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestFacetSpecFacetKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false
        /// otherwise.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("caseInsensitive")]
        public virtual System.Nullable<bool> CaseInsensitive { get; set; }

        /// <summary>
        /// Only get facet values that contain the given strings. For example, suppose "category" has three values
        /// "Action &amp;gt; 2022", "Action &amp;gt; 2021" and "Sci-Fi &amp;gt; 2022". If set "contains" to "2022", the
        /// "category" facet only contains "Action &amp;gt; 2022" and "Sci-Fi &amp;gt; 2022". Only supported on textual
        /// fields. Maximum is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contains")]
        public virtual System.Collections.Generic.IList<string> Contains { get; set; }

        /// <summary>
        /// Set only if values should be bucketed into intervals. Must be set for facets with numerical values. Must not
        /// be set for facet with text values. Maximum number of intervals is 30.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intervals")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaInterval> Intervals { get; set; }

        /// <summary>
        /// Required. Supported textual and numerical facet keys in Document object, over which the facet values are
        /// computed. Facet key is case-sensitive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; }

        /// <summary>
        /// The order in which documents are returned. Allowed values are: * "count desc", which means order by
        /// SearchResponse.Facet.values.count descending. * "value desc", which means order by
        /// SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are
        /// sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted
        /// in the order given by FacetSpec.FacetKey.intervals.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; }

        /// <summary>
        /// Only get facet values that start with the given string prefix. For example, suppose "category" has three
        /// values "Action &amp;gt; 2022", "Action &amp;gt; 2021" and "Sci-Fi &amp;gt; 2022". If set "prefixes" to
        /// "Action", the "category" facet only contains "Action &amp;gt; 2022" and "Action &amp;gt; 2021". Only
        /// supported on textual fields. Maximum is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prefixes")]
        public virtual System.Collections.Generic.IList<string> Prefixes { get; set; }

        /// <summary>
        /// Only get facet for the given restricted values. Only supported on textual fields. For example, suppose
        /// "category" has three values "Action &amp;gt; 2022", "Action &amp;gt; 2021" and "Sci-Fi &amp;gt; 2022". If
        /// set "restricted_values" to "Action &amp;gt; 2022", the "category" facet only contains "Action &amp;gt;
        /// 2022". Only supported on textual fields. Maximum is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("restrictedValues")]
        public virtual System.Collections.Generic.IList<string> RestrictedValues { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies the image query input.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestImageQuery : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageBytes")]
        public virtual string ImageBytes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification to enable natural language understanding capabilities for search requests.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestNaturalLanguageQueryUnderstandingSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The condition under which filter extraction should occur. Server behavior defaults to `DISABLED`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterExtractionCondition")]
        public virtual string FilterExtractionCondition { get; set; }

        /// <summary>
        /// Field names used for location-based filtering, where geolocation filters are detected in natural language
        /// search queries. Only valid when the FilterExtractionCondition is set to `ENABLED`. If this field is set, it
        /// overrides the field names set in ServingConfig.geo_search_query_detection_field_names.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geoSearchQueryDetectionFieldNames")]
        public virtual System.Collections.Generic.IList<string> GeoSearchQueryDetectionFieldNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The specification for personalization.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestPersonalizationSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The personalization mode of the search request. Defaults to Mode.AUTO.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mode")]
        public virtual string Mode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification to determine under which conditions query expansion should occur.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestQueryExpansionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The condition under which query expansion should occur. Default to Condition.DISABLED.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>
        /// Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top
        /// of the search results, followed by the expanded results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pinUnexpandedResults")]
        public virtual System.Nullable<bool> PinUnexpandedResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification for search as you type in search requests.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestSearchAsYouTypeSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The condition under which search as you type should occur. Default to Condition.DISABLED.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Session specification. Multi-turn Search feature is currently at private GA stage. Please use v1alpha or v1beta
    /// version instead before we launch this feature to public GA. Or ask for allowlisting through Google Support team.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestSessionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If set, the search result gets stored to the "turn" specified by this query ID. Example: Let's say the
        /// session looks like this: session { name: ".../sessions/xxx" turns { query { text: "What is foo?" query_id:
        /// ".../questions/yyy" } answer: "Foo is ..." } turns { query { text: "How about bar then?" query_id:
        /// ".../questions/zzz" } } } The user can call /search API with a request like this: session:
        /// ".../sessions/xxx" session_spec { query_id: ".../questions/zzz" } Then, the API stores the search result,
        /// associated with the last turn. The stored search result can be used by a subsequent /answer API call (with
        /// the session ID and the query ID specified). Also, it is possible to call /search and /answer in parallel
        /// with the same session ID &amp;amp; query ID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryId")]
        public virtual string QueryId { get; set; }

        /// <summary>
        /// The number of top search results to persist. The persisted search results can be used for the subsequent
        /// /answer api call. This field is similar to the `summary_result_count` field in
        /// SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At most 10 results for documents mode, or
        /// 50 for chunks mode.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResultPersistenceCount")]
        public virtual System.Nullable<int> SearchResultPersistenceCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The specification for query spell correction.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSearchRequestSpellCorrectionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The mode under which spell correction replaces the original search query. Defaults to Mode.AUTO.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mode")]
        public virtual string Mode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>External session proto definition.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSession : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The display name of the session. This field is used to identify the session in the UI. By default,
        /// the display name is the first turn query text in the session.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        private string _endTimeRaw;

        private object _endTime;

        /// <summary>Output only. The time the session finished.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Optional. Whether the session is pinned, pinned session will be displayed on the top of the session list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isPinned")]
        public virtual System.Nullable<bool> IsPinned { get; set; }

        /// <summary>
        /// Immutable. Fully qualified name
        /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Output only. The time the session started.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The state of the session.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>Turns.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("turns")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1alphaSessionTurn> Turns { get; set; }

        /// <summary>A unique identifier for tracking users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a turn, including a query from the user and a answer from service.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSessionTurn : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the answer to the user query. Only set if the answer generation (/answer API call)
        /// happened in this turn.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual string Answer { get; set; }

        /// <summary>
        /// Output only. In ConversationalSearchService.GetSession API, if GetSessionRequest.include_answer_details is
        /// set to true, this field will be populated when getting answer query session.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detailedAnswer")]
        public virtual GoogleCloudDiscoveryengineV1alphaAnswer DetailedAnswer { get; set; }

        /// <summary>The user query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual GoogleCloudDiscoveryengineV1alphaQuery Query { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CrawlRateManagementService.SetDedicatedCrawlRate operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for CrawlRateManagementService.SetDedicatedCrawlRate method. It simply returns the state of the
    /// response, and an error message if the state is FAILED.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSetDedicatedCrawlRateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Errors from service when handling the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>Output only. The state of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for DataConnectorService.SetUpDataConnector method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSetUpDataConnectorMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.SetUriPatternDocumentData operation. This will
    /// be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.SetUriPatternDocumentData method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSetUriPatternDocumentDataResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for single-regional CMEKs.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSingleRegionKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Single-regional kms key resource name which will be used to encrypt resources
        /// `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKey")]
        public virtual string KmsKey { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Verification information for target sites in advanced site search.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Site verification state indicating the ownership and validity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteVerificationState")]
        public virtual string SiteVerificationState { get; set; }

        private string _verifyTimeRaw;

        private object _verifyTime;

        /// <summary>Latest site verification time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verifyTime")]
        public virtual string VerifyTimeRaw
        {
            get => _verifyTimeRaw;
            set
            {
                _verifyTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _verifyTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="VerifyTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use VerifyTimeDateTimeOffset instead.")]
        public virtual object VerifyTime
        {
            get => _verifyTime;
            set
            {
                _verifyTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _verifyTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="VerifyTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? VerifyTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(VerifyTimeRaw);
            set => VerifyTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A sitemap for the SiteSearchEngine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaSitemap : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The sitemap's creation time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The fully qualified resource name of the sitemap.
        /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine/sitemaps/*` The `sitemap_id` suffix is
        /// system-generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Public URI for the sitemap, e.g. `www.example.com/sitemap.xml`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A target site for the SiteSearchEngine.</summary>
    public class GoogleCloudDiscoveryengineV1alphaTargetSite : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Immutable. If set to false, a uri_pattern is generated to include all pages whose address contains the
        /// provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the
        /// provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one.
        /// provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exactMatch")]
        public virtual System.Nullable<bool> ExactMatch { get; set; }

        /// <summary>Output only. Failure reason.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReason")]
        public virtual GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason FailureReason { get; set; }

        /// <summary>Output only. This is system-generated based on the provided_uri_pattern.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatedUriPattern")]
        public virtual string GeneratedUriPattern { get; set; }

        /// <summary>Output only. Indexing status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexingStatus")]
        public virtual string IndexingStatus { get; set; }

        /// <summary>
        /// Output only. The fully qualified resource name of the target site.
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
        /// The `target_site_id` is system-generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("providedUriPattern")]
        public virtual string ProvidedUriPattern { get; set; }

        /// <summary>Output only. Root domain of the provided_uri_pattern.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rootDomainUri")]
        public virtual string RootDomainUri { get; set; }

        /// <summary>Output only. Site ownership and validity verification status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteVerificationInfo")]
        public virtual GoogleCloudDiscoveryengineV1alphaSiteVerificationInfo SiteVerificationInfo { get; set; }

        /// <summary>The type of the target site, e.g., whether the site is to be included or excluded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. The target site's last updated time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Site search indexing failure reasons.</summary>
    public class GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReason : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Failed due to insufficient quota.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quotaFailure")]
        public virtual GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure QuotaFailure { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Failed due to insufficient quota.</summary>
    public class GoogleCloudDiscoveryengineV1alphaTargetSiteFailureReasonQuotaFailure : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// This number is an estimation on how much total quota this project needs to successfully complete indexing.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalRequiredQuota")]
        public virtual System.Nullable<long> TotalRequiredQuota { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the TrainCustomModel operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaTrainCustomModelMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the TrainCustomModelRequest. This message is returned by the google.longrunning.Operations.response
    /// field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaTrainCustomModelResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors in the request if set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1alphaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The metrics of the trained model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IDictionary<string, System.Nullable<double>> Metrics { get; set; }

        /// <summary>Fully qualified name of the CustomTuningModel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelName")]
        public virtual string ModelName { get; set; }

        /// <summary>
        /// The trained model status. Possible values are: * **bad-data**: The training data quality is bad. *
        /// **no-improvement**: Tuning didn't improve performance. Won't deploy. * **in-progress**: Model training job
        /// creation is in progress. * **training**: Model is actively training. * **evaluating**: The model is
        /// evaluating trained metrics. * **indexing**: The model trained metrics are indexing. * **ready**: The model
        /// is ready for serving.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelStatus")]
        public virtual string ModelStatus { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata associated with a tune operation.</summary>
    public class GoogleCloudDiscoveryengineV1alphaTuneEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The resource name of the engine that this tune applies to. Format:
        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("engine")]
        public virtual string Engine { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response associated with a tune operation.</summary>
    public class GoogleCloudDiscoveryengineV1alphaTuneEngineResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CmekConfigService.UpdateCmekConfig operation. This will be returned by
    /// the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaUpdateCmekConfigMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CollectionService.UpdateCollection operation. This will be returned by
    /// the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaUpdateCollectionMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for UpdateSchema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1alphaUpdateSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request for UpdateSession method.</summary>
    public class GoogleCloudDiscoveryengineV1alphaUpdateSessionRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The Session to update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual GoogleCloudDiscoveryengineV1alphaSession Session { get; set; }

        /// <summary>
        /// Indicates which fields in the provided Session to update. The following are NOT supported: * Session.name If
        /// not set or empty, all supported fields are updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateMask")]
        public virtual object UpdateMask { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.UpdateTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1alphaUpdateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information of an end user.</summary>
    public class GoogleCloudDiscoveryengineV1alphaUserInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// User agent as included in the HTTP header. The field must be a UTF-8 encoded string with a length limit of
        /// 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This should not be set when using the
        /// client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if
        /// UserEvent.direct_user_request is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userAgent")]
        public virtual string UserAgent { get; set; }

        /// <summary>
        /// Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set
        /// for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for
        /// different users. This mixes the event history of those users together, which results in degraded model
        /// quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
        /// `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config to store data store type configuration for workspace data</summary>
    public class GoogleCloudDiscoveryengineV1alphaWorkspaceConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Obfuscated Dasher customer ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dasherCustomerId")]
        public virtual string DasherCustomerId { get; set; }

        /// <summary>
        /// Optional. The super admin email address for the workspace that will be used for access token generation. For
        /// now we only use it for Native Google Drive connector data ingestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("superAdminEmailAddress")]
        public virtual string SuperAdminEmailAddress { get; set; }

        /// <summary>
        /// Optional. The super admin service account for the workspace that will be used for access token generation.
        /// For now we only use it for Native Google Drive connector data ingestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("superAdminServiceAccount")]
        public virtual string SuperAdminServiceAccount { get; set; }

        /// <summary>The Google Workspace data source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for CompletionService.AdvancedCompleteQuery method. .</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Specification to boost suggestions matching the condition.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestBoostSpec BoostSpec { get; set; }

        /// <summary>
        /// Indicates if tail suggestions should be returned if there are no suggestions that match the full query. Even
        /// if set to true, if there are suggestions that match the full query, those are returned and no tail
        /// suggestions are returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeTailSuggestions")]
        public virtual System.Nullable<bool> IncludeTailSuggestions { get; set; }

        /// <summary>
        /// Required. The typeahead input used to fetch suggestions. Maximum length is 128 characters. The query can not
        /// be empty for most of the suggestion types. If it is empty, an `INVALID_ARGUMENT` error is returned. The
        /// exception is when the suggestion_types contains only the type `RECENT_SEARCH`, the query can be an empty
        /// string. The is called "zero prefix" feature, which returns user's recently searched queries given the empty
        /// query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; }

        /// <summary>
        /// Specifies the autocomplete query model, which only applies to the QUERY SuggestionType. This overrides any
        /// model specified in the Configuration &amp;gt; Autocomplete section of the Cloud console. Currently supported
        /// values: * `document` - Using suggestions generated from user-imported documents. * `search-history` - Using
        /// suggestions generated from the past history of SearchService.Search API calls. Do not use it when there is
        /// no traffic for Search API. * `user-event` - Using suggestions generated from user-imported search events. *
        /// `document-completable` - Using suggestions taken directly from user-imported document fields marked as
        /// completable. Default values: * `document` is the default model for regular dataStores. * `search-history` is
        /// the default model for site search dataStores.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryModel")]
        public virtual string QueryModel { get; set; }

        /// <summary>Optional. Specification of each suggestion type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionTypeSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestSuggestionTypeSpec> SuggestionTypeSpecs { get; set; }

        /// <summary>
        /// Optional. Suggestion types to return. If empty or unspecified, query suggestions are returned. Only one
        /// suggestion type is supported at the moment.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionTypes")]
        public virtual System.Collections.Generic.IList<string> SuggestionTypes { get; set; }

        /// <summary>
        /// Optional. Information about the end user. This should be the same identifier information as
        /// UserEvent.user_info and SearchRequest.user_info.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaUserInfo UserInfo { get; set; }

        /// <summary>
        /// A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which
        /// should be able to uniquely identify a visitor on a single device. This unique identifier should not change
        /// if the visitor logs in or out of the website. This field should NOT have a fixed value such as
        /// `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and
        /// SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification to boost suggestions based on the condtion of the suggestion.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Condition boost specifications. If a suggestion matches multiple conditions in the specifictions, boost
        /// values from these specifications are all applied and combined in a non-linear way. Maximum number of
        /// specifications is 20. Note: Currently only support language condition boost.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditionBoostSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec> ConditionBoostSpecs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Boost applies to suggestions which match a condition.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestBoostSpecConditionBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to
        /// 1.0 gives the suggestions a big promotion. However, it does not necessarily mean that the top result will be
        /// a boosted suggestion. Setting to -1.0 gives the suggestions a big demotion. However, other suggestions that
        /// are relevant might still be shown. Setting to 0.0 means no boost applied. The boosting condition is ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boost")]
        public virtual System.Nullable<float> Boost { get; set; }

        /// <summary>
        /// An expression which specifies a boost condition. The syntax is the same as [filter expression
        /// syntax](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-expression-syntax).
        /// Currently, the only supported condition is a list of BCP-47 lang codes. Example: * To boost suggestions in
        /// languages `en` or `fr`: `(lang_code: ANY("en", "fr"))`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification of each suggestion type.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryRequestSuggestionTypeSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Maximum number of suggestions to return for each suggestion type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxSuggestions")]
        public virtual System.Nullable<int> MaxSuggestions { get; set; }

        /// <summary>Optional. Suggestion type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestionType")]
        public virtual string SuggestionType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.AdvancedCompleteQuery method.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Results of the matched content suggestions. The result list is ordered and the first result is the top
        /// suggestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentSuggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseContentSuggestion> ContentSuggestions { get; set; }

        /// <summary>
        /// Results of the matched people suggestions. The result list is ordered and the first result is the top
        /// suggestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("peopleSuggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponsePersonSuggestion> PeopleSuggestions { get; set; }

        /// <summary>
        /// Results of the matched query suggestions. The result list is ordered and the first result is a top
        /// suggestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("querySuggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseQuerySuggestion> QuerySuggestions { get; set; }

        /// <summary>
        /// Results of the matched "recent search" suggestions. The result list is ordered and the first result is the
        /// top suggestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recentSearchSuggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseRecentSearchSuggestion> RecentSearchSuggestions { get; set; }

        /// <summary>
        /// True if the returned suggestions are all tail suggestions. For tail matching to be triggered,
        /// include_tail_suggestions in the request must be true and there must be no suggestions that match the full
        /// query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tailMatchTriggered")]
        public virtual System.Nullable<bool> TailMatchTriggered { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestions as content.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseContentSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The type of the content suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType { get; set; }

        /// <summary>The name of the dataStore that this suggestion belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>The document data snippet in the suggestion. Only a subset of fields will be populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual GoogleCloudDiscoveryengineV1betaDocument Document { get; set; }

        /// <summary>The suggestion for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestion")]
        public virtual string Suggestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestions as people.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponsePersonSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dataStore that this suggestion belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>The document data snippet in the suggestion. Only a subset of fields is populated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual GoogleCloudDiscoveryengineV1betaDocument Document { get; set; }

        /// <summary>The type of the person.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("personType")]
        public virtual string PersonType { get; set; }

        /// <summary>The suggestion for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestion")]
        public virtual string Suggestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestions as search queries.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseQuerySuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The unique document field paths that serve as the source of this suggestion if it was generated from
        /// completable fields. This field is only populated for the document-completable model.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("completableFieldPaths")]
        public virtual System.Collections.Generic.IList<string> CompletableFieldPaths { get; set; }

        /// <summary>The name of the dataStore that this suggestion belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual System.Collections.Generic.IList<string> DataStore { get; set; }

        /// <summary>The suggestion for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestion")]
        public virtual string Suggestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestions from recent search history.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedCompleteQueryResponseRecentSearchSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _recentSearchTimeRaw;

        private object _recentSearchTime;

        /// <summary>The time when this recent rearch happened.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recentSearchTime")]
        public virtual string RecentSearchTimeRaw
        {
            get => _recentSearchTimeRaw;
            set
            {
                _recentSearchTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _recentSearchTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="RecentSearchTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use RecentSearchTimeDateTimeOffset instead.")]
        public virtual object RecentSearchTime
        {
            get => _recentSearchTime;
            set
            {
                _recentSearchTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _recentSearchTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="RecentSearchTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? RecentSearchTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(RecentSearchTimeRaw);
            set => RecentSearchTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The suggestion for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestion")]
        public virtual string Suggestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration data for advance site search.</summary>
    public class GoogleCloudDiscoveryengineV1betaAdvancedSiteSearchConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set true, automatic refresh is disabled for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableAutomaticRefresh")]
        public virtual System.Nullable<bool> DisableAutomaticRefresh { get; set; }

        /// <summary>If set true, initial indexing is disabled for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableInitialIndex")]
        public virtual System.Nullable<bool> DisableInitialIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>AlloyDB source import data from.</summary>
    public class GoogleCloudDiscoveryengineV1betaAlloyDbSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The AlloyDB cluster to copy the data from with a length limit of 256 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clusterId")]
        public virtual string ClusterId { get; set; }

        /// <summary>
        /// Required. The AlloyDB database to copy the data from with a length limit of 256 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("databaseId")]
        public virtual string DatabaseId { get; set; }

        /// <summary>
        /// Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be
        /// specified if one wants to have the AlloyDB export to a specific Cloud Storage directory. Ensure that the
        /// AlloyDB service account has the necessary Cloud Storage Admin permissions to access the specified Cloud
        /// Storage directory.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsStagingDir")]
        public virtual string GcsStagingDir { get; set; }

        /// <summary>
        /// Required. The AlloyDB location to copy the data from with a length limit of 256 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; }

        /// <summary>
        /// The project ID that contains the AlloyDB source. Has a length limit of 128 characters. If not specified,
        /// inherits the project ID from the parent request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; }

        /// <summary>Required. The AlloyDB table to copy the data from with a length limit of 256 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableId")]
        public virtual string TableId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines an answer.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Additional answer-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this
        /// field is not set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerSkippedReasons")]
        public virtual System.Collections.Generic.IList<string> AnswerSkippedReasons { get; set; }

        /// <summary>The textual answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerText")]
        public virtual string AnswerText { get; set; }

        /// <summary>Citations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("citations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerCitation> Citations { get; set; }

        private string _completeTimeRaw;

        private object _completeTime;

        /// <summary>Output only. Answer completed timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("completeTime")]
        public virtual string CompleteTimeRaw
        {
            get => _completeTimeRaw;
            set
            {
                _completeTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _completeTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CompleteTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CompleteTimeDateTimeOffset instead.")]
        public virtual object CompleteTime
        {
            get => _completeTime;
            set
            {
                _completeTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _completeTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CompleteTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CompleteTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CompleteTimeRaw);
            set => CompleteTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Answer creation timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// A score in the range of [0, 1] describing how grounded the answer is by the reference chunks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingScore")]
        public virtual System.Nullable<double> GroundingScore { get; set; }

        /// <summary>Optional. Grounding supports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingSupports")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerGroundingSupport> GroundingSupports { get; set; }

        /// <summary>
        /// Immutable. Fully qualified name
        /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*/answers/*`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Query understanding information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryUnderstandingInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryUnderstandingInfo QueryUnderstandingInfo { get; set; }

        /// <summary>References.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("references")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerReference> References { get; set; }

        /// <summary>Suggested related questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relatedQuestions")]
        public virtual System.Collections.Generic.IList<string> RelatedQuestions { get; set; }

        /// <summary>Optional. Safety ratings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safetyRatings")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSafetyRating> SafetyRatings { get; set; }

        /// <summary>The state of the answer generation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>Answer generation steps.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("steps")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerStep> Steps { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Citation info for a segment.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerCitation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// End of the attributed segment, exclusive. Measured in bytes (UTF-8 unicode). If there are multi-byte
        /// characters,such as non-ASCII characters, the index measurement is longer than the string length.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endIndex")]
        public virtual System.Nullable<long> EndIndex { get; set; }

        /// <summary>Citation sources for the attributed segment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerCitationSource> Sources { get; set; }

        /// <summary>
        /// Index indicates the start of the segment, measured in bytes (UTF-8 unicode). If there are multi-byte
        /// characters,such as non-ASCII characters, the index measurement is longer than the string length.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startIndex")]
        public virtual System.Nullable<long> StartIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Citation source.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerCitationSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the citation source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceId")]
        public virtual string ReferenceId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Grounding support for a claim in `answer_text`.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerGroundingSupport : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. End of the claim, exclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endIndex")]
        public virtual System.Nullable<long> EndIndex { get; set; }

        /// <summary>
        /// Indicates that this claim required grounding check. When the system decided this claim didn't require
        /// attribution/grounding check, this field is set to false. In that case, no grounding check was done for the
        /// claim and therefore `grounding_score`, `sources` is not returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingCheckRequired")]
        public virtual System.Nullable<bool> GroundingCheckRequired { get; set; }

        /// <summary>
        /// A score in the range of [0, 1] describing how grounded is a specific claim by the references. Higher value
        /// means that the claim is better supported by the reference chunks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingScore")]
        public virtual System.Nullable<double> GroundingScore { get; set; }

        /// <summary>Optional. Citation sources for the claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerCitationSource> Sources { get; set; }

        /// <summary>Required. Index indicates the start of the claim, measured in bytes (UTF-8 unicode).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startIndex")]
        public virtual System.Nullable<long> StartIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for ConversationalSearchService.AnswerQuery method.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Answer generation specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerGenerationSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpec AnswerGenerationSpec { get; set; }

        /// <summary>
        /// Deprecated: This field is deprecated. Streaming Answer API will be supported. Asynchronous mode control. If
        /// enabled, the response will be returned with answer/session resource name without final answer. The API users
        /// need to do the polling to get the latest status of answer/session by calling
        /// ConversationalSearchService.GetAnswer or ConversationalSearchService.GetSession method.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("asynchronousMode")]
        public virtual System.Nullable<bool> AsynchronousMode { get; set; }

        /// <summary>Optional. End user specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endUserSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpec EndUserSpec { get; set; }

        /// <summary>Optional. Grounding specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestGroundingSpec GroundingSpec { get; set; }

        /// <summary>Required. Current user query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual GoogleCloudDiscoveryengineV1betaQuery Query { get; set; }

        /// <summary>Query understanding specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryUnderstandingSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpec QueryUnderstandingSpec { get; set; }

        /// <summary>Related questions specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relatedQuestionsSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestRelatedQuestionsSpec RelatedQuestionsSpec { get; set; }

        /// <summary>Model specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safetySpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSafetySpec SafetySpec { get; set; }

        /// <summary>Search specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpec SearchSpec { get; set; }

        /// <summary>
        /// The session resource name. Not required. When session field is not set, the API is in sessionless mode. We
        /// support auto session mode: users can use the wildcard symbol `-` as session ID. A new ID will be
        /// automatically generated and assigned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; }

        /// <summary>
        /// The user labels applied to a resource must meet the following requirements: * Each resource can have
        /// multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length
        /// of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a
        /// maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters,
        /// underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. *
        /// The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys
        /// must start with a lowercase letter or international character. See [Google Cloud
        /// Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>
        /// A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which
        /// should be able to uniquely identify a visitor on a single device. This unique identifier should not change
        /// if the visitor logs in or out of the website. This field should NOT have a fixed value such as
        /// `unknown_visitor`. The field must be a UTF-8 encoded string with a length limit of 128 characters.
        /// Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Answer generation specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Language code for Answer. Use language tags defined by
        /// [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerLanguageCode")]
        public virtual string AnswerLanguageCode { get; set; }

        /// <summary>
        /// Specifies whether to filter out adversarial queries. The default value is `false`. Google employs
        /// search-query classification to detect adversarial queries. No answer is returned if the search query is
        /// classified as an adversarial query. For example, a user might ask a question regarding negative comments
        /// about the company or submit a query designed to generate unsafe, policy-violating output. If this field is
        /// set to `true`, we skip generating answers for adversarial queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreAdversarialQuery")]
        public virtual System.Nullable<bool> IgnoreAdversarialQuery { get; set; }

        /// <summary>
        /// Optional. Specifies whether to filter out jail-breaking queries. The default value is `false`. Google
        /// employs search-query classification to detect jail-breaking queries. No summary is returned if the search
        /// query is classified as a jail-breaking query. A user might add instructions to the query to change the tone,
        /// style, language, content of the answer, or ask the model to act as a different entity, e.g. "Reply in the
        /// tone of a competing company's CEO". If this field is set to `true`, we skip generating summaries for
        /// jail-breaking queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreJailBreakingQuery")]
        public virtual System.Nullable<bool> IgnoreJailBreakingQuery { get; set; }

        /// <summary>
        /// Specifies whether to filter out queries that have low relevance. If this field is set to `false`, all search
        /// results are used regardless of relevance to generate answers. If set to `true` or unset, the behavior will
        /// be determined automatically by the service.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreLowRelevantContent")]
        public virtual System.Nullable<bool> IgnoreLowRelevantContent { get; set; }

        /// <summary>
        /// Specifies whether to filter out queries that are not answer-seeking. The default value is `false`. Google
        /// employs search-query classification to detect answer-seeking queries. No answer is returned if the search
        /// query is classified as a non-answer seeking query. If this field is set to `true`, we skip generating
        /// answers for non-answer seeking queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreNonAnswerSeekingQuery")]
        public virtual System.Nullable<bool> IgnoreNonAnswerSeekingQuery { get; set; }

        /// <summary>
        /// Specifies whether to include citation metadata in the answer. The default value is `false`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeCitations")]
        public virtual System.Nullable<bool> IncludeCitations { get; set; }

        /// <summary>Answer generation model specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpecModelSpec ModelSpec { get; set; }

        /// <summary>Answer generation prompt specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promptSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpecPromptSpec PromptSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Answer Generation Model specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpecModelSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Model version. If not set, it will use the default stable model. Allowed values are: stable, preview.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelVersion")]
        public virtual string ModelVersion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Answer generation prompt specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestAnswerGenerationSpecPromptSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Customized preamble.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("preamble")]
        public virtual string Preamble { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>End user specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. End user metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endUserMetadata")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaData> EndUserMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>End user metadata.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfo ChunkInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk textual content. It is limited to 8000 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Metadata of the document from the current chunk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfoDocumentMetadata DocumentMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document metadata contains the information of the document of the current chunk.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestEndUserSpecEndUserMetaDataChunkInfoDocumentMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Title of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Grounding specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestGroundingSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Specifies whether to enable the filtering based on grounding score and at what level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filteringLevel")]
        public virtual string FilteringLevel { get; set; }

        /// <summary>
        /// Optional. Specifies whether to include grounding_supports in the answer. The default value is `false`. When
        /// this field is set to `true`, returned answer will have `grounding_score` and will contain GroundingSupports
        /// for each claim.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeGroundingSupports")]
        public virtual System.Nullable<bool> IncludeGroundingSupports { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query understanding specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Query classification specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryClassificationSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec QueryClassificationSpec { get; set; }

        /// <summary>Query rephraser specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryRephraserSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec QueryRephraserSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query classification specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryClassificationSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Enabled query classification types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("types")]
        public virtual System.Collections.Generic.IList<string> Types { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query rephraser specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Disable query rephraser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disable")]
        public virtual System.Nullable<bool> Disable { get; set; }

        /// <summary>
        /// Max rephrase steps. The max number is 5 steps. If not set or set to &amp;lt; 1, it will be set to 1 by
        /// default.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxRephraseSteps")]
        public virtual System.Nullable<int> MaxRephraseSteps { get; set; }

        /// <summary>Optional. Query Rephraser Model specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec ModelSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query Rephraser Model specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestQueryUnderstandingSpecQueryRephraserSpecModelSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Enabled query rephraser model type. If not set, it will use LARGE by default.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelType")]
        public virtual string ModelType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Related questions specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestRelatedQuestionsSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Enable related questions feature if true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enable")]
        public virtual System.Nullable<bool> Enable { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Safety specification. There are two use cases: 1. when only safety_spec.enable is set, the BLOCK_LOW_AND_ABOVE
    /// threshold will be applied for all categories. 2. when safety_spec.enable is set and some safety_settings are
    /// set, only specified safety_settings are applied.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSafetySpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Enable the safety filtering on the answer response. It is false by default.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enable")]
        public virtual System.Nullable<bool> Enable { get; set; }

        /// <summary>
        /// Optional. Safety settings. This settings are effective only when the safety_spec.enable is true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safetySettings")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSafetySpecSafetySetting> SafetySettings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Safety settings.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSafetySpecSafetySetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Harm category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category { get; set; }

        /// <summary>Required. The harm block threshold.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("threshold")]
        public virtual string Threshold { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Search specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Search parameters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchParams")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchParams SearchParams { get; set; }

        /// <summary>Search result list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResultList")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultList SearchResultList { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Search parameters.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchParams : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Boost specification to boost certain documents in search results which may affect the answer query response.
        /// For more information on boosting, see [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec BoostSpec { get; set; }

        /// <summary>
        /// Specs defining dataStores to filter on in a search call and configurations for those dataStores. This is
        /// only considered for engines with multiple dataStores use case. For single dataStore within an engine, they
        /// should use the specs at the top level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec> DataStoreSpecs { get; set; }

        /// <summary>
        /// The filter syntax consists of an expression language for constructing a predicate from one or more fields of
        /// the documents being filtered. Filter expression is case-sensitive. This will be used to filter search
        /// results which may affect the Answer response. If this field is unrecognizable, an `INVALID_ARGUMENT` is
        /// returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in
        /// the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media
        /// customers might have a field 'name' in their schema. In this case the filter would look like this: filter
        /// --&amp;gt; name:'ANY("king kong")' For more information about filtering including syntax and filter
        /// operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>Number of search results to return. The default value is 10.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxReturnResults")]
        public virtual System.Nullable<int> MaxReturnResults { get; set; }

        /// <summary>
        /// Optional. Specification to enable natural language understanding capabilities for search requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("naturalLanguageQueryUnderstandingSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec NaturalLanguageQueryUnderstandingSpec { get; set; }

        /// <summary>
        /// The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave
        /// it unset if ordered by relevance. `order_by` expression is case-sensitive. For more information on ordering,
        /// see [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order) If this field is unrecognizable,
        /// an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; }

        /// <summary>
        /// Specifies the search result mode. If unspecified, the search result mode defaults to `DOCUMENTS`. See [parse
        /// and chunk documents](https://cloud.google.com/generative-ai-app-builder/docs/parse-chunk-documents)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResultMode")]
        public virtual string SearchResultMode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Search result list.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Search results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResult> SearchResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Search result.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo ChunkInfo { get; set; }

        /// <summary>Unstructured document information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDocumentInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo UnstructuredDocumentInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunk")]
        public virtual string Chunk { get; set; }

        /// <summary>Chunk textual content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Metadata of the document from the current chunk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata DocumentMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document metadata contains the information of the document of the current chunk.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultChunkInfoDocumentMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Title of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>Uri of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Unstructured document information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>
        /// List of document contexts. The content will be used for Answer Generation. This is supposed to be the main
        /// content of the document that can be long and comprehensive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentContexts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext> DocumentContexts { get; set; }

        /// <summary>
        /// Deprecated: This field is deprecated and will have no effect on the Answer generation. Please use
        /// document_contexts and extractive_segments fields. List of extractive answers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extractiveAnswers")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer> ExtractiveAnswers { get; set; }

        /// <summary>List of extractive segments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extractiveSegments")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment> ExtractiveSegments { get; set; }

        /// <summary>Title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI for the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document context.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoDocumentContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Document content to be used for answer generation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Page identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageIdentifier")]
        public virtual string PageIdentifier { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Extractive answer. [Guide](https://cloud.google.com/generative-ai-app-builder/docs/snippets#get-answers)
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveAnswer : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Extractive answer content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Page identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageIdentifier")]
        public virtual string PageIdentifier { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Extractive segment.
    /// [Guide](https://cloud.google.com/generative-ai-app-builder/docs/snippets#extractive-segments) Answer generation
    /// will only use it if document_contexts is empty. This is supposed to be shorter snippets.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryRequestSearchSpecSearchResultListSearchResultUnstructuredDocumentInfoExtractiveSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Extractive segment content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Page identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageIdentifier")]
        public virtual string PageIdentifier { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for ConversationalSearchService.AnswerQuery method.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Answer resource object. If AnswerQueryRequest.QueryUnderstandingSpec.QueryRephraserSpec.max_rephrase_steps
        /// is greater than 1, use Answer.name to fetch answer information using ConversationalSearchService.GetAnswer
        /// API.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswer Answer { get; set; }

        /// <summary>A global unique ID used for logging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerQueryToken")]
        public virtual string AnswerQueryToken { get; set; }

        /// <summary>
        /// Session resource object. It will be only available when session field is set and valid in the
        /// AnswerQueryRequest request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual GoogleCloudDiscoveryengineV1betaSession Session { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query understanding information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryUnderstandingInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Query classification information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryClassificationInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerQueryUnderstandingInfoQueryClassificationInfo> QueryClassificationInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query classification information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerQueryUnderstandingInfoQueryClassificationInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Classification output.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positive")]
        public virtual System.Nullable<bool> Positive { get; set; }

        /// <summary>Query classification type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Reference.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerReferenceChunkInfo ChunkInfo { get; set; }

        /// <summary>Structured document information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredDocumentInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerReferenceStructuredDocumentInfo StructuredDocumentInfo { get; set; }

        /// <summary>Unstructured document information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDocumentInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerReferenceUnstructuredDocumentInfo UnstructuredDocumentInfo { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerReferenceChunkInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunk")]
        public virtual string Chunk { get; set; }

        /// <summary>Chunk textual content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Document metadata.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerReferenceChunkInfoDocumentMetadata DocumentMetadata { get; set; }

        /// <summary>
        /// The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0
        /// (completely relevant). This value is for informational purpose only. It may change for the same query and
        /// chunk at any time due to a model retraining or change in implementation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceScore")]
        public virtual System.Nullable<float> RelevanceScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document metadata.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerReferenceChunkInfoDocumentMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>Page identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageIdentifier")]
        public virtual string PageIdentifier { get; set; }

        /// <summary>
        /// The structured JSON metadata for the document. It is populated from the struct data from the Chunk in search
        /// result.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI for the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Structured search information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerReferenceStructuredDocumentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>Structured search data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Output only. The title of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>Output only. The URI of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Unstructured document information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerReferenceUnstructuredDocumentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of cited chunk contents derived from document content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkContents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerReferenceUnstructuredDocumentInfoChunkContent> ChunkContents { get; set; }

        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>
        /// The structured JSON metadata for the document. It is populated from the struct data from the Chunk in search
        /// result.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI for the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk content.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerReferenceUnstructuredDocumentInfoChunkContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk textual content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Page identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageIdentifier")]
        public virtual string PageIdentifier { get; set; }

        /// <summary>
        /// The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0
        /// (completely relevant). This value is for informational purpose only. It may change for the same query and
        /// chunk at any time due to a model retraining or change in implementation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceScore")]
        public virtual System.Nullable<float> RelevanceScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Step information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerStep : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Actions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerStepAction> Actions { get; set; }

        /// <summary>The description of the step.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>The state of the step.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The thought of the step.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thought")]
        public virtual string Thought { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Action.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerStepAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Observation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("observation")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerStepActionObservation Observation { get; set; }

        /// <summary>Search action.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchAction")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswerStepActionSearchAction SearchAction { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Observation.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerStepActionObservation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Search results observed by the search action, it can be snippets info or chunk info, depending on the
        /// citation type set by the user.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResult> SearchResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If citation_type is CHUNK_LEVEL_CITATION and chunk mode is on, populate chunk info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResultChunkInfo> ChunkInfo { get; set; }

        /// <summary>Document resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>If citation_type is DOCUMENT_LEVEL_CITATION, populate document level snippets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippetInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResultSnippetInfo> SnippetInfo { get; set; }

        /// <summary>
        /// Data representation. The structured JSON data for the document. It's populated from the struct data from the
        /// Document, or the Chunk in search result.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>URI for the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResultChunkInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk resource name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunk")]
        public virtual string Chunk { get; set; }

        /// <summary>Chunk textual content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>
        /// The relevance of the chunk for a given query. Values range from 0.0 (completely irrelevant) to 1.0
        /// (completely relevant). This value is for informational purpose only. It may change for the same query and
        /// chunk at any time due to a model retraining or change in implementation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceScore")]
        public virtual System.Nullable<float> RelevanceScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Snippet information.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerStepActionObservationSearchResultSnippetInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Snippet content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual string Snippet { get; set; }

        /// <summary>Status of the snippet defined by the search team.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippetStatus")]
        public virtual string SnippetStatus { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Search action.</summary>
    public class GoogleCloudDiscoveryengineV1betaAnswerStepActionSearchAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The query to search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.BatchCreateTargetSites operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaBatchCreateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SiteSearchEngineService.BatchCreateTargetSites method.</summary>
    public class GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The request message specifying the resources to create. A maximum of 20 TargetSites can be created
        /// in a batch.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requests")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaCreateTargetSiteRequest> Requests { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.BatchCreateTargetSites method.</summary>
    public class GoogleCloudDiscoveryengineV1betaBatchCreateTargetSitesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>TargetSites created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSites")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaTargetSite> TargetSites { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for DocumentService.BatchGetDocumentsMetadata method.</summary>
    public class GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The metadata of the Documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentsMetadata")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponseDocumentMetadata> DocumentsMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The metadata of a Document.</summary>
    public class GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponseDocumentMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The data ingestion source of the Document. Allowed values are: * `batch`: Data ingested via Batch API, e.g.,
        /// ImportDocuments. * `streaming` Data ingested via Streaming API, e.g., FHIR streaming.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataIngestionSource")]
        public virtual string DataIngestionSource { get; set; }

        private string _lastRefreshedTimeRaw;

        private object _lastRefreshedTime;

        /// <summary>The timestamp of the last time the Document was last indexed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastRefreshedTime")]
        public virtual string LastRefreshedTimeRaw
        {
            get => _lastRefreshedTimeRaw;
            set
            {
                _lastRefreshedTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _lastRefreshedTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="LastRefreshedTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use LastRefreshedTimeDateTimeOffset instead.")]
        public virtual object LastRefreshedTime
        {
            get => _lastRefreshedTime;
            set
            {
                _lastRefreshedTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _lastRefreshedTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="LastRefreshedTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? LastRefreshedTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(LastRefreshedTimeRaw);
            set => LastRefreshedTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The value of the matcher that was used to match the Document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matcherValue")]
        public virtual GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue MatcherValue { get; set; }

        /// <summary>The state of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The value of the matcher that was used to match the Document.</summary>
    public class GoogleCloudDiscoveryengineV1betaBatchGetDocumentsMetadataResponseDocumentMetadataMatcherValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Format:
        /// projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}/fhir/{resource_type}/{fhir_resource_id}
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fhirResource")]
        public virtual string FhirResource { get; set; }

        /// <summary>If match by URI, the URI of the Document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SiteSearchEngineService.BatchVerifyTargetSites method.</summary>
    public class GoogleCloudDiscoveryengineV1betaBatchVerifyTargetSitesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>BigQuery source import data from.</summary>
    public class GoogleCloudDiscoveryengineV1betaBigQuerySource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The schema to use when parsing the data from the source. Supported values for user event imports: *
        /// `user_event` (default): One UserEvent per row. Supported values for document imports: * `document`
        /// (default): One Document format per row. Each document must have a valid Document.id and one of
        /// Document.json_data or Document.struct_data. * `custom`: One custom data per row in arbitrary format that
        /// conforms to the defined Schema of the data store. This can only be used by the GENERIC Data Store vertical.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataSchema")]
        public virtual string DataSchema { get; set; }

        /// <summary>
        /// Required. The BigQuery data set to copy the data from with a length limit of 1,024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("datasetId")]
        public virtual string DatasetId { get; set; }

        /// <summary>
        /// Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be
        /// specified if one wants to have the BigQuery export to a specific Cloud Storage directory.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsStagingDir")]
        public virtual string GcsStagingDir { get; set; }

        /// <summary>BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partitionDate")]
        public virtual GoogleTypeDate PartitionDate { get; set; }

        /// <summary>
        /// The project ID or the project number that contains the BigQuery source. Has a length limit of 128
        /// characters. If not specified, inherits the project ID from the parent request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; }

        /// <summary>
        /// Required. The BigQuery table to copy the data from with a length limit of 1,024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableId")]
        public virtual string TableId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The Bigtable Options object that contains information to support the import.</summary>
    public class GoogleCloudDiscoveryengineV1betaBigtableOptions : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The mapping from family names to an object that contains column families level information for the given
        /// column family. If a family is not present in this map it will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("families")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1betaBigtableOptionsBigtableColumnFamily> Families { get; set; }

        /// <summary>
        /// The field name used for saving row key value in the document. The name has to match the pattern
        /// `a-zA-Z0-9*`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyFieldName")]
        public virtual string KeyFieldName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The column of the Bigtable.</summary>
    public class GoogleCloudDiscoveryengineV1betaBigtableOptionsBigtableColumn : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The encoding mode of the values when the type is not `STRING`. Acceptable encoding values are: * `TEXT`:
        /// indicates values are alphanumeric text strings. * `BINARY`: indicates values are encoded using `HBase
        /// Bytes.toBytes` family of functions. This can be overridden for a specific column by listing that column in
        /// `columns` and specifying an encoding for it.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encoding")]
        public virtual string Encoding { get; set; }

        /// <summary>
        /// The field name to use for this column in the document. The name has to match the pattern `a-zA-Z0-9*`. If
        /// not set, it is parsed from the qualifier bytes with best effort. However, due to different naming patterns,
        /// field name collisions could happen, where parsing behavior is undefined.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>
        /// Required. Qualifier of the column. If it cannot be decoded with utf-8, use a base-64 encoded string instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("qualifier")]
        public virtual string Qualifier { get; set; }

        /// <summary>
        /// The type of values in this column family. The values are expected to be encoded using `HBase Bytes.toBytes`
        /// function when the encoding value is set to `BINARY`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The column family of the Bigtable.</summary>
    public class GoogleCloudDiscoveryengineV1betaBigtableOptionsBigtableColumnFamily : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The list of objects that contains column level information for each column. If a column is not present in
        /// this list it will be ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("columns")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaBigtableOptionsBigtableColumn> Columns { get; set; }

        /// <summary>
        /// The encoding mode of the values when the type is not STRING. Acceptable encoding values are: * `TEXT`:
        /// indicates values are alphanumeric text strings. * `BINARY`: indicates values are encoded using `HBase
        /// Bytes.toBytes` family of functions. This can be overridden for a specific column by listing that column in
        /// `columns` and specifying an encoding for it.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encoding")]
        public virtual string Encoding { get; set; }

        /// <summary>
        /// The field name to use for this column family in the document. The name has to match the pattern
        /// `a-zA-Z0-9*`. If not set, it is parsed from the family name with best effort. However, due to different
        /// naming patterns, field name collisions could happen, where parsing behavior is undefined.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>
        /// The type of values in this column family. The values are expected to be encoded using `HBase Bytes.toBytes`
        /// function when the encoding value is set to `BINARY`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The Cloud Bigtable source for importing data.</summary>
    public class GoogleCloudDiscoveryengineV1betaBigtableSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Bigtable options that contains information needed when parsing data into typed structures. For
        /// example, column type annotations.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigtableOptions")]
        public virtual GoogleCloudDiscoveryengineV1betaBigtableOptions BigtableOptions { get; set; }

        /// <summary>Required. The instance ID of the Cloud Bigtable that needs to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceId")]
        public virtual string InstanceId { get; set; }

        /// <summary>
        /// The project ID that contains the Bigtable source. Has a length limit of 128 characters. If not specified,
        /// inherits the project ID from the parent request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; }

        /// <summary>Required. The table ID of the Cloud Bigtable that needs to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableId")]
        public virtual string TableId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for GroundedGenerationService.CheckGrounding method.</summary>
    public class GoogleCloudDiscoveryengineV1betaCheckGroundingRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Answer candidate to check. It can have a maximum length of 4096 tokens.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answerCandidate")]
        public virtual string AnswerCandidate { get; set; }

        /// <summary>List of facts for the grounding check. We support up to 200 facts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("facts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaGroundingFact> Facts { get; set; }

        /// <summary>Configuration of the grounding check.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaCheckGroundingSpec GroundingSpec { get; set; }

        /// <summary>
        /// The user labels applied to a resource must meet the following requirements: * Each resource can have
        /// multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length
        /// of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a
        /// maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters,
        /// underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. *
        /// The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys
        /// must start with a lowercase letter or international character. See [Google Cloud
        /// Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for the GroundedGenerationService.CheckGrounding method.</summary>
    public class GoogleCloudDiscoveryengineV1betaCheckGroundingResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// List of facts cited across all claims in the answer candidate. These are derived from the facts supplied in
        /// the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("citedChunks")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaFactChunk> CitedChunks { get; set; }

        /// <summary>
        /// List of facts cited across all claims in the answer candidate. These are derived from the facts supplied in
        /// the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("citedFacts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaCheckGroundingResponseCheckGroundingFactChunk> CitedFacts { get; set; }

        /// <summary>Claim texts and citation info across all claims in the answer candidate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("claims")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaCheckGroundingResponseClaim> Claims { get; set; }

        /// <summary>
        /// The support score for the input answer candidate. Higher the score, higher is the fraction of claims that
        /// are supported by the provided facts. This is always set when a response is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportScore")]
        public virtual System.Nullable<float> SupportScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Fact chunk for grounding check.</summary>
    public class GoogleCloudDiscoveryengineV1betaCheckGroundingResponseCheckGroundingFactChunk : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Text content of the fact chunk. Can be at most 10K characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkText")]
        public virtual string ChunkText { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Text and citation info for a claim in the answer candidate.</summary>
    public class GoogleCloudDiscoveryengineV1betaCheckGroundingResponseClaim : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A list of indices (into 'cited_chunks') specifying the citations associated with the claim. For instance
        /// [1,3,4] means that cited_chunks[1], cited_chunks[3], cited_chunks[4] are the facts cited supporting for the
        /// claim. A citation to a fact indicates that the claim is supported by the fact.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("citationIndices")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> CitationIndices { get; set; }

        /// <summary>
        /// Text for the claim in the answer candidate. Always provided regardless of whether citations or
        /// anti-citations are found.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("claimText")]
        public virtual string ClaimText { get; set; }

        /// <summary>
        /// Position indicating the end of the claim in the answer candidate, exclusive, in bytes. Note that this is not
        /// measured in characters and, therefore, must be rendered as such. For example, if the claim text contains
        /// non-ASCII characters, the start and end positions vary when measured in characters
        /// (programming-language-dependent) and when measured in bytes (programming-language-independent).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endPos")]
        public virtual System.Nullable<int> EndPos { get; set; }

        /// <summary>
        /// Indicates that this claim required grounding check. When the system decided this claim doesn't require
        /// attribution/grounding check, this field will be set to false. In that case, no grounding check was done for
        /// the claim and therefore citation_indices should not be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingCheckRequired")]
        public virtual System.Nullable<bool> GroundingCheckRequired { get; set; }

        /// <summary>
        /// Position indicating the start of the claim in the answer candidate, measured in bytes. Note that this is not
        /// measured in characters and, therefore, must be rendered in the user interface keeping in mind that some
        /// characters may take more than one byte. For example, if the claim text contains non-ASCII characters, the
        /// start and end positions vary when measured in characters (programming-language-dependent) and when measured
        /// in bytes (programming-language-independent).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startPos")]
        public virtual System.Nullable<int> StartPos { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification for the grounding check.</summary>
    public class GoogleCloudDiscoveryengineV1betaCheckGroundingSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The threshold (in [0,1]) used for determining whether a fact must be cited for a claim in the answer
        /// candidate. Choosing a higher threshold will lead to fewer but very strong citations, while choosing a lower
        /// threshold may lead to more but somewhat weaker citations. If unset, the threshold will default to 0.6.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("citationThreshold")]
        public virtual System.Nullable<double> CitationThreshold { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Chunk captures all raw metadata information of items to be recommended or searched in the chunk mode.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaChunk : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Metadata of the current chunk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaChunkChunkMetadata ChunkMetadata { get; set; }

        /// <summary>Content is a string from a document (parsed content).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>
        /// Output only. This field is OUTPUT_ONLY. It contains derived data that are not in the original input
        /// document.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("derivedStructData")]
        public virtual System.Collections.Generic.IDictionary<string, object> DerivedStructData { get; set; }

        /// <summary>Metadata of the document from the current chunk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaChunkDocumentMetadata DocumentMetadata { get; set; }

        /// <summary>Unique chunk ID of the current chunk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// The full resource name of the chunk. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}/chunks/{chunk_id}`.
        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Page span of the chunk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageSpan")]
        public virtual GoogleCloudDiscoveryengineV1betaChunkPageSpan PageSpan { get; set; }

        /// <summary>
        /// Output only. Represents the relevance score based on similarity. Higher score indicates higher chunk
        /// relevance. The score is in range [-1.0, 1.0]. Only populated on SearchResponse.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceScore")]
        public virtual System.Nullable<double> RelevanceScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata of the current chunk. This field is only populated on SearchService.Search API.</summary>
    public class GoogleCloudDiscoveryengineV1betaChunkChunkMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The next chunks of the current chunk. The number is controlled by
        /// SearchRequest.ContentSearchSpec.ChunkSpec.num_next_chunks. This field is only populated on
        /// SearchService.Search API.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextChunks")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaChunk> NextChunks { get; set; }

        /// <summary>
        /// The previous chunks of the current chunk. The number is controlled by
        /// SearchRequest.ContentSearchSpec.ChunkSpec.num_previous_chunks. This field is only populated on
        /// SearchService.Search API.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("previousChunks")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaChunk> PreviousChunks { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document metadata contains the information of the document of the current chunk.</summary>
    public class GoogleCloudDiscoveryengineV1betaChunkDocumentMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Data representation. The structured JSON data for the document. It should conform to the registered Schema
        /// or an `INVALID_ARGUMENT` error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>Title of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>Uri of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Page span of the chunk.</summary>
    public class GoogleCloudDiscoveryengineV1betaChunkPageSpan : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The end page of the chunk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageEnd")]
        public virtual System.Nullable<int> PageEnd { get; set; }

        /// <summary>The start page of the chunk.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageStart")]
        public virtual System.Nullable<int> PageStart { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Cloud SQL source import data from.</summary>
    public class GoogleCloudDiscoveryengineV1betaCloudSqlSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The Cloud SQL database to copy the data from with a length limit of 256 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("databaseId")]
        public virtual string DatabaseId { get; set; }

        /// <summary>
        /// Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be
        /// specified if one wants to have the Cloud SQL export to a specific Cloud Storage directory. Ensure that the
        /// Cloud SQL service account has the necessary Cloud Storage Admin permissions to access the specified Cloud
        /// Storage directory.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsStagingDir")]
        public virtual string GcsStagingDir { get; set; }

        /// <summary>
        /// Required. The Cloud SQL instance to copy the data from with a length limit of 256 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceId")]
        public virtual string InstanceId { get; set; }

        /// <summary>
        /// Option for serverless export. Enabling this option will incur additional cost. More info can be found
        /// [here](https://cloud.google.com/sql/pricing#serverless).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offload")]
        public virtual System.Nullable<bool> Offload { get; set; }

        /// <summary>
        /// The project ID that contains the Cloud SQL source. Has a length limit of 128 characters. If not specified,
        /// inherits the project ID from the parent request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; }

        /// <summary>
        /// Required. The Cloud SQL table to copy the data from with a length limit of 256 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableId")]
        public virtual string TableId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations used to enable CMEK data encryption with Cloud KMS keys.</summary>
    public class GoogleCloudDiscoveryengineV1betaCmekConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The default CmekConfig for the Customer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isDefault")]
        public virtual System.Nullable<bool> IsDefault { get; set; }

        /// <summary>
        /// KMS key resource name which will be used to encrypt resources
        /// `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKey")]
        public virtual string KmsKey { get; set; }

        /// <summary>
        /// KMS key version resource name which will be used to encrypt resources `/cryptoKeyVersions/{keyVersion}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyVersion")]
        public virtual string KmsKeyVersion { get; set; }

        /// <summary>Output only. The timestamp of the last key rotation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastRotationTimestampMicros")]
        public virtual System.Nullable<long> LastRotationTimestampMicros { get; set; }

        /// <summary>
        /// Required. The name of the CmekConfig of the form `projects/{project}/locations/{location}/cmekConfig` or
        /// `projects/{project}/locations/{location}/cmekConfigs/{cmekConfig}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Optional. Single-regional CMEKs that are required for some VAIS features.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("singleRegionKeys")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSingleRegionKey> SingleRegionKeys { get; set; }

        /// <summary>Output only. The states of the CmekConfig.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.CompleteQuery method.</summary>
    public class GoogleCloudDiscoveryengineV1betaCompleteQueryResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Results of the matched query suggestions. The result list is ordered and the first result is a top
        /// suggestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("querySuggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion> QuerySuggestions { get; set; }

        /// <summary>
        /// True if the returned suggestions are all tail suggestions. For tail matching to be triggered,
        /// include_tail_suggestions in the request must be true and there must be no suggestions that match the full
        /// query.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tailMatchTriggered")]
        public virtual System.Nullable<bool> TailMatchTriggered { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Suggestions as search queries.</summary>
    public class GoogleCloudDiscoveryengineV1betaCompleteQueryResponseQuerySuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The unique document field paths that serve as the source of this suggestion if it was generated from
        /// completable fields. This field is only populated for the document-completable model.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("completableFieldPaths")]
        public virtual System.Collections.Generic.IList<string> CompletableFieldPaths { get; set; }

        /// <summary>The suggestion for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestion")]
        public virtual string Suggestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Detailed completion information including completion attribution token and clicked completion info.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaCompletionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// End user selected CompleteQueryResponse.QuerySuggestion.suggestion position, starting from 0.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selectedPosition")]
        public virtual System.Nullable<int> SelectedPosition { get; set; }

        /// <summary>End user selected CompleteQueryResponse.QuerySuggestion.suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selectedSuggestion")]
        public virtual string SelectedSuggestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Autocomplete suggestions that are imported from Customer.</summary>
    public class GoogleCloudDiscoveryengineV1betaCompletionSuggestion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Alternative matching phrases for this suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alternativePhrases")]
        public virtual System.Collections.Generic.IList<string> AlternativePhrases { get; set; }

        /// <summary>
        /// Frequency of this suggestion. Will be used to rank suggestions when score is not available.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("frequency")]
        public virtual System.Nullable<long> Frequency { get; set; }

        /// <summary>Global score of this suggestion. Control how this suggestion would be scored / ranked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("globalScore")]
        public virtual System.Nullable<double> GlobalScore { get; set; }

        /// <summary>
        /// If two suggestions have the same groupId, they will not be returned together. Instead the one ranked higher
        /// will be returned. This can be used to deduplicate semantically identical suggestions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupId")]
        public virtual string GroupId { get; set; }

        /// <summary>The score of this suggestion within its group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupScore")]
        public virtual System.Nullable<double> GroupScore { get; set; }

        /// <summary>BCP-47 language code of this suggestion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Required. The suggestion text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestion")]
        public virtual string Suggestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines circumstances to be checked before allowing a behavior</summary>
    public class GoogleCloudDiscoveryengineV1betaCondition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Range of time(s) specifying when condition is active. Maximum of 10 time ranges.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeTimeRange")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaConditionTimeRange> ActiveTimeRange { get; set; }

        /// <summary>
        /// Optional. Query regex to match the whole search query. Cannot be set when Condition.query_terms is set. This
        /// is currently supporting promotion use case.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryRegex")]
        public virtual string QueryRegex { get; set; }

        /// <summary>
        /// Search only A list of terms to match the query on. Cannot be set when Condition.query_regex is set. Maximum
        /// of 10 query terms.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryTerms")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaConditionQueryTerm> QueryTerms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Matcher for search request query</summary>
    public class GoogleCloudDiscoveryengineV1betaConditionQueryTerm : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether the search query needs to exactly match the query term.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fullMatch")]
        public virtual System.Nullable<bool> FullMatch { get; set; }

        /// <summary>
        /// The specific query value to match against Must be lowercase, must be UTF-8. Can have at most 3 space
        /// separated terms if full_match is true. Cannot be an empty string. Maximum length of 5000 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Used for time-dependent conditions.</summary>
    public class GoogleCloudDiscoveryengineV1betaConditionTimeRange : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _endTimeRaw;

        private object _endTime;

        /// <summary>End of time range. Range is inclusive. Must be in the future.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Start of time range. Range is inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Defines a conditioned behavior to employ during serving. Must be attached to a ServingConfig to be considered at
    /// serving time. Permitted actions dependent on `SolutionType`.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaControl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. List of all ServingConfig IDs this control is attached to. May take up to 10 minutes to update
        /// after changes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("associatedServingConfigIds")]
        public virtual System.Collections.Generic.IList<string> AssociatedServingConfigIds { get; set; }

        /// <summary>Defines a boost-type control</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAction")]
        public virtual GoogleCloudDiscoveryengineV1betaControlBoostAction BoostAction { get; set; }

        /// <summary>
        /// Determines when the associated action will trigger. Omit to always apply the action. Currently only a single
        /// condition may be specified. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaCondition> Conditions { get; set; }

        /// <summary>
        /// Required. Human readable name. The identifier used in UI views. Must be UTF-8 encoded string. Length limit
        /// is 128 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Defines a filter-type control Currently not supported by Recommendation</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterAction")]
        public virtual GoogleCloudDiscoveryengineV1betaControlFilterAction FilterAction { get; set; }

        /// <summary>Immutable. Fully qualified name `projects/*/locations/global/dataStore/*/controls/*`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Promote certain links based on predefined trigger queries. This now only supports basic site search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promoteAction")]
        public virtual GoogleCloudDiscoveryengineV1betaControlPromoteAction PromoteAction { get; set; }

        /// <summary>Defines a redirect-type control.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectAction")]
        public virtual GoogleCloudDiscoveryengineV1betaControlRedirectAction RedirectAction { get; set; }

        /// <summary>
        /// Required. Immutable. What solution the control belongs to. Must be compatible with vertical of resource.
        /// Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionType")]
        public virtual string SolutionType { get; set; }

        /// <summary>Treats a group of terms as synonyms of one another.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonymsAction")]
        public virtual GoogleCloudDiscoveryengineV1betaControlSynonymsAction SynonymsAction { get; set; }

        /// <summary>
        /// Specifies the use case for the control. Affects what condition fields can be set. Only applies to
        /// SOLUTION_TYPE_SEARCH. Currently only allow one use case per control. Must be set when solution_type is
        /// SolutionType.SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useCases")]
        public virtual System.Collections.Generic.IList<string> UseCases { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Adjusts order of products in returned list.</summary>
    public class GoogleCloudDiscoveryengineV1betaControlBoostAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0 (No-op).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boost")]
        public virtual System.Nullable<float> Boost { get; set; }

        /// <summary>
        /// Required. Specifies which data store's documents can be boosted by this control. Full data store name e.g.
        /// projects/123/locations/global/collections/default_collection/dataStores/default_data_store
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Required. Specifies which products to apply the boost to. If no filter is provided all products will be
        /// boosted (No-op). Syntax documentation: https://cloud.google.com/retail/docs/filter-and-order Maximum length
        /// is 5000 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// Optional. Strength of the boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0
        /// (No-op).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fixedBoost")]
        public virtual System.Nullable<float> FixedBoost { get; set; }

        /// <summary>
        /// Optional. Complex specification for custom ranking based on customer defined attribute value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationBoostSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec InterpolationBoostSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specification for custom ranking based on customer specified attribute value. It provides more controls for
    /// customized ranking than the simple (condition, boost) combination above.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The attribute type to be used to determine the boost amount. The attribute value can be derived
        /// from the field value of the specified field_name. In the case of numerical it is straightforward i.e.
        /// attribute_value = numerical_field_value. In the case of freshness however, attribute_value = (time.now() -
        /// datetime_field_value).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeType")]
        public virtual string AttributeType { get; set; }

        /// <summary>
        /// Optional. The control points used to define the curve. The monotonic function (defined through the
        /// interpolation_type above) passes through the control points listed here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("controlPoints")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpecControlPoint> ControlPoints { get; set; }

        /// <summary>Optional. The name of the field whose value will be used to determine the boost amount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>
        /// Optional. The interpolation type to be applied to connect the control points listed below.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationType")]
        public virtual string InterpolationType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The control points used to define the curve. The curve defined through these control points can only be
    /// monotonically increasing or decreasing(constant values are acceptable).
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaControlBoostActionInterpolationBoostSpecControlPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be
        /// formatted as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern
        /// for this is: `nDnM]`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeValue")]
        public virtual string AttributeValue { get; set; }

        /// <summary>
        /// Optional. The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the
        /// value specified above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAmount")]
        public virtual System.Nullable<float> BoostAmount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specified which products may be included in results. Uses same filter as boost.</summary>
    public class GoogleCloudDiscoveryengineV1betaControlFilterAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Specifies which data store's documents can be filtered by this control. Full data store name e.g.
        /// projects/123/locations/global/collections/default_collection/dataStores/default_data_store
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Required. A filter to apply on the matching condition results. Required Syntax documentation:
        /// https://cloud.google.com/retail/docs/filter-and-order Maximum length is 5000 characters. Otherwise an
        /// INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Promote certain links based on some trigger queries. Example: Promote shoe store link when searching for `shoe`
    /// keyword. The link can be outside of associated data store.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaControlPromoteAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Data store with which this promotion is attached to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>Required. Promotion attached to this action.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchLinkPromotion")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchLinkPromotion SearchLinkPromotion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Redirects a shopper to the provided URI.</summary>
    public class GoogleCloudDiscoveryengineV1betaControlRedirectAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The URI to which the shopper will be redirected. Required. URI must have length equal or less than
        /// 2000 characters. Otherwise an INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectUri")]
        public virtual string RedirectUri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Creates a set of terms that will act as synonyms of one another. Example: "happy" will also be considered as
    /// "glad", "glad" will also be considered as "happy".
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaControlSynonymsAction : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at least 2 synonyms. Otherwise an
        /// INVALID ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonyms")]
        public virtual System.Collections.Generic.IList<string> Synonyms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>External conversation proto definition.</summary>
    public class GoogleCloudDiscoveryengineV1betaConversation : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _endTimeRaw;

        private object _endTime;

        /// <summary>Output only. The time the conversation finished.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Conversation messages.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messages")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaConversationMessage> Messages { get; set; }

        /// <summary>
        /// Immutable. Fully qualified name
        /// `projects/{project}/locations/global/collections/{collection}/dataStore/*/conversations/*` or
        /// `projects/{project}/locations/global/collections/{collection}/engines/*/conversations/*`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Output only. The time the conversation started.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The state of the Conversation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>A unique identifier for tracking users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines context of the conversation</summary>
    public class GoogleCloudDiscoveryengineV1betaConversationContext : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The current active document the user opened. It contains the document resource reference.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeDocument")]
        public virtual string ActiveDocument { get; set; }

        /// <summary>
        /// The current list of documents the user is seeing. It contains the document resource references.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contextDocuments")]
        public virtual System.Collections.Generic.IList<string> ContextDocuments { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines a conversation message.</summary>
    public class GoogleCloudDiscoveryengineV1betaConversationMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Message creation timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Search reply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reply")]
        public virtual GoogleCloudDiscoveryengineV1betaReply Reply { get; set; }

        /// <summary>User text input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInput")]
        public virtual GoogleCloudDiscoveryengineV1betaTextInput UserInput { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for ConversationalSearchService.ConverseConversation method.</summary>
    public class GoogleCloudDiscoveryengineV1betaConverseConversationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Boost specification to boost certain documents in search results which may affect the converse response. For
        /// more information on boosting, see [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec BoostSpec { get; set; }

        /// <summary>
        /// The conversation to be used by auto session only. The name field will be ignored as we automatically assign
        /// new name for the conversation in auto session.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversation")]
        public virtual GoogleCloudDiscoveryengineV1betaConversation Conversation { get; set; }

        /// <summary>
        /// The filter syntax consists of an expression language for constructing a predicate from one or more fields of
        /// the documents being filtered. Filter expression is case-sensitive. This will be used to filter search
        /// results which may affect the summary response. If this field is unrecognizable, an `INVALID_ARGUMENT` is
        /// returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key property defined in
        /// the Vertex AI Search backend -- this mapping is defined by the customer in their schema. For example a media
        /// customer might have a field 'name' in their schema. In this case the filter would look like this: filter
        /// --&amp;gt; name:'ANY("king kong")' For more information about filtering including syntax and filter
        /// operators, see [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>Required. Current user input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual GoogleCloudDiscoveryengineV1betaTextInput Query { get; set; }

        /// <summary>Whether to turn on safe search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safeSearch")]
        public virtual System.Nullable<bool> SafeSearch { get; set; }

        /// <summary>
        /// The resource name of the Serving Config to use. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store_id}/servingConfigs/{serving_config_id}`
        /// If this is not set, the default serving config will be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingConfig")]
        public virtual string ServingConfig { get; set; }

        /// <summary>A specification for configuring the summary returned in the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec SummarySpec { get; set; }

        /// <summary>
        /// The user labels applied to a resource must meet the following requirements: * Each resource can have
        /// multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length
        /// of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a
        /// maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters,
        /// underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. *
        /// The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys
        /// must start with a lowercase letter or international character. See [Google Cloud
        /// Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for ConversationalSearchService.ConverseConversation method.</summary>
    public class GoogleCloudDiscoveryengineV1betaConverseConversationResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Updated conversation including the answer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversation")]
        public virtual GoogleCloudDiscoveryengineV1betaConversation Conversation { get; set; }

        /// <summary>Suggested related questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relatedQuestions")]
        public virtual System.Collections.Generic.IList<string> RelatedQuestions { get; set; }

        /// <summary>Answer to the current query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reply")]
        public virtual GoogleCloudDiscoveryengineV1betaReply Reply { get; set; }

        /// <summary>Search Results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult> SearchResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The historical crawl rate timeseries data, used for monitoring.</summary>
    public class GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The QPS of the crawl rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("qpsTimeSeries")]
        public virtual GoogleMonitoringV3TimeSeries QpsTimeSeries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the DataStoreService.CreateDataStore operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaCreateDataStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the EngineService.CreateEngine operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaCreateEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for EvaluationService.CreateEvaluation method.</summary>
    public class GoogleCloudDiscoveryengineV1betaCreateEvaluationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for Create Schema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1betaCreateSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.CreateSitemap operation. This will be returned
    /// by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaCreateSitemapMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.CreateTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaCreateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SiteSearchEngineService.CreateTargetSite method.</summary>
    public class GoogleCloudDiscoveryengineV1betaCreateTargetSiteRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Parent resource name of TargetSite, such as
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parent")]
        public virtual string Parent { get; set; }

        /// <summary>Required. The TargetSite to create.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSite")]
        public virtual GoogleCloudDiscoveryengineV1betaTargetSite TargetSite { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A custom attribute that is not explicitly modeled in a resource, e.g. UserEvent.</summary>
    public class GoogleCloudDiscoveryengineV1betaCustomAttribute : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The numerical values of this custom attribute. For example, `[2.3, 15.4]` when the key is "lengths_cm".
        /// Exactly one of CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an
        /// `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numbers")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Numbers { get; set; }

        /// <summary>
        /// The textual values of this custom attribute. For example, `["yellow", "green"]` when the key is "color".
        /// Empty string is not allowed. Otherwise, an `INVALID_ARGUMENT` error is returned. Exactly one of
        /// CustomAttribute.text or CustomAttribute.numbers should be set. Otherwise, an `INVALID_ARGUMENT` error is
        /// returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual System.Collections.Generic.IList<string> Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata that describes a custom tuned model.</summary>
    public class GoogleCloudDiscoveryengineV1betaCustomTuningModel : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Deprecated: Timestamp the Model was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The display name of the model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Currently this is only populated if the model state is `INPUT_VALIDATION_FAILED`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorMessage")]
        public virtual string ErrorMessage { get; set; }

        /// <summary>The metrics of the trained model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IDictionary<string, System.Nullable<double>> Metrics { get; set; }

        /// <summary>The state that the model is in (e.g.`TRAINING` or `TRAINING_FAILED`).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelState")]
        public virtual string ModelState { get; set; }

        /// <summary>The version of the model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelVersion")]
        public virtual System.Nullable<long> ModelVersion { get; set; }

        /// <summary>
        /// Required. The fully qualified resource name of the model. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/customTuningModels/{custom_tuning_model}`.
        /// Model must be an alpha-numerical string with limit of 40 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        private string _trainingStartTimeRaw;

        private object _trainingStartTime;

        /// <summary>Timestamp the model training was initiated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainingStartTime")]
        public virtual string TrainingStartTimeRaw
        {
            get => _trainingStartTimeRaw;
            set
            {
                _trainingStartTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _trainingStartTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="TrainingStartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use TrainingStartTimeDateTimeOffset instead.")]
        public virtual object TrainingStartTime
        {
            get => _trainingStartTime;
            set
            {
                _trainingStartTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _trainingStartTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="TrainingStartTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? TrainingStartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(TrainingStartTimeRaw);
            set => TrainingStartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>DataStore captures global settings and configs at the DataStore level.</summary>
    public class GoogleCloudDiscoveryengineV1betaDataStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Configuration for advanced site search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advancedSiteSearchConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaAdvancedSiteSearchConfig AdvancedSiteSearchConfig { get; set; }

        /// <summary>Output only. Data size estimation for billing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingEstimation")]
        public virtual GoogleCloudDiscoveryengineV1betaDataStoreBillingEstimation BillingEstimation { get; set; }

        /// <summary>Output only. CMEK-related information for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cmekConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaCmekConfig CmekConfig { get; set; }

        /// <summary>
        /// Immutable. The content config of the data store. If this field is unset, the server behavior defaults to
        /// ContentConfig.NO_CONTENT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentConfig")]
        public virtual string ContentConfig { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the DataStore was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. The id of the default Schema associated to this data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultSchemaId")]
        public virtual string DefaultSchemaId { get; set; }

        /// <summary>
        /// Required. The data store display name. This field must be a UTF-8 encoded string with a length limit of 128
        /// characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Configuration for Document understanding and enrichment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documentProcessingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig DocumentProcessingConfig { get; set; }

        /// <summary>Optional. Configuration for `HEALTHCARE_FHIR` vertical.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("healthcareFhirConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaHealthcareFhirConfig HealthcareFhirConfig { get; set; }

        /// <summary>
        /// Immutable. The fully qualified resource name of the associated IdentityMappingStore. This field can only be
        /// set for acl_enabled DataStores with `THIRD_PARTY` or `GSUITE` IdP. Format:
        /// `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityMappingStore")]
        public virtual string IdentityMappingStore { get; set; }

        /// <summary>Immutable. The industry vertical that the data store registers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("industryVertical")]
        public virtual string IndustryVertical { get; set; }

        /// <summary>Optional. If set, this DataStore is an Infobot FAQ DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isInfobotFaqDataStore")]
        public virtual System.Nullable<bool> IsInfobotFaqDataStore { get; set; }

        /// <summary>
        /// Input only. The KMS key to be used to protect this DataStore at creation time. Must be set for requests that
        /// need to comply with CMEK Org Policy protections. If this field is set and processed successfully, the
        /// DataStore will be protected by the KMS key, as indicated in the cmek_config field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyName")]
        public virtual string KmsKeyName { get; set; }

        /// <summary>Language info for DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaLanguageInfo LanguageInfo { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the data store. Format:
        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. This field
        /// must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Optional. Configuration for Natural Language Query Understanding.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("naturalLanguageQueryUnderstandingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig NaturalLanguageQueryUnderstandingConfig { get; set; }

        /// <summary>Optional. Stores serving config at DataStore level.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingConfigDataStore")]
        public virtual GoogleCloudDiscoveryengineV1betaDataStoreServingConfigDataStore ServingConfigDataStore { get; set; }

        /// <summary>
        /// The solutions that the data store enrolls. Available solutions for each industry_vertical: * `MEDIA`:
        /// `SOLUTION_TYPE_RECOMMENDATION` and `SOLUTION_TYPE_SEARCH`. * `SITE_SEARCH`: `SOLUTION_TYPE_SEARCH` is
        /// automatically enrolled. Other solutions cannot be enrolled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionTypes")]
        public virtual System.Collections.Generic.IList<string> SolutionTypes { get; set; }

        /// <summary>
        /// The start schema to use for this DataStore when provisioning it. If unset, a default vertical specialized
        /// schema will be used. This field is only used by CreateDataStore API, and will be ignored if used in other
        /// APIs. This field will be omitted from all API responses including CreateDataStore API. To retrieve a schema
        /// of a DataStore, use SchemaService.GetSchema API instead. The provided schema will be validated against
        /// certain rules on schema. Learn more from [this
        /// doc](https://cloud.google.com/generative-ai-app-builder/docs/provide-schema).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startingSchema")]
        public virtual GoogleCloudDiscoveryengineV1betaSchema StartingSchema { get; set; }

        /// <summary>
        /// Config to store data store type configuration for workspace data. This must be set when
        /// DataStore.content_config is set as DataStore.ContentConfig.GOOGLE_WORKSPACE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("workspaceConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaWorkspaceConfig WorkspaceConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Estimation of data size per data store.</summary>
    public class GoogleCloudDiscoveryengineV1betaDataStoreBillingEstimation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Data size for structured data in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredDataSize")]
        public virtual System.Nullable<long> StructuredDataSize { get; set; }

        private string _structuredDataUpdateTimeRaw;

        private object _structuredDataUpdateTime;

        /// <summary>Last updated timestamp for structured data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredDataUpdateTime")]
        public virtual string StructuredDataUpdateTimeRaw
        {
            get => _structuredDataUpdateTimeRaw;
            set
            {
                _structuredDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _structuredDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StructuredDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StructuredDataUpdateTimeDateTimeOffset instead.")]
        public virtual object StructuredDataUpdateTime
        {
            get => _structuredDataUpdateTime;
            set
            {
                _structuredDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _structuredDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="StructuredDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StructuredDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StructuredDataUpdateTimeRaw);
            set => StructuredDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Data size for unstructured data in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDataSize")]
        public virtual System.Nullable<long> UnstructuredDataSize { get; set; }

        private string _unstructuredDataUpdateTimeRaw;

        private object _unstructuredDataUpdateTime;

        /// <summary>Last updated timestamp for unstructured data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unstructuredDataUpdateTime")]
        public virtual string UnstructuredDataUpdateTimeRaw
        {
            get => _unstructuredDataUpdateTimeRaw;
            set
            {
                _unstructuredDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _unstructuredDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UnstructuredDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UnstructuredDataUpdateTimeDateTimeOffset instead.")]
        public virtual object UnstructuredDataUpdateTime
        {
            get => _unstructuredDataUpdateTime;
            set
            {
                _unstructuredDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _unstructuredDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="UnstructuredDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UnstructuredDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UnstructuredDataUpdateTimeRaw);
            set => UnstructuredDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Data size for websites in terms of bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteDataSize")]
        public virtual System.Nullable<long> WebsiteDataSize { get; set; }

        private string _websiteDataUpdateTimeRaw;

        private object _websiteDataUpdateTime;

        /// <summary>Last updated timestamp for websites.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("websiteDataUpdateTime")]
        public virtual string WebsiteDataUpdateTimeRaw
        {
            get => _websiteDataUpdateTimeRaw;
            set
            {
                _websiteDataUpdateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _websiteDataUpdateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="WebsiteDataUpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use WebsiteDataUpdateTimeDateTimeOffset instead.")]
        public virtual object WebsiteDataUpdateTime
        {
            get => _websiteDataUpdateTime;
            set
            {
                _websiteDataUpdateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _websiteDataUpdateTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="WebsiteDataUpdateTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? WebsiteDataUpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(WebsiteDataUpdateTimeRaw);
            set => WebsiteDataUpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Stores information regarding the serving configurations at DataStore level.</summary>
    public class GoogleCloudDiscoveryengineV1betaDataStoreServingConfigDataStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set true, the DataStore will not be available for serving search requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disabledForServing")]
        public virtual System.Nullable<bool> DisabledForServing { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The historical dedicated crawl rate timeseries data, used for monitoring. Dedicated crawl is used by Vertex AI
    /// to crawl the user's website when dedicate crawl is set.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaDedicatedCrawlRateTimeSeries : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Vertex AI's dedicated crawl rate time series of auto-refresh, which is the crawl rate of
        /// Google-CloudVertexBot when dedicate crawl is set, and the crawl rate is for best effort use cases like
        /// refreshing urls periodically.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoRefreshCrawlRate")]
        public virtual GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries AutoRefreshCrawlRate { get; set; }

        /// <summary>
        /// Vertex AI's dedicated crawl rate time series of user triggered crawl, which is the crawl rate of
        /// Google-CloudVertexBot when dedicate crawl is set, and user triggered crawl rate is for deterministic use
        /// cases like crawling urls or sitemaps specified by users.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userTriggeredCrawlRate")]
        public virtual GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries UserTriggeredCrawlRate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the DataStoreService.DeleteDataStore operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaDeleteDataStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the EngineService.DeleteEngine operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaDeleteEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the IdentityMappingStoreService.DeleteIdentityMappingStore operation. This
    /// will be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaDeleteIdentityMappingStoreMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for DeleteSchema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1betaDeleteSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DeleteSitemap operation. This will be returned
    /// by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaDeleteSitemapMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DeleteTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaDeleteTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.DisableAdvancedSiteSearch operation. This will
    /// be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SiteSearchEngineService.DisableAdvancedSiteSearch method.</summary>
    public class GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.DisableAdvancedSiteSearch method.</summary>
    public class GoogleCloudDiscoveryengineV1betaDisableAdvancedSiteSearchResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document captures all raw metadata information of items to be recommended or searched.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocument : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The unstructured data linked to this document. Content must be set if this document is under a
        /// `CONTENT_REQUIRED` data store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentContent Content { get; set; }

        /// <summary>
        /// Output only. This field is OUTPUT_ONLY. It contains derived data that are not in the original input
        /// document.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("derivedStructData")]
        public virtual System.Collections.Generic.IDictionary<string, object> DerivedStructData { get; set; }

        /// <summary>
        /// Immutable. The identifier of the document. Id should conform to
        /// [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 128 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// Output only. The index status of the document. * If document is indexed successfully, the index_time field
        /// is populated. * Otherwise, if document is not indexed due to errors, the error_samples field is populated. *
        /// Otherwise, if document's index is in progress, the pending_message field is populated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexStatus")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentIndexStatus IndexStatus { get; set; }

        private string _indexTimeRaw;

        private object _indexTime;

        /// <summary>
        /// Output only. The last time the document was indexed. If this field is set, the document could be returned in
        /// search results. This field is OUTPUT_ONLY. If this field is not populated, it means the document has never
        /// been indexed.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexTime")]
        public virtual string IndexTimeRaw
        {
            get => _indexTimeRaw;
            set
            {
                _indexTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _indexTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="IndexTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use IndexTimeDateTimeOffset instead.")]
        public virtual object IndexTime
        {
            get => _indexTime;
            set
            {
                _indexTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _indexTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="IndexTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? IndexTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(IndexTimeRaw);
            set => IndexTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// The JSON string representation of the document. It should conform to the registered Schema or an
        /// `INVALID_ARGUMENT` error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jsonData")]
        public virtual string JsonData { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the document. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/branches/{branch}/documents/{document_id}`.
        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The identifier of the parent document. Currently supports at most two level document hierarchy. Id should
        /// conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) standard with a length limit of 63 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentDocumentId")]
        public virtual string ParentDocumentId { get; set; }

        /// <summary>The identifier of the schema located in the same data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schemaId")]
        public virtual string SchemaId { get; set; }

        /// <summary>
        /// The structured JSON data for the document. It should conform to the registered Schema or an
        /// `INVALID_ARGUMENT` error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structData")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructData { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Unstructured data linked to this document.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The MIME type of the content. Supported types: * `application/pdf` (PDF, only native PDFs are supported for
        /// now) * `text/html` (HTML) * `application/vnd.openxmlformats-officedocument.wordprocessingml.document` (DOCX)
        /// * `application/vnd.openxmlformats-officedocument.presentationml.presentation` (PPTX) * `text/plain` (TXT)
        /// See https://www.iana.org/assignments/media-types/media-types.xhtml.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; }

        /// <summary>
        /// The content represented as a stream of bytes. The maximum length is 1,000,000 bytes (1 MB / ~0.95 MiB).
        /// Note: As with all `bytes` fields, this field is represented as pure binary in Protocol Buffers and
        /// base64-encoded string in JSON. For example, `abc123!?$*&amp;amp;()'-=@~` should be represented as
        /// `YWJjMTIzIT8kKiYoKSctPUB+` in JSON. See https://developers.google.com/protocol-buffers/docs/proto3#json.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rawBytes")]
        public virtual string RawBytes { get; set; }

        /// <summary>
        /// The URI of the content. Only Cloud Storage URIs (e.g. `gs://bucket-name/path/to/file`) are supported. The
        /// maximum file size is 2.5 MB for text-based formats, 200 MB for other formats.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Index status of the document.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentIndexStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A sample of errors encountered while indexing the document. If this field is populated, the document is not
        /// indexed due to errors.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        private string _indexTimeRaw;

        private object _indexTime;

        /// <summary>
        /// The time when the document was indexed. If this field is populated, it means the document has been indexed.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexTime")]
        public virtual string IndexTimeRaw
        {
            get => _indexTimeRaw;
            set
            {
                _indexTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _indexTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="IndexTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use IndexTimeDateTimeOffset instead.")]
        public virtual object IndexTime
        {
            get => _indexTime;
            set
            {
                _indexTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _indexTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="IndexTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? IndexTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(IndexTimeRaw);
            set => IndexTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Immutable. The message indicates the document index is in progress. If this field is populated, the document
        /// index is pending.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pendingMessage")]
        public virtual string PendingMessage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Detailed document information associated with a user event.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The conversion value associated with this Document. Must be set if UserEvent.event_type is
        /// "conversion". For example, a value of 1000 signifies that 1000 seconds were spent viewing a Document for the
        /// `watch` conversion type.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversionValue")]
        public virtual System.Nullable<float> ConversionValue { get; set; }

        /// <summary>The Document resource ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Output only. Whether the referenced Document can be found in the data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("joined")]
        public virtual System.Nullable<bool> Joined { get; set; }

        /// <summary>
        /// The Document resource full name, of the form:
        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/branches/{branch_id}/documents/{document_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The promotion IDs associated with this Document. Currently, this field is restricted to at most one ID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promotionIds")]
        public virtual System.Collections.Generic.IList<string> PromotionIds { get; set; }

        /// <summary>
        /// Quantity of the Document associated with the user event. Defaults to 1. For example, this field is 2 if two
        /// quantities of the same Document are involved in a `add-to-cart` event. Required for events of the following
        /// event types: * `add-to-cart` * `purchase`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quantity")]
        public virtual System.Nullable<int> Quantity { get; set; }

        /// <summary>The Document URI - only allowed for website data stores.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A singleton resource of DataStore. If it's empty when DataStore is created and DataStore is set to
    /// DataStore.ContentConfig.CONTENT_REQUIRED, the default parser will default to digital parser.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether chunking mode is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig ChunkingConfig { get; set; }

        /// <summary>
        /// Configurations for default Document parser. If not specified, we will configure it as default
        /// DigitalParsingConfig, and the default parsing config will be applied to all file types for Document parsing.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig DefaultParsingConfig { get; set; }

        /// <summary>
        /// The full resource name of the Document Processing Config. Format:
        /// `projects/*/locations/*/collections/*/dataStores/*/documentProcessingConfig`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Map from file type to override the default parsing configuration based on the file type. Supported keys: *
        /// `pdf`: Override parsing config for PDF files, either digital parsing, ocr parsing or layout parsing is
        /// supported. * `html`: Override parsing config for HTML files, only digital parsing and layout parsing are
        /// supported. * `docx`: Override parsing config for DOCX files, only digital parsing and layout parsing are
        /// supported. * `pptx`: Override parsing config for PPTX files, only digital parsing and layout parsing are
        /// supported. * `xlsm`: Override parsing config for XLSM files, only digital parsing and layout parsing are
        /// supported. * `xlsx`: Override parsing config for XLSX files, only digital parsing and layout parsing are
        /// supported.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parsingConfigOverrides")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig> ParsingConfigOverrides { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for chunking config.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configuration for the layout based chunking.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layoutBasedChunkingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig LayoutBasedChunkingConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for the layout based chunking.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigChunkingConfigLayoutBasedChunkingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The token size limit for each chunk. Supported values: 100-500 (inclusive). Default value: 500.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkSize")]
        public virtual System.Nullable<int> ChunkSize { get; set; }

        /// <summary>
        /// Whether to include appending different levels of headings to chunks from the middle of the document to
        /// prevent context loss. Default value: False.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeAncestorHeadings")]
        public virtual System.Nullable<bool> IncludeAncestorHeadings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Related configurations applied to a specific type of document parser.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configurations applied to digital parser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("digitalParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig DigitalParsingConfig { get; set; }

        /// <summary>Configurations applied to layout parser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("layoutParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig LayoutParsingConfig { get; set; }

        /// <summary>Configurations applied to OCR parser. Currently it only applies to PDFs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ocrParsingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig OcrParsingConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The digital parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigDigitalParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The layout parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigLayoutParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The OCR parsing configurations for documents.</summary>
    public class GoogleCloudDiscoveryengineV1betaDocumentProcessingConfigParsingConfigOcrParsingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// [DEPRECATED] This field is deprecated. To use the additional enhanced document elements processing, please
        /// switch to `layout_parsing_config`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enhancedDocumentElements")]
        public virtual System.Collections.Generic.IList<string> EnhancedDocumentElements { get; set; }

        /// <summary>If true, will use native text instead of OCR text on pages containing native text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useNativeText")]
        public virtual System.Nullable<bool> UseNativeText { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Double list.</summary>
    public class GoogleCloudDiscoveryengineV1betaDoubleList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Double values.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("values")]
        public virtual System.Collections.Generic.IList<System.Nullable<double>> Values { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines embedding config, used for bring your own embeddings feature.</summary>
    public class GoogleCloudDiscoveryengineV1betaEmbeddingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Full field path in the schema mapped as embedding field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldPath")]
        public virtual string FieldPath { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.EnableAdvancedSiteSearch operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SiteSearchEngineService.EnableAdvancedSiteSearch method.</summary>
    public class GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.EnableAdvancedSiteSearch method.</summary>
    public class GoogleCloudDiscoveryengineV1betaEnableAdvancedSiteSearchResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata that describes the training and serving parameters of an Engine.</summary>
    public class GoogleCloudDiscoveryengineV1betaEngine : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chatEngineConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig ChatEngineConfig { get; set; }

        /// <summary>
        /// Output only. Additional information of the Chat Engine. Only applicable if solution_type is
        /// SOLUTION_TYPE_CHAT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chatEngineMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata ChatEngineMetadata { get; set; }

        /// <summary>Common config spec that specifies the metadata of the engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commonConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaEngineCommonConfig CommonConfig { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the Recommendation Engine was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type
        /// of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT,
        /// multiple DataStores in the same Collection can be associated here. Note that when used in
        /// CreateEngineRequest, one DataStore id must be provided as the system will use it for necessary
        /// initializations.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreIds")]
        public virtual System.Collections.Generic.IList<string> DataStoreIds { get; set; }

        /// <summary>Optional. Whether to disable analytics for searches performed on this engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableAnalytics")]
        public virtual System.Nullable<bool> DisableAnalytics { get; set; }

        /// <summary>
        /// Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024
        /// characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on
        /// DataStore: Vertical on Engine has to match vertical of the DataStore linked to the engine.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("industryVertical")]
        public virtual string IndustryVertical { get; set; }

        /// <summary>
        /// Immutable. The fully qualified resource name of the engine. This field must be a UTF-8 encoded string with a
        /// length limit of 1024 characters. Format:
        /// `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}` engine should be 1-63
        /// characters, and valid characters are /a-z0-9*/. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchEngineConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig SearchEngineConfig { get; set; }

        /// <summary>Required. The solutions of the engine.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionType")]
        public virtual string SolutionType { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. Timestamp the Recommendation Engine was last updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations for a Chat Engine.</summary>
    public class GoogleCloudDiscoveryengineV1betaEngineChatEngineConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The configurationt generate the Dialogflow agent that is associated to this Engine. Note that these
        /// configurations are one-time consumed by and passed to Dialogflow service. It means they cannot be retrieved
        /// using EngineService.GetEngine or EngineService.ListEngines API after engine creation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("agentCreationConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig AgentCreationConfig { get; set; }

        /// <summary>
        /// The resource name of an exist Dialogflow agent to link to this Chat Engine. Customers can either provide
        /// `agent_creation_config` to create agent or provide an agent name that links the agent with the Chat engine.
        /// Format: `projects//locations//agents/`. Note that the `dialogflow_agent_to_link` are one-time consumed by
        /// and passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or
        /// EngineService.ListEngines API after engine creation. Use ChatEngineMetadata.dialogflow_agent for actual
        /// agent association after Engine is created.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAgentToLink")]
        public virtual string DialogflowAgentToLink { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configurations for generating a Dialogflow agent. Note that these configurations are one-time consumed by and
    /// passed to Dialogflow service. It means they cannot be retrieved using EngineService.GetEngine or
    /// EngineService.ListEngines API after engine creation.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaEngineChatEngineConfigAgentCreationConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Name of the company, organization or other entity that the agent represents. Used for knowledge connector
        /// LLM prompt and for knowledge search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("business")]
        public virtual string Business { get; set; }

        /// <summary>
        /// Required. The default language of the agent as a language tag. See [Language
        /// Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported
        /// language codes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultLanguageCode")]
        public virtual string DefaultLanguageCode { get; set; }

        /// <summary>
        /// Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create
        /// Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location { get; set; }

        /// <summary>
        /// Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g.,
        /// America/New_York, Europe/Paris.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Additional information of a Chat Engine. Fields in this message are output only.</summary>
    public class GoogleCloudDiscoveryengineV1betaEngineChatEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of a Dialogflow agent, that this Chat Engine refers to. Format:
        /// `projects//locations//agents/`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dialogflowAgent")]
        public virtual string DialogflowAgent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Common configurations for an Engine.</summary>
    public class GoogleCloudDiscoveryengineV1betaEngineCommonConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The name of the company, business or entity that is associated with the engine. Setting this may help
        /// improve LLM related features.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companyName")]
        public virtual string CompanyName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configurations for a Search Engine.</summary>
    public class GoogleCloudDiscoveryengineV1betaEngineSearchEngineConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The add-on that this search engine enables.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchAddOns")]
        public virtual System.Collections.Generic.IList<string> SearchAddOns { get; set; }

        /// <summary>
        /// The search feature tier of this engine. Different tiers might have different pricing. To learn more, check
        /// the pricing documentation. Defaults to SearchTier.SEARCH_TIER_STANDARD if not specified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchTier")]
        public virtual string SearchTier { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// An evaluation is a single execution (or run) of an evaluation process. It encapsulates the state of the
    /// evaluation and the resulting data.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaEvaluation : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the Evaluation was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _endTimeRaw;

        private object _endTime;

        /// <summary>Output only. Timestamp the Evaluation was completed at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The error that occurred during evaluation. Only populated when the evaluation's state is
        /// FAILED.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>Output only. A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Required. The specification of the evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("evaluationSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec EvaluationSpec { get; set; }

        /// <summary>
        /// Identifier. The full resource name of the Evaluation, in the format of
        /// `projects/{project}/locations/{location}/evaluations/{evaluation}`. This field must be a UTF-8 encoded
        /// string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Output only. The metrics produced by the evaluation, averaged across all SampleQuerys in the SampleQuerySet.
        /// Only populated when the evaluation's state is SUCCEEDED.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("qualityMetrics")]
        public virtual GoogleCloudDiscoveryengineV1betaQualityMetrics QualityMetrics { get; set; }

        /// <summary>Output only. The state of the evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the specification of the evaluation.</summary>
    public class GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The specification of the query set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("querySetSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec QuerySetSpec { get; set; }

        /// <summary>
        /// Required. The search request that is used to perform the evaluation. Only the following fields within
        /// SearchRequest are supported; if any other fields are provided, an UNSUPPORTED error will be returned: *
        /// SearchRequest.serving_config * SearchRequest.branch * SearchRequest.canonical_filter *
        /// SearchRequest.query_expansion_spec * SearchRequest.spell_correction_spec * SearchRequest.content_search_spec
        /// * SearchRequest.user_pseudo_id
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchRequest")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequest SearchRequest { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the specification of the query set.</summary>
    public class GoogleCloudDiscoveryengineV1betaEvaluationEvaluationSpecQuerySetSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The full resource name of the SampleQuerySet used for the evaluation, in the format of
        /// `projects/{project}/locations/{location}/sampleQuerySets/{sampleQuerySet}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleQuerySet")]
        public virtual string SampleQuerySet { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Fact Chunk.</summary>
    public class GoogleCloudDiscoveryengineV1betaFactChunk : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Text content of the fact chunk. Can be at most 10K characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkText")]
        public virtual string ChunkText { get; set; }

        /// <summary>The index of this chunk. Currently, only used for the streaming mode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("index")]
        public virtual System.Nullable<int> Index { get; set; }

        /// <summary>
        /// Source from which this fact chunk was retrieved. If it was retrieved from the GroundingFacts provided in the
        /// request then this field will contain the index of the specific fact from which this chunk was retrieved.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>More fine-grained information for the source reference.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sourceMetadata")]
        public virtual System.Collections.Generic.IDictionary<string, string> SourceMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.FetchDomainVerificationStatus method.</summary>
    public class GoogleCloudDiscoveryengineV1betaFetchDomainVerificationStatusResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
        /// subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>List of TargetSites containing the site verification status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSites")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaTargetSite> TargetSites { get; set; }

        /// <summary>
        /// The total number of items matching the request. This will always be populated in the response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalSize")]
        public virtual System.Nullable<int> TotalSize { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.FetchSitemaps method.</summary>
    public class GoogleCloudDiscoveryengineV1betaFetchSitemapsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of Sitemaps fetched.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sitemapsMetadata")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaFetchSitemapsResponseSitemapMetadata> SitemapsMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains a Sitemap and its metadata.</summary>
    public class GoogleCloudDiscoveryengineV1betaFetchSitemapsResponseSitemapMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Sitemap.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sitemap")]
        public virtual GoogleCloudDiscoveryengineV1betaSitemap Sitemap { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Cloud FhirStore source import data from.</summary>
    public class GoogleCloudDiscoveryengineV1betaFhirStoreSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The full resource name of the FHIR store to import data from, in the format of
        /// `projects/{project}/locations/{location}/datasets/{dataset}/fhirStores/{fhir_store}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fhirStore")]
        public virtual string FhirStore { get; set; }

        /// <summary>
        /// Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be
        /// specified if one wants to have the FhirStore export to a specific Cloud Storage directory.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsStagingDir")]
        public virtual string GcsStagingDir { get; set; }

        /// <summary>
        /// The FHIR resource types to import. The resource types should be a subset of all [supported FHIR resource
        /// types](https://cloud.google.com/generative-ai-app-builder/docs/fhir-schema-reference#resource-level-specification).
        /// Default to all supported FHIR resource types if empty.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceTypes")]
        public virtual System.Collections.Generic.IList<string> ResourceTypes { get; set; }

        /// <summary>
        /// Optional. Whether to update the DataStore schema to the latest predefined schema. If true, the DataStore
        /// schema will be updated to include any FHIR fields or resource types that have been added since the last
        /// import and corresponding FHIR resources will be imported from the FHIR store. Note this field cannot be used
        /// in conjunction with `resource_types`. It should be used after initial import.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateFromLatestPredefinedSchema")]
        public virtual System.Nullable<bool> UpdateFromLatestPredefinedSchema { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Firestore source import data from.</summary>
    public class GoogleCloudDiscoveryengineV1betaFirestoreSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The Firestore collection (or entity) to copy the data from with a length limit of 1,500
        /// characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("collectionId")]
        public virtual string CollectionId { get; set; }

        /// <summary>
        /// Required. The Firestore database to copy the data from with a length limit of 256 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("databaseId")]
        public virtual string DatabaseId { get; set; }

        /// <summary>
        /// Intermediate Cloud Storage directory used for the import with a length limit of 2,000 characters. Can be
        /// specified if one wants to have the Firestore export to a specific Cloud Storage directory. Ensure that the
        /// Firestore service account has the necessary Cloud Storage Admin permissions to access the specified Cloud
        /// Storage directory.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsStagingDir")]
        public virtual string GcsStagingDir { get; set; }

        /// <summary>
        /// The project ID that the Cloud SQL source is in with a length limit of 128 characters. If not specified,
        /// inherits the project ID from the parent request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Cloud Storage location for input content.</summary>
    public class GoogleCloudDiscoveryengineV1betaGcsSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The schema to use when parsing the data from the source. Supported values for document imports: * `document`
        /// (default): One JSON Document per line. Each document must have a valid Document.id. * `content`:
        /// Unstructured data (e.g. PDF, HTML). Each file matched by `input_uris` becomes a document, with the ID set to
        /// the first 128 bits of SHA256(URI) encoded as a hex string. * `custom`: One custom data JSON per row in
        /// arbitrary format that conforms to the defined Schema of the data store. This can only be used by the GENERIC
        /// Data Store vertical. * `csv`: A CSV file with header conforming to the defined Schema of the data store.
        /// Each entry after the header is imported as a Document. This can only be used by the GENERIC Data Store
        /// vertical. Supported values for user event imports: * `user_event` (default): One JSON UserEvent per line.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataSchema")]
        public virtual string DataSchema { get; set; }

        /// <summary>
        /// Required. Cloud Storage URIs to input files. Each URI can be up to 2000 characters long. URIs can match the
        /// full object path (for example, `gs://bucket/directory/object.json`) or a pattern matching one or more files,
        /// such as `gs://bucket/directory/*.json`. A request can contain at most 100 files (or 100,000 files if
        /// `data_schema` is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is `content`).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inputUris")]
        public virtual System.Collections.Generic.IList<string> InputUris { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Top-level message sent by the client for the `GenerateGroundedContent` method.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Content of the current conversation with the model. For single-turn queries, this is a single instance. For
        /// multi-turn queries, this is a repeated field that contains conversation history + latest request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaGroundedGenerationContent> Contents { get; set; }

        /// <summary>Content generation specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generationSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGenerationSpec GenerationSpec { get; set; }

        /// <summary>Grounding specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSpec GroundingSpec { get; set; }

        /// <summary>
        /// Content of the system instruction for the current API. These instructions will take priority over any other
        /// prompt instructions if the selected model is supporting them.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("systemInstruction")]
        public virtual GoogleCloudDiscoveryengineV1betaGroundedGenerationContent SystemInstruction { get; set; }

        /// <summary>
        /// The user labels applied to a resource must meet the following requirements: * Each resource can have
        /// multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length
        /// of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a
        /// maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters,
        /// underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. *
        /// The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys
        /// must start with a lowercase letter or international character. See [Google Cloud
        /// Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the options to customize dynamic retrieval.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestDynamicRetrievalConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Specification for the predictor for dynamic retrieval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("predictor")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestDynamicRetrievalConfigurationDynamicRetrievalPredictor Predictor { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the predictor settings for dynamic retrieval.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestDynamicRetrievalConfigurationDynamicRetrievalPredictor : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The value of the threshold. If the predictor will predict a value smaller than this, it would suppress
        /// grounding in the source.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("threshold")]
        public virtual System.Nullable<float> Threshold { get; set; }

        /// <summary>The version of the predictor to be used in dynamic retrieval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Content generation specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGenerationSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If specified, custom value for frequency penalty will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("frequencyPenalty")]
        public virtual System.Nullable<float> FrequencyPenalty { get; set; }

        /// <summary>
        /// Language code for content. Use language tags defined by
        /// [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>If specified, custom value for max output tokens will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxOutputTokens")]
        public virtual System.Nullable<int> MaxOutputTokens { get; set; }

        /// <summary>Specifies which Vertex model id to use for generation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelId")]
        public virtual string ModelId { get; set; }

        /// <summary>If specified, custom value for presence penalty will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("presencePenalty")]
        public virtual System.Nullable<float> PresencePenalty { get; set; }

        /// <summary>If specified, custom value for the seed will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seed")]
        public virtual System.Nullable<int> Seed { get; set; }

        /// <summary>If specified, custom value for the temperature will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("temperature")]
        public virtual System.Nullable<float> Temperature { get; set; }

        /// <summary>If specified, custom value for top-k sampling will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topK")]
        public virtual System.Nullable<int> TopK { get; set; }

        /// <summary>If specified, custom value for nucleus sampling will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topP")]
        public virtual System.Nullable<float> TopP { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Grounding source.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If set, grounding is performed with Google Search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("googleSearchSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceGoogleSearchSource GoogleSearchSource { get; set; }

        /// <summary>If set, grounding is performed with inline content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceInlineSource InlineSource { get; set; }

        /// <summary>If set, grounding is performed with Vertex AI Search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceSearchSource SearchSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Google Search config parameters.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceGoogleSearchSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Specifies the dynamic retrieval configuration for the given source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicRetrievalConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestDynamicRetrievalConfiguration DynamicRetrievalConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Message to be used for grounding based on inline content.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Attributes associated with the content. Common attributes include `source` (indicating where the content was
        /// sourced from) and `author` (indicating the author of the content).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributes")]
        public virtual System.Collections.Generic.IDictionary<string, string> Attributes { get; set; }

        /// <summary>List of facts to be used for grounding.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingFacts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaGroundingFact> GroundingFacts { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Message to be used for grounding with Vertex AI Search.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSourceSearchSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Filter expression to be applied to the search. The syntax is the same as SearchRequest.filter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// Number of search results to return. The default value is 10. The maximumm allowed value is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxResultCount")]
        public virtual System.Nullable<int> MaxResultCount { get; set; }

        /// <summary>If set, safe search is enabled in Vertex AI Search requests.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safeSearch")]
        public virtual System.Nullable<bool> SafeSearch { get; set; }

        /// <summary>
        /// The resource name of the Engine to use. Format:
        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingConfig")]
        public virtual string ServingConfig { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Grounding specification.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Grounding sources.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingSources")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaGenerateGroundedContentRequestGroundingSource> GroundingSources { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response for the `GenerateGroundedContent` method.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Generated candidates.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("candidates")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidate> Candidates { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A response candidate generated from the model.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Content of the candidate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual GoogleCloudDiscoveryengineV1betaGroundedGenerationContent Content { get; set; }

        /// <summary>Grounding metadata for the generated content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadata GroundingMetadata { get; set; }

        /// <summary>The overall grounding score for the candidate, in the range of [0, 1].</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingScore")]
        public virtual System.Nullable<float> GroundingScore { get; set; }

        /// <summary>Index of the candidate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("index")]
        public virtual System.Nullable<int> Index { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Citation for the generated content.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// GroundingSupport across all claims in the answer candidate. An support to a fact indicates that the claim is
        /// supported by the fact.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groundingSupport")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataGroundingSupport> GroundingSupport { get; set; }

        /// <summary>
        /// Retrieval metadata to provide an understanding in the retrieval steps performed by the model. There can be
        /// multiple such messages which can correspond to different parts of the retrieval. This is a mechanism used to
        /// ensure transparency to our users.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("retrievalMetadata")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataRetrievalMetadata> RetrievalMetadata { get; set; }

        /// <summary>Google search entry for the following-up web searches.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchEntryPoint")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataSearchEntryPoint SearchEntryPoint { get; set; }

        /// <summary>
        /// List of chunks to be attributed across all claims in the candidate. These are derived from the grounding
        /// sources supplied in the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportChunks")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaFactChunk> SupportChunks { get; set; }

        /// <summary>Web search queries for the following-up web search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("webSearchQueries")]
        public virtual System.Collections.Generic.IList<string> WebSearchQueries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the metadata about dynamic retrieval.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataDynamicRetrievalMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata for the dynamic retrieval predictor.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("predictorMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataDynamicRetrievalPredictorMetadata PredictorMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the metadata about the dynamic retrieval predictor.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataDynamicRetrievalPredictorMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The value of the predictor. This should be between [0, 1] where a value of 0 means that the query would not
        /// benefit from grounding, while a value of 1.0 means that the query would benefit the most. In between values
        /// allow to differentiate between different usefulness scores for grounding.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prediction")]
        public virtual System.Nullable<float> Prediction { get; set; }

        /// <summary>The version of the predictor which was used in dynamic retrieval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Grounding info for a claim in the candidate and its support.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataGroundingSupport : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Text for the claim in the candidate. Always provided when a support is found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("claimText")]
        public virtual string ClaimText { get; set; }

        /// <summary>
        /// A list of indices (into 'support_chunks') specifying the citations associated with the claim. For instance
        /// [1,3,4] means that support_chunks[1], support_chunks[3], support_chunks[4] are the chunks attributed to the
        /// claim.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportChunkIndices")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> SupportChunkIndices { get; set; }

        /// <summary>
        /// A score in the range of [0, 1] describing how grounded is a specific claim in the support chunks indicated.
        /// Higher value means that the claim is better supported by the chunks.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("supportScore")]
        public virtual System.Nullable<float> SupportScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the metadata associated with a retrieval step.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataRetrievalMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Metadata for dynamic retrieval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicRetrievalMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataDynamicRetrievalMetadata DynamicRetrievalMetadata { get; set; }

        /// <summary>Describes the source to which the metadata is referring to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Google search entry point.</summary>
    public class GoogleCloudDiscoveryengineV1betaGenerateGroundedContentResponseCandidateGroundingMetadataSearchEntryPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Web content snippet that can be embedded in a web page or an app webview.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderedContent")]
        public virtual string RenderedContent { get; set; }

        /// <summary>Base64 encoded JSON representing array of tuple.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sdkBlob")]
        public virtual string SdkBlob { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Base structured datatype containing multi-part content of a message.</summary>
    public class GoogleCloudDiscoveryengineV1betaGroundedGenerationContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Ordered `Parts` that constitute a single message.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parts")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaGroundedGenerationContentPart> Parts { get; set; }

        /// <summary>
        /// Producer of the content. Must be either `user` or `model`. Intended to be used for multi-turn conversations.
        /// Otherwise, it can be left unset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Single part of content.</summary>
    public class GoogleCloudDiscoveryengineV1betaGroundedGenerationContentPart : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Inline text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Grounding Fact.</summary>
    public class GoogleCloudDiscoveryengineV1betaGroundingFact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Attributes associated with the fact. Common attributes include `source` (indicating where the fact was
        /// sourced from), `author` (indicating the author of the fact), and so on.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributes")]
        public virtual System.Collections.Generic.IDictionary<string, string> Attributes { get; set; }

        /// <summary>Text content of the fact. Can be at most 10K characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("factText")]
        public virtual string FactText { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config to data store for `HEALTHCARE_FHIR` vertical.</summary>
    public class GoogleCloudDiscoveryengineV1betaHealthcareFhirConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether to enable configurable schema for `HEALTHCARE_FHIR` vertical. If set to `true`, the predefined
        /// healthcare fhir schema can be extended for more customized searching and filtering.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableConfigurableSchema")]
        public virtual System.Nullable<bool> EnableConfigurableSchema { get; set; }

        /// <summary>
        /// Whether to enable static indexing for `HEALTHCARE_FHIR` batch ingestion. If set to `true`, the batch
        /// ingestion will be processed in a static indexing mode which is slower but more capable of handling larger
        /// volume.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableStaticIndexingForBatchIngestion")]
        public virtual System.Nullable<bool> EnableStaticIndexingForBatchIngestion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Identity Mapping Entry that maps an external identity to an internal identity.</summary>
    public class GoogleCloudDiscoveryengineV1betaIdentityMappingEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Identity outside the customer identity provider. The length limit of external identity will be of
        /// 100 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("externalIdentity")]
        public virtual string ExternalIdentity { get; set; }

        /// <summary>
        /// Group identifier. For Google Workspace user account, group_id should be the google workspace group email.
        /// For non-google identity provider, group_id is the mapped group identifier configured during the
        /// workforcepool config.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupId")]
        public virtual string GroupId { get; set; }

        /// <summary>
        /// User identifier. For Google Workspace user account, user_id should be the google workspace user email. For
        /// non-google identity provider, user_id is the mapped user identifier configured during the workforcepool
        /// config.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// IdentityMappingEntry LongRunningOperation metadata for IdentityMappingStoreService.ImportIdentityMappings and
    /// IdentityMappingStoreService.PurgeIdentityMappings
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaIdentityMappingEntryOperationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The number of IdentityMappingEntries that failed to be processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>The number of IdentityMappingEntries that were successfully processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        /// <summary>The total number of IdentityMappingEntries that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<long> TotalCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Identity Mapping Store which contains Identity Mapping Entries.</summary>
    public class GoogleCloudDiscoveryengineV1betaIdentityMappingStore : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. CMEK-related information for the Identity Mapping Store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cmekConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaCmekConfig CmekConfig { get; set; }

        /// <summary>
        /// Input only. The KMS key to be used to protect this Identity Mapping Store at creation time. Must be set for
        /// requests that need to comply with CMEK Org Policy protections. If this field is set and processed
        /// successfully, the Identity Mapping Store will be protected by the KMS key, as indicated in the cmek_config
        /// field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKeyName")]
        public virtual string KmsKeyName { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the identity mapping store. Format:
        /// `projects/{project}/locations/{location}/identityMappingStores/{identity_mapping_store}`. This field must be
        /// a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportCompletionSuggestions operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of CompletionSuggestions that failed to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of CompletionSuggestions successfully imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for CompletionService.ImportCompletionSuggestions method.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>BigQuery input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigquerySource")]
        public virtual GoogleCloudDiscoveryengineV1betaBigQuerySource BigquerySource { get; set; }

        /// <summary>The desired location of errors incurred during the Import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>Cloud Storage location for the input content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }

        /// <summary>The Inline source for suggestion entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequestInlineSource InlineSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The inline source for CompletionSuggestions.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsRequestInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A list of all denylist entries to import. Max of 1000 items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaCompletionSuggestion> Suggestions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the CompletionService.ImportCompletionSuggestions method. If the long running operation is done,
    /// this message is returned by the google.longrunning.Operations.response field if the operation is successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportCompletionSuggestionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The desired location of errors incurred during the Import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportDocuments operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportDocumentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were processed successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        /// <summary>Total count of entries that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<long> TotalCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Import methods.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportDocumentsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>AlloyDB input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alloyDbSource")]
        public virtual GoogleCloudDiscoveryengineV1betaAlloyDbSource AlloyDbSource { get; set; }

        /// <summary>
        /// Whether to automatically generate IDs for the documents if absent. If set to `true`, Document.ids are
        /// automatically generated based on the hash of the payload, where IDs may not be consistent during multiple
        /// imports. In which case ReconciliationMode.FULL is highly recommended to avoid duplicate contents. If unset
        /// or set to `false`, Document.ids have to be specified using id_field, otherwise, documents without IDs fail
        /// to be imported. Supported data sources: * GcsSource. GcsSource.data_schema must be `custom` or `csv`.
        /// Otherwise, an INVALID_ARGUMENT error is thrown. * BigQuerySource. BigQuerySource.data_schema must be
        /// `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown. * SpannerSource. * CloudSqlSource. *
        /// FirestoreSource. * BigtableSource.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoGenerateIds")]
        public virtual System.Nullable<bool> AutoGenerateIds { get; set; }

        /// <summary>BigQuery input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigquerySource")]
        public virtual GoogleCloudDiscoveryengineV1betaBigQuerySource BigquerySource { get; set; }

        /// <summary>Cloud Bigtable input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigtableSource")]
        public virtual GoogleCloudDiscoveryengineV1betaBigtableSource BigtableSource { get; set; }

        /// <summary>Cloud SQL input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cloudSqlSource")]
        public virtual GoogleCloudDiscoveryengineV1betaCloudSqlSource CloudSqlSource { get; set; }

        /// <summary>The desired location of errors incurred during the Import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>FhirStore input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fhirStoreSource")]
        public virtual GoogleCloudDiscoveryengineV1betaFhirStoreSource FhirStoreSource { get; set; }

        /// <summary>Firestore input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("firestoreSource")]
        public virtual GoogleCloudDiscoveryengineV1betaFirestoreSource FirestoreSource { get; set; }

        /// <summary>
        /// Optional. Whether to force refresh the unstructured content of the documents. If set to `true`, the content
        /// part of the documents will be refreshed regardless of the update status of the referencing content.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("forceRefreshContent")]
        public virtual System.Nullable<bool> ForceRefreshContent { get; set; }

        /// <summary>Cloud Storage location for the input content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }

        /// <summary>
        /// The field indicates the ID field or column to be used as unique IDs of the documents. For GcsSource it is
        /// the key of the JSON field. For instance, `my_id` for JSON `{"my_id": "some_uuid"}`. For others, it may be
        /// the column name of the table where the unique ids are stored. The values of the JSON field or the table
        /// column are used as the Document.ids. The JSON field or the table column must be of string type, and the
        /// values must be set as valid strings conform to [RFC-1034](https://tools.ietf.org/html/rfc1034) with 1-63
        /// characters. Otherwise, documents without valid IDs fail to be imported. Only set this field when
        /// auto_generate_ids is unset or set as `false`. Otherwise, an INVALID_ARGUMENT error is thrown. If it is
        /// unset, a default value `_id` is used when importing from the allowed data sources. Supported data sources: *
        /// GcsSource. GcsSource.data_schema must be `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error is thrown.
        /// * BigQuerySource. BigQuerySource.data_schema must be `custom` or `csv`. Otherwise, an INVALID_ARGUMENT error
        /// is thrown. * SpannerSource. * CloudSqlSource. * FirestoreSource. * BigtableSource.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idField")]
        public virtual string IdField { get; set; }

        /// <summary>The Inline source for the input content for documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource InlineSource { get; set; }

        /// <summary>
        /// The mode of reconciliation between existing documents and the documents to be imported. Defaults to
        /// ReconciliationMode.INCREMENTAL.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reconciliationMode")]
        public virtual string ReconciliationMode { get; set; }

        /// <summary>Spanner input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spannerSource")]
        public virtual GoogleCloudDiscoveryengineV1betaSpannerSource SpannerSource { get; set; }

        /// <summary>
        /// Indicates which fields in the provided imported documents to update. If not set, the default is to update
        /// all fields.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateMask")]
        public virtual object UpdateMask { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The inline source for the input config for ImportDocuments method.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportDocumentsRequestInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. A list of documents to update/create. Each document must have a valid Document.id. Recommended max
        /// of 100 items.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaDocument> Documents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the ImportDocumentsRequest. If the long running operation is done, then this message is returned by
    /// the google.longrunning.Operations.response field if the operation was successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors in the request if set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration of destination for Import related errors.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportErrorConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Cloud Storage prefix for import errors. This must be an empty, existing Cloud Storage directory. Import
        /// errors are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status`
        /// message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsPrefix")]
        public virtual string GcsPrefix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for IdentityMappingStoreService.ImportIdentityMappings</summary>
    public class GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The inline source to import identity mapping entries from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequestInlineSource InlineSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The inline source to import identity mapping entries from.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportIdentityMappingsRequestInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A maximum of 10000 entries can be imported at one time</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityMappingEntries")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaIdentityMappingEntry> IdentityMappingEntries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for IdentityMappingStoreService.ImportIdentityMappings</summary>
    public class GoogleCloudDiscoveryengineV1betaImportIdentityMappingsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportSampleQueries operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportSampleQueriesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>ImportSampleQueries operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of SampleQuerys that failed to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of SampleQuerys successfully imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        /// <summary>Total count of SampleQuerys that were processed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<long> TotalCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>
        /// ImportSampleQueries operation last update time. If the operation is done, this is also the finish time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SampleQueryService.ImportSampleQueries method.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>BigQuery input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigquerySource")]
        public virtual GoogleCloudDiscoveryengineV1betaBigQuerySource BigquerySource { get; set; }

        /// <summary>The desired location of errors incurred during the Import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>Cloud Storage location for the input content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }

        /// <summary>The Inline source for sample query entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequestInlineSource InlineSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The inline source for SampleQuerys.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportSampleQueriesRequestInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A list of SampleQuerys to import. Max of 1000 items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleQueries")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSampleQuery> SampleQueries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the SampleQueryService.ImportSampleQueries method. If the long running operation is done, this
    /// message is returned by the google.longrunning.Operations.response field if the operation is successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportSampleQueriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The desired location of errors incurred during the Import.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the ImportSuggestionDenyListEntries operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for CompletionService.ImportSuggestionDenyListEntries method.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Cloud Storage location for the input content. Only 1 file can be specified that contains all entries to
        /// import. Supported values `gcs_source.schema` for autocomplete suggestion deny list entry imports: *
        /// `suggestion_deny_list` (default): One JSON [SuggestionDenyListEntry] per line.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }

        /// <summary>The Inline source for the input content for suggestion deny list entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequestInlineSource InlineSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The inline source for SuggestionDenyListEntry.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesRequestInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A list of all denylist entries to import. Max of 1000 items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("entries")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry> Entries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.ImportSuggestionDenyListEntries method.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportSuggestionDenyListEntriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Count of deny list entries that failed to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failedEntriesCount")]
        public virtual System.Nullable<long> FailedEntriesCount { get; set; }

        /// <summary>Count of deny list entries successfully imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("importedEntriesCount")]
        public virtual System.Nullable<long> ImportedEntriesCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the Import operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportUserEventsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were processed successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for the ImportUserEvents request.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportUserEventsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>BigQuery input source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bigquerySource")]
        public virtual GoogleCloudDiscoveryengineV1betaBigQuerySource BigquerySource { get; set; }

        /// <summary>
        /// The desired location of errors incurred during the Import. Cannot be set for inline user event imports.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>Cloud Storage location for the input content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }

        /// <summary>The Inline source for the input content for UserEvents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource InlineSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The inline source for the input config for ImportUserEvents method.</summary>
    public class GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. A list of user events to import. Recommended max of 10k items.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userEvents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaUserEvent> UserEvents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the ImportUserEventsRequest. If the long running operation was successful, then this message is
    /// returned by the google.longrunning.Operations.response field if the operation was successful.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaImportUserEventsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors if this field was set in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Count of user events imported with complete existing Documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("joinedEventsCount")]
        public virtual System.Nullable<long> JoinedEventsCount { get; set; }

        /// <summary>
        /// Count of user events imported, but with Document information not found in the existing Branch.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unjoinedEventsCount")]
        public virtual System.Nullable<long> UnjoinedEventsCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A floating point interval.</summary>
    public class GoogleCloudDiscoveryengineV1betaInterval : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Exclusive upper bound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exclusiveMaximum")]
        public virtual System.Nullable<double> ExclusiveMaximum { get; set; }

        /// <summary>Exclusive lower bound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exclusiveMinimum")]
        public virtual System.Nullable<double> ExclusiveMinimum { get; set; }

        /// <summary>Inclusive upper bound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximum")]
        public virtual System.Nullable<double> Maximum { get; set; }

        /// <summary>Inclusive lower bound.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minimum")]
        public virtual System.Nullable<double> Minimum { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Language info for DataStore.</summary>
    public class GoogleCloudDiscoveryengineV1betaLanguageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Output only. Language part of normalized_language_code. E.g.: `en-US` -&amp;gt; `en`, `zh-Hans-HK` -&amp;gt;
        /// `zh`, `en` -&amp;gt; `en`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("language")]
        public virtual string Language { get; set; }

        /// <summary>The language code for the DataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// Output only. This is the normalized form of language_code. E.g.: language_code of `en-GB`, `en_GB`, `en-UK`
        /// or `en-gb` will have normalized_language_code of `en-GB`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("normalizedLanguageCode")]
        public virtual string NormalizedLanguageCode { get; set; }

        /// <summary>
        /// Output only. Region part of normalized_language_code, if present. E.g.: `en-US` -&amp;gt; `US`, `zh-Hans-HK`
        /// -&amp;gt; `HK`, `en` -&amp;gt; ``.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response for ListControls method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListControlsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All the Controls for a given data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("controls")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaControl> Controls { get; set; }

        /// <summary>Pagination token, if not returned indicates the last page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response for ListConversations method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListConversationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All the Conversations for a given data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaConversation> Conversations { get; set; }

        /// <summary>Pagination token, if not returned indicates the last page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SearchTuningService.ListCustomModels method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListCustomModelsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of custom tuning models.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("models")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaCustomTuningModel> Models { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for DataStoreService.ListDataStores method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListDataStoresResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All the customer's DataStores.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStores")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaDataStore> DataStores { get; set; }

        /// <summary>
        /// A token that can be sent as ListDataStoresRequest.page_token to retrieve the next page. If this field is
        /// omitted, there are no subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for DocumentService.ListDocuments method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Documents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaDocument> Documents { get; set; }

        /// <summary>
        /// A token that can be sent as ListDocumentsRequest.page_token to retrieve the next page. If this field is
        /// omitted, there are no subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for EngineService.ListEngines method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListEnginesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>All the customer's Engines.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("engines")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaEngine> Engines { get; set; }

        /// <summary>Not supported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for EvaluationService.ListEvaluationResults method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListEvaluationResultsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The evaluation results for the SampleQuerys.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("evaluationResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaListEvaluationResultsResponseEvaluationResult> EvaluationResults { get; set; }

        /// <summary>
        /// A token that can be sent as ListEvaluationResultsRequest.page_token to retrieve the next page. If this field
        /// is omitted, there are no subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the results of an evaluation for a single SampleQuery.</summary>
    public class GoogleCloudDiscoveryengineV1betaListEvaluationResultsResponseEvaluationResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. The metrics produced by the evaluation, for a given SampleQuery.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("qualityMetrics")]
        public virtual GoogleCloudDiscoveryengineV1betaQualityMetrics QualityMetrics { get; set; }

        /// <summary>Output only. The SampleQuery that was evaluated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleQuery")]
        public virtual GoogleCloudDiscoveryengineV1betaSampleQuery SampleQuery { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for EvaluationService.ListEvaluations method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListEvaluationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Evaluations.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("evaluations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaEvaluation> Evaluations { get; set; }

        /// <summary>
        /// A token that can be sent as ListEvaluationsRequest.page_token to retrieve the next page. If this field is
        /// omitted, there are no subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for IdentityMappingStoreService.ListIdentityMappingStores</summary>
    public class GoogleCloudDiscoveryengineV1betaListIdentityMappingStoresResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Identity Mapping Stores.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityMappingStores")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaIdentityMappingStore> IdentityMappingStores { get; set; }

        /// <summary>
        /// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
        /// subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for IdentityMappingStoreService.ListIdentityMappings</summary>
    public class GoogleCloudDiscoveryengineV1betaListIdentityMappingsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Identity Mapping Entries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityMappingEntries")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaIdentityMappingEntry> IdentityMappingEntries { get; set; }

        /// <summary>
        /// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
        /// subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SampleQueryService.ListSampleQueries method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListSampleQueriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A token that can be sent as ListSampleQueriesRequest.page_token to retrieve the next page. If this field is
        /// omitted, there are no subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The SampleQuerys.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleQueries")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSampleQuery> SampleQueries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SampleQuerySetService.ListSampleQuerySets method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListSampleQuerySetsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A token that can be sent as ListSampleQuerySetsRequest.page_token to retrieve the next page. If this field
        /// is omitted, there are no subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The SampleQuerySets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sampleQuerySets")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSampleQuerySet> SampleQuerySets { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SchemaService.ListSchemas method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListSchemasResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A token that can be sent as ListSchemasRequest.page_token to retrieve the next page. If this field is
        /// omitted, there are no subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The Schemas.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schemas")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSchema> Schemas { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response for ListServingConfigs method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListServingConfigsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Pagination token, if not returned indicates the last page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>All the ServingConfigs for a given dataStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingConfigs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaServingConfig> ServingConfigs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response for ListSessions method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListSessionsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Pagination token, if not returned indicates the last page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>All the Sessions for a given data store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSession> Sessions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SiteSearchEngineService.ListTargetSites method.</summary>
    public class GoogleCloudDiscoveryengineV1betaListTargetSitesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no
        /// subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>List of TargetSites.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetSites")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaTargetSite> TargetSites { get; set; }

        /// <summary>
        /// The total number of items matching the request. This will always be populated in the response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalSize")]
        public virtual System.Nullable<int> TotalSize { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Media-specific user event information.</summary>
    public class GoogleCloudDiscoveryengineV1betaMediaInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The media progress time in seconds, if applicable. For example, if the end user has finished 90 seconds of a
        /// playback video, then MediaInfo.media_progress_duration.seconds should be set to 90.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaProgressDuration")]
        public virtual object MediaProgressDuration { get; set; }

        /// <summary>
        /// Media progress should be computed using only the media_progress_duration relative to the media total length.
        /// This value must be between `[0, 1.0]` inclusive. If this is not a playback or the progress cannot be
        /// computed (e.g. ongoing livestream), this field should be unset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaProgressPercentage")]
        public virtual System.Nullable<float> MediaProgressPercentage { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration for Natural Language Query Understanding.</summary>
    public class GoogleCloudDiscoveryengineV1betaNaturalLanguageQueryUnderstandingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Mode of Natural Language Query Understanding. If this field is unset, the behavior defaults to
        /// NaturalLanguageQueryUnderstandingConfig.Mode.DISABLED.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mode")]
        public virtual string Mode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for CrawlRateManagementService.ObtainCrawlRate method.</summary>
    public class GoogleCloudDiscoveryengineV1betaObtainCrawlRateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The scope of the crawl rate that the user wants to monitor. Currently, only domain and host name
        /// are supported. A domain name example: `example.com`. A host name example: `www.example.com`. Please do not
        /// include `/` in the domain or host name.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crawlRateScope")]
        public virtual string CrawlRateScope { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for CrawlRateManagementService.ObtainCrawlRate method. The response contains organcic or
    /// dedicated crawl rate time series data for monitoring, depending on whether dedicated crawl rate is set.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaObtainCrawlRateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The historical dedicated crawl rate timeseries data, used for monitoring.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dedicatedCrawlRateTimeSeries")]
        public virtual GoogleCloudDiscoveryengineV1betaDedicatedCrawlRateTimeSeries DedicatedCrawlRateTimeSeries { get; set; }

        /// <summary>Errors from service when handling the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>The historical organic crawl rate timeseries data, used for monitoring.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("organicCrawlRateTimeSeries")]
        public virtual GoogleCloudDiscoveryengineV1betaOrganicCrawlRateTimeSeries OrganicCrawlRateTimeSeries { get; set; }

        /// <summary>Output only. The state of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The historical organic crawl rate timeseries data, used for monitoring. Organic crawl is auto-determined by
    /// Google to crawl the user's website when dedicate crawl is not set. Crawl rate is the QPS of crawl request Google
    /// sends to the user's website.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaOrganicCrawlRateTimeSeries : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Google's organic crawl rate time series, which is the sum of all googlebots' crawl rate. Please refer to
        /// https://developers.google.com/search/docs/crawling-indexing/overview-google-crawlers for more details about
        /// googlebots.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("googleOrganicCrawlRate")]
        public virtual GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries GoogleOrganicCrawlRate { get; set; }

        /// <summary>
        /// Vertex AI's organic crawl rate time series, which is the crawl rate of Google-CloudVertexBot when dedicate
        /// crawl is not set. Please refer to
        /// https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers#google-cloudvertexbot for
        /// more details about Google-CloudVertexBot.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vertexAiOrganicCrawlRate")]
        public virtual GoogleCloudDiscoveryengineV1betaCrawlRateTimeSeries VertexAiOrganicCrawlRate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Detailed page information.</summary>
    public class GoogleCloudDiscoveryengineV1betaPageInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The most specific category associated with a category page. To represent full path of category, use
        /// '&amp;gt;' sign to separate different hierarchies. If '&amp;gt;' is part of the category name, replace it
        /// with other character(s). Category pages include special pages such as sales or promotions. For instance, a
        /// special sale page may have the category hierarchy: `"pageCategory" : "Sales &amp;gt; 2017 Black Friday
        /// Deals"`. Required for `view-category-page` events. Other event types should not set this field. Otherwise,
        /// an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageCategory")]
        public virtual string PageCategory { get; set; }

        /// <summary>
        /// A unique ID of a web page view. This should be kept the same for all user events triggered from the same
        /// pageview. For example, an item detail page view could trigger multiple events as the user is browsing the
        /// page. The `pageview_id` property should be kept the same for all these events so that they can be grouped
        /// together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager,
        /// this value is filled in automatically.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageviewId")]
        public virtual string PageviewId { get; set; }

        /// <summary>
        /// The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and
        /// Google Tag Manager, this value is filled in automatically. However, some browser privacy restrictions may
        /// cause this field to be empty.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referrerUri")]
        public virtual string ReferrerUri { get; set; }

        /// <summary>
        /// Complete URL (window.location.href) of the user's current page. When using the client side event reporting
        /// with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000
        /// characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Detailed panel information associated with a user event.</summary>
    public class GoogleCloudDiscoveryengineV1betaPanelInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The display name of the panel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>Optional. The document IDs associated with this panel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaDocumentInfo> Documents { get; set; }

        /// <summary>Required. The panel ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("panelId")]
        public virtual string PanelId { get; set; }

        /// <summary>
        /// The ordered position of the panel, if shown to the user with other panels. If set, then total_panels must
        /// also be set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("panelPosition")]
        public virtual System.Nullable<int> PanelPosition { get; set; }

        /// <summary>
        /// The total number of panels, including this one, shown to the user. Must be set if panel_position is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalPanels")]
        public virtual System.Nullable<int> TotalPanels { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request for pausing training of an engine.</summary>
    public class GoogleCloudDiscoveryengineV1betaPauseEngineRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata and configurations for a Google Cloud project in the service.</summary>
    public class GoogleCloudDiscoveryengineV1betaProject : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The timestamp when this project is created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. Full resource name of the project, for example `projects/{project}`. Note that when making
        /// requests, project number and project id are both acceptable, but the server will always respond in project
        /// number.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        private string _provisionCompletionTimeRaw;

        private object _provisionCompletionTime;

        /// <summary>
        /// Output only. The timestamp when this project is successfully provisioned. Empty value means this project is
        /// still provisioning and is not ready for use.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("provisionCompletionTime")]
        public virtual string ProvisionCompletionTimeRaw
        {
            get => _provisionCompletionTimeRaw;
            set
            {
                _provisionCompletionTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _provisionCompletionTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="ProvisionCompletionTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use ProvisionCompletionTimeDateTimeOffset instead.")]
        public virtual object ProvisionCompletionTime
        {
            get => _provisionCompletionTime;
            set
            {
                _provisionCompletionTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _provisionCompletionTime = value;
            }
        }

        /// <summary>
        /// <seealso cref="System.DateTimeOffset"/> representation of <see cref="ProvisionCompletionTimeRaw"/>.
        /// </summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? ProvisionCompletionTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(ProvisionCompletionTimeRaw);
            set => ProvisionCompletionTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Output only. A map of terms of services. The key is the `id` of ServiceTerms.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceTermsMap")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1betaProjectServiceTerms> ServiceTermsMap { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata about the terms of service.</summary>
    public class GoogleCloudDiscoveryengineV1betaProjectServiceTerms : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _acceptTimeRaw;

        private object _acceptTime;

        /// <summary>The last time when the project agreed to the terms of service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("acceptTime")]
        public virtual string AcceptTimeRaw
        {
            get => _acceptTimeRaw;
            set
            {
                _acceptTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _acceptTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="AcceptTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use AcceptTimeDateTimeOffset instead.")]
        public virtual object AcceptTime
        {
            get => _acceptTime;
            set
            {
                _acceptTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _acceptTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="AcceptTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? AcceptTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(AcceptTimeRaw);
            set => AcceptTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _declineTimeRaw;

        private object _declineTime;

        /// <summary>The last time when the project declined or revoked the agreement to terms of service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("declineTime")]
        public virtual string DeclineTimeRaw
        {
            get => _declineTimeRaw;
            set
            {
                _declineTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _declineTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="DeclineTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use DeclineTimeDateTimeOffset instead.")]
        public virtual object DeclineTime
        {
            get => _declineTime;
            set
            {
                _declineTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _declineTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="DeclineTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? DeclineTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(DeclineTimeRaw);
            set => DeclineTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// The unique identifier of this terms of service. Available terms: * `GA_DATA_USE_TERMS`: [Terms for data
        /// use](https://cloud.google.com/retail/data-use-terms). When using this as `id`, the acceptable version to
        /// provide is `2022-11-23`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Whether the project has accepted/rejected the service terms or it is still pending.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>
        /// The version string of the terms of service. For acceptable values, see the comments for id above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata associated with a project provision operation.</summary>
    public class GoogleCloudDiscoveryengineV1betaProvisionProjectMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request for ProjectService.ProvisionProject method.</summary>
    public class GoogleCloudDiscoveryengineV1betaProvisionProjectRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Set to `true` to specify that caller has read and would like to give consent to the [Terms for
        /// data use](https://cloud.google.com/retail/data-use-terms).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("acceptDataUseTerms")]
        public virtual System.Nullable<bool> AcceptDataUseTerms { get; set; }

        /// <summary>
        /// Required. The version of the [Terms for data use](https://cloud.google.com/retail/data-use-terms) that
        /// caller has read and would like to give consent to. Acceptable version is `2022-11-23`, and this may change
        /// over time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataUseTermsVersion")]
        public virtual string DataUseTermsVersion { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for CompletionService.PurgeCompletionSuggestions method.</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeCompletionSuggestionsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeDocuments operation. This will be returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeDocumentsMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>Count of entries that encountered errors while processing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureCount")]
        public virtual System.Nullable<long> FailureCount { get; set; }

        /// <summary>Count of entries that were ignored as entries were not found.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoredCount")]
        public virtual System.Nullable<long> IgnoredCount { get; set; }

        /// <summary>Count of entries that were deleted successfully.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("successCount")]
        public virtual System.Nullable<long> SuccessCount { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for DocumentService.PurgeDocuments method.</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The desired location of errors incurred during the purge.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaPurgeErrorConfig ErrorConfig { get; set; }

        /// <summary>
        /// Required. Filter matching documents to purge. Only currently supported value is `*` (all items).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// Actually performs the purge. If `force` is set to false, return the expected purge count without deleting
        /// any documents.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("force")]
        public virtual System.Nullable<bool> Force { get; set; }

        /// <summary>
        /// Cloud Storage location for the input content. Supported `data_schema`: * `document_id`: One valid
        /// Document.id per line.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsSource")]
        public virtual GoogleCloudDiscoveryengineV1betaGcsSource GcsSource { get; set; }

        /// <summary>Inline source for the input content for purge.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequestInlineSource InlineSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The inline source for the input config for DocumentService.PurgeDocuments method.</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeDocumentsRequestInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. A list of full resource name of documents to purge. In the format
        /// `projects/*/locations/*/collections/*/dataStores/*/branches/*/documents/*`. Recommended max of 100 items.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documents")]
        public virtual System.Collections.Generic.IList<string> Documents { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for DocumentService.PurgeDocuments method. If the long running operation is successfully done,
    /// then this message is returned by the google.longrunning.Operations.response field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeDocumentsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The total count of documents purged as a result of the operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeCount")]
        public virtual System.Nullable<long> PurgeCount { get; set; }

        /// <summary>
        /// A sample of document names that will be deleted. Only populated if `force` is set to false. A max of 100
        /// names will be returned and the names are chosen at random.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeSample")]
        public virtual System.Collections.Generic.IList<string> PurgeSample { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Configuration of destination for Purge related errors.</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeErrorConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Cloud Storage prefix for purge errors. This must be an empty, existing Cloud Storage directory. Purge errors
        /// are written to sharded files in this directory, one per line, as a JSON-encoded `google.rpc.Status` message.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsPrefix")]
        public virtual string GcsPrefix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for IdentityMappingStoreService.PurgeIdentityMappings</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Filter matching identity mappings to purge. The eligible field for filtering is: * `update_time`: in ISO
        /// 8601 "zulu" format. * `external_id` Examples: * Deleting all identity mappings updated in a time range:
        /// `update_time &amp;gt; "2012-04-23T18:25:43.511Z" AND update_time &amp;lt; "2012-04-23T18:30:43.511Z"` *
        /// Deleting all identity mappings for a given external_id: `external_id = "id1"` * Deleting all identity
        /// mappings inside an identity mapping store: `*` The filtering fields are assumed to have an implicit AND.
        /// Should not be used with source. An error will be thrown, if both are provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// Actually performs the purge. If `force` is set to false, return the expected purge count without deleting
        /// any identity mappings. This field is only supported for purge with filter. For input source this field is
        /// ignored and data will be purged regardless of the value of this field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("force")]
        public virtual System.Nullable<bool> Force { get; set; }

        /// <summary>The inline source to purge identity mapping entries from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inlineSource")]
        public virtual GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequestInlineSource InlineSource { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The inline source to purge identity mapping entries from.</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeIdentityMappingsRequestInlineSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A maximum of 10000 entries can be purged at one time</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("identityMappingEntries")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaIdentityMappingEntry> IdentityMappingEntries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the PurgeSuggestionDenyListEntries operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for CompletionService.PurgeSuggestionDenyListEntries method.</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.PurgeSuggestionDenyListEntries method.</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeSuggestionDenyListEntriesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A sample of errors encountered while processing the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>Number of suggestion deny list entries purged.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purgeCount")]
        public virtual System.Nullable<long> PurgeCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for PurgeUserEvents method.</summary>
    public class GoogleCloudDiscoveryengineV1betaPurgeUserEventsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The filter string to specify the events to be deleted with a length limit of 5,000 characters. The
        /// eligible fields for filtering are: * `eventType`: Double quoted UserEvent.event_type string. * `eventTime`:
        /// in ISO 8601 "zulu" format. * `userPseudoId`: Double quoted string. Specifying this will delete all events
        /// associated with a visitor. * `userId`: Double quoted string. Specifying this will delete all events
        /// associated with a user. Note: This API only supports purging a max range of 30 days. Examples: * Deleting
        /// all events in a time range: `eventTime &amp;gt; "2012-04-23T18:25:43.511Z" eventTime &amp;lt;
        /// "2012-04-23T18:30:43.511Z"` * Deleting specific eventType in a time range: `eventTime &amp;gt;
        /// "2012-04-23T18:25:43.511Z" eventTime &amp;lt; "2012-04-23T18:30:43.511Z" eventType = "search"` * Deleting
        /// all events for a specific visitor in a time range: `eventTime &amp;gt; "2012-04-23T18:25:43.511Z" eventTime
        /// &amp;lt; "2012-04-23T18:30:43.511Z" userPseudoId = "visitor1024"` * Deleting the past 30 days of events
        /// inside a DataStore: `*` The filtering fields are assumed to have an implicit AND.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// The `force` field is currently not supported. Purge user event requests will permanently delete all
        /// purgeable events. Once the development is complete: If `force` is set to false, the method will return the
        /// expected purge count without deleting any user events. This field will default to false if not included in
        /// the request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("force")]
        public virtual System.Nullable<bool> Force { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes the metrics produced by the evaluation.</summary>
    public class GoogleCloudDiscoveryengineV1betaQualityMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Normalized discounted cumulative gain (NDCG) per document, at various top-k cutoff levels. NDCG measures the
        /// ranking quality, giving higher relevance to top results. Example (top-3): Suppose SampleQuery with three
        /// retrieved documents (D1, D2, D3) and binary relevance judgements (1 for relevant, 0 for not relevant):
        /// Retrieved: [D3 (0), D1 (1), D2 (1)] Ideal: [D1 (1), D2 (1), D3 (0)] Calculate NDCG@3 for each SampleQuery: *
        /// DCG@3: 0/log2(1+1) + 1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1)
        /// = 1.63 * NDCG@3: 1.13/1.63 = 0.693
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("docNdcg")]
        public virtual GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics DocNdcg { get; set; }

        /// <summary>
        /// Precision per document, at various top-k cutoff levels. Precision is the fraction of retrieved documents
        /// that are relevant. Example (top-5): * For a single SampleQuery, If 4 out of 5 retrieved documents in the
        /// top-5 are relevant, precision@5 = 4/5 = 0.8
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("docPrecision")]
        public virtual GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics DocPrecision { get; set; }

        /// <summary>
        /// Recall per document, at various top-k cutoff levels. Recall is the fraction of relevant documents retrieved
        /// out of all relevant documents. Example (top-5): * For a single SampleQuery, If 3 out of 5 relevant documents
        /// are retrieved in the top-5, recall@5 = 3/5 = 0.6
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("docRecall")]
        public virtual GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics DocRecall { get; set; }

        /// <summary>
        /// Normalized discounted cumulative gain (NDCG) per page, at various top-k cutoff levels. NDCG measures the
        /// ranking quality, giving higher relevance to top results. Example (top-3): Suppose SampleQuery with three
        /// retrieved pages (P1, P2, P3) and binary relevance judgements (1 for relevant, 0 for not relevant):
        /// Retrieved: [P3 (0), P1 (1), P2 (1)] Ideal: [P1 (1), P2 (1), P3 (0)] Calculate NDCG@3 for SampleQuery: *
        /// DCG@3: 0/log2(1+1) + 1/log2(2+1) + 1/log2(3+1) = 1.13 * Ideal DCG@3: 1/log2(1+1) + 1/log2(2+1) + 0/log2(3+1)
        /// = 1.63 * NDCG@3: 1.13/1.63 = 0.693
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageNdcg")]
        public virtual GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics PageNdcg { get; set; }

        /// <summary>
        /// Recall per page, at various top-k cutoff levels. Recall is the fraction of relevant pages retrieved out of
        /// all relevant pages. Example (top-5): * For a single SampleQuery, if 3 out of 5 relevant pages are retrieved
        /// in the top-5, recall@5 = 3/5 = 0.6
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageRecall")]
        public virtual GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics PageRecall { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Stores the metric values at specific top-k levels.</summary>
    public class GoogleCloudDiscoveryengineV1betaQualityMetricsTopkMetrics : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The top-1 value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top1")]
        public virtual System.Nullable<double> Top1 { get; set; }

        /// <summary>The top-10 value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top10")]
        public virtual System.Nullable<double> Top10 { get; set; }

        /// <summary>The top-3 value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top3")]
        public virtual System.Nullable<double> Top3 { get; set; }

        /// <summary>The top-5 value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top5")]
        public virtual System.Nullable<double> Top5 { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines a user inputed query.</summary>
    public class GoogleCloudDiscoveryengineV1betaQuery : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Unique Id for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryId")]
        public virtual string QueryId { get; set; }

        /// <summary>Plain text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for RankService.Rank method.</summary>
    public class GoogleCloudDiscoveryengineV1betaRankRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If true, the response will contain only record ID and score. By default, it is false, the response will
        /// contain record details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreRecordDetailsInResponse")]
        public virtual System.Nullable<bool> IgnoreRecordDetailsInResponse { get; set; }

        /// <summary>
        /// The identifier of the model to use. It is one of: * `semantic-ranker-512@latest`: Semantic ranking model
        /// with maxiumn input token size 512. It is set to `semantic-ranker-512@latest` by default if unspecified.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("model")]
        public virtual string Model { get; set; }

        /// <summary>The query to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; }

        /// <summary>Required. A list of records to rank. At most 200 records to rank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("records")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaRankingRecord> Records { get; set; }

        /// <summary>
        /// The number of results to return. If this is unset or no bigger than zero, returns all results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topN")]
        public virtual System.Nullable<int> TopN { get; set; }

        /// <summary>
        /// The user labels applied to a resource must meet the following requirements: * Each resource can have
        /// multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length
        /// of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a
        /// maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters,
        /// underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. *
        /// The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys
        /// must start with a lowercase letter or international character. See [Google Cloud
        /// Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for RankService.Rank method.</summary>
    public class GoogleCloudDiscoveryengineV1betaRankResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A list of records sorted by descending score.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("records")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaRankingRecord> Records { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Record message for RankService.Rank method.</summary>
    public class GoogleCloudDiscoveryengineV1betaRankingRecord : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The content of the record. Empty by default. At least one of title or content should be set otherwise an
        /// INVALID_ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>The unique ID to represent the record.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// The score of this record based on the given query and selected model. The score will be rounded to 2 decimal
        /// places. If the score is close to 0, it will be rounded to 0.0001 to avoid returning unset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("score")]
        public virtual System.Nullable<float> Score { get; set; }

        /// <summary>
        /// The title of the record. Empty by default. At least one of title or content should be set otherwise an
        /// INVALID_ARGUMENT error is thrown.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for Recommend method.</summary>
    public class GoogleCloudDiscoveryengineV1betaRecommendRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Filter for restricting recommendation results with a length limit of 5,000 characters. Currently, only
        /// filter expressions on the `filter_tags` attribute is supported. Examples: * `(filter_tags: ANY("Red",
        /// "Blue") OR filter_tags: ANY("Hot", "Cold"))` * `(filter_tags: ANY("Red", "Blue")) AND NOT (filter_tags:
        /// ANY("Green"))` If `attributeFilteringSyntax` is set to true under the `params` field, then attribute-based
        /// expressions are expected instead of the above described tag-based syntax. Examples: * (language: ANY("en",
        /// "es")) AND NOT (categories: ANY("Movie")) * (available: true) AND (language: ANY("en", "es")) OR
        /// (categories: ANY("Movie")) If your filter blocks all results, the API returns generic (unfiltered) popular
        /// Documents. If you only want results strictly matching the filters, set `strictFiltering` to `true` in
        /// RecommendRequest.params to receive empty results instead. Note that the API never returns Documents with
        /// `storageStatus` as `EXPIRED` or `DELETED` regardless of filter choices.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>
        /// Maximum number of results to return. Set this property to the number of recommendation results needed. If
        /// zero, the service chooses a reasonable default. The maximum allowed value is 100. Values above 100 are set
        /// to 100.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageSize")]
        public virtual System.Nullable<int> PageSize { get; set; }

        /// <summary>
        /// Additional domain specific parameters for the recommendations. Allowed values: * `returnDocument`: Boolean.
        /// If set to `true`, the associated Document object is returned in
        /// RecommendResponse.RecommendationResult.document. * `returnScore`: Boolean. If set to true, the
        /// recommendation score corresponding to each returned Document is set in
        /// RecommendResponse.RecommendationResult.metadata. The given score indicates the probability of a Document
        /// conversion given the user's context and history. * `strictFiltering`: Boolean. True by default. If set to
        /// `false`, the service returns generic (unfiltered) popular Documents instead of empty if your filter blocks
        /// all recommendation results. * `diversityLevel`: String. Default empty. If set to be non-empty, then it needs
        /// to be one of: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` * `auto-diversity`
        /// This gives request-level control and adjusts recommendation results based on Document category. *
        /// `attributeFilteringSyntax`: Boolean. False by default. If set to true, the `filter` field is interpreted
        /// according to the new, attribute-based syntax.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("params")]
        public virtual System.Collections.Generic.IDictionary<string, object> Params__ { get; set; }

        /// <summary>
        /// Required. Context about the user, what they are looking at and what action they took to trigger the
        /// Recommend request. Note that this user event detail won't be ingested to userEvent logs. Thus, a separate
        /// userEvent write request is required for event logging. Don't set UserEvent.user_pseudo_id or
        /// UserEvent.user_info.user_id to the same fixed ID for different users. If you are trying to receive
        /// non-personalized recommendations (not recommended; this can negatively impact model performance), instead
        /// set UserEvent.user_pseudo_id to a random unique ID and leave UserEvent.user_info.user_id unset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userEvent")]
        public virtual GoogleCloudDiscoveryengineV1betaUserEvent UserEvent { get; set; }

        /// <summary>
        /// The user labels applied to a resource must meet the following requirements: * Each resource can have
        /// multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length
        /// of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a
        /// maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters,
        /// underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. *
        /// The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys
        /// must start with a lowercase letter or international character. See [Requirements for
        /// labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>
        /// Use validate only mode for this recommendation query. If set to `true`, a fake model is used that returns
        /// arbitrary Document IDs. Note that the validate only mode should only be used for testing the API, or if the
        /// model is not ready.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validateOnly")]
        public virtual System.Nullable<bool> ValidateOnly { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for Recommend method.</summary>
    public class GoogleCloudDiscoveryengineV1betaRecommendResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A unique attribution token. This should be included in the UserEvent logs resulting from this
        /// recommendation, which enables accurate attribution of recommendation model performance.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributionToken")]
        public virtual string AttributionToken { get; set; }

        /// <summary>
        /// IDs of documents in the request that were missing from the default Branch associated with the requested
        /// ServingConfig.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("missingIds")]
        public virtual System.Collections.Generic.IList<string> MissingIds { get; set; }

        /// <summary>
        /// A list of recommended Documents. The order represents the ranking (from the most relevant Document to the
        /// least).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("results")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult> Results { get; set; }

        /// <summary>True if RecommendRequest.validate_only was set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("validateOnly")]
        public virtual System.Nullable<bool> ValidateOnly { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>RecommendationResult represents a generic recommendation result with associated metadata.</summary>
    public class GoogleCloudDiscoveryengineV1betaRecommendResponseRecommendationResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Set if `returnDocument` is set to true in RecommendRequest.params.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual GoogleCloudDiscoveryengineV1betaDocument Document { get; set; }

        /// <summary>Resource ID of the recommended Document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// Additional Document metadata or annotations. Possible values: * `score`: Recommendation score in double
        /// value. Is set if `returnScore` is set to true in RecommendRequest.params.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SiteSearchEngineService.RecrawlUris method.</summary>
    public class GoogleCloudDiscoveryengineV1betaRecrawlUrisRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. Credential id to use for crawling.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteCredential")]
        public virtual string SiteCredential { get; set; }

        /// <summary>
        /// Required. List of URIs to crawl. At most 10K URIs are supported, otherwise an INVALID_ARGUMENT error is
        /// thrown. Each URI should match at least one TargetSite in `site_search_engine`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uris")]
        public virtual System.Collections.Generic.IList<string> Uris { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CrawlRateManagementService.RemoveDedicatedCrawlRate operation. This will
    /// be returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Request message for CrawlRateManagementService.RemoveDedicatedCrawlRate method. The user can remove the
    /// dedicated crawl rate for a crawl_rate_scope they own, and Google will fall back to organic crawl, and the crawl
    /// rate will be determined by Google.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The scope of the crawl rate change. Currently, only domain and host name are supported. A domain
        /// name example: `example.com`. A host name example: `www.example.com`. Please do not include `/` in the domain
        /// or host name.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crawlRateScope")]
        public virtual string CrawlRateScope { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for CrawlRateManagementService.RemoveDedicatedCrawlRate method. It simply returns the state of
    /// the response, and an error message if the state is FAILED.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaRemoveDedicatedCrawlRateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Errors from service when handling the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>Output only. The state of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for CompletionService.RemoveSuggestion method.</summary>
    public class GoogleCloudDiscoveryengineV1betaRemoveSuggestionRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Remove all search history suggestions for the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("removeAllSearchHistorySuggestions")]
        public virtual System.Nullable<bool> RemoveAllSearchHistorySuggestions { get; set; }

        private string _removeTimeRaw;

        private object _removeTime;

        /// <summary>
        /// Optional. Time at which the suggestion was removed. If not set, the current time will be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("removeTime")]
        public virtual string RemoveTimeRaw
        {
            get => _removeTimeRaw;
            set
            {
                _removeTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _removeTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="RemoveTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use RemoveTimeDateTimeOffset instead.")]
        public virtual object RemoveTime
        {
            get => _removeTime;
            set
            {
                _removeTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _removeTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="RemoveTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? RemoveTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(RemoveTimeRaw);
            set => RemoveTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The search history suggestion to be removed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchHistorySuggestion")]
        public virtual string SearchHistorySuggestion { get; set; }

        /// <summary>
        /// Optional. Information about the end user. This should be the same identifier information as
        /// UserEvent.user_info and SearchRequest.user_info.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaUserInfo UserInfo { get; set; }

        /// <summary>
        /// Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP
        /// cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier
        /// should not change if the visitor logs in or out of the website. This field should NOT have a fixed value
        /// such as `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and
        /// SearchRequest.user_pseudo_id. The field must be a UTF-8 encoded string with a length limit of 128.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for CompletionService.RemoveSuggestion method.</summary>
    public class GoogleCloudDiscoveryengineV1betaRemoveSuggestionResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines a reply message to user.</summary>
    public class GoogleCloudDiscoveryengineV1betaReply : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>References in the reply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("references")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaReplyReference> References { get; set; }

        /// <summary>DEPRECATED: use `summary` instead. Text reply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reply")]
        public virtual string Reply { get; set; }

        /// <summary>Summary based on search results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseSummary Summary { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines reference in reply.</summary>
    public class GoogleCloudDiscoveryengineV1betaReplyReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Anchor text.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("anchorText")]
        public virtual string AnchorText { get; set; }

        /// <summary>Anchor text end index.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("end")]
        public virtual System.Nullable<int> End { get; set; }

        /// <summary>Anchor text start index.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual System.Nullable<int> Start { get; set; }

        /// <summary>URI link reference.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request for resuming training of an engine.</summary>
    public class GoogleCloudDiscoveryengineV1betaResumeEngineRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Safety rating corresponding to the generated content.</summary>
    public class GoogleCloudDiscoveryengineV1betaSafetyRating : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Output only. Indicates whether the content was filtered out because of this rating.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blocked")]
        public virtual System.Nullable<bool> Blocked { get; set; }

        /// <summary>Output only. Harm category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category { get; set; }

        /// <summary>Output only. Harm probability levels in the content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("probability")]
        public virtual string Probability { get; set; }

        /// <summary>Output only. Harm probability score.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("probabilityScore")]
        public virtual System.Nullable<float> ProbabilityScore { get; set; }

        /// <summary>Output only. Harm severity levels in the content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("severity")]
        public virtual string Severity { get; set; }

        /// <summary>Output only. Harm severity score.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("severityScore")]
        public virtual System.Nullable<float> SeverityScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Sample Query captures metadata to be used for evaluation.</summary>
    public class GoogleCloudDiscoveryengineV1betaSampleQuery : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the SampleQuery was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Identifier. The full resource name of the sample query, in the format of
        /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}/sampleQueries/{sample_query}`.
        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The query entry.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryEntry")]
        public virtual GoogleCloudDiscoveryengineV1betaSampleQueryQueryEntry QueryEntry { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Query Entry captures metadata to be used for search evaluation.</summary>
    public class GoogleCloudDiscoveryengineV1betaSampleQueryQueryEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; }

        /// <summary>List of targets for the query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targets")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSampleQueryQueryEntryTarget> Targets { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines the parameters of the query's expected outcome.</summary>
    public class GoogleCloudDiscoveryengineV1betaSampleQueryQueryEntryTarget : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Expected page numbers of the target. Each page number must be non negative.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageNumbers")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> PageNumbers { get; set; }

        /// <summary>Relevance score of the target.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("score")]
        public virtual System.Nullable<double> Score { get; set; }

        /// <summary>
        /// Expected uri of the target. This field must be a UTF-8 encoded string with a length limit of 2048
        /// characters. Example of valid uris: `https://example.com/abc`, `gcs://example/example.pdf`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A SampleQuerySet is the parent resource of SampleQuery, and contains the configurations shared by all
    /// SampleQuery under it.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSampleQuerySet : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. Timestamp the SampleQuerySet was created at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The description of the SampleQuerySet.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Required. The sample query set display name. This field must be a UTF-8 encoded string with a length limit
        /// of 128 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Identifier. The full resource name of the SampleQuerySet, in the format of
        /// `projects/{project}/locations/{location}/sampleQuerySets/{sample_query_set}`. This field must be a UTF-8
        /// encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines the structure and layout of a type of document data.</summary>
    public class GoogleCloudDiscoveryengineV1betaSchema : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The JSON representation of the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("jsonSchema")]
        public virtual string JsonSchema { get; set; }

        /// <summary>
        /// Immutable. The full resource name of the schema, in the format of
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/schemas/{schema}`.
        /// This field must be a UTF-8 encoded string with a length limit of 1024 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The structured representation of the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structSchema")]
        public virtual System.Collections.Generic.IDictionary<string, object> StructSchema { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Detailed search information.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the
        /// products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative,
        /// an `INVALID_ARGUMENT` is returned. This can only be set for `search` events. Other event types should not
        /// set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual System.Nullable<int> Offset { get; set; }

        /// <summary>
        /// The order in which products are returned, if applicable. See SearchRequest.order_by for definition and
        /// syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an
        /// `INVALID_ARGUMENT` error is returned. This can only be set for `search` events. Other event types should not
        /// set this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; }

        /// <summary>
        /// The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string
        /// with a length limit of 5,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. At least one of
        /// search_query or PageInfo.page_category is required for `search` events. Other event types should not set
        /// this field. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchQuery")]
        public virtual string SearchQuery { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Promotion proto includes uri and other helping information to display the promotion.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchLinkPromotion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The Promotion description. Maximum length: 200 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Optional. The enabled promotion will be returned for any serving configs associated with the parent of the
        /// control this promotion is attached to. This flag is used for basic site search only.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>Optional. The promotion thumbnail image url.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageUri")]
        public virtual string ImageUri { get; set; }

        /// <summary>Required. The title of the promotion. Maximum length: 160 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>Required. The URL for the page the user wants to promote.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SearchService.Search method.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Boost specification to boost certain documents. For more information on boosting, see
        /// [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec BoostSpec { get; set; }

        /// <summary>
        /// The branch resource name, such as
        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/branches/0`. Use
        /// `default_branch` as the branch ID or leave this field empty, to search documents under the default branch.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("branch")]
        public virtual string Branch { get; set; }

        /// <summary>
        /// The default filter that is applied when a user performs a search without checking any filters on the search
        /// page. The filter applied to every search request when quality improvement such as query expansion is needed.
        /// In the case a query does not have a sufficient amount of results this filter will be used to determine
        /// whether or not to enable the query expansion flow. The original filter will still be used for the query
        /// expanded search. This field is strongly recommended to achieve high search quality. For more information
        /// about filter syntax, see SearchRequest.filter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canonicalFilter")]
        public virtual string CanonicalFilter { get; set; }

        /// <summary>A specification for configuring the behavior of content search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentSearchSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec ContentSearchSpec { get; set; }

        /// <summary>
        /// Specs defining DataStores to filter on in a search call and configurations for those data stores. This is
        /// only considered for Engines with multiple data stores. For engines with a single data store, the specs
        /// directly under SearchRequest should be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStoreSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec> DataStoreSpecs { get; set; }

        /// <summary>
        /// Uses the provided embedding to do additional semantic document retrieval. The retrieval is based on the dot
        /// product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document embedding that is provided in
        /// SearchRequest.EmbeddingSpec.EmbeddingVector.field_path. If
        /// SearchRequest.EmbeddingSpec.EmbeddingVector.field_path is not provided, it will use
        /// ServingConfig.EmbeddingConfig.field_path.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embeddingSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec EmbeddingSpec { get; set; }

        /// <summary>
        /// Facet specifications for faceted search. If empty, no facets are returned. A maximum of 100 values are
        /// allowed. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("facetSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec> FacetSpecs { get; set; }

        /// <summary>
        /// The filter syntax consists of an expression language for constructing a predicate from one or more fields of
        /// the documents being filtered. Filter expression is case-sensitive. If this field is unrecognizable, an
        /// `INVALID_ARGUMENT` is returned. Filtering in Vertex AI Search is done by mapping the LHS filter key to a key
        /// property defined in the Vertex AI Search backend -- this mapping is defined by the customer in their schema.
        /// For example a media customer might have a field 'name' in their schema. In this case the filter would look
        /// like this: filter --&amp;gt; name:'ANY("king kong")' For more information about filtering including syntax
        /// and filter operators, see
        /// [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>Raw image query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageQuery")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery ImageQuery { get; set; }

        /// <summary>
        /// The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see [Standard
        /// fields](https://cloud.google.com/apis/design/standard_fields). This field helps to better interpret the
        /// query. If a value isn't specified, the query language code is automatically detected, which may not be
        /// accurate.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>
        /// If `naturalLanguageQueryUnderstandingSpec` is not specified, no additional natural language query
        /// understanding will be done.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("naturalLanguageQueryUnderstandingSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec NaturalLanguageQueryUnderstandingSpec { get; set; }

        /// <summary>
        /// A 0-indexed integer that specifies the current offset (that is, starting result location, amongst the
        /// Documents deemed by the API as relevant) in search results. This field is only considered if page_token is
        /// unset. If this field is negative, an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual System.Nullable<int> Offset { get; set; }

        /// <summary>
        /// The maximum number of results to return for OneBox. This applies to each OneBox type individually. Default
        /// number is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oneBoxPageSize")]
        public virtual System.Nullable<int> OneBoxPageSize { get; set; }

        /// <summary>
        /// The order in which documents are returned. Documents can be ordered by a field in an Document object. Leave
        /// it unset if ordered by relevance. `order_by` expression is case-sensitive. For more information on ordering
        /// the website search results, see [Order web search
        /// results](https://cloud.google.com/generative-ai-app-builder/docs/order-web-search-results). For more
        /// information on ordering the healthcare search results, see [Order healthcare search
        /// results](https://cloud.google.com/generative-ai-app-builder/docs/order-hc-results). If this field is
        /// unrecognizable, an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; }

        /// <summary>
        /// Maximum number of Documents to return. The maximum allowed value depends on the data type. Values above the
        /// maximum value are coerced to the maximum value. * Websites with basic indexing: Default `10`, Maximum `25`.
        /// * Websites with advanced indexing: Default `25`, Maximum `50`. * Other: Default `50`, Maximum `100`. If this
        /// field is negative, an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageSize")]
        public virtual System.Nullable<int> PageSize { get; set; }

        /// <summary>
        /// A page token received from a previous SearchService.Search call. Provide this to retrieve the subsequent
        /// page. When paginating, all other parameters provided to SearchService.Search must match the call that
        /// provided the page token. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageToken")]
        public virtual string PageToken { get; set; }

        /// <summary>
        /// Additional search parameters. For public website search only, supported values are: * `user_country_code`:
        /// string. Default empty. If set to non-empty, results are restricted or boosted based on the location
        /// provided. For example, `user_country_code: "au"` For available codes see [Country
        /// Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) * `search_type`:
        /// double. Default empty. Enables non-webpage searching depending on the value. The only valid non-default
        /// value is 1, which enables image searching. For example, `search_type: 1`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("params")]
        public virtual System.Collections.Generic.IDictionary<string, object> Params__ { get; set; }

        /// <summary>
        /// The specification for personalization. Notice that if both ServingConfig.personalization_spec and
        /// SearchRequest.personalization_spec are set, SearchRequest.personalization_spec overrides
        /// ServingConfig.personalization_spec.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("personalizationSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec PersonalizationSpec { get; set; }

        /// <summary>Raw search query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual string Query { get; set; }

        /// <summary>
        /// The query expansion specification that specifies the conditions under which query expansion occurs.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryExpansionSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec QueryExpansionSpec { get; set; }

        /// <summary>
        /// The ranking expression controls the customized ranking on retrieval documents. This overrides
        /// ServingConfig.ranking_expression. The syntax and supported features depend on the ranking_expression_backend
        /// value. If ranking_expression_backend is not provided, it defaults to BYOE. === BYOE === If ranking
        /// expression is not provided or set to BYOE, it should be a single function or multiple functions that are
        /// joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double *
        /// relevance_score * double * dotProduct(embedding_field_path) Function variables: * `relevance_score`:
        /// pre-defined keywords, used for measure relevance between query and document. * `embedding_field_path`: the
        /// document embedding field used with query embedding vector. * `dotProduct`: embedding function between
        /// embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding
        /// field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 *
        /// dotProduct(doc_embedding)`. === CLEARBOX === If ranking expression is set to CLEARBOX, the following
        /// expression types (and combinations of those chained using + or * operators) are supported: * double * signal
        /// * log(signal) * exp(signal) * rr(signal, double &amp;gt; 0) -- reciprocal rank transformation with second
        /// argument being a denominator constant. * is_nan(signal) -- returns 0 if signal is NaN, 1 otherwise. *
        /// fill_nan(signal1, signal2 | double) -- if signal1 is NaN, returns signal2 | double, else returns signal1.
        /// Examples: * 0.2 * gecko_score + 0.8 * log(bm25_score) * 0.2 * exp(fill_nan(gecko_score, 0)) + 0.3 *
        /// is_nan(bm25_score) * 0.2 * rr(gecko_score, 16) + 0.8 * rr(bm25_score, 32) The following signals are
        /// supported: * gecko_score -- semantic similarity adjustment * bm25_score -- keyword match adjustment *
        /// jetstream_score -- semantic relevance adjustment * pctr_rank -- predicted conversion rate adjustment as a
        /// rank * freshness_rank -- freshness adjustment as a rank * base_rank -- the default rank of the result
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rankingExpression")]
        public virtual string RankingExpression { get; set; }

        /// <summary>Optional. The backend to use for the ranking expression evaluation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rankingExpressionBackend")]
        public virtual string RankingExpressionBackend { get; set; }

        /// <summary>
        /// The Unicode country/region code (CLDR) of a location, such as "US" and "419". For more information, see
        /// [Standard fields](https://cloud.google.com/apis/design/standard_fields). If set, then results will be
        /// boosted based on the region_code provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCode")]
        public virtual string RegionCode { get; set; }

        /// <summary>
        /// The relevance threshold of the search results. Default to Google defined threshold, leveraging a balance of
        /// precision and recall to deliver both highly accurate results and comprehensive coverage of relevant
        /// information.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relevanceThreshold")]
        public virtual string RelevanceThreshold { get; set; }

        /// <summary>Whether to turn on safe search. This is only supported for website search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safeSearch")]
        public virtual System.Nullable<bool> SafeSearch { get; set; }

        /// <summary>Search as you type configuration. Only supported for the IndustryVertical.MEDIA vertical.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchAsYouTypeSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec SearchAsYouTypeSpec { get; set; }

        /// <summary>
        /// Required. The resource name of the Search serving config, such as
        /// `projects/*/locations/global/collections/default_collection/engines/*/servingConfigs/default_serving_config`,
        /// or
        /// `projects/*/locations/global/collections/default_collection/dataStores/default_data_store/servingConfigs/default_serving_config`.
        /// This field is used to identify the serving configuration name, set of models used to make the search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("servingConfig")]
        public virtual string ServingConfig { get; set; }

        /// <summary>
        /// The session resource name. Optional. Session allows users to do multi-turn /search API calls or coordination
        /// between /search API calls and /answer API calls. Example #1 (multi-turn /search API calls): 1. Call /search
        /// API with the auto-session mode (see below). 2. Call /search API with the session ID generated in the first
        /// call. Here, the previous search query gets considered in query standing. I.e., if the first query is "How
        /// did Alphabet do in 2022?" and the current query is "How about 2023?", the current query will be interpreted
        /// as "How did Alphabet do in 2023?". Example #2 (coordination between /search API calls and /answer API
        /// calls): 1. Call /search API with the auto-session mode (see below). 2. Call /answer API with the session ID
        /// generated in the first call. Here, the answer generation happens in the context of the search results from
        /// the first search call. Auto-session mode: when `projects/.../sessions/-` is used, a new session gets
        /// automatically created. Otherwise, users can use the create-session API to create a session manually.
        /// Multi-turn Search feature is currently at private GA stage. Please use v1alpha or v1beta version instead
        /// before we launch this feature to public GA. Or ask for allowlisting through Google Support team.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("session")]
        public virtual string Session { get; set; }

        /// <summary>Session specification. Can be used only when `session` is set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec SessionSpec { get; set; }

        /// <summary>
        /// The spell correction specification that specifies the mode under which spell correction takes effect.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spellCorrectionSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec SpellCorrectionSpec { get; set; }

        /// <summary>
        /// Information about the end user. Highly recommended for analytics and personalization. UserInfo.user_agent is
        /// used to deduce `device_type` for analytics.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaUserInfo UserInfo { get; set; }

        /// <summary>
        /// The user labels applied to a resource must meet the following requirements: * Each resource can have
        /// multiple labels, up to a maximum of 64. * Each label must be a key-value pair. * Keys have a minimum length
        /// of 1 character and a maximum length of 63 characters and cannot be empty. Values can be empty and have a
        /// maximum length of 63 characters. * Keys and values can contain only lowercase letters, numeric characters,
        /// underscores, and dashes. All characters must use UTF-8 encoding, and international characters are allowed. *
        /// The key portion of a label must be unique. However, you can use the same key with multiple resources. * Keys
        /// must start with a lowercase letter or international character. See [Google Cloud
        /// Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements) for more
        /// details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLabels")]
        public virtual System.Collections.Generic.IDictionary<string, string> UserLabels { get; set; }

        /// <summary>
        /// A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which
        /// should be able to uniquely identify a visitor on a single device. This unique identifier should not change
        /// if the visitor logs in or out of the website. This field should NOT have a fixed value such as
        /// `unknown_visitor`. This should be the same identifier as UserEvent.user_pseudo_id and
        /// CompleteQueryRequest.user_pseudo_id The field must be a UTF-8 encoded string with a length limit of 128
        /// characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Boost specification to boost certain documents.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores
        /// from these specifications are all applied and combined in a non-linear way. Maximum number of specifications
        /// is 20.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conditionBoostSpecs")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec> ConditionBoostSpecs { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Boost applies to documents which match a condition.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0.
        /// Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted
        /// document will be the top result at all times, nor that other documents will be excluded. Results could still
        /// be shown even when none of them matches the condition. And results that are significantly more relevant to
        /// the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the
        /// document a big demotion. However, results that are deeply relevant might still be shown. The document will
        /// have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0
        /// means no boost applied. The boosting condition is ignored. Only one of the (condition, boost) combination or
        /// the boost_control_spec below are set. If both are set then the global boost is ignored and the more
        /// fine-grained boost_control_spec is applied.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boost")]
        public virtual System.Nullable<float> Boost { get; set; }

        /// <summary>Complex specification for custom ranking based on customer defined attribute value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostControlSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec BoostControlSpec { get; set; }

        /// <summary>
        /// An expression which specifies a boost condition. The syntax and supported fields are the same as a filter
        /// expression. See SearchRequest.filter for detail syntax and limitations. Examples: * To boost documents with
        /// document ID "doc_1" or "doc_2", and color "Red" or "Blue": `(document_id: ANY("doc_1", "doc_2")) AND (color:
        /// ANY("Red", "Blue"))`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specification for custom ranking based on customer specified attribute value. It provides more controls for
    /// customized ranking than the simple (condition, boost) combination above.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The attribute type to be used to determine the boost amount. The attribute value can be derived from the
        /// field value of the specified field_name. In the case of numerical it is straightforward i.e. attribute_value
        /// = numerical_field_value. In the case of freshness however, attribute_value = (time.now() -
        /// datetime_field_value).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeType")]
        public virtual string AttributeType { get; set; }

        /// <summary>
        /// The control points used to define the curve. The monotonic function (defined through the interpolation_type
        /// above) passes through the control points listed here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("controlPoints")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint> ControlPoints { get; set; }

        /// <summary>The name of the field whose value will be used to determine the boost amount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>The interpolation type to be applied to connect the control points listed below.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interpolationType")]
        public virtual string InterpolationType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The control points used to define the curve. The curve defined through these control points can only be
    /// monotonically increasing or decreasing(constant values are acceptable).
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpecConditionBoostSpecBoostControlSpecControlPoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Can be one of: 1. The numerical field value. 2. The duration spec for freshness: The value must be formatted
        /// as an XSD `dayTimeDuration` value (a restricted subset of an ISO 8601 duration value). The pattern for this
        /// is: `nDnM]`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeValue")]
        public virtual string AttributeValue { get; set; }

        /// <summary>
        /// The value between -1 to 1 by which to boost the score if the attribute_value evaluates to the value
        /// specified above.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostAmount")]
        public virtual System.Nullable<float> BoostAmount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring the behavior of content search.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies the chunk spec to be returned from the search response. Only available if the
        /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec ChunkSpec { get; set; }

        /// <summary>
        /// If there is no extractive_content_spec provided, there will be no extractive answer in the search response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extractiveContentSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec ExtractiveContentSpec { get; set; }

        /// <summary>
        /// Specifies the search result mode. If unspecified, the search result mode defaults to `DOCUMENTS`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResultMode")]
        public virtual string SearchResultMode { get; set; }

        /// <summary>If `snippetSpec` is not specified, snippets are not included in the search response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippetSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec SnippetSpec { get; set; }

        /// <summary>If `summarySpec` is not specified, summaries are not included in the search response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec SummarySpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies the chunk spec to be returned from the search response. Only available if the
    /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecChunkSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The number of next chunks to be returned of the current chunk. The maximum allowed value is 3. If not
        /// specified, no next chunks will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numNextChunks")]
        public virtual System.Nullable<int> NumNextChunks { get; set; }

        /// <summary>
        /// The number of previous chunks to be returned of the current chunk. The maximum allowed value is 3. If not
        /// specified, no previous chunks will be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numPreviousChunks")]
        public virtual System.Nullable<int> NumPreviousChunks { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring the extractive content in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecExtractiveContentSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The maximum number of extractive answers returned in each search result. An extractive answer is a verbatim
        /// answer extracted from the original document, which provides a precise and contextually relevant answer to
        /// the search query. If the number of matching answers is less than the `max_extractive_answer_count`, return
        /// all of the answers. Otherwise, return the `max_extractive_answer_count`. At most five answers are returned
        /// for each SearchResult.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxExtractiveAnswerCount")]
        public virtual System.Nullable<int> MaxExtractiveAnswerCount { get; set; }

        /// <summary>
        /// The max number of extractive segments returned in each search result. Only applied if the DataStore is set
        /// to DataStore.ContentConfig.CONTENT_REQUIRED or DataStore.solution_types is SOLUTION_TYPE_CHAT. An extractive
        /// segment is a text segment extracted from the original document that is relevant to the search query, and, in
        /// general, more verbose than an extractive answer. The segment could then be used as input for LLMs to
        /// generate summaries and answers. If the number of matching segments is less than
        /// `max_extractive_segment_count`, return all of the segments. Otherwise, return the
        /// `max_extractive_segment_count`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxExtractiveSegmentCount")]
        public virtual System.Nullable<int> MaxExtractiveSegmentCount { get; set; }

        /// <summary>Return at most `num_next_segments` segments after each selected segments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numNextSegments")]
        public virtual System.Nullable<int> NumNextSegments { get; set; }

        /// <summary>
        /// Specifies whether to also include the adjacent from each selected segments. Return at most
        /// `num_previous_segments` segments before each selected segments.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numPreviousSegments")]
        public virtual System.Nullable<int> NumPreviousSegments { get; set; }

        /// <summary>
        /// Specifies whether to return the confidence score from the extractive segments in each search result. This
        /// feature is available only for new or allowlisted data stores. To allowlist your data store, contact your
        /// Customer Engineer. The default value is `false`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnExtractiveSegmentScore")]
        public virtual System.Nullable<bool> ReturnExtractiveSegmentScore { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring snippets in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSnippetSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// [DEPRECATED] This field is deprecated. To control snippet return, use `return_snippet` field. For backwards
        /// compatibility, we will return snippet if max_snippet_count &amp;gt; 0.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxSnippetCount")]
        public virtual System.Nullable<int> MaxSnippetCount { get; set; }

        /// <summary>[DEPRECATED] This field is deprecated and will have no affect on the snippet.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceOnly")]
        public virtual System.Nullable<bool> ReferenceOnly { get; set; }

        /// <summary>
        /// If `true`, then return snippet. If no snippet can be generated, we return "No snippet is available for this
        /// page." A `snippet_status` with `SUCCESS` or `NO_SNIPPET_AVAILABLE` will also be returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("returnSnippet")]
        public virtual System.Nullable<bool> ReturnSnippet { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A specification for configuring a summary returned in a search response.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies whether to filter out adversarial queries. The default value is `false`. Google employs
        /// search-query classification to detect adversarial queries. No summary is returned if the search query is
        /// classified as an adversarial query. For example, a user might ask a question regarding negative comments
        /// about the company or submit a query designed to generate unsafe, policy-violating output. If this field is
        /// set to `true`, we skip generating summaries for adversarial queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreAdversarialQuery")]
        public virtual System.Nullable<bool> IgnoreAdversarialQuery { get; set; }

        /// <summary>
        /// Optional. Specifies whether to filter out jail-breaking queries. The default value is `false`. Google
        /// employs search-query classification to detect jail-breaking queries. No summary is returned if the search
        /// query is classified as a jail-breaking query. A user might add instructions to the query to change the tone,
        /// style, language, content of the answer, or ask the model to act as a different entity, e.g. "Reply in the
        /// tone of a competing company's CEO". If this field is set to `true`, we skip generating summaries for
        /// jail-breaking queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreJailBreakingQuery")]
        public virtual System.Nullable<bool> IgnoreJailBreakingQuery { get; set; }

        /// <summary>
        /// Specifies whether to filter out queries that have low relevance. The default value is `false`. If this field
        /// is set to `false`, all search results are used regardless of relevance to generate answers. If set to
        /// `true`, only queries with high relevance search results will generate answers.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreLowRelevantContent")]
        public virtual System.Nullable<bool> IgnoreLowRelevantContent { get; set; }

        /// <summary>
        /// Specifies whether to filter out queries that are not summary-seeking. The default value is `false`. Google
        /// employs search-query classification to detect summary-seeking queries. No summary is returned if the search
        /// query is classified as a non-summary seeking query. For example, `why is the sky blue` and `Who is the best
        /// soccer player in the world?` are summary-seeking queries, but `SFO airport` and `world cup 2026` are not.
        /// They are most likely navigational queries. If this field is set to `true`, we skip generating summaries for
        /// non-summary seeking queries and return fallback messages instead.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreNonSummarySeekingQuery")]
        public virtual System.Nullable<bool> IgnoreNonSummarySeekingQuery { get; set; }

        /// <summary>
        /// Specifies whether to include citations in the summary. The default value is `false`. When this field is set
        /// to `true`, summaries include in-line citation numbers. Example summary including citations: BigQuery is
        /// Google Cloud's fully managed and completely serverless enterprise data warehouse [1]. BigQuery supports all
        /// data types, works across clouds, and has built-in machine learning and business intelligence, all within a
        /// unified platform [2, 3]. The citation numbers refer to the returned search results and are 1-indexed. For
        /// example, [1] means that the sentence is attributed to the first search result. [2, 3] means that the
        /// sentence is attributed to both the second and third search results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeCitations")]
        public virtual System.Nullable<bool> IncludeCitations { get; set; }

        /// <summary>
        /// Language code for Summary. Use language tags defined by
        /// [BCP47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Note: This is an experimental feature.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>If specified, the spec will be used to modify the prompt provided to the LLM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelPromptSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec ModelPromptSpec { get; set; }

        /// <summary>
        /// If specified, the spec will be used to modify the model specification provided to the LLM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec ModelSpec { get; set; }

        /// <summary>
        /// The number of top results to generate the summary from. If the number of results returned is less than
        /// `summaryResultCount`, the summary is generated from all of the results. At most 10 results for documents
        /// mode, or 50 for chunks mode, can be used to generate a summary. The chunks mode is used when
        /// SearchRequest.ContentSearchSpec.search_result_mode is set to CHUNKS.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summaryResultCount")]
        public virtual System.Nullable<int> SummaryResultCount { get; set; }

        /// <summary>
        /// If true, answer will be generated from most relevant chunks from top search results. This feature will
        /// improve summary quality. Note that with this feature enabled, not all top search results will be referenced
        /// and included in the reference list, so the citation source index only points to the search results listed in
        /// the reference list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("useSemanticChunks")]
        public virtual System.Nullable<bool> UseSemanticChunks { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification of the prompt to use with the model.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelPromptSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Text at the beginning of the prompt that instructs the assistant. Examples are available in the user guide.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("preamble")]
        public virtual string Preamble { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification of the model.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpecSummarySpecModelSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The model version used to generate the summary. Supported values are: * `stable`: string. Default value when
        /// no value is specified. Uses a generally available, fine-tuned model. For more information, see [Answer
        /// generation model versions and
        /// lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models). * `preview`:
        /// string. (Public preview) Uses a preview model. For more information, see [Answer generation model versions
        /// and lifecycle](https://cloud.google.com/generative-ai-app-builder/docs/answer-generation-models).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A struct to define data stores to filter on in a search call and configurations for those data stores.
    /// Otherwise, an `INVALID_ARGUMENT` error is returned.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestDataStoreSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Boost specification to boost certain documents. For more information on boosting, see
        /// [Boosting](https://cloud.google.com/generative-ai-app-builder/docs/boost-search-results)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestBoostSpec BoostSpec { get; set; }

        /// <summary>
        /// Required. Full resource name of DataStore, such as
        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Optional. Filter specification to filter documents in the data store specified by data_store field. For more
        /// information on filtering, see
        /// [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The specification that uses customized query embedding vector to do semantic document retrieval.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The embedding vector used for retrieval. Limit to 1.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embeddingVectors")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector> EmbeddingVectors { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Embedding vector.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestEmbeddingSpecEmbeddingVector : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Embedding field path in schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldPath")]
        public virtual string FieldPath { get; set; }

        /// <summary>Query embedding vector.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vector")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> Vector { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A facet specification to perform faceted search.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Enables dynamic position for this facet. If set to true, the position of this facet among all facets in the
        /// response is determined automatically. If dynamic facets are enabled, it is ordered together. If set to
        /// false, the position of this facet in the response is the same as in the request, and it is ranked before the
        /// facets with dynamic position enable and all dynamic facets. For example, you may always want to have rating
        /// facet returned in the response, but it's not necessarily to always display the rating facet at the top. In
        /// that case, you can set enable_dynamic_position to true so that the position of rating facet in response is
        /// determined automatically. Another example, assuming you have the following facets in the request: *
        /// "rating", enable_dynamic_position = true * "price", enable_dynamic_position = false * "brands",
        /// enable_dynamic_position = false And also you have a dynamic facets enabled, which generates a facet
        /// `gender`. Then the final order of the facets in the response can be ("price", "brands", "rating", "gender")
        /// or ("price", "brands", "gender", "rating") depends on how API orders "gender" and "rating" facets. However,
        /// notice that "price" and "brands" are always ranked at first and second position because their
        /// enable_dynamic_position is false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableDynamicPosition")]
        public virtual System.Nullable<bool> EnableDynamicPosition { get; set; }

        /// <summary>
        /// List of keys to exclude when faceting. By default, FacetKey.key is not excluded from the filter unless it is
        /// listed in this field. Listing a facet key in this field allows its values to appear as facet results, even
        /// when they are filtered out of search results. Using this field does not affect what search results are
        /// returned. For example, suppose there are 100 documents with the color facet "Red" and 200 documents with the
        /// color facet "Blue". A query containing the filter "color:ANY("Red")" and having "color" as FacetKey.key
        /// would by default return only "Red" documents in the search results, and also return "Red" with count 100 as
        /// the only color facet. Although there are also blue documents available, "Blue" would not be shown as an
        /// available facet value. If "color" is listed in "excludedFilterKeys", then the query returns the facet values
        /// "Red" with count 100 and "Blue" with count 200, because the "color" key is now excluded from the filter.
        /// Because this field doesn't affect search results, the search results are still correctly filtered to return
        /// only "Red" documents. A maximum of 100 values are allowed. Otherwise, an `INVALID_ARGUMENT` error is
        /// returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludedFilterKeys")]
        public virtual System.Collections.Generic.IList<string> ExcludedFilterKeys { get; set; }

        /// <summary>Required. The facet key specification.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("facetKey")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey FacetKey { get; set; }

        /// <summary>
        /// Maximum facet values that are returned for this facet. If unspecified, defaults to 20. The maximum allowed
        /// value is 300. Values above 300 are coerced to 300. For aggregation in healthcare search, when the
        /// [FacetKey.key] is "healthcare_aggregation_key", the limit will be overridden to 10,000 internally,
        /// regardless of the value set here. If this field is negative, an `INVALID_ARGUMENT` is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("limit")]
        public virtual System.Nullable<int> Limit { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies how a facet is computed.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestFacetSpecFacetKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// True to make facet keys case insensitive when getting faceting values with prefixes or contains; false
        /// otherwise.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("caseInsensitive")]
        public virtual System.Nullable<bool> CaseInsensitive { get; set; }

        /// <summary>
        /// Only get facet values that contain the given strings. For example, suppose "category" has three values
        /// "Action &amp;gt; 2022", "Action &amp;gt; 2021" and "Sci-Fi &amp;gt; 2022". If set "contains" to "2022", the
        /// "category" facet only contains "Action &amp;gt; 2022" and "Sci-Fi &amp;gt; 2022". Only supported on textual
        /// fields. Maximum is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contains")]
        public virtual System.Collections.Generic.IList<string> Contains { get; set; }

        /// <summary>
        /// Set only if values should be bucketed into intervals. Must be set for facets with numerical values. Must not
        /// be set for facet with text values. Maximum number of intervals is 30.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("intervals")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaInterval> Intervals { get; set; }

        /// <summary>
        /// Required. Supported textual and numerical facet keys in Document object, over which the facet values are
        /// computed. Facet key is case-sensitive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; }

        /// <summary>
        /// The order in which documents are returned. Allowed values are: * "count desc", which means order by
        /// SearchResponse.Facet.values.count descending. * "value desc", which means order by
        /// SearchResponse.Facet.values.value descending. Only applies to textual facets. If not set, textual values are
        /// sorted in [natural order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical intervals are sorted
        /// in the order given by FacetSpec.FacetKey.intervals.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderBy")]
        public virtual string OrderBy { get; set; }

        /// <summary>
        /// Only get facet values that start with the given string prefix. For example, suppose "category" has three
        /// values "Action &amp;gt; 2022", "Action &amp;gt; 2021" and "Sci-Fi &amp;gt; 2022". If set "prefixes" to
        /// "Action", the "category" facet only contains "Action &amp;gt; 2022" and "Action &amp;gt; 2021". Only
        /// supported on textual fields. Maximum is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prefixes")]
        public virtual System.Collections.Generic.IList<string> Prefixes { get; set; }

        /// <summary>
        /// Only get facet for the given restricted values. Only supported on textual fields. For example, suppose
        /// "category" has three values "Action &amp;gt; 2022", "Action &amp;gt; 2021" and "Sci-Fi &amp;gt; 2022". If
        /// set "restricted_values" to "Action &amp;gt; 2022", the "category" facet only contains "Action &amp;gt;
        /// 2022". Only supported on textual fields. Maximum is 10.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("restrictedValues")]
        public virtual System.Collections.Generic.IList<string> RestrictedValues { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specifies the image query input.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestImageQuery : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Base64 encoded image bytes. Supported image formats: JPEG, PNG, and BMP.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageBytes")]
        public virtual string ImageBytes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification to enable natural language understanding capabilities for search requests.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestNaturalLanguageQueryUnderstandingSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The condition under which filter extraction should occur. Server behavior defaults to `DISABLED`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterExtractionCondition")]
        public virtual string FilterExtractionCondition { get; set; }

        /// <summary>
        /// Field names used for location-based filtering, where geolocation filters are detected in natural language
        /// search queries. Only valid when the FilterExtractionCondition is set to `ENABLED`. If this field is set, it
        /// overrides the field names set in ServingConfig.geo_search_query_detection_field_names.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geoSearchQueryDetectionFieldNames")]
        public virtual System.Collections.Generic.IList<string> GeoSearchQueryDetectionFieldNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The specification for personalization.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The personalization mode of the search request. Defaults to Mode.AUTO.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mode")]
        public virtual string Mode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification to determine under which conditions query expansion should occur.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestQueryExpansionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The condition under which query expansion should occur. Default to Condition.DISABLED.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>
        /// Whether to pin unexpanded results. If this field is set to true, unexpanded products are always at the top
        /// of the search results, followed by the expanded results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pinUnexpandedResults")]
        public virtual System.Nullable<bool> PinUnexpandedResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Specification for search as you type in search requests.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestSearchAsYouTypeSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The condition under which search as you type should occur. Default to Condition.DISABLED.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("condition")]
        public virtual string Condition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Session specification. Multi-turn Search feature is currently at private GA stage. Please use v1alpha or v1beta
    /// version instead before we launch this feature to public GA. Or ask for allowlisting through Google Support team.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestSessionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If set, the search result gets stored to the "turn" specified by this query ID. Example: Let's say the
        /// session looks like this: session { name: ".../sessions/xxx" turns { query { text: "What is foo?" query_id:
        /// ".../questions/yyy" } answer: "Foo is ..." } turns { query { text: "How about bar then?" query_id:
        /// ".../questions/zzz" } } } The user can call /search API with a request like this: session:
        /// ".../sessions/xxx" session_spec { query_id: ".../questions/zzz" } Then, the API stores the search result,
        /// associated with the last turn. The stored search result can be used by a subsequent /answer API call (with
        /// the session ID and the query ID specified). Also, it is possible to call /search and /answer in parallel
        /// with the same session ID &amp;amp; query ID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryId")]
        public virtual string QueryId { get; set; }

        /// <summary>
        /// The number of top search results to persist. The persisted search results can be used for the subsequent
        /// /answer api call. This field is similar to the `summary_result_count` field in
        /// SearchRequest.ContentSearchSpec.SummarySpec.summary_result_count. At most 10 results for documents mode, or
        /// 50 for chunks mode.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResultPersistenceCount")]
        public virtual System.Nullable<int> SearchResultPersistenceCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The specification for query spell correction.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchRequestSpellCorrectionSpec : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The mode under which spell correction replaces the original search query. Defaults to Mode.AUTO.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mode")]
        public virtual string Mode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for SearchService.Search method.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Controls applied as part of the Control service.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appliedControls")]
        public virtual System.Collections.Generic.IList<string> AppliedControls { get; set; }

        /// <summary>
        /// A unique search token. This should be included in the UserEvent logs resulting from this search, which
        /// enables accurate attribution of search model performance. This also helps to identify a request during the
        /// customer support scenarios.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributionToken")]
        public virtual string AttributionToken { get; set; }

        /// <summary>
        /// Contains the spell corrected query, if found. If the spell correction type is AUTOMATIC, then the search
        /// results are based on corrected_query. Otherwise the original query is used for search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("correctedQuery")]
        public virtual string CorrectedQuery { get; set; }

        /// <summary>Results of facets requested by user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("facets")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseFacet> Facets { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("geoSearchDebugInfo")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseGeoSearchDebugInfo> GeoSearchDebugInfo { get; set; }

        /// <summary>Guided search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("guidedSearchResult")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult GuidedSearchResult { get; set; }

        /// <summary>Natural language query understanding information for the returned results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("naturalLanguageQueryUnderstandingInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfo NaturalLanguageQueryUnderstandingInfo { get; set; }

        /// <summary>
        /// A token that can be sent as SearchRequest.page_token to retrieve the next page. If this field is omitted,
        /// there are no subsequent pages.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>A list of One Box results. There can be multiple One Box results of different types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oneBoxResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseOneBoxResult> OneBoxResults { get; set; }

        /// <summary>Query expansion information for the returned results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryExpansionInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo QueryExpansionInfo { get; set; }

        /// <summary>
        /// The URI of a customer-defined redirect page. If redirect action is triggered, no search is performed, and
        /// only redirect_uri and attribution_token are set in the response.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectUri")]
        public virtual string RedirectUri { get; set; }

        /// <summary>A list of matched documents. The order represents the ranking.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("results")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult> Results { get; set; }

        /// <summary>Promotions for site search.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchLinkPromotions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchLinkPromotion> SearchLinkPromotions { get; set; }

        /// <summary>
        /// Session information. Only set if SearchRequest.session is provided. See its description for more details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseSessionInfo SessionInfo { get; set; }

        /// <summary>
        /// Corrected query with low confidence, AKA did you mean query. Compared with corrected_query, this field is
        /// set when SpellCorrector returned a response, but FPR(full page replacement) is not triggered because the
        /// corrction is of low confidence(eg, reversed because there are matches of the original query in document
        /// corpus).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suggestedQuery")]
        public virtual string SuggestedQuery { get; set; }

        /// <summary>
        /// A summary as part of the search results. This field is only returned if
        /// SearchRequest.ContentSearchSpec.summary_spec is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseSummary Summary { get; set; }

        /// <summary>
        /// The estimated total count of matched items irrespective of pagination. The count of results returned by
        /// pagination may be less than the total_size that matches.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalSize")]
        public virtual System.Nullable<int> TotalSize { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A facet result.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseFacet : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether the facet is dynamically generated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicFacet")]
        public virtual System.Nullable<bool> DynamicFacet { get; set; }

        /// <summary>
        /// The key for this facet. For example, `"colors"` or `"price"`. It matches
        /// SearchRequest.FacetSpec.FacetKey.key.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("key")]
        public virtual string Key { get; set; }

        /// <summary>The facet values for this field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("values")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue> Values { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A facet value which contains value names and their count.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseFacetFacetValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Number of items that have this facet value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("count")]
        public virtual System.Nullable<long> Count { get; set; }

        /// <summary>
        /// Interval value for a facet, such as 10, 20) for facet "price". It matches
        /// [SearchRequest.FacetSpec.FacetKey.intervals.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interval")]
        public virtual GoogleCloudDiscoveryengineV1betaInterval Interval { get; set; }

        /// <summary>Text value of a facet, such as "Black" for facet "colors".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Debug information specifically related to forward geocoding issues arising from Geolocation Search.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseGeoSearchDebugInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The error produced.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorMessage")]
        public virtual string ErrorMessage { get; set; }

        /// <summary>The address from which forward geocoding ingestion produced issues.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalAddressQuery")]
        public virtual string OriginalAddressQuery { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Guided search result. The guided search helps user to refine the search results and narrow down to the real
    /// needs from a broaded search results.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Suggested follow-up questions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("followUpQuestions")]
        public virtual System.Collections.Generic.IList<string> FollowUpQuestions { get; set; }

        /// <summary>A list of ranked refinement attributes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("refinementAttributes")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute> RefinementAttributes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Useful attribute for search result refinements.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseGuidedSearchResultRefinementAttribute : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Attribute key used to refine the results. For example, `"movie_type"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeKey")]
        public virtual string AttributeKey { get; set; }

        /// <summary>Attribute value used to refine the results. For example, `"drama"`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributeValue")]
        public virtual string AttributeValue { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information describing what natural language understanding was done on the input query.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The filters that were extracted from the input query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("extractedFilters")]
        public virtual string ExtractedFilters { get; set; }

        /// <summary>Rewritten input query minus the extracted filters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rewrittenQuery")]
        public virtual string RewrittenQuery { get; set; }

        /// <summary>
        /// Optional. The SQL request that was generated from the natural language query understanding phase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sqlRequest")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoSqlRequest SqlRequest { get; set; }

        /// <summary>The filters that were extracted from the input query represented in a structured form.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("structuredExtractedFilter")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilter StructuredExtractedFilter { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The SQL request that was generated from the natural language query understanding phase.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoSqlRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The SQL query in text format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sqlQuery")]
        public virtual string SqlQuery { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The filters that were extracted from the input query represented in a structured form.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The expression denoting the filter that was extracted from the input query in a structured form. It can be a
        /// simple expression denoting a single string, numerical or geolocation constraint or a compound expression
        /// which is a combination of multiple expressions connected using logical (OR and AND) operators.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expression")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterExpression Expression { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Logical `And` operator.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterAndExpression : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The expressions that were ANDed together.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expressions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterExpression> Expressions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The expression denoting the filter that was extracted from the input query.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterExpression : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Logical "And" compound operator connecting multiple expressions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("andExpr")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterAndExpression AndExpr { get; set; }

        /// <summary>Geolocation constraint expression.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geolocationConstraint")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterGeolocationConstraint GeolocationConstraint { get; set; }

        /// <summary>Numerical constraint expression.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("numberConstraint")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterNumberConstraint NumberConstraint { get; set; }

        /// <summary>Logical "Or" compound operator connecting multiple expressions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orExpr")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterOrExpression OrExpr { get; set; }

        /// <summary>String constraint expression.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stringConstraint")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterStringConstraint StringConstraint { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Constraint of a geolocation field. Name of the geolocation field as defined in the schema.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterGeolocationConstraint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The reference address that was inferred from the input query. The proximity of the reference address to the
        /// geolocation field will be used to filter the results.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; }

        /// <summary>The name of the geolocation field as defined in the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>The latitude of the geolocation inferred from the input query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latitude")]
        public virtual System.Nullable<double> Latitude { get; set; }

        /// <summary>The longitude of the geolocation inferred from the input query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("longitude")]
        public virtual System.Nullable<double> Longitude { get; set; }

        /// <summary>
        /// The radius in meters around the address. The record is returned if the location of the geolocation field is
        /// within the radius.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("radiusInMeters")]
        public virtual System.Nullable<float> RadiusInMeters { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Constraint expression of a number field. Example: price &lt; 100.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterNumberConstraint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The comparison operation performed between the field value and the value specified in the constraint.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comparison")]
        public virtual string Comparison { get; set; }

        /// <summary>Name of the numerical field as defined in the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>Identifies the keywords within the search query that match a filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("querySegment")]
        public virtual string QuerySegment { get; set; }

        /// <summary>The value specified in the numerical constraint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual System.Nullable<double> Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Logical `Or` operator.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterOrExpression : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The expressions that were ORed together.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expressions")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterExpression> Expressions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Constraint expression of a string field.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseNaturalLanguageQueryUnderstandingInfoStructuredExtractedFilterStringConstraint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the string field as defined in the schema.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>Identifies the keywords within the search query that match a filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("querySegment")]
        public virtual string QuerySegment { get; set; }

        /// <summary>
        /// Values of the string field. The record will only be returned if the field value matches one of the values
        /// specified here.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("values")]
        public virtual System.Collections.Generic.IList<string> Values { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// OneBoxResult is a holder for all results of specific type that we want to display in UI differently.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseOneBoxResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The type of One Box result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oneBoxType")]
        public virtual string OneBoxType { get; set; }

        /// <summary>The search results for this One Box.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchResults")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult> SearchResults { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information describing query expansion including whether expansion has occurred.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseQueryExpansionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Bool describing whether query expansion has occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expandedQuery")]
        public virtual System.Nullable<bool> ExpandedQuery { get; set; }

        /// <summary>
        /// Number of pinned results. This field will only be set when expansion happens and
        /// SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pinnedResultCount")]
        public virtual System.Nullable<long> PinnedResultCount { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the search results.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSearchResult : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The chunk data in the search response if the SearchRequest.ContentSearchSpec.search_result_mode is set to
        /// CHUNKS.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunk")]
        public virtual GoogleCloudDiscoveryengineV1betaChunk Chunk { get; set; }

        /// <summary>
        /// The document data snippet in the search response. Only fields that are marked as `retrievable` are
        /// populated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual GoogleCloudDiscoveryengineV1betaDocument Document { get; set; }

        /// <summary>Document.id of the searched Document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Google provided available scores.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelScores")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1betaDoubleList> ModelScores { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information about the session.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSessionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Name of the session. If the auto-session mode is used (when SearchRequest.session ends with "-"), this field
        /// holds the newly generated session name.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Query ID that corresponds to this search API call. One session can have multiple turns, each with a unique
        /// query ID. By specifying the session name and this query ID in the Answer API call, the answer generation
        /// happens in the context of the search results from this search call.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryId")]
        public virtual string QueryId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Summary of the top N search results specified by the summary spec.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A collection of Safety Attribute categories and their associated confidence scores.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("safetyAttributes")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes SafetyAttributes { get; set; }

        /// <summary>
        /// Additional summary-skipped reasons. This provides the reason for ignored cases. If nothing is skipped, this
        /// field is not set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summarySkippedReasons")]
        public virtual System.Collections.Generic.IList<string> SummarySkippedReasons { get; set; }

        /// <summary>The summary content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summaryText")]
        public virtual string SummaryText { get; set; }

        /// <summary>Summary with metadata information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summaryWithMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata SummaryWithMetadata { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Citation info for a segment.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>End of the attributed segment, exclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endIndex")]
        public virtual System.Nullable<long> EndIndex { get; set; }

        /// <summary>Citation sources for the attributed segment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sources")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource> Sources { get; set; }

        /// <summary>Index indicates the start of the segment, measured in bytes/unicode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startIndex")]
        public virtual System.Nullable<long> StartIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Citation metadata.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Citations for segments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("citations")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitation> Citations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Citation source.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Document reference index from SummaryWithMetadata.references. It is 0-indexed and the value will be zero if
        /// the reference_index is not set explicitly.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceIndex")]
        public virtual System.Nullable<long> ReferenceIndex { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Document reference.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of cited chunk contents derived from document content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("chunkContents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReferenceChunkContent> ChunkContents { get; set; }

        /// <summary>
        /// Required. Document.name of the document. Full resource name of the referenced document, in the format
        /// `projects/*/locations/*/collections/*/dataStores/*/branches/*/documents/*`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("document")]
        public virtual string Document { get; set; }

        /// <summary>Title of the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>Cloud Storage or HTTP uri for the document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Chunk content.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReferenceChunkContent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Chunk textual content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; }

        /// <summary>Page identifier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageIdentifier")]
        public virtual string PageIdentifier { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Safety Attribute categories and their associated confidence scores.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSummarySafetyAttributes : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The display names of Safety Attribute categories associated with the generated content. Order matches the
        /// Scores.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categories")]
        public virtual System.Collections.Generic.IList<string> Categories { get; set; }

        /// <summary>
        /// The confidence scores of the each category, higher value means higher confidence. Order matches the
        /// Categories.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("scores")]
        public virtual System.Collections.Generic.IList<System.Nullable<float>> Scores { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Summary with metadata information.</summary>
    public class GoogleCloudDiscoveryengineV1betaSearchResponseSummarySummaryWithMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Citation metadata for given summary.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("citationMetadata")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchResponseSummaryCitationMetadata CitationMetadata { get; set; }

        /// <summary>Document References.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("references")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSearchResponseSummaryReference> References { get; set; }

        /// <summary>Summary text with no citation information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("summary")]
        public virtual string Summary { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Configures metadata that is used to generate serving time results (e.g. search results or recommendation
    /// predictions). The ServingConfig is passed in the search and predict request and generates results.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaServingConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Boost controls to use in serving path. All triggered boost controls will be applied. Boost controls must be
        /// in the same data store as the serving config. Maximum of 20 boost controls.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boostControlIds")]
        public virtual System.Collections.Generic.IList<string> BoostControlIds { get; set; }

        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. ServingConfig created timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. The human readable serving config display name. Used in Discovery UI. This field must be a UTF-8
        /// encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        /// <summary>
        /// Condition do not associate specifications. If multiple do not associate conditions match, all matching do
        /// not associate controls in the list will execute. Order does not matter. Maximum number of specifications is
        /// 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dissociateControlIds")]
        public virtual System.Collections.Generic.IList<string> DissociateControlIds { get; set; }

        /// <summary>
        /// How much diversity to use in recommendation model results e.g. `medium-diversity` or `high-diversity`.
        /// Currently supported values: * `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` *
        /// `auto-diversity` If not specified, we choose default based on recommendation model type. Default value:
        /// `no-diversity`. Can only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("diversityLevel")]
        public virtual string DiversityLevel { get; set; }

        /// <summary>
        /// Bring your own embedding config. The config is used for search semantic retrieval. The retrieval is based on
        /// the dot product of SearchRequest.EmbeddingSpec.EmbeddingVector.vector and the document embeddings that are
        /// provided by this EmbeddingConfig. If SearchRequest.EmbeddingSpec.EmbeddingVector.vector is provided, it
        /// overrides this ServingConfig.embedding_config.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embeddingConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaEmbeddingConfig EmbeddingConfig { get; set; }

        /// <summary>
        /// Filter controls to use in serving path. All triggered filter controls will be applied. Filter controls must
        /// be in the same data store as the serving config. Maximum of 20 filter controls.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filterControlIds")]
        public virtual System.Collections.Generic.IList<string> FilterControlIds { get; set; }

        /// <summary>The GenericConfig of the serving configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genericConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig GenericConfig { get; set; }

        /// <summary>
        /// Condition ignore specifications. If multiple ignore conditions match, all matching ignore controls in the
        /// list will execute. Order does not matter. Maximum number of specifications is 100.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreControlIds")]
        public virtual System.Collections.Generic.IList<string> IgnoreControlIds { get; set; }

        /// <summary>The MediaConfig of the serving configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig MediaConfig { get; set; }

        /// <summary>
        /// The id of the model to use at serving time. Currently only RecommendationModels are supported. Can be
        /// changed but only to a compatible model (e.g. others-you-may-like CTR to others-you-may-like CVR). Required
        /// when SolutionType is SOLUTION_TYPE_RECOMMENDATION.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelId")]
        public virtual string ModelId { get; set; }

        /// <summary>
        /// Immutable. Fully qualified name
        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}/servingConfigs/{serving_config_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Condition oneway synonyms specifications. If multiple oneway synonyms conditions match, all matching oneway
        /// synonyms controls in the list will execute. Maximum number of specifications is 100. Can only be set if
        /// SolutionType is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("onewaySynonymsControlIds")]
        public virtual System.Collections.Generic.IList<string> OnewaySynonymsControlIds { get; set; }

        /// <summary>
        /// The specification for personalization spec. Notice that if both ServingConfig.personalization_spec and
        /// SearchRequest.personalization_spec are set, SearchRequest.personalization_spec overrides
        /// ServingConfig.personalization_spec.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("personalizationSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestPersonalizationSpec PersonalizationSpec { get; set; }

        /// <summary>Condition promote specifications. Maximum number of specifications is 100.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promoteControlIds")]
        public virtual System.Collections.Generic.IList<string> PromoteControlIds { get; set; }

        /// <summary>
        /// The ranking expression controls the customized ranking on retrieval documents. To leverage this, document
        /// embedding is required. The ranking expression setting in ServingConfig applies to all search requests served
        /// by the serving config. However, if `SearchRequest.ranking_expression` is specified, it overrides the
        /// ServingConfig ranking expression. The ranking expression is a single function or multiple functions that are
        /// joined by "+". * ranking_expression = function, { " + ", function }; Supported functions: * double *
        /// relevance_score * double * dotProduct(embedding_field_path) Function variables: * `relevance_score`:
        /// pre-defined keywords, used for measure relevance between query and document. * `embedding_field_path`: the
        /// document embedding field used with query embedding vector. * `dotProduct`: embedding function between
        /// embedding_field_path and query embedding vector. Example ranking expression: If document has an embedding
        /// field doc_embedding, the ranking expression could be `0.5 * relevance_score + 0.3 *
        /// dotProduct(doc_embedding)`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rankingExpression")]
        public virtual string RankingExpression { get; set; }

        /// <summary>
        /// IDs of the redirect controls. Only the first triggered redirect action is applied, even if multiple apply.
        /// Maximum number of specifications is 100. Can only be set if SolutionType is SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectControlIds")]
        public virtual System.Collections.Generic.IList<string> RedirectControlIds { get; set; }

        /// <summary>
        /// Condition replacement specifications. Applied according to the order in the list. A previously replaced term
        /// can not be re-replaced. Maximum number of specifications is 100. Can only be set if SolutionType is
        /// SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replacementControlIds")]
        public virtual System.Collections.Generic.IList<string> ReplacementControlIds { get; set; }

        /// <summary>
        /// Required. Immutable. Specifies the solution type that a serving config can be associated with.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("solutionType")]
        public virtual string SolutionType { get; set; }

        /// <summary>
        /// Condition synonyms specifications. If multiple synonyms conditions match, all matching synonyms controls in
        /// the list will execute. Maximum number of specifications is 100. Can only be set if SolutionType is
        /// SOLUTION_TYPE_SEARCH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synonymsControlIds")]
        public virtual System.Collections.Generic.IList<string> SynonymsControlIds { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. ServingConfig updated timestamp.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies the configurations needed for Generic Discovery.Currently we support: * `content_search_spec`:
    /// configuration for generic content search.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaServingConfigGenericConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies the expected behavior of content search. Only valid for content-search enabled data store.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentSearchSpec")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchRequestContentSearchSpec ContentSearchSpec { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Specifies the configurations needed for Media Discovery. Currently we support: * `demote_content_watched`:
    /// Threshold for watched content demotion. Customers can specify if using watched content demotion or use viewed
    /// detail page. Using the content watched demotion, customers need to specify the watched minutes or percentage
    /// exceeds the threshold, the content will be demoted in the recommendation result. * `promote_fresh_content`:
    /// cutoff days for fresh content promotion. Customers can specify if using content freshness promotion. If the
    /// content was published within the cutoff days, the content will be promoted in the recommendation result. Can
    /// only be set if SolutionType is SOLUTION_TYPE_RECOMMENDATION.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaServingConfigMediaConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Specifies the content freshness used for recommendation result. Contents will be demoted if contents were
        /// published for more than content freshness cutoff days.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentFreshnessCutoffDays")]
        public virtual System.Nullable<int> ContentFreshnessCutoffDays { get; set; }

        /// <summary>
        /// Specifies the content watched percentage threshold for demotion. Threshold value must be between [0, 1.0]
        /// inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentWatchedPercentageThreshold")]
        public virtual System.Nullable<float> ContentWatchedPercentageThreshold { get; set; }

        /// <summary>Specifies the content watched minutes threshold for demotion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentWatchedSecondsThreshold")]
        public virtual System.Nullable<float> ContentWatchedSecondsThreshold { get; set; }

        /// <summary>
        /// Optional. Specifies the number of days to look back for demoting watched content. If set to zero or unset,
        /// defaults to the maximum of 365 days.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("demoteContentWatchedPastDays")]
        public virtual System.Nullable<int> DemoteContentWatchedPastDays { get; set; }

        /// <summary>
        /// Specifies the event type used for demoting recommendation result. Currently supported values: * `view-item`:
        /// Item viewed. * `media-play`: Start/resume watching a video, playing a song, etc. * `media-complete`:
        /// Finished or stopped midway through a video, song, etc. If unset, watch history demotion will not be applied.
        /// Content freshness demotion will still be applied.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("demotionEventType")]
        public virtual string DemotionEventType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>External session proto definition.</summary>
    public class GoogleCloudDiscoveryengineV1betaSession : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The display name of the session. This field is used to identify the session in the UI. By default,
        /// the display name is the first turn query text in the session.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; }

        private string _endTimeRaw;

        private object _endTime;

        /// <summary>Output only. The time the session finished.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Optional. Whether the session is pinned, pinned session will be displayed on the top of the session list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isPinned")]
        public virtual System.Nullable<bool> IsPinned { get; set; }

        /// <summary>
        /// Immutable. Fully qualified name
        /// `projects/{project}/locations/global/collections/{collection}/engines/{engine}/sessions/*`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>Output only. The time the session started.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The state of the session.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>Turns.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("turns")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaSessionTurn> Turns { get; set; }

        /// <summary>A unique identifier for tracking users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a turn, including a query from the user and a answer from service.</summary>
    public class GoogleCloudDiscoveryengineV1betaSessionTurn : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The resource name of the answer to the user query. Only set if the answer generation (/answer API call)
        /// happened in this turn.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("answer")]
        public virtual string Answer { get; set; }

        /// <summary>
        /// Output only. In ConversationalSearchService.GetSession API, if GetSessionRequest.include_answer_details is
        /// set to true, this field will be populated when getting answer query session.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detailedAnswer")]
        public virtual GoogleCloudDiscoveryengineV1betaAnswer DetailedAnswer { get; set; }

        /// <summary>The user query.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("query")]
        public virtual GoogleCloudDiscoveryengineV1betaQuery Query { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the CrawlRateManagementService.SetDedicatedCrawlRate operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Request message for CrawlRateManagementService.SetDedicatedCrawlRate method. The user can set the crawl rate for
    /// a crawl_rate_scope they own. They can set up an overall crawl rate, or set up a user-triggered crawl rate and a
    /// auto-refresh crawl rate separately. If an overall crawl rate is set, Vertex AI will automatically splits
    /// crawl_rate into user-triggered and auto-refresh.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. The crawl QPS set by the user. It is not guaranteed that Vertex crawl bot will crawl at this QPS.
        /// If the crawl rate is too high, the real QPS may be lower than the value set by the user to avoid overloading
        /// the user's website.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crawlRate")]
        public virtual System.Nullable<int> CrawlRate { get; set; }

        /// <summary>
        /// Required. The scope of the crawl rate that the user wants to config. Currently, only domain and host name
        /// are supported. A domain name example: `example.com`. A host name example: `www.example.com`. Please do not
        /// include `/` in the domain or host name.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crawlRateScope")]
        public virtual string CrawlRateScope { get; set; }

        /// <summary>Optional. Whether it's the crawl rate of user-triggered or auto-refresh.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crawlType")]
        public virtual string CrawlType { get; set; }

        /// <summary>Optional. Whether the rate is explicitly set by users, or set by vertex AI.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mode")]
        public virtual string Mode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response message for CrawlRateManagementService.SetDedicatedCrawlRate method. It simply returns the state of the
    /// response, and an error message if the state is FAILED.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSetDedicatedCrawlRateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Errors from service when handling the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>Output only. The state of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for single-regional CMEKs.</summary>
    public class GoogleCloudDiscoveryengineV1betaSingleRegionKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. Single-regional kms key resource name which will be used to encrypt resources
        /// `projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{keyId}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kmsKey")]
        public virtual string KmsKey { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// SiteSearchEngine captures DataStore level site search persisting configurations. It is a singleton value per
    /// data store.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSiteSearchEngine : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The fully qualified resource name of the site search engine. Format:
        /// `projects/*/locations/*/dataStores/*/siteSearchEngine`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Verification information for target sites in advanced site search.</summary>
    public class GoogleCloudDiscoveryengineV1betaSiteVerificationInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Site verification state indicating the ownership and validity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteVerificationState")]
        public virtual string SiteVerificationState { get; set; }

        private string _verifyTimeRaw;

        private object _verifyTime;

        /// <summary>Latest site verification time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verifyTime")]
        public virtual string VerifyTimeRaw
        {
            get => _verifyTimeRaw;
            set
            {
                _verifyTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _verifyTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="VerifyTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use VerifyTimeDateTimeOffset instead.")]
        public virtual object VerifyTime
        {
            get => _verifyTime;
            set
            {
                _verifyTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _verifyTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="VerifyTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? VerifyTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(VerifyTimeRaw);
            set => VerifyTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A sitemap for the SiteSearchEngine.</summary>
    public class GoogleCloudDiscoveryengineV1betaSitemap : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Output only. The sitemap's creation time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Output only. The fully qualified resource name of the sitemap.
        /// `projects/*/locations/*/collections/*/dataStores/*/siteSearchEngine/sitemaps/*` The `sitemap_id` suffix is
        /// system-generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Public URI for the sitemap, e.g. `www.example.com/sitemap.xml`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The Spanner source for importing data</summary>
    public class GoogleCloudDiscoveryengineV1betaSpannerSource : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. The database ID of the source Spanner table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("databaseId")]
        public virtual string DatabaseId { get; set; }

        /// <summary>
        /// Whether to apply data boost on Spanner export. Enabling this option will incur additional cost. More info
        /// can be found [here](https://cloud.google.com/spanner/docs/databoost/databoost-overview#billing_and_quotas).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enableDataBoost")]
        public virtual System.Nullable<bool> EnableDataBoost { get; set; }

        /// <summary>Required. The instance ID of the source Spanner table.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instanceId")]
        public virtual string InstanceId { get; set; }

        /// <summary>
        /// The project ID that contains the Spanner source. Has a length limit of 128 characters. If not specified,
        /// inherits the project ID from the parent request.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; }

        /// <summary>Required. The table name of the Spanner database that needs to be imported.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tableId")]
        public virtual string TableId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Suggestion deny list entry identifying the phrase to block from suggestions and the applied operation for the
    /// phrase.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaSuggestionDenyListEntry : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Required. Phrase to block from suggestions served. Can be maximum 125 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("blockPhrase")]
        public virtual string BlockPhrase { get; set; }

        /// <summary>
        /// Required. The match operator to apply for this phrase. Whether to block the exact phrase, or block any
        /// suggestions containing this phrase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchOperator")]
        public virtual string MatchOperator { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A target site for the SiteSearchEngine.</summary>
    public class GoogleCloudDiscoveryengineV1betaTargetSite : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Immutable. If set to false, a uri_pattern is generated to include all pages whose address contains the
        /// provided_uri_pattern. If set to true, an uri_pattern is generated to try to be an exact match of the
        /// provided_uri_pattern or just the specific page if the provided_uri_pattern is a specific one.
        /// provided_uri_pattern is always normalized to generate the URI pattern to be used by the search engine.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exactMatch")]
        public virtual System.Nullable<bool> ExactMatch { get; set; }

        /// <summary>Output only. Failure reason.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReason")]
        public virtual GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason FailureReason { get; set; }

        /// <summary>Output only. This is system-generated based on the provided_uri_pattern.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("generatedUriPattern")]
        public virtual string GeneratedUriPattern { get; set; }

        /// <summary>Output only. Indexing status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("indexingStatus")]
        public virtual string IndexingStatus { get; set; }

        /// <summary>
        /// Output only. The fully qualified resource name of the target site.
        /// `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}/siteSearchEngine/targetSites/{target_site}`
        /// The `target_site_id` is system-generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Required. Input only. The user provided URI pattern from which the `generated_uri_pattern` is generated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("providedUriPattern")]
        public virtual string ProvidedUriPattern { get; set; }

        /// <summary>Output only. Root domain of the provided_uri_pattern.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rootDomainUri")]
        public virtual string RootDomainUri { get; set; }

        /// <summary>Output only. Site ownership and validity verification status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteVerificationInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaSiteVerificationInfo SiteVerificationInfo { get; set; }

        /// <summary>The type of the target site, e.g., whether the site is to be included or excluded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Output only. The target site's last updated time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Site search indexing failure reasons.</summary>
    public class GoogleCloudDiscoveryengineV1betaTargetSiteFailureReason : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Failed due to insufficient quota.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quotaFailure")]
        public virtual GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure QuotaFailure { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Failed due to insufficient quota.</summary>
    public class GoogleCloudDiscoveryengineV1betaTargetSiteFailureReasonQuotaFailure : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// This number is an estimation on how much total quota this project needs to successfully complete indexing.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalRequiredQuota")]
        public virtual System.Nullable<long> TotalRequiredQuota { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Defines text input.</summary>
    public class GoogleCloudDiscoveryengineV1betaTextInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Conversation context of the input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("context")]
        public virtual GoogleCloudDiscoveryengineV1betaConversationContext Context { get; set; }

        /// <summary>Text input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("input")]
        public virtual string Input { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the TrainCustomModel operation. This is returned by the
    /// google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaTrainCustomModelMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Request message for SearchTuningService.TrainCustomModel method.</summary>
    public class GoogleCloudDiscoveryengineV1betaTrainCustomModelRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The desired location of errors incurred during the data ingestion and training.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>Cloud Storage training input.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gcsTrainingInput")]
        public virtual GoogleCloudDiscoveryengineV1betaTrainCustomModelRequestGcsTrainingInput GcsTrainingInput { get; set; }

        /// <summary>If not provided, a UUID will be generated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelId")]
        public virtual string ModelId { get; set; }

        /// <summary>
        /// Model to be trained. Supported values are: * **search-tuning**: Fine tuning the search system based on data
        /// provided.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelType")]
        public virtual string ModelType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Cloud Storage training data input.</summary>
    public class GoogleCloudDiscoveryengineV1betaTrainCustomModelRequestGcsTrainingInput : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The Cloud Storage corpus data which could be associated in train data. The data path format is `gs:///`. A
        /// newline delimited jsonl/ndjson file. For search-tuning model, each line should have the _id, title and text.
        /// Example: `{"_id": "doc1", title: "relevant doc", "text": "relevant text"}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("corpusDataPath")]
        public virtual string CorpusDataPath { get; set; }

        /// <summary>
        /// The gcs query data which could be associated in train data. The data path format is `gs:///`. A newline
        /// delimited jsonl/ndjson file. For search-tuning model, each line should have the _id and text. Example:
        /// {"_id": "query1", "text": "example query"}
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queryDataPath")]
        public virtual string QueryDataPath { get; set; }

        /// <summary>
        /// Cloud Storage test data. Same format as train_data_path. If not provided, a random 80/20 train/test split
        /// will be performed on train_data_path.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("testDataPath")]
        public virtual string TestDataPath { get; set; }

        /// <summary>
        /// Cloud Storage training data path whose format should be `gs:///`. The file should be in tsv format. Each
        /// line should have the doc_id and query_id and score (number). For search-tuning model, it should have the
        /// query-id corpus-id score as tsv file header. The score should be a number in `[0, inf+)`. The larger the
        /// number is, the more relevant the pair is. Example: * `query-id\tcorpus-id\tscore` * `query1\tdoc1\t1`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trainDataPath")]
        public virtual string TrainDataPath { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Response of the TrainCustomModelRequest. This message is returned by the google.longrunning.Operations.response
    /// field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaTrainCustomModelResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Echoes the destination for the complete errors in the request if set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorConfig")]
        public virtual GoogleCloudDiscoveryengineV1betaImportErrorConfig ErrorConfig { get; set; }

        /// <summary>A sample of errors encountered while processing the data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errorSamples")]
        public virtual System.Collections.Generic.IList<GoogleRpcStatus> ErrorSamples { get; set; }

        /// <summary>The metrics of the trained model.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IDictionary<string, System.Nullable<double>> Metrics { get; set; }

        /// <summary>Fully qualified name of the CustomTuningModel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelName")]
        public virtual string ModelName { get; set; }

        /// <summary>
        /// The trained model status. Possible values are: * **bad-data**: The training data quality is bad. *
        /// **no-improvement**: Tuning didn't improve performance. Won't deploy. * **in-progress**: Model training job
        /// creation is in progress. * **training**: Model is actively training. * **evaluating**: The model is
        /// evaluating trained metrics. * **indexing**: The model trained metrics are indexing. * **ready**: The model
        /// is ready for serving.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("modelStatus")]
        public virtual string ModelStatus { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A transaction represents the entire purchase transaction.</summary>
    public class GoogleCloudDiscoveryengineV1betaTransactionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// All the costs associated with the products. These can be manufacturing costs, shipping expenses not borne by
        /// the end user, or any other costs, such that: * Profit = value - tax - cost
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cost")]
        public virtual System.Nullable<float> Cost { get; set; }

        /// <summary>Required. Currency code. Use three-character ISO-4217 code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currency")]
        public virtual string Currency { get; set; }

        /// <summary>
        /// The total discount(s) value applied to this transaction. This figure should be excluded from
        /// TransactionInfo.value For example, if a user paid TransactionInfo.value amount, then nominal (pre-discount)
        /// value of the transaction is the sum of TransactionInfo.value and TransactionInfo.discount_value This means
        /// that profit is calculated the same way, regardless of the discount value, and that
        /// TransactionInfo.discount_value can be larger than TransactionInfo.value: * Profit = value - tax - cost
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("discountValue")]
        public virtual System.Nullable<float> DiscountValue { get; set; }

        /// <summary>All the taxes associated with the transaction.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tax")]
        public virtual System.Nullable<float> Tax { get; set; }

        /// <summary>The transaction ID with a length limit of 128 characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transactionId")]
        public virtual string TransactionId { get; set; }

        /// <summary>
        /// Required. Total non-zero value associated with the transaction. This value may include shipping, tax, or
        /// other adjustments to the total value that you want to include.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual System.Nullable<float> Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata associated with a tune operation.</summary>
    public class GoogleCloudDiscoveryengineV1betaTuneEngineMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Required. The resource name of the engine that this tune applies to. Format:
        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("engine")]
        public virtual string Engine { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Request to manually start a tuning process now (instead of waiting for the periodically scheduled tuning to
    /// happen).
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaTuneEngineRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response associated with a tune operation.</summary>
    public class GoogleCloudDiscoveryengineV1betaTuneEngineResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metadata for UpdateSchema LRO.</summary>
    public class GoogleCloudDiscoveryengineV1betaUpdateSchemaMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Metadata related to the progress of the SiteSearchEngineService.UpdateTargetSite operation. This will be
    /// returned by the google.longrunning.Operation.metadata field.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaUpdateTargetSiteMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _createTimeRaw;

        private object _createTime;

        /// <summary>Operation create time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createTime")]
        public virtual string CreateTimeRaw
        {
            get => _createTimeRaw;
            set
            {
                _createTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _createTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use CreateTimeDateTimeOffset instead.")]
        public virtual object CreateTime
        {
            get => _createTime;
            set
            {
                _createTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _createTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="CreateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? CreateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(CreateTimeRaw);
            set => CreateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _updateTimeRaw;

        private object _updateTime;

        /// <summary>Operation last update time. If the operation is done, this is also the finish time.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("updateTime")]
        public virtual string UpdateTimeRaw
        {
            get => _updateTimeRaw;
            set
            {
                _updateTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _updateTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use UpdateTimeDateTimeOffset instead.")]
        public virtual object UpdateTime
        {
            get => _updateTime;
            set
            {
                _updateTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _updateTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="UpdateTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? UpdateTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(UpdateTimeRaw);
            set => UpdateTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// UserEvent captures all metadata information Discovery Engine API needs to know about how end users interact with
    /// your website.
    /// </summary>
    public class GoogleCloudDiscoveryengineV1betaUserEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Extra user event features to include in the recommendation model. These attributes must NOT contain data
        /// that needs to be parsed or processed further, e.g. JSON or other encodings. If you provide custom attributes
        /// for ingested user events, also include them in the user events that you associate with prediction requests.
        /// Custom attribute formatting must be consistent between imported events and events provided with prediction
        /// requests. This lets the Discovery Engine API use those custom attributes when training models and serving
        /// predictions, which helps improve recommendation quality. This field needs to pass all below criteria,
        /// otherwise an `INVALID_ARGUMENT` error is returned: * The key must be a UTF-8 encoded string with a length
        /// limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not
        /// allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number
        /// attributes, at most 400 values are allowed. For product recommendations, an example of extra user
        /// information is `traffic_channel`, which is how a user arrives at the site. Users can arrive at the site by
        /// coming to the site directly, coming through Google search, or in other ways.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributes")]
        public virtual System.Collections.Generic.IDictionary<string, GoogleCloudDiscoveryengineV1betaCustomAttribute> Attributes { get; set; }

        /// <summary>
        /// Token to attribute an API response to user action(s) to trigger the event. Highly recommended for user
        /// events that are the result of RecommendationService.Recommend. This field enables accurate attribution of
        /// recommendation model performance. The value must be one of: * RecommendResponse.attribution_token for events
        /// that are the result of RecommendationService.Recommend. * SearchResponse.attribution_token for events that
        /// are the result of SearchService.Search. This token enables us to accurately attribute page view or
        /// conversion completion back to the event and the particular predict response containing this
        /// clicked/purchased product. If user clicks on product K in the recommendation results, pass
        /// RecommendResponse.attribution_token as a URL parameter to product K's page. When recording events on product
        /// K's page, log the RecommendResponse.attribution_token to this field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributionToken")]
        public virtual string AttributionToken { get; set; }

        /// <summary>
        /// CompletionService.CompleteQuery details related to the event. This field should be set for `search` event
        /// when autocomplete function is enabled and the user clicks a suggestion for search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("completionInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaCompletionInfo CompletionInfo { get; set; }

        /// <summary>
        /// Optional. Conversion type. Required if UserEvent.event_type is `conversion`. This is a customer-defined
        /// conversion name in lowercase letters or numbers separated by "-", such as "watch", "good-visit" etc. Do not
        /// set the field if UserEvent.event_type is not `conversion`. This mixes the custom conversion event with
        /// predefined events like `search`, `view-item` etc.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversionType")]
        public virtual string ConversionType { get; set; }

        /// <summary>
        /// The DataStore resource full name, of the form
        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}`. Optional.
        /// Only required for user events whose data store can't by determined by UserEvent.engine or
        /// UserEvent.documents. If data store is set in the parent of write/import/collect user event requests, this
        /// field can be omitted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataStore")]
        public virtual string DataStore { get; set; }

        /// <summary>
        /// Should set to true if the request is made directly from the end user, in which case the
        /// UserEvent.user_info.user_agent can be populated from the HTTP request. This flag should be set only if the
        /// API request is made directly from the end user such as a mobile app (and not if a gateway or a server is
        /// processing and pushing the user events). This should not be set when using the JavaScript tag in
        /// UserEventService.CollectUserEvent.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directUserRequest")]
        public virtual System.Nullable<bool> DirectUserRequest { get; set; }

        /// <summary>
        /// List of Documents associated with this user event. This field is optional except for the following event
        /// types: * `view-item` * `add-to-cart` * `purchase` * `media-play` * `media-complete` In a `search` event,
        /// this field represents the documents returned to the end user on the current page (the end user may have not
        /// finished browsing the whole page yet). When a new page is returned to the end user, after
        /// pagination/filtering/ordering even for the same query, a new `search` event with different
        /// UserEvent.documents is desired.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("documents")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaDocumentInfo> Documents { get; set; }

        /// <summary>
        /// The Engine resource name, in the form of
        /// `projects/{project}/locations/{location}/collections/{collection_id}/engines/{engine_id}`. Optional. Only
        /// required for Engine produced user events. For example, user events from blended search.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("engine")]
        public virtual string Engine { get; set; }

        private string _eventTimeRaw;

        private object _eventTime;

        /// <summary>
        /// Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventTime")]
        public virtual string EventTimeRaw
        {
            get => _eventTimeRaw;
            set
            {
                _eventTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _eventTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EventTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EventTimeDateTimeOffset instead.")]
        public virtual object EventTime
        {
            get => _eventTime;
            set
            {
                _eventTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _eventTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EventTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EventTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EventTimeRaw);
            set => EventTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>
        /// Required. User event type. Allowed values are: Generic values: * `search`: Search for Documents. *
        /// `view-item`: Detailed page view of a Document. * `view-item-list`: View of a panel or ordered list of
        /// Documents. * `view-home-page`: View of the home page. * `view-category-page`: View of a category page, e.g.
        /// Home &amp;gt; Men &amp;gt; Jeans * `add-feedback`: Add a user feedback. Retail-related values: *
        /// `add-to-cart`: Add an item(s) to cart, e.g. in Retail online shopping * `purchase`: Purchase an item(s)
        /// Media-related values: * `media-play`: Start/resume watching a video, playing a song, etc. *
        /// `media-complete`: Finished or stopped midway through a video, song, etc. Custom conversion value: *
        /// `conversion`: Customer defined conversion event.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventType")]
        public virtual string EventType { get; set; }

        /// <summary>
        /// The filter syntax consists of an expression language for constructing a predicate from one or more fields of
        /// the documents being filtered. One example is for `search` events, the associated SearchRequest may contain a
        /// filter expression in SearchRequest.filter conforming to https://google.aip.dev/160#filtering. Similarly, for
        /// `view-item-list` events that are generated from a RecommendRequest, this field may be populated directly
        /// from RecommendRequest.filter conforming to https://google.aip.dev/160#filtering. The value must be a UTF-8
        /// encoded string with a length limit of 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filter")]
        public virtual string Filter { get; set; }

        /// <summary>Media-specific info.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaMediaInfo MediaInfo { get; set; }

        /// <summary>
        /// Page metadata such as categories and other critical information for certain event types such as
        /// `view-category-page`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaPageInfo PageInfo { get; set; }

        /// <summary>Panel metadata associated with this user event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("panel")]
        public virtual GoogleCloudDiscoveryengineV1betaPanelInfo Panel { get; set; }

        /// <summary>Optional. List of panels associated with this event. Used for page-level impression data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("panels")]
        public virtual System.Collections.Generic.IList<GoogleCloudDiscoveryengineV1betaPanelInfo> Panels { get; set; }

        /// <summary>
        /// The promotion IDs if this is an event associated with promotions. Currently, this field is restricted to at
        /// most one ID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("promotionIds")]
        public virtual System.Collections.Generic.IList<string> PromotionIds { get; set; }

        /// <summary>
        /// SearchService.Search details related to the event. This field should be set for `search` event.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("searchInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaSearchInfo SearchInfo { get; set; }

        /// <summary>
        /// A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an
        /// aggregation of an end user behavior in a time span. A general guideline to populate the session_id: 1. If
        /// user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique
        /// across users, suggest use uuid or add UserEvent.user_pseudo_id as prefix.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionId")]
        public virtual string SessionId { get; set; }

        /// <summary>
        /// A list of identifiers for the independent experiment groups this user event belongs to. This is used to
        /// distinguish between user events associated with different experiment setups.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagIds")]
        public virtual System.Collections.Generic.IList<string> TagIds { get; set; }

        /// <summary>The transaction metadata (if any) associated with this user event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transactionInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaTransactionInfo TransactionInfo { get; set; }

        /// <summary>Information about the end user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userInfo")]
        public virtual GoogleCloudDiscoveryengineV1betaUserInfo UserInfo { get; set; }

        /// <summary>
        /// Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP
        /// cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier
        /// should not change if the visitor log in/out of the website. Do not set the field to the same fixed ID for
        /// different users. This mixes the event history of those users together, which results in degraded model
        /// quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
        /// `INVALID_ARGUMENT` error is returned. The field should not contain PII or user-data. We recommend to use
        /// Google Analytics [Client
        /// ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for
        /// this field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userPseudoId")]
        public virtual string UserPseudoId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Information of an end user.</summary>
    public class GoogleCloudDiscoveryengineV1betaUserInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// User agent as included in the HTTP header. The field must be a UTF-8 encoded string with a length limit of
        /// 1,000 characters. Otherwise, an `INVALID_ARGUMENT` error is returned. This should not be set when using the
        /// client side event reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or if
        /// UserEvent.direct_user_request is set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userAgent")]
        public virtual string UserAgent { get; set; }

        /// <summary>
        /// Highly recommended for logged-in users. Unique identifier for logged-in user, such as a user name. Don't set
        /// for anonymous users. Always use a hashed value for this ID. Don't set the field to the same fixed ID for
        /// different users. This mixes the event history of those users together, which results in degraded model
        /// quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
        /// `INVALID_ARGUMENT` error is returned.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Config to store data store type configuration for workspace data</summary>
    public class GoogleCloudDiscoveryengineV1betaWorkspaceConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Obfuscated Dasher customer ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dasherCustomerId")]
        public virtual string DasherCustomerId { get; set; }

        /// <summary>
        /// Optional. The super admin email address for the workspace that will be used for access token generation. For
        /// now we only use it for Native Google Drive connector data ingestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("superAdminEmailAddress")]
        public virtual string SuperAdminEmailAddress { get; set; }

        /// <summary>
        /// Optional. The super admin service account for the workspace that will be used for access token generation.
        /// For now we only use it for Native Google Drive connector data ingestion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("superAdminServiceAccount")]
        public virtual string SuperAdminServiceAccount { get; set; }

        /// <summary>The Google Workspace data source.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The request message for Operations.CancelOperation.</summary>
    public class GoogleLongrunningCancelOperationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The response message for Operations.ListOperations.</summary>
    public class GoogleLongrunningListOperationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The standard List next-page token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>A list of operations that matches the specified filter in the request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operations")]
        public virtual System.Collections.Generic.IList<GoogleLongrunningOperation> Operations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class GoogleLongrunningOperation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed,
        /// and either `error` or `response` is available.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; }

        /// <summary>The error result of the operation in case of failure or cancellation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual GoogleRpcStatus Error { get; set; }

        /// <summary>
        /// Service-specific metadata associated with the operation. It typically contains progress information and
        /// common metadata such as create time. Some services might not provide such metadata. Any method that returns
        /// a long-running operation should document the metadata type, if any.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string, object> Metadata { get; set; }

        /// <summary>
        /// The server-assigned name, which is only unique within the same service that originally returns it. If you
        /// use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// The normal, successful response of the operation. If the original method returns no data on success, such as
        /// `Delete`, the response is `google.protobuf.Empty`. If the original method is standard
        /// `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have
        /// the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is
        /// `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string, object> Response { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A single data point in a time series.</summary>
    public class GoogleMonitoringV3Point : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The time interval to which the data point applies. For `GAUGE` metrics, the start time is optional, but if
        /// it is supplied, it must equal the end time. For `DELTA` metrics, the start and end time should specify a
        /// non-zero interval, with subsequent points specifying contiguous and non-overlapping intervals. For
        /// `CUMULATIVE` metrics, the start and end time should specify a non-zero interval, with subsequent points
        /// specifying the same start time and increasing end times, until an event resets the cumulative value to zero
        /// and sets a new start time for the following points.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interval")]
        public virtual GoogleMonitoringV3TimeInterval Interval { get; set; }

        /// <summary>The value of the data point.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual GoogleMonitoringV3TypedValue Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A time interval extending just after a start time through an end time. If the start time is the same as the end
    /// time, then the interval represents a single point in time.
    /// </summary>
    public class GoogleMonitoringV3TimeInterval : Google.Apis.Requests.IDirectResponseSchema
    {
        private string _endTimeRaw;

        private object _endTime;

        /// <summary>Required. The end of the time interval.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw
        {
            get => _endTimeRaw;
            set
            {
                _endTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _endTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual object EndTime
        {
            get => _endTime;
            set
            {
                _endTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _endTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        private string _startTimeRaw;

        private object _startTime;

        /// <summary>
        /// Optional. The beginning of the time interval. The default value for the start time is the end time. The
        /// start time must not be later than the end time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw
        {
            get => _startTimeRaw;
            set
            {
                _startTime = Google.Apis.Util.Utilities.DeserializeForGoogleFormat(value);
                _startTimeRaw = value;
            }
        }

        /// <summary><seealso cref="object"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual object StartTime
        {
            get => _startTime;
            set
            {
                _startTimeRaw = Google.Apis.Util.Utilities.SerializeForGoogleFormat(value);
                _startTime = value;
            }
        }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseGoogleDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToGoogleDateTime(value);
        }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A collection of data points that describes the time-varying values of a metric. A time series is identified by a
    /// combination of a fully-specified monitored resource and a fully-specified metric. This type is used for both
    /// listing and creating time series.
    /// </summary>
    public class GoogleMonitoringV3TimeSeries : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Input only. A detailed description of the time series that will be associated with the
        /// google.api.MetricDescriptor for the metric. Once set, this field cannot be changed through CreateTimeSeries.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>
        /// Output only. The associated monitored resource metadata. When reading a time series, this field will include
        /// metadata labels that are explicitly named in the reduction. When creating a time series, this field is
        /// ignored.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual GoogleApiMonitoredResourceMetadata Metadata { get; set; }

        /// <summary>The associated metric. A fully-specified metric used to identify the time series.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metric")]
        public virtual GoogleApiMetric Metric { get; set; }

        /// <summary>
        /// The metric kind of the time series. When listing time series, this metric kind might be different from the
        /// metric kind of the associated metric if this time series is an alignment or reduction of other time series.
        /// When creating a time series, this field is optional. If present, it must be the same as the metric kind of
        /// the associated metric. If the associated metric's descriptor must be auto-created, then this field specifies
        /// the metric kind of the new descriptor and must be either `GAUGE` (the default) or `CUMULATIVE`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricKind")]
        public virtual string MetricKind { get; set; }

        /// <summary>
        /// The data points of this time series. When listing time series, points are returned in reverse time order.
        /// When creating a time series, this field must contain exactly one point and the point's type must be the same
        /// as the value type of the associated metric. If the associated metric's descriptor must be auto-created, then
        /// the value type of the descriptor is determined by the point's type, which must be `BOOL`, `INT64`, `DOUBLE`,
        /// or `DISTRIBUTION`.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("points")]
        public virtual System.Collections.Generic.IList<GoogleMonitoringV3Point> Points { get; set; }

        /// <summary>
        /// The associated monitored resource. Custom metrics can use only certain monitored resource types in their
        /// time series data. For more information, see [Monitored resources for custom
        /// metrics](https://cloud.google.com/monitoring/custom-metrics/creating-metrics#custom-metric-resources).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resource")]
        public virtual GoogleApiMonitoredResource Resource { get; set; }

        /// <summary>
        /// The units in which the metric value is reported. It is only applicable if the `value_type` is `INT64`,
        /// `DOUBLE`, or `DISTRIBUTION`. The `unit` defines the representation of the stored metric values. This field
        /// can only be changed through CreateTimeSeries when it is empty.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unit")]
        public virtual string Unit { get; set; }

        /// <summary>
        /// The value type of the time series. When listing time series, this value type might be different from the
        /// value type of the associated metric if this time series is an alignment or reduction of other time series.
        /// When creating a time series, this field is optional. If present, it must be the same as the type of the data
        /// in the `points` field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("valueType")]
        public virtual string ValueType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A single strongly-typed value.</summary>
    public class GoogleMonitoringV3TypedValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>A Boolean value: `true` or `false`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("boolValue")]
        public virtual System.Nullable<bool> BoolValue { get; set; }

        /// <summary>A distribution value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("distributionValue")]
        public virtual GoogleApiDistribution DistributionValue { get; set; }

        /// <summary>
        /// A 64-bit double-precision floating-point number. Its magnitude is approximately ±10±300 and it has 16
        /// significant digits of precision.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("doubleValue")]
        public virtual System.Nullable<double> DoubleValue { get; set; }

        /// <summary>A 64-bit integer. Its range is approximately ±9.2x1018.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("int64Value")]
        public virtual System.Nullable<long> Int64Value { get; set; }

        /// <summary>A variable-length string value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stringValue")]
        public virtual string StringValue { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical
    /// example is to use it as the request or the response type of an API method. For instance: service Foo { rpc
    /// Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    /// </summary>
    public class GoogleProtobufEmpty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The `Status` type defines a logical error model that is suitable for different programming environments,
    /// including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains
    /// three pieces of data: error code, error message, and error details. You can find out more about this error model
    /// and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
    /// </summary>
    public class GoogleRpcStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; }

        /// <summary>
        /// A list of messages that carry the error details. There is a common set of message types for APIs to use.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string, object>> Details { get; set; }

        /// <summary>
        /// A developer-facing error message, which should be in English. Any user-facing error message should be
        /// localized and sent in the google.rpc.Status.details field, or localized by the client.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either
    /// specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one
    /// of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year
    /// (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a
    /// zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay *
    /// google.type.DateTime * google.protobuf.Timestamp
    /// </summary>
    public class GoogleTypeDate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a
        /// year and month where the day isn't significant.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("day")]
        public virtual System.Nullable<int> Day { get; set; }

        /// <summary>Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("month")]
        public virtual System.Nullable<int> Month { get; set; }

        /// <summary>Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("year")]
        public virtual System.Nullable<int> Year { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few
    /// possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular
    /// offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular
    /// time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The
    /// date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered
    /// not to have a specific year, month, or day respectively. This type may also be used to represent a physical time
    /// if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using
    /// `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone,
    /// that can be done in another field. This type is more flexible than some applications may want. Make sure to
    /// document and validate your application's limitations.
    /// </summary>
    public class GoogleTypeDateTime : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime
        /// without a day.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("day")]
        public virtual System.Nullable<int> Day { get; set; }

        /// <summary>
        /// Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may
        /// choose to allow the value "24:00:00" for scenarios like business closing time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hours")]
        public virtual System.Nullable<int> Hours { get; set; }

        /// <summary>Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minutes")]
        public virtual System.Nullable<int> Minutes { get; set; }

        /// <summary>
        /// Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("month")]
        public virtual System.Nullable<int> Month { get; set; }

        /// <summary>
        /// Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nanos")]
        public virtual System.Nullable<int> Nanos { get; set; }

        /// <summary>
        /// Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the
        /// value 60 if it allows leap-seconds.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seconds")]
        public virtual System.Nullable<int> Seconds { get; set; }

        /// <summary>Time zone.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual GoogleTypeTimeZone TimeZone { get; set; }

        /// <summary>
        /// UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would
        /// be represented as { seconds: -14400 }.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("utcOffset")]
        public virtual object UtcOffset { get; set; }

        /// <summary>
        /// Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("year")]
        public virtual System.Nullable<int> Year { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).</summary>
    public class GoogleTypeTimeZone : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>IANA Time Zone Database time zone. For example "America/New_York".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Optional. IANA Time Zone Database version number. For example "2019a".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual string Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
