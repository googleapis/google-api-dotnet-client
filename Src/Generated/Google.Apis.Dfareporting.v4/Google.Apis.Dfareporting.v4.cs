// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated code. DO NOT EDIT!

namespace Google.Apis.Dfareporting.v4
{
    /// <summary>The Dfareporting Service.</summary>
    public class DfareportingService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v4";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public DfareportingService() : this(new Google.Apis.Services.BaseClientService.Initializer())
        {
        }

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public DfareportingService(Google.Apis.Services.BaseClientService.Initializer initializer) : base(initializer)
        {
            AccountActiveAdSummaries = new AccountActiveAdSummariesResource(this);
            AccountPermissionGroups = new AccountPermissionGroupsResource(this);
            AccountPermissions = new AccountPermissionsResource(this);
            AccountUserProfiles = new AccountUserProfilesResource(this);
            Accounts = new AccountsResource(this);
            Ads = new AdsResource(this);
            AdvertiserGroups = new AdvertiserGroupsResource(this);
            AdvertiserInvoices = new AdvertiserInvoicesResource(this);
            AdvertiserLandingPages = new AdvertiserLandingPagesResource(this);
            Advertisers = new AdvertisersResource(this);
            BillingAssignments = new BillingAssignmentsResource(this);
            BillingProfiles = new BillingProfilesResource(this);
            BillingRates = new BillingRatesResource(this);
            Browsers = new BrowsersResource(this);
            CampaignCreativeAssociations = new CampaignCreativeAssociationsResource(this);
            Campaigns = new CampaignsResource(this);
            ChangeLogs = new ChangeLogsResource(this);
            Cities = new CitiesResource(this);
            ConnectionTypes = new ConnectionTypesResource(this);
            ContentCategories = new ContentCategoriesResource(this);
            Conversions = new ConversionsResource(this);
            Countries = new CountriesResource(this);
            CreativeAssets = new CreativeAssetsResource(this);
            CreativeFieldValues = new CreativeFieldValuesResource(this);
            CreativeFields = new CreativeFieldsResource(this);
            CreativeGroups = new CreativeGroupsResource(this);
            Creatives = new CreativesResource(this);
            DimensionValues = new DimensionValuesResource(this);
            DirectorySites = new DirectorySitesResource(this);
            DynamicTargetingKeys = new DynamicTargetingKeysResource(this);
            EventTags = new EventTagsResource(this);
            Files = new FilesResource(this);
            FloodlightActivities = new FloodlightActivitiesResource(this);
            FloodlightActivityGroups = new FloodlightActivityGroupsResource(this);
            FloodlightConfigurations = new FloodlightConfigurationsResource(this);
            InventoryItems = new InventoryItemsResource(this);
            Languages = new LanguagesResource(this);
            Metros = new MetrosResource(this);
            MobileApps = new MobileAppsResource(this);
            MobileCarriers = new MobileCarriersResource(this);
            OperatingSystemVersions = new OperatingSystemVersionsResource(this);
            OperatingSystems = new OperatingSystemsResource(this);
            Orders = new OrdersResource(this);
            PlacementGroups = new PlacementGroupsResource(this);
            PlacementStrategies = new PlacementStrategiesResource(this);
            Placements = new PlacementsResource(this);
            PlatformTypes = new PlatformTypesResource(this);
            PostalCodes = new PostalCodesResource(this);
            Projects = new ProjectsResource(this);
            Regions = new RegionsResource(this);
            RemarketingListShares = new RemarketingListSharesResource(this);
            RemarketingLists = new RemarketingListsResource(this);
            Reports = new ReportsResource(this);
            Sites = new SitesResource(this);
            Sizes = new SizesResource(this);
            Subaccounts = new SubaccountsResource(this);
            TargetableRemarketingLists = new TargetableRemarketingListsResource(this);
            TargetingTemplates = new TargetingTemplatesResource(this);
            TvCampaignDetails = new TvCampaignDetailsResource(this);
            TvCampaignSummaries = new TvCampaignSummariesResource(this);
            UserProfiles = new UserProfilesResource(this);
            UserRolePermissionGroups = new UserRolePermissionGroupsResource(this);
            UserRolePermissions = new UserRolePermissionsResource(this);
            UserRoles = new UserRolesResource(this);
            VideoFormats = new VideoFormatsResource(this);
            BaseUri = GetEffectiveUri(BaseUriOverride, "https://dfareporting.googleapis.com/dfareporting/v4/");
            BatchUri = GetEffectiveUri(null, "https://dfareporting.googleapis.com/batch");
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features => new string[0];

        /// <summary>Gets the service name.</summary>
        public override string Name => "dfareporting";

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri { get; }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath => "dfareporting/v4/";

        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri { get; }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath => "batch";

        /// <summary>Available OAuth 2.0 scopes for use with the Campaign Manager 360 API.</summary>
        public class Scope
        {
            /// <summary>Manage DoubleClick Digital Marketing conversions</summary>
            public static string Ddmconversions = "https://www.googleapis.com/auth/ddmconversions";

            /// <summary>View and manage DoubleClick for Advertisers reports</summary>
            public static string Dfareporting = "https://www.googleapis.com/auth/dfareporting";

            /// <summary>View and manage your DoubleClick Campaign Manager's (DCM) display ad campaigns</summary>
            public static string Dfatrafficking = "https://www.googleapis.com/auth/dfatrafficking";
        }

        /// <summary>Available OAuth 2.0 scope constants for use with the Campaign Manager 360 API.</summary>
        public static class ScopeConstants
        {
            /// <summary>Manage DoubleClick Digital Marketing conversions</summary>
            public const string Ddmconversions = "https://www.googleapis.com/auth/ddmconversions";

            /// <summary>View and manage DoubleClick for Advertisers reports</summary>
            public const string Dfareporting = "https://www.googleapis.com/auth/dfareporting";

            /// <summary>View and manage your DoubleClick Campaign Manager's (DCM) display ad campaigns</summary>
            public const string Dfatrafficking = "https://www.googleapis.com/auth/dfatrafficking";
        }

        /// <summary>Gets the AccountActiveAdSummaries resource.</summary>
        public virtual AccountActiveAdSummariesResource AccountActiveAdSummaries { get; }

        /// <summary>Gets the AccountPermissionGroups resource.</summary>
        public virtual AccountPermissionGroupsResource AccountPermissionGroups { get; }

        /// <summary>Gets the AccountPermissions resource.</summary>
        public virtual AccountPermissionsResource AccountPermissions { get; }

        /// <summary>Gets the AccountUserProfiles resource.</summary>
        public virtual AccountUserProfilesResource AccountUserProfiles { get; }

        /// <summary>Gets the Accounts resource.</summary>
        public virtual AccountsResource Accounts { get; }

        /// <summary>Gets the Ads resource.</summary>
        public virtual AdsResource Ads { get; }

        /// <summary>Gets the AdvertiserGroups resource.</summary>
        public virtual AdvertiserGroupsResource AdvertiserGroups { get; }

        /// <summary>Gets the AdvertiserInvoices resource.</summary>
        public virtual AdvertiserInvoicesResource AdvertiserInvoices { get; }

        /// <summary>Gets the AdvertiserLandingPages resource.</summary>
        public virtual AdvertiserLandingPagesResource AdvertiserLandingPages { get; }

        /// <summary>Gets the Advertisers resource.</summary>
        public virtual AdvertisersResource Advertisers { get; }

        /// <summary>Gets the BillingAssignments resource.</summary>
        public virtual BillingAssignmentsResource BillingAssignments { get; }

        /// <summary>Gets the BillingProfiles resource.</summary>
        public virtual BillingProfilesResource BillingProfiles { get; }

        /// <summary>Gets the BillingRates resource.</summary>
        public virtual BillingRatesResource BillingRates { get; }

        /// <summary>Gets the Browsers resource.</summary>
        public virtual BrowsersResource Browsers { get; }

        /// <summary>Gets the CampaignCreativeAssociations resource.</summary>
        public virtual CampaignCreativeAssociationsResource CampaignCreativeAssociations { get; }

        /// <summary>Gets the Campaigns resource.</summary>
        public virtual CampaignsResource Campaigns { get; }

        /// <summary>Gets the ChangeLogs resource.</summary>
        public virtual ChangeLogsResource ChangeLogs { get; }

        /// <summary>Gets the Cities resource.</summary>
        public virtual CitiesResource Cities { get; }

        /// <summary>Gets the ConnectionTypes resource.</summary>
        public virtual ConnectionTypesResource ConnectionTypes { get; }

        /// <summary>Gets the ContentCategories resource.</summary>
        public virtual ContentCategoriesResource ContentCategories { get; }

        /// <summary>Gets the Conversions resource.</summary>
        public virtual ConversionsResource Conversions { get; }

        /// <summary>Gets the Countries resource.</summary>
        public virtual CountriesResource Countries { get; }

        /// <summary>Gets the CreativeAssets resource.</summary>
        public virtual CreativeAssetsResource CreativeAssets { get; }

        /// <summary>Gets the CreativeFieldValues resource.</summary>
        public virtual CreativeFieldValuesResource CreativeFieldValues { get; }

        /// <summary>Gets the CreativeFields resource.</summary>
        public virtual CreativeFieldsResource CreativeFields { get; }

        /// <summary>Gets the CreativeGroups resource.</summary>
        public virtual CreativeGroupsResource CreativeGroups { get; }

        /// <summary>Gets the Creatives resource.</summary>
        public virtual CreativesResource Creatives { get; }

        /// <summary>Gets the DimensionValues resource.</summary>
        public virtual DimensionValuesResource DimensionValues { get; }

        /// <summary>Gets the DirectorySites resource.</summary>
        public virtual DirectorySitesResource DirectorySites { get; }

        /// <summary>Gets the DynamicTargetingKeys resource.</summary>
        public virtual DynamicTargetingKeysResource DynamicTargetingKeys { get; }

        /// <summary>Gets the EventTags resource.</summary>
        public virtual EventTagsResource EventTags { get; }

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files { get; }

        /// <summary>Gets the FloodlightActivities resource.</summary>
        public virtual FloodlightActivitiesResource FloodlightActivities { get; }

        /// <summary>Gets the FloodlightActivityGroups resource.</summary>
        public virtual FloodlightActivityGroupsResource FloodlightActivityGroups { get; }

        /// <summary>Gets the FloodlightConfigurations resource.</summary>
        public virtual FloodlightConfigurationsResource FloodlightConfigurations { get; }

        /// <summary>Gets the InventoryItems resource.</summary>
        public virtual InventoryItemsResource InventoryItems { get; }

        /// <summary>Gets the Languages resource.</summary>
        public virtual LanguagesResource Languages { get; }

        /// <summary>Gets the Metros resource.</summary>
        public virtual MetrosResource Metros { get; }

        /// <summary>Gets the MobileApps resource.</summary>
        public virtual MobileAppsResource MobileApps { get; }

        /// <summary>Gets the MobileCarriers resource.</summary>
        public virtual MobileCarriersResource MobileCarriers { get; }

        /// <summary>Gets the OperatingSystemVersions resource.</summary>
        public virtual OperatingSystemVersionsResource OperatingSystemVersions { get; }

        /// <summary>Gets the OperatingSystems resource.</summary>
        public virtual OperatingSystemsResource OperatingSystems { get; }

        /// <summary>Gets the Orders resource.</summary>
        public virtual OrdersResource Orders { get; }

        /// <summary>Gets the PlacementGroups resource.</summary>
        public virtual PlacementGroupsResource PlacementGroups { get; }

        /// <summary>Gets the PlacementStrategies resource.</summary>
        public virtual PlacementStrategiesResource PlacementStrategies { get; }

        /// <summary>Gets the Placements resource.</summary>
        public virtual PlacementsResource Placements { get; }

        /// <summary>Gets the PlatformTypes resource.</summary>
        public virtual PlatformTypesResource PlatformTypes { get; }

        /// <summary>Gets the PostalCodes resource.</summary>
        public virtual PostalCodesResource PostalCodes { get; }

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects { get; }

        /// <summary>Gets the Regions resource.</summary>
        public virtual RegionsResource Regions { get; }

        /// <summary>Gets the RemarketingListShares resource.</summary>
        public virtual RemarketingListSharesResource RemarketingListShares { get; }

        /// <summary>Gets the RemarketingLists resource.</summary>
        public virtual RemarketingListsResource RemarketingLists { get; }

        /// <summary>Gets the Reports resource.</summary>
        public virtual ReportsResource Reports { get; }

        /// <summary>Gets the Sites resource.</summary>
        public virtual SitesResource Sites { get; }

        /// <summary>Gets the Sizes resource.</summary>
        public virtual SizesResource Sizes { get; }

        /// <summary>Gets the Subaccounts resource.</summary>
        public virtual SubaccountsResource Subaccounts { get; }

        /// <summary>Gets the TargetableRemarketingLists resource.</summary>
        public virtual TargetableRemarketingListsResource TargetableRemarketingLists { get; }

        /// <summary>Gets the TargetingTemplates resource.</summary>
        public virtual TargetingTemplatesResource TargetingTemplates { get; }

        /// <summary>Gets the TvCampaignDetails resource.</summary>
        public virtual TvCampaignDetailsResource TvCampaignDetails { get; }

        /// <summary>Gets the TvCampaignSummaries resource.</summary>
        public virtual TvCampaignSummariesResource TvCampaignSummaries { get; }

        /// <summary>Gets the UserProfiles resource.</summary>
        public virtual UserProfilesResource UserProfiles { get; }

        /// <summary>Gets the UserRolePermissionGroups resource.</summary>
        public virtual UserRolePermissionGroupsResource UserRolePermissionGroups { get; }

        /// <summary>Gets the UserRolePermissions resource.</summary>
        public virtual UserRolePermissionsResource UserRolePermissions { get; }

        /// <summary>Gets the UserRoles resource.</summary>
        public virtual UserRolesResource UserRoles { get; }

        /// <summary>Gets the VideoFormats resource.</summary>
        public virtual VideoFormatsResource VideoFormats { get; }
    }

    /// <summary>A base abstract class for Dfareporting requests.</summary>
    public abstract class DfareportingBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        /// <summary>Constructs a new DfareportingBaseServiceRequest instance.</summary>
        protected DfareportingBaseServiceRequest(Google.Apis.Services.IClientService service) : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1 = 0,

            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2 = 1,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json = 0,

            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media = 1,

            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto = 2,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>
        /// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required
        /// unless you provide an OAuth 2.0 token.
        /// </summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>
        /// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a
        /// user, but should not exceed 40 characters.
        /// </summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes Dfareporting parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();
            RequestParameters.Add("$.xgafv", new Google.Apis.Discovery.Parameter
            {
                Name = "$.xgafv",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("access_token", new Google.Apis.Discovery.Parameter
            {
                Name = "access_token",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("alt", new Google.Apis.Discovery.Parameter
            {
                Name = "alt",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = "json",
                Pattern = null,
            });
            RequestParameters.Add("callback", new Google.Apis.Discovery.Parameter
            {
                Name = "callback",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("fields", new Google.Apis.Discovery.Parameter
            {
                Name = "fields",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("key", new Google.Apis.Discovery.Parameter
            {
                Name = "key",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("oauth_token", new Google.Apis.Discovery.Parameter
            {
                Name = "oauth_token",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("prettyPrint", new Google.Apis.Discovery.Parameter
            {
                Name = "prettyPrint",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = "true",
                Pattern = null,
            });
            RequestParameters.Add("quotaUser", new Google.Apis.Discovery.Parameter
            {
                Name = "quotaUser",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("uploadType", new Google.Apis.Discovery.Parameter
            {
                Name = "uploadType",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
            RequestParameters.Add("upload_protocol", new Google.Apis.Discovery.Parameter
            {
                Name = "upload_protocol",
                IsRequired = false,
                ParameterType = "query",
                DefaultValue = null,
                Pattern = null,
            });
        }
    }

    /// <summary>The "accountActiveAdSummaries" collection of methods.</summary>
    public class AccountActiveAdSummariesResource
    {
        private const string Resource = "accountActiveAdSummaries";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountActiveAdSummariesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets the account's active ad summary by account ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="summaryAccountId">Account ID.</param>
        public virtual GetRequest Get(long profileId, long summaryAccountId)
        {
            return new GetRequest(this.service, profileId, summaryAccountId);
        }

        /// <summary>Gets the account's active ad summary by account ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountActiveAdSummary>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long summaryAccountId) : base(service)
            {
                ProfileId = profileId;
                SummaryAccountId = summaryAccountId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("summaryAccountId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long SummaryAccountId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountActiveAdSummaries/{+summaryAccountId}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("summaryAccountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "summaryAccountId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "accountPermissionGroups" collection of methods.</summary>
    public class AccountPermissionGroupsResource
    {
        private const string Resource = "accountPermissionGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountPermissionGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one account permission group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Account permission group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one account permission group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountPermissionGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account permission group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountPermissionGroups/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves the list of account permission groups.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves the list of account permission groups.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountPermissionGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountPermissionGroups";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "accountPermissions" collection of methods.</summary>
    public class AccountPermissionsResource
    {
        private const string Resource = "accountPermissions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountPermissionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one account permission by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Account permission ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one account permission by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountPermission>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account permission ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountPermissions/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves the list of account permissions.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves the list of account permissions.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountPermissionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountPermissions";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "accountUserProfiles" collection of methods.</summary>
    public class AccountUserProfilesResource
    {
        private const string Resource = "accountUserProfiles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountUserProfilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one account user profile by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User profile ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one account user profile by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountUserProfile>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/accountUserProfiles/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new account user profile.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.AccountUserProfile body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new account user profile.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountUserProfile>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.AccountUserProfile body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.AccountUserProfile Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountUserProfiles";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>
        /// Retrieves a list of account user profiles, possibly filtered. This method supports paging.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>
        /// Retrieves a list of account user profiles, possibly filtered. This method supports paging.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountUserProfilesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only active user profiles.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only user profiles with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name, ID or email. Wildcards (*) are allowed. For example, "user
            /// profile*2015" will return objects with names like "user profile June 2015", "user profile April 2015",
            /// or simply "user profile 2015". Most of the searches also add wildcards implicitly at the start and the
            /// end of the search string. For example, a search string of "user profile" will match objects with name
            /// "my user profile", "user profile 2015", or simply "user profile".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only user profiles with the specified subaccount ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }

            /// <summary>Select only user profiles with the specified user role ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userRoleId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> UserRoleId { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountUserProfiles";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("active", new Google.Apis.Discovery.Parameter
                {
                    Name = "active",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("subaccountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "subaccountId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("userRoleId", new Google.Apis.Discovery.Parameter
                {
                    Name = "userRoleId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing account user profile. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. AccountUserProfile ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.AccountUserProfile body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing account user profile. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountUserProfile>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.AccountUserProfile body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. AccountUserProfile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.AccountUserProfile Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountUserProfiles";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing account user profile.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.AccountUserProfile body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing account user profile.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountUserProfile>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.AccountUserProfile body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.AccountUserProfile Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accountUserProfiles";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "accounts" collection of methods.</summary>
    public class AccountsResource
    {
        private const string Resource = "accounts";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AccountsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one account by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Account ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one account by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Account>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Account ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accounts/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves the list of accounts, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves the list of accounts, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AccountsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>
            /// Select only active accounts. Don't set this field to select both active and non-active accounts.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only accounts with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "account*2015" will
            /// return objects with names like "account June 2015", "account April 2015", or simply "account 2015". Most
            /// of the searches also add wildcards implicitly at the start and the end of the search string. For
            /// example, a search string of "account" will match objects with name "my account", "account 2015", or
            /// simply "account".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accounts";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("active", new Google.Apis.Discovery.Parameter
                {
                    Name = "active",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing account. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Account ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Account body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing account. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Account>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Account body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Account ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Account Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accounts";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing account.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Account body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing account.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Account>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Account body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Account Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/accounts";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "ads" collection of methods.</summary>
    public class AdsResource
    {
        private const string Resource = "ads";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one ad by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Ad ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one ad by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Ad>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Ad ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/ads/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new ad.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Ad body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new ad.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Ad>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Ad body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Ad Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/ads";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of ads, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of ads, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only active ads.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only ads with this advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only archived ads.</summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only ads with these audience segment IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("audienceSegmentIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AudienceSegmentIds { get; set; }

            /// <summary>Select only ads with these campaign IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>
            /// Select default ads with the specified compatibility. Applicable when type is AD_SERVING_DEFAULT_AD.
            /// DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular
            /// or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps.
            /// IN_STREAM_VIDEO refers to rendering an in-stream video ads developed with the VAST standard.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("compatibility", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<CompatibilityEnum> Compatibility { get; set; }

            /// <summary>
            /// Select default ads with the specified compatibility. Applicable when type is AD_SERVING_DEFAULT_AD.
            /// DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop or on mobile devices for regular
            /// or interstitial ads, respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps.
            /// IN_STREAM_VIDEO refers to rendering an in-stream video ads developed with the VAST standard.
            /// </summary>
            public enum CompatibilityEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("DISPLAY")]
                DISPLAY = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("DISPLAY_INTERSTITIAL")]
                DISPLAYINTERSTITIAL = 1,

                /// <summary>Deprecated enum value. No longer supported.</summary>
                [Google.Apis.Util.StringValueAttribute("APP")]
                APP = 2,

                /// <summary>Deprecated enum value. No longer supported.</summary>
                [Google.Apis.Util.StringValueAttribute("APP_INTERSTITIAL")]
                APPINTERSTITIAL = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("IN_STREAM_VIDEO")]
                INSTREAMVIDEO = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("IN_STREAM_AUDIO")]
                INSTREAMAUDIO = 5,
            }

            /// <summary>Select only ads with these creative IDs assigned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CreativeIds { get; set; }

            /// <summary>Select only ads with these creative optimization configuration IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeOptimizationConfigurationIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CreativeOptimizationConfigurationIds { get; set; }

            /// <summary>
            /// Select only dynamic click trackers. Applicable when type is AD_SERVING_CLICK_TRACKER. If true, select
            /// dynamic click trackers. If false, select static click trackers. Leave unset to select both.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("dynamicClickTracker", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> DynamicClickTracker { get; set; }

            /// <summary>Select only ads with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only ads with these landing page IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("landingPageIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> LandingPageIds { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only ads with this event tag override ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("overriddenEventTagId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> OverriddenEventTagId { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only ads with these placement IDs assigned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PlacementIds { get; set; }

            /// <summary>Select only ads whose list targeting expression use these remarketing list IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("remarketingListIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RemarketingListIds { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "ad*2015" will
            /// return objects with names like "ad June 2015", "ad April 2015", or simply "ad 2015". Most of the
            /// searches also add wildcards implicitly at the start and the end of the search string. For example, a
            /// search string of "ad" will match objects with name "my ad", "ad 2015", or simply "ad".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only ads with these size IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sizeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SizeIds { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only ads that are SSL-compliant.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sslCompliant", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> SslCompliant { get; set; }

            /// <summary>Select only ads that require SSL.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sslRequired", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> SslRequired { get; set; }

            /// <summary>Select only ads with these types.</summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="TypeList"/> to set multiple
            /// values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypeEnum> Type { get; set; }

            /// <summary>Select only ads with these types.</summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="Type"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<TypeEnum> TypeList { get; set; }

            /// <summary>Select only ads with these types.</summary>
            public enum TypeEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_STANDARD_AD")]
                ADSERVINGSTANDARDAD = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_DEFAULT_AD")]
                ADSERVINGDEFAULTAD = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_CLICK_TRACKER")]
                ADSERVINGCLICKTRACKER = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_TRACKING")]
                ADSERVINGTRACKING = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("AD_SERVING_BRAND_SAFE_AD")]
                ADSERVINGBRANDSAFEAD = 4,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/ads";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("active", new Google.Apis.Discovery.Parameter
                {
                    Name = "active",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("archived", new Google.Apis.Discovery.Parameter
                {
                    Name = "archived",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("audienceSegmentIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "audienceSegmentIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("campaignIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("compatibility", new Google.Apis.Discovery.Parameter
                {
                    Name = "compatibility",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("creativeIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("creativeOptimizationConfigurationIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeOptimizationConfigurationIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("dynamicClickTracker", new Google.Apis.Discovery.Parameter
                {
                    Name = "dynamicClickTracker",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("landingPageIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "landingPageIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("overriddenEventTagId", new Google.Apis.Discovery.Parameter
                {
                    Name = "overriddenEventTagId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("placementIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "placementIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("remarketingListIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "remarketingListIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sizeIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "sizeIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("sslCompliant", new Google.Apis.Discovery.Parameter
                {
                    Name = "sslCompliant",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sslRequired", new Google.Apis.Discovery.Parameter
                {
                    Name = "sslRequired",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("type", new Google.Apis.Discovery.Parameter
                {
                    Name = "type",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing ad. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. RemarketingList ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Ad body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing ad. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Ad>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Ad body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. RemarketingList ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Ad Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/ads";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing ad.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Ad body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing ad.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Ad>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Ad body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Ad Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/ads";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "advertiserGroups" collection of methods.</summary>
    public class AdvertiserGroupsResource
    {
        private const string Resource = "advertiserGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdvertiserGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing advertiser group.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Advertiser group ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(this.service, profileId, id);
        }

        /// <summary>Deletes an existing advertiser group.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserGroups/{+id}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets one advertiser group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Advertiser group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one advertiser group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdvertiserGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserGroups/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new advertiser group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.AdvertiserGroup body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new advertiser group.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdvertiserGroup>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.AdvertiserGroup body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.AdvertiserGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserGroups";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of advertiser groups, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of advertiser groups, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdvertiserGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only advertiser groups with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "advertiser*2015"
            /// will return objects with names like "advertiser group June 2015", "advertiser group April 2015", or
            /// simply "advertiser group 2015". Most of the searches also add wildcards implicitly at the start and the
            /// end of the search string. For example, a search string of "advertisergroup" will match objects with name
            /// "my advertisergroup", "advertisergroup 2015", or simply "advertisergroup".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserGroups";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing advertiser group. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Advertiser Group ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.AdvertiserGroup body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing advertiser group. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdvertiserGroup>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.AdvertiserGroup body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Advertiser Group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.AdvertiserGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserGroups";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing advertiser group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.AdvertiserGroup body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing advertiser group.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdvertiserGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.AdvertiserGroup body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.AdvertiserGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserGroups";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "advertiserInvoices" collection of methods.</summary>
    public class AdvertiserInvoicesResource
    {
        private const string Resource = "advertiserInvoices";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdvertiserInvoicesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>
        /// Retrieves a list of invoices for a particular issue month. The api only works if the billing profile invoice
        /// level is set to either advertiser or campaign non-consolidated invoice level.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="advertiserId">Advertiser ID of this invoice.</param>
        public virtual ListRequest List(long profileId, long advertiserId)
        {
            return new ListRequest(this.service, profileId, advertiserId);
        }

        /// <summary>
        /// Retrieves a list of invoices for a particular issue month. The api only works if the billing profile invoice
        /// level is set to either advertiser or campaign non-consolidated invoice level.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdvertiserInvoicesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long advertiserId) : base(service)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser ID of this invoice.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long AdvertiserId { get; private set; }

            /// <summary>Month for which invoices are needed in the format YYYYMM. Required field</summary>
            [Google.Apis.Util.RequestParameterAttribute("issueMonth", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string IssueMonth { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertisers/{+advertiserId}/invoices";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("issueMonth", new Google.Apis.Discovery.Parameter
                {
                    Name = "issueMonth",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "advertiserLandingPages" collection of methods.</summary>
    public class AdvertiserLandingPagesResource
    {
        private const string Resource = "advertiserLandingPages";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdvertiserLandingPagesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one landing page by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Landing page ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one landing page by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.LandingPage>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Landing page ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserLandingPages/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new landing page.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.LandingPage body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new landing page.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.LandingPage>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.LandingPage body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.LandingPage Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserLandingPages";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of landing pages.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of landing pages.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdvertiserLandingPagesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only landing pages that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>
            /// Select only archived landing pages. Don't set this field to select both archived and non-archived
            /// landing pages.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only landing pages that are associated with these campaigns.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>Select only landing pages with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for landing pages by name or ID. Wildcards (*) are allowed. For example,
            /// "landingpage*2017" will return landing pages with names like "landingpage July 2017", "landingpage March
            /// 2017", or simply "landingpage 2017". Most of the searches also add wildcards implicitly at the start and
            /// the end of the search string. For example, a search string of "landingpage" will match campaigns with
            /// name "my landingpage", "landingpage 2015", or simply "landingpage".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only landing pages that belong to this subaccount.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserLandingPages";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("archived", new Google.Apis.Discovery.Parameter
                {
                    Name = "archived",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("campaignIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("subaccountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "subaccountId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing landing page. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Landing Page ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.LandingPage body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing landing page. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.LandingPage>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.LandingPage body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Landing Page ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.LandingPage Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserLandingPages";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing landing page.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.LandingPage body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing landing page.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.LandingPage>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.LandingPage body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.LandingPage Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertiserLandingPages";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "advertisers" collection of methods.</summary>
    public class AdvertisersResource
    {
        private const string Resource = "advertisers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AdvertisersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one advertiser by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Advertiser ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one advertiser by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Advertiser>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertisers/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new advertiser.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Advertiser body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new advertiser.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Advertiser>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Advertiser body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Advertiser Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertisers";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of advertisers, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of advertisers, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.AdvertisersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only advertisers with these advertiser group IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserGroupIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserGroupIds { get; set; }

            /// <summary>Select only advertisers with these floodlight configuration IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightConfigurationIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> FloodlightConfigurationIds { get; set; }

            /// <summary>Select only advertisers with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only advertisers which do not belong to any advertiser group.</summary>
            [Google.Apis.Util.RequestParameterAttribute("includeAdvertisersWithoutGroupsOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> IncludeAdvertisersWithoutGroupsOnly { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only advertisers which use another advertiser's floodlight configuration.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onlyParent", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> OnlyParent { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "advertiser*2015"
            /// will return objects with names like "advertiser June 2015", "advertiser April 2015", or simply
            /// "advertiser 2015". Most of the searches also add wildcards implicitly at the start and the end of the
            /// search string. For example, a search string of "advertiser" will match objects with name "my
            /// advertiser", "advertiser 2015", or simply "advertiser" .
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only advertisers with the specified status.</summary>
            [Google.Apis.Util.RequestParameterAttribute("status", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<StatusEnum> Status { get; set; }

            /// <summary>Select only advertisers with the specified status.</summary>
            public enum StatusEnum
            {
                /// <summary>Approved (ads can deliver)</summary>
                [Google.Apis.Util.StringValueAttribute("APPROVED")]
                APPROVED = 0,

                /// <summary>On-hold (all ads are stopped)</summary>
                [Google.Apis.Util.StringValueAttribute("ON_HOLD")]
                ONHOLD = 1,
            }

            /// <summary>Select only advertisers with these subaccount IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertisers";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserGroupIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserGroupIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("floodlightConfigurationIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightConfigurationIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("includeAdvertisersWithoutGroupsOnly", new Google.Apis.Discovery.Parameter
                {
                    Name = "includeAdvertisersWithoutGroupsOnly",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("onlyParent", new Google.Apis.Discovery.Parameter
                {
                    Name = "onlyParent",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("status", new Google.Apis.Discovery.Parameter
                {
                    Name = "status",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("subaccountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "subaccountId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing advertiser. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Advertiser ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Advertiser body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing advertiser. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Advertiser>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Advertiser body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Advertiser Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertisers";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing advertiser.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Advertiser body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing advertiser.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Advertiser>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Advertiser body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Advertiser Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/advertisers";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "billingAssignments" collection of methods.</summary>
    public class BillingAssignmentsResource
    {
        private const string Resource = "billingAssignments";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BillingAssignmentsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>
        /// Inserts a new billing assignment and returns the new assignment. Only one of advertiser_id or campaign_id is
        /// support per request. If the new assignment has no effect (assigning a campaign to the parent advertiser
        /// billing profile or assigning an advertiser to the account billing profile), no assignment will be returned.
        /// </summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="billingProfileId">Billing profile ID of this billing assignment.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.BillingAssignment body, long profileId, long billingProfileId)
        {
            return new InsertRequest(this.service, body, profileId, billingProfileId);
        }

        /// <summary>
        /// Inserts a new billing assignment and returns the new assignment. Only one of advertiser_id or campaign_id is
        /// support per request. If the new assignment has no effect (assigning a campaign to the parent advertiser
        /// billing profile or assigning an advertiser to the account billing profile), no assignment will be returned.
        /// </summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.BillingAssignment>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.BillingAssignment body, long profileId, long billingProfileId) : base(service)
            {
                ProfileId = profileId;
                BillingProfileId = billingProfileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Billing profile ID of this billing assignment.</summary>
            [Google.Apis.Util.RequestParameterAttribute("billingProfileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long BillingProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.BillingAssignment Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/billingProfiles/{+billingProfileId}/billingAssignments";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("billingProfileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "billingProfileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of billing assignments.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="billingProfileId">Billing profile ID of this billing assignment.</param>
        public virtual ListRequest List(long profileId, long billingProfileId)
        {
            return new ListRequest(this.service, profileId, billingProfileId);
        }

        /// <summary>Retrieves a list of billing assignments.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.BillingAssignmentsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long billingProfileId) : base(service)
            {
                ProfileId = profileId;
                BillingProfileId = billingProfileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Billing profile ID of this billing assignment.</summary>
            [Google.Apis.Util.RequestParameterAttribute("billingProfileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long BillingProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/billingProfiles/{+billingProfileId}/billingAssignments";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("billingProfileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "billingProfileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "billingProfiles" collection of methods.</summary>
    public class BillingProfilesResource
    {
        private const string Resource = "billingProfiles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BillingProfilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one billing profile by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Billing Profile ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one billing profile by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.BillingProfile>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Billing Profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/billingProfiles/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of billing profiles, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of billing profiles, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.BillingProfilesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only billing profile with currency.</summary>
            [Google.Apis.Util.RequestParameterAttribute("currency_code", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CurrencyCode { get; set; }

            /// <summary>Select only billing profile with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>
            /// Allows searching for billing profiles by name. Wildcards (*) are allowed. For example, "profile*2020"
            /// will return objects with names like "profile June 2020", "profile April 2020", or simply "profile 2020".
            /// Most of the searches also add wildcards implicitly at the start and the end of the search string. For
            /// example, a search string of "profile" will match objects with name "my profile", "profile 2021", or
            /// simply "profile".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>
            /// Select only billing profile which is suggested for the currency_code &amp;amp; subaccount_id using the
            /// Billing Suggestion API.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("onlySuggestion", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> OnlySuggestion { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only billing profile with the specified status.</summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="StatusList"/> to set multiple
            /// values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("status", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<StatusEnum> Status { get; set; }

            /// <summary>Select only billing profile with the specified status.</summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="Status"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("status", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<StatusEnum> StatusList { get; set; }

            /// <summary>Select only billing profile with the specified status.</summary>
            public enum StatusEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("UNDER_REVIEW")]
                UNDERREVIEW = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTIVE")]
                ACTIVE = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ARCHIVED")]
                ARCHIVED = 2,
            }

            /// <summary>
            /// Select only billing profile with the specified subaccount.When only_suggestion is true, only a single
            /// subaccount_id is supported.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SubaccountIds { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/billingProfiles";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("currency_code", new Google.Apis.Discovery.Parameter
                {
                    Name = "currency_code",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                {
                    Name = "name",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("onlySuggestion", new Google.Apis.Discovery.Parameter
                {
                    Name = "onlySuggestion",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("status", new Google.Apis.Discovery.Parameter
                {
                    Name = "status",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("subaccountIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "subaccountIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing billing profile.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.BillingProfile body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing billing profile.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.BillingProfile>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.BillingProfile body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.BillingProfile Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/billingProfiles";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "billingRates" collection of methods.</summary>
    public class BillingRatesResource
    {
        private const string Resource = "billingRates";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BillingRatesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Retrieves a list of billing rates. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="billingProfileId">Billing profile ID of this billing rate.</param>
        public virtual ListRequest List(long profileId, long billingProfileId)
        {
            return new ListRequest(this.service, profileId, billingProfileId);
        }

        /// <summary>Retrieves a list of billing rates. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.BillingRatesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long billingProfileId) : base(service)
            {
                ProfileId = profileId;
                BillingProfileId = billingProfileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Billing profile ID of this billing rate.</summary>
            [Google.Apis.Util.RequestParameterAttribute("billingProfileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long BillingProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/billingProfiles/{+billingProfileId}/billingRates";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("billingProfileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "billingProfileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "browsers" collection of methods.</summary>
    public class BrowsersResource
    {
        private const string Resource = "browsers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public BrowsersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Retrieves a list of browsers.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of browsers.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.BrowsersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/browsers";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "campaignCreativeAssociations" collection of methods.</summary>
    public class CampaignCreativeAssociationsResource
    {
        private const string Resource = "campaignCreativeAssociations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CampaignCreativeAssociationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>
        /// Associates a creative with the specified campaign. This method creates a default ad with dimensions matching
        /// the creative in the campaign if such a default ad does not exist already.
        /// </summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="campaignId">Campaign ID in this association.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.CampaignCreativeAssociation body, long profileId, long campaignId)
        {
            return new InsertRequest(this.service, body, profileId, campaignId);
        }

        /// <summary>
        /// Associates a creative with the specified campaign. This method creates a default ad with dimensions matching
        /// the creative in the campaign if such a default ad does not exist already.
        /// </summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CampaignCreativeAssociation>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CampaignCreativeAssociation body, long profileId, long campaignId) : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Campaign ID in this association.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CampaignCreativeAssociation Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/campaigns/{+campaignId}/campaignCreativeAssociations";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("campaignId", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>
        /// Retrieves the list of creative IDs associated with the specified campaign. This method supports paging.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="campaignId">Campaign ID in this association.</param>
        public virtual ListRequest List(long profileId, long campaignId)
        {
            return new ListRequest(this.service, profileId, campaignId);
        }

        /// <summary>
        /// Retrieves the list of creative IDs associated with the specified campaign. This method supports paging.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CampaignCreativeAssociationsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long campaignId) : base(service)
            {
                ProfileId = profileId;
                CampaignId = campaignId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Campaign ID in this association.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CampaignId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/campaigns/{+campaignId}/campaignCreativeAssociations";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("campaignId", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "campaigns" collection of methods.</summary>
    public class CampaignsResource
    {
        private const string Resource = "campaigns";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CampaignsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one campaign by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Campaign ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one campaign by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Campaign>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/campaigns/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new campaign.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Campaign body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new campaign.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Campaign>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Campaign body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Campaign Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/campaigns";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of campaigns, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of campaigns, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CampaignsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only campaigns whose advertisers belong to these advertiser groups.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserGroupIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserGroupIds { get; set; }

            /// <summary>Select only campaigns that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>
            /// Select only archived campaigns. Don't set this field to select both archived and non-archived campaigns.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only campaigns that have at least one optimization activity.</summary>
            [Google.Apis.Util.RequestParameterAttribute("atLeastOneOptimizationActivity", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AtLeastOneOptimizationActivity { get; set; }

            /// <summary>Exclude campaigns with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("excludedIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ExcludedIds { get; set; }

            /// <summary>Select only campaigns with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only campaigns that have overridden this event tag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("overriddenEventTagId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> OverriddenEventTagId { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for campaigns by name or ID. Wildcards (*) are allowed. For example, "campaign*2015"
            /// will return campaigns with names like "campaign June 2015", "campaign April 2015", or simply "campaign
            /// 2015". Most of the searches also add wildcards implicitly at the start and the end of the search string.
            /// For example, a search string of "campaign" will match campaigns with name "my campaign", "campaign
            /// 2015", or simply "campaign".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only campaigns that belong to this subaccount.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/campaigns";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserGroupIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserGroupIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("advertiserIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("archived", new Google.Apis.Discovery.Parameter
                {
                    Name = "archived",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("atLeastOneOptimizationActivity", new Google.Apis.Discovery.Parameter
                {
                    Name = "atLeastOneOptimizationActivity",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("excludedIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "excludedIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("overriddenEventTagId", new Google.Apis.Discovery.Parameter
                {
                    Name = "overriddenEventTagId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("subaccountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "subaccountId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing campaign. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Campaign ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Campaign body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing campaign. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Campaign>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Campaign body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Campaign Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/campaigns";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing campaign.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Campaign body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing campaign.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Campaign>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Campaign body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Campaign Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/campaigns";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "changeLogs" collection of methods.</summary>
    public class ChangeLogsResource
    {
        private const string Resource = "changeLogs";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ChangeLogsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one change log by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Change log ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one change log by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ChangeLog>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Change log ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/changeLogs/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of change logs. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of change logs. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ChangeLogsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only change logs with the specified action.</summary>
            [Google.Apis.Util.RequestParameterAttribute("action", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ActionEnum> Action { get; set; }

            /// <summary>Select only change logs with the specified action.</summary>
            public enum ActionEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_CREATE")]
                ACTIONCREATE = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_UPDATE")]
                ACTIONUPDATE = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_DELETE")]
                ACTIONDELETE = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_ENABLE")]
                ACTIONENABLE = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_DISABLE")]
                ACTIONDISABLE = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_ADD")]
                ACTIONADD = 5,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_REMOVE")]
                ACTIONREMOVE = 6,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_MARK_AS_DEFAULT")]
                ACTIONMARKASDEFAULT = 7,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_ASSOCIATE")]
                ACTIONASSOCIATE = 8,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_ASSIGN")]
                ACTIONASSIGN = 9,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_UNASSIGN")]
                ACTIONUNASSIGN = 10,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_SEND")]
                ACTIONSEND = 11,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_LINK")]
                ACTIONLINK = 12,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_UNLINK")]
                ACTIONUNLINK = 13,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_PUSH")]
                ACTIONPUSH = 14,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_EMAIL_TAGS")]
                ACTIONEMAILTAGS = 15,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ACTION_SHARE")]
                ACTIONSHARE = 16,
            }

            /// <summary>Select only change logs with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>
            /// Select only change logs whose change time is before the specified maxChangeTime.The time should be
            /// formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the
            /// America/New York time zone, the format is "2015-07-18T22:54:00-04:00". In other words, the year, month,
            /// day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("maxChangeTime", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxChangeTime { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>
            /// Select only change logs whose change time is after the specified minChangeTime.The time should be
            /// formatted as an RFC3339 date/time string. For example, for 10:54 PM on July 18th, 2015, in the
            /// America/New York time zone, the format is "2015-07-18T22:54:00-04:00". In other words, the year, month,
            /// day, the letter T, the hour (24-hour clock system), minute, second, and then the time zone offset.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("minChangeTime", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinChangeTime { get; set; }

            /// <summary>Select only change logs with these object IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("objectIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ObjectIds { get; set; }

            /// <summary>Select only change logs with the specified object type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("objectType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ObjectTypeEnum> ObjectType { get; set; }

            /// <summary>Select only change logs with the specified object type.</summary>
            public enum ObjectTypeEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_ADVERTISER")]
                OBJECTADVERTISER = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_FLOODLIGHT_CONFIGURATION")]
                OBJECTFLOODLIGHTCONFIGURATION = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_AD")]
                OBJECTAD = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_FLOODLIGHT_ACTVITY")]
                OBJECTFLOODLIGHTACTVITY = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CAMPAIGN")]
                OBJECTCAMPAIGN = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_FLOODLIGHT_ACTIVITY_GROUP")]
                OBJECTFLOODLIGHTACTIVITYGROUP = 5,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE")]
                OBJECTCREATIVE = 6,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_PLACEMENT")]
                OBJECTPLACEMENT = 7,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_DFA_SITE")]
                OBJECTDFASITE = 8,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_USER_ROLE")]
                OBJECTUSERROLE = 9,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_USER_PROFILE")]
                OBJECTUSERPROFILE = 10,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_ADVERTISER_GROUP")]
                OBJECTADVERTISERGROUP = 11,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_ACCOUNT")]
                OBJECTACCOUNT = 12,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_SUBACCOUNT")]
                OBJECTSUBACCOUNT = 13,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_RICHMEDIA_CREATIVE")]
                OBJECTRICHMEDIACREATIVE = 14,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_INSTREAM_CREATIVE")]
                OBJECTINSTREAMCREATIVE = 15,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_MEDIA_ORDER")]
                OBJECTMEDIAORDER = 16,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CONTENT_CATEGORY")]
                OBJECTCONTENTCATEGORY = 17,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_PLACEMENT_STRATEGY")]
                OBJECTPLACEMENTSTRATEGY = 18,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_SD_SITE")]
                OBJECTSDSITE = 19,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_SIZE")]
                OBJECTSIZE = 20,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE_GROUP")]
                OBJECTCREATIVEGROUP = 21,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE_ASSET")]
                OBJECTCREATIVEASSET = 22,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_USER_PROFILE_FILTER")]
                OBJECTUSERPROFILEFILTER = 23,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_LANDING_PAGE")]
                OBJECTLANDINGPAGE = 24,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE_FIELD")]
                OBJECTCREATIVEFIELD = 25,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_REMARKETING_LIST")]
                OBJECTREMARKETINGLIST = 26,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_PROVIDED_LIST_CLIENT")]
                OBJECTPROVIDEDLISTCLIENT = 27,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_EVENT_TAG")]
                OBJECTEVENTTAG = 28,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE_BUNDLE")]
                OBJECTCREATIVEBUNDLE = 29,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_BILLING_ACCOUNT_GROUP")]
                OBJECTBILLINGACCOUNTGROUP = 30,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_BILLING_FEATURE")]
                OBJECTBILLINGFEATURE = 31,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_RATE_CARD")]
                OBJECTRATECARD = 32,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_ACCOUNT_BILLING_FEATURE")]
                OBJECTACCOUNTBILLINGFEATURE = 33,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_BILLING_MINIMUM_FEE")]
                OBJECTBILLINGMINIMUMFEE = 34,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_BILLING_PROFILE")]
                OBJECTBILLINGPROFILE = 35,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_PLAYSTORE_LINK")]
                OBJECTPLAYSTORELINK = 36,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_TARGETING_TEMPLATE")]
                OBJECTTARGETINGTEMPLATE = 37,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_SEARCH_LIFT_STUDY")]
                OBJECTSEARCHLIFTSTUDY = 38,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_FLOODLIGHT_DV360_LINK")]
                OBJECTFLOODLIGHTDV360LINK = 39,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_ADVERTISER_CUSTOMER_LINK")]
                OBJECTADVERTISERCUSTOMERLINK = 40,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CONVERSION_DOMAIN")]
                OBJECTCONVERSIONDOMAIN = 43,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_ACCOUNT_CONVERSION_DOMAIN")]
                OBJECTACCOUNTCONVERSIONDOMAIN = 44,
            }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Select only change logs whose object ID, user name, old or new values match the search string.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only change logs with these user profile IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("userProfileIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> UserProfileIds { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/changeLogs";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("action", new Google.Apis.Discovery.Parameter
                {
                    Name = "action",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxChangeTime", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxChangeTime",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("minChangeTime", new Google.Apis.Discovery.Parameter
                {
                    Name = "minChangeTime",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("objectIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "objectIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("objectType", new Google.Apis.Discovery.Parameter
                {
                    Name = "objectType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("userProfileIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "userProfileIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "cities" collection of methods.</summary>
    public class CitiesResource
    {
        private const string Resource = "cities";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CitiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Retrieves a list of cities, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of cities, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CitiesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only cities from these countries.</summary>
            [Google.Apis.Util.RequestParameterAttribute("countryDartIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CountryDartIds { get; set; }

            /// <summary>Select only cities with these DART IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dartIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DartIds { get; set; }

            /// <summary>Select only cities with names starting with this prefix.</summary>
            [Google.Apis.Util.RequestParameterAttribute("namePrefix", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string NamePrefix { get; set; }

            /// <summary>Select only cities from these regions.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionDartIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RegionDartIds { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/cities";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("countryDartIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "countryDartIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("dartIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "dartIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("namePrefix", new Google.Apis.Discovery.Parameter
                {
                    Name = "namePrefix",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("regionDartIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "regionDartIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "connectionTypes" collection of methods.</summary>
    public class ConnectionTypesResource
    {
        private const string Resource = "connectionTypes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ConnectionTypesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one connection type by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Connection type ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one connection type by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ConnectionType>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Connection type ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/connectionTypes/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of connection types.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of connection types.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ConnectionTypesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/connectionTypes";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "contentCategories" collection of methods.</summary>
    public class ContentCategoriesResource
    {
        private const string Resource = "contentCategories";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ContentCategoriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing content category.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Content category ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(this.service, profileId, id);
        }

        /// <summary>Deletes an existing content category.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Content category ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/contentCategories/{+id}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets one content category by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Content category ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one content category by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ContentCategory>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Content category ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/contentCategories/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new content category.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.ContentCategory body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new content category.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ContentCategory>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.ContentCategory body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.ContentCategory Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/contentCategories";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of content categories, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of content categories, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ContentCategoriesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only content categories with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "contentcategory*2015" will return objects with names like "contentcategory June 2015", "contentcategory
            /// April 2015", or simply "contentcategory 2015". Most of the searches also add wildcards implicitly at the
            /// start and the end of the search string. For example, a search string of "contentcategory" will match
            /// objects with name "my contentcategory", "contentcategory 2015", or simply "contentcategory".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/contentCategories";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing content category. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. ContentCategory ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.ContentCategory body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing content category. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ContentCategory>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.ContentCategory body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. ContentCategory ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.ContentCategory Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/contentCategories";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing content category.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.ContentCategory body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing content category.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ContentCategory>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.ContentCategory body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.ContentCategory Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/contentCategories";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "conversions" collection of methods.</summary>
    public class ConversionsResource
    {
        private const string Resource = "conversions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ConversionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Inserts conversions.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual BatchinsertRequest Batchinsert(Google.Apis.Dfareporting.v4.Data.ConversionsBatchInsertRequest body, long profileId)
        {
            return new BatchinsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts conversions.</summary>
        public class BatchinsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ConversionsBatchInsertResponse>
        {
            /// <summary>Constructs a new Batchinsert request.</summary>
            public BatchinsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.ConversionsBatchInsertRequest body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.ConversionsBatchInsertRequest Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "batchinsert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/conversions/batchinsert";

            /// <summary>Initializes Batchinsert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates existing conversions.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual BatchupdateRequest Batchupdate(Google.Apis.Dfareporting.v4.Data.ConversionsBatchUpdateRequest body, long profileId)
        {
            return new BatchupdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates existing conversions.</summary>
        public class BatchupdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ConversionsBatchUpdateResponse>
        {
            /// <summary>Constructs a new Batchupdate request.</summary>
            public BatchupdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.ConversionsBatchUpdateRequest body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.ConversionsBatchUpdateRequest Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "batchupdate";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/conversions/batchupdate";

            /// <summary>Initializes Batchupdate parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "countries" collection of methods.</summary>
    public class CountriesResource
    {
        private const string Resource = "countries";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CountriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one country by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="dartId">Country DART ID.</param>
        public virtual GetRequest Get(long profileId, long dartId)
        {
            return new GetRequest(this.service, profileId, dartId);
        }

        /// <summary>Gets one country by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Country>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long dartId) : base(service)
            {
                ProfileId = profileId;
                DartId = dartId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Country DART ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dartId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long DartId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/countries/{+dartId}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("dartId", new Google.Apis.Discovery.Parameter
                {
                    Name = "dartId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of countries.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of countries.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CountriesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/countries";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "creativeAssets" collection of methods.</summary>
    public class CreativeAssetsResource
    {
        private const string Resource = "creativeAssets";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativeAssetsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Inserts a new creative asset.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="advertiserId">Advertiser ID of this creative. This is a required field.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.CreativeAssetMetadata body, long profileId, long advertiserId)
        {
            return new InsertRequest(this.service, body, profileId, advertiserId);
        }

        /// <summary>Inserts a new creative asset.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeAssetMetadata>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeAssetMetadata body, long profileId, long advertiserId) : base(service)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser ID of this creative. This is a required field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long AdvertiserId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeAssetMetadata Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeAssets/{+advertiserId}/creativeAssets";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new creative asset.</summary>
        /// <remarks>
        /// Considerations regarding <paramref name="stream"/>:
        /// <list type="bullet">
        /// <item>
        /// <description>
        /// If <paramref name="stream"/> is seekable, then the stream position will be reset to <c>0</c> before reading
        /// commences. If <paramref name="stream"/> is not seekable, then it will be read from its current position
        /// </description>
        /// </item>
        /// <item>
        /// <description>
        /// Caller is responsible for maintaining the <paramref name="stream"/> open until the upload is completed
        /// </description>
        /// </item>
        /// <item><description>Caller is responsible for closing the <paramref name="stream"/></description></item>
        /// </list>
        /// </remarks>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="advertiserId">Advertiser ID of this creative. This is a required field.</param>
        /// <param name="stream">The stream to upload. See remarks for further information.</param>
        /// <param name="contentType">The content type of the stream to upload.</param>
        public virtual InsertMediaUpload Insert(Google.Apis.Dfareporting.v4.Data.CreativeAssetMetadata body, long profileId, long advertiserId, System.IO.Stream stream, string contentType)
        {
            return new InsertMediaUpload(service, body, profileId, advertiserId, stream, contentType);
        }

        /// <summary>Insert media upload which supports resumable upload.</summary>
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.Dfareporting.v4.Data.CreativeAssetMetadata, Google.Apis.Dfareporting.v4.Data.CreativeAssetMetadata>
        {
            /// <summary>V1 error format.</summary>
            [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

            /// <summary>V1 error format.</summary>
            public enum XgafvEnum
            {
                /// <summary>v1 error format</summary>
                [Google.Apis.Util.StringValueAttribute("1")]
                Value1 = 0,

                /// <summary>v2 error format</summary>
                [Google.Apis.Util.StringValueAttribute("2")]
                Value2 = 1,
            }

            /// <summary>OAuth access token.</summary>
            [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AccessToken { get; set; }

            /// <summary>Data format for response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<AltEnum> Alt { get; set; }

            /// <summary>Data format for response.</summary>
            public enum AltEnum
            {
                /// <summary>Responses with Content-Type of application/json</summary>
                [Google.Apis.Util.StringValueAttribute("json")]
                Json = 0,

                /// <summary>Media download with context-dependent Content-Type</summary>
                [Google.Apis.Util.StringValueAttribute("media")]
                Media = 1,

                /// <summary>Responses with Content-Type of application/x-protobuf</summary>
                [Google.Apis.Util.StringValueAttribute("proto")]
                Proto = 2,
            }

            /// <summary>JSONP</summary>
            [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Callback { get; set; }

            /// <summary>Selector specifying which fields to include in a partial response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Fields { get; set; }

            /// <summary>
            /// API key. Your API key identifies your project and provides you with API access, quota, and reports.
            /// Required unless you provide an OAuth 2.0 token.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Key { get; set; }

            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OauthToken { get; set; }

            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint { get; set; }

            /// <summary>
            /// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned
            /// to a user, but should not exceed 40 characters.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string QuotaUser { get; set; }

            /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
            [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UploadType { get; set; }

            /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
            [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UploadProtocol { get; set; }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Advertiser ID of this creative. This is a required field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long AdvertiserId { get; private set; }

            /// <summary>Constructs a new Insert media upload instance.</summary>
            /// <remarks>
            /// Considerations regarding <paramref name="stream"/>:
            /// <list type="bullet">
            /// <item>
            /// <description>
            /// If <paramref name="stream"/> is seekable, then the stream position will be reset to <c>0</c> before
            /// reading commences. If <paramref name="stream"/> is not seekable, then it will be read from its current
            /// position
            /// </description>
            /// </item>
            /// <item>
            /// <description>
            /// Caller is responsible for maintaining the <paramref name="stream"/> open until the upload is completed
            /// </description>
            /// </item>
            /// <item><description>Caller is responsible for closing the <paramref name="stream"/></description></item>
            /// </list>
            /// </remarks>
            public InsertMediaUpload(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeAssetMetadata body, long profileId, long advertiserId, System.IO.Stream stream, string contentType)
                : base(service, string.Format("/{0}/{1}{2}", "upload", service.BasePath, "userprofiles/{+profileId}/creativeAssets/{+advertiserId}/creativeAssets"), "POST", stream, contentType)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                Body = body;
            }
        }
    }

    /// <summary>The "creativeFieldValues" collection of methods.</summary>
    public class CreativeFieldValuesResource
    {
        private const string Resource = "creativeFieldValues";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativeFieldValuesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing creative field value.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="creativeFieldId">Creative field ID for this creative field value.</param>
        /// <param name="id">Creative Field Value ID</param>
        public virtual DeleteRequest Delete(long profileId, long creativeFieldId, long id)
        {
            return new DeleteRequest(this.service, profileId, creativeFieldId, id);
        }

        /// <summary>Deletes an existing creative field value.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long creativeFieldId, long id) : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Creative Field Value ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues/{+id}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("creativeFieldId", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeFieldId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets one creative field value by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="creativeFieldId">Creative field ID for this creative field value.</param>
        /// <param name="id">Creative Field Value ID</param>
        public virtual GetRequest Get(long profileId, long creativeFieldId, long id)
        {
            return new GetRequest(this.service, profileId, creativeFieldId, id);
        }

        /// <summary>Gets one creative field value by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeFieldValue>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long creativeFieldId, long id) : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Creative Field Value ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("creativeFieldId", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeFieldId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new creative field value.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="creativeFieldId">Creative field ID for this creative field value.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.CreativeFieldValue body, long profileId, long creativeFieldId)
        {
            return new InsertRequest(this.service, body, profileId, creativeFieldId);
        }

        /// <summary>Inserts a new creative field value.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeFieldValue>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeFieldValue body, long profileId, long creativeFieldId) : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeFieldValue Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("creativeFieldId", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeFieldId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>
        /// Retrieves a list of creative field values, possibly filtered. This method supports paging.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="creativeFieldId">Creative field ID for this creative field value.</param>
        public virtual ListRequest List(long profileId, long creativeFieldId)
        {
            return new ListRequest(this.service, profileId, creativeFieldId);
        }

        /// <summary>
        /// Retrieves a list of creative field values, possibly filtered. This method supports paging.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeFieldValuesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long creativeFieldId) : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Select only creative field values with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for creative field values by their values. Wildcards (e.g. *) are not allowed.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("VALUE")]
                VALUE = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("creativeFieldId", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeFieldId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing creative field value. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="creativeFieldId">CreativeField ID.</param>
        /// <param name="id">CreativeFieldValue ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.CreativeFieldValue body, long profileId, long creativeFieldId, long id)
        {
            return new PatchRequest(this.service, body, profileId, creativeFieldId, id);
        }

        /// <summary>Updates an existing creative field value. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeFieldValue>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeFieldValue body, long profileId, long creativeFieldId, long id) : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>CreativeField ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>CreativeFieldValue ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeFieldValue Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("creativeFieldId", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeFieldId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing creative field value.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="creativeFieldId">Creative field ID for this creative field value.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.CreativeFieldValue body, long profileId, long creativeFieldId)
        {
            return new UpdateRequest(this.service, body, profileId, creativeFieldId);
        }

        /// <summary>Updates an existing creative field value.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeFieldValue>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeFieldValue body, long profileId, long creativeFieldId) : base(service)
            {
                ProfileId = profileId;
                CreativeFieldId = creativeFieldId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative field ID for this creative field value.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long CreativeFieldId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeFieldValue Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields/{+creativeFieldId}/creativeFieldValues";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("creativeFieldId", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeFieldId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "creativeFields" collection of methods.</summary>
    public class CreativeFieldsResource
    {
        private const string Resource = "creativeFields";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativeFieldsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing creative field.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative Field ID</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(this.service, profileId, id);
        }

        /// <summary>Deletes an existing creative field.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative Field ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields/{+id}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets one creative field by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative Field ID</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one creative field by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeField>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative Field ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new creative field.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.CreativeField body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new creative field.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeField>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeField body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeField Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of creative fields, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of creative fields, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeFieldsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only creative fields that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only creative fields with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for creative fields by name or ID. Wildcards (*) are allowed. For example,
            /// "creativefield*2015" will return creative fields with names like "creativefield June 2015",
            /// "creativefield April 2015", or simply "creativefield 2015". Most of the searches also add wild-cards
            /// implicitly at the start and the end of the search string. For example, a search string of
            /// "creativefield" will match creative fields with the name "my creativefield", "creativefield 2015", or
            /// simply "creativefield".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing creative field. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">CreativeField ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.CreativeField body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing creative field. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeField>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeField body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>CreativeField ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeField Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing creative field.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.CreativeField body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing creative field.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeField>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeField body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeField Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeFields";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "creativeGroups" collection of methods.</summary>
    public class CreativeGroupsResource
    {
        private const string Resource = "creativeGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativeGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one creative group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one creative group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeGroups/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new creative group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.CreativeGroup body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new creative group.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeGroup>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeGroup body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeGroups";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of creative groups, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of creative groups, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only creative groups that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only creative groups that belong to this subgroup.</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupNumber", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> GroupNumber { get; set; }

            /// <summary>Select only creative groups with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for creative groups by name or ID. Wildcards (*) are allowed. For example,
            /// "creativegroup*2015" will return creative groups with names like "creativegroup June 2015",
            /// "creativegroup April 2015", or simply "creativegroup 2015". Most of the searches also add wild-cards
            /// implicitly at the start and the end of the search string. For example, a search string of
            /// "creativegroup" will match creative groups with the name "my creativegroup", "creativegroup 2015", or
            /// simply "creativegroup".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeGroups";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("groupNumber", new Google.Apis.Discovery.Parameter
                {
                    Name = "groupNumber",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing creative group. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Creative Group ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.CreativeGroup body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing creative group. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeGroup>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeGroup body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Creative Group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeGroups";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing creative group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.CreativeGroup body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing creative group.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativeGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.CreativeGroup body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.CreativeGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creativeGroups";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "creatives" collection of methods.</summary>
    public class CreativesResource
    {
        private const string Resource = "creatives";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public CreativesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one creative by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Creative ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one creative by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Creative>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Creative ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creatives/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new creative.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Creative body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new creative.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Creative>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Creative body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Creative Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creatives";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of creatives, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of creatives, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CreativesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only active creatives. Leave blank to select active and inactive creatives.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only creatives with this advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>
            /// Select only archived creatives. Leave blank to select archived and unarchived creatives.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("archived", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Archived { get; set; }

            /// <summary>Select only creatives with this campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> CampaignId { get; set; }

            /// <summary>Select only in-stream video creatives with these companion IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("companionCreativeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CompanionCreativeIds { get; set; }

            /// <summary>Select only creatives with these creative field IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("creativeFieldIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CreativeFieldIds { get; set; }

            /// <summary>Select only creatives with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only creatives with these rendering IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("renderingIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> RenderingIds { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "creative*2015" will
            /// return objects with names like "creative June 2015", "creative April 2015", or simply "creative 2015".
            /// Most of the searches also add wildcards implicitly at the start and the end of the search string. For
            /// example, a search string of "creative" will match objects with name "my creative", "creative 2015", or
            /// simply "creative".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only creatives with these size IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sizeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SizeIds { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only creatives corresponding to this Studio creative ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("studioCreativeId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> StudioCreativeId { get; set; }

            /// <summary>Select only creatives with these creative types.</summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="TypesList"/> to set multiple
            /// values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("types", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypesEnum> Types { get; set; }

            /// <summary>Select only creatives with these creative types.</summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="Types"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("types", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<TypesEnum> TypesList { get; set; }

            /// <summary>Select only creatives with these creative types.</summary>
            public enum TypesEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("IMAGE")]
                IMAGE = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("DISPLAY_REDIRECT")]
                DISPLAYREDIRECT = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("CUSTOM_DISPLAY")]
                CUSTOMDISPLAY = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("INTERNAL_REDIRECT")]
                INTERNALREDIRECT = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("CUSTOM_DISPLAY_INTERSTITIAL")]
                CUSTOMDISPLAYINTERSTITIAL = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("INTERSTITIAL_INTERNAL_REDIRECT")]
                INTERSTITIALINTERNALREDIRECT = 5,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("TRACKING_TEXT")]
                TRACKINGTEXT = 6,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_DISPLAY_BANNER")]
                RICHMEDIADISPLAYBANNER = 7,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_INPAGE_FLOATING")]
                RICHMEDIAINPAGEFLOATING = 8,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_IM_EXPAND")]
                RICHMEDIAIMEXPAND = 9,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_DISPLAY_EXPANDING")]
                RICHMEDIADISPLAYEXPANDING = 10,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_DISPLAY_INTERSTITIAL")]
                RICHMEDIADISPLAYINTERSTITIAL = 11,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL")]
                RICHMEDIADISPLAYMULTIFLOATINGINTERSTITIAL = 12,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_MOBILE_IN_APP")]
                RICHMEDIAMOBILEINAPP = 13,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("FLASH_INPAGE")]
                FLASHINPAGE = 14,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("INSTREAM_VIDEO")]
                INSTREAMVIDEO = 15,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("VPAID_LINEAR_VIDEO")]
                VPAIDLINEARVIDEO = 16,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("VPAID_NON_LINEAR_VIDEO")]
                VPAIDNONLINEARVIDEO = 17,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("INSTREAM_VIDEO_REDIRECT")]
                INSTREAMVIDEOREDIRECT = 18,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("RICH_MEDIA_PEEL_DOWN")]
                RICHMEDIAPEELDOWN = 19,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("HTML5_BANNER")]
                HTML5BANNER = 20,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("DISPLAY")]
                DISPLAY = 21,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("DISPLAY_IMAGE_GALLERY")]
                DISPLAYIMAGEGALLERY = 22,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("BRAND_SAFE_DEFAULT_INSTREAM_VIDEO")]
                BRANDSAFEDEFAULTINSTREAMVIDEO = 23,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("INSTREAM_AUDIO")]
                INSTREAMAUDIO = 24,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creatives";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("active", new Google.Apis.Discovery.Parameter
                {
                    Name = "active",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("archived", new Google.Apis.Discovery.Parameter
                {
                    Name = "archived",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("campaignId", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("companionCreativeIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "companionCreativeIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("creativeFieldIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "creativeFieldIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("renderingIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "renderingIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sizeIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "sizeIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("studioCreativeId", new Google.Apis.Discovery.Parameter
                {
                    Name = "studioCreativeId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("types", new Google.Apis.Discovery.Parameter
                {
                    Name = "types",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing creative. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Creative ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Creative body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing creative. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Creative>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Creative body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Creative ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Creative Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creatives";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing creative.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Creative body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing creative.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Creative>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Creative body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Creative Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/creatives";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "dimensionValues" collection of methods.</summary>
    public class DimensionValuesResource
    {
        private const string Resource = "dimensionValues";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DimensionValuesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Retrieves list of report dimension values for a list of filters.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        public virtual QueryRequest Query(Google.Apis.Dfareporting.v4.Data.DimensionValueRequest body, long profileId)
        {
            return new QueryRequest(this.service, body, profileId);
        }

        /// <summary>Retrieves list of report dimension values for a list of filters.</summary>
        public class QueryRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.DimensionValueList>
        {
            /// <summary>Constructs a new Query request.</summary>
            public QueryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.DimensionValueRequest body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.DimensionValueRequest Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "query";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/dimensionvalues/query";

            /// <summary>Initializes Query parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "100",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "directorySites" collection of methods.</summary>
    public class DirectorySitesResource
    {
        private const string Resource = "directorySites";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DirectorySitesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one directory site by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Directory site ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one directory site by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.DirectorySite>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Directory site ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/directorySites/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new directory site.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.DirectorySite body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new directory site.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.DirectorySite>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.DirectorySite body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.DirectorySite Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/directorySites";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of directory sites, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of directory sites, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.DirectorySitesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>
            /// This search filter is no longer supported and will have no effect on the results returned.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsInStreamVideoPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsInStreamVideoPlacements { get; set; }

            /// <summary>
            /// This search filter is no longer supported and will have no effect on the results returned.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsInterstitialPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsInterstitialPlacements { get; set; }

            /// <summary>
            /// Select only directory sites that accept publisher paid placements. This field can be left blank.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsPublisherPaidPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsPublisherPaidPlacements { get; set; }

            /// <summary>
            /// Select only active directory sites. Leave blank to retrieve both active and inactive directory sites.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only directory sites with this Ad Manager network code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dfpNetworkCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string DfpNetworkCode { get; set; }

            /// <summary>Select only directory sites with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name, ID or URL. Wildcards (*) are allowed. For example, "directory
            /// site*2015" will return objects with names like "directory site June 2015", "directory site April 2015",
            /// or simply "directory site 2015". Most of the searches also add wildcards implicitly at the start and the
            /// end of the search string. For example, a search string of "directory site" will match objects with name
            /// "my directory site", "directory site 2015" or simply, "directory site".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/directorySites";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("acceptsInStreamVideoPlacements", new Google.Apis.Discovery.Parameter
                {
                    Name = "acceptsInStreamVideoPlacements",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("acceptsInterstitialPlacements", new Google.Apis.Discovery.Parameter
                {
                    Name = "acceptsInterstitialPlacements",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("acceptsPublisherPaidPlacements", new Google.Apis.Discovery.Parameter
                {
                    Name = "acceptsPublisherPaidPlacements",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("active", new Google.Apis.Discovery.Parameter
                {
                    Name = "active",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("dfpNetworkCode", new Google.Apis.Discovery.Parameter
                {
                    Name = "dfpNetworkCode",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "dynamicTargetingKeys" collection of methods.</summary>
    public class DynamicTargetingKeysResource
    {
        private const string Resource = "dynamicTargetingKeys";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public DynamicTargetingKeysResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing dynamic targeting key.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="objectId">ID of the object of this dynamic targeting key. This is a required field.</param>
        /// <param name="name">
        /// Required. Name of this dynamic targeting key. This is a required field. Must be less than 256 characters
        /// long and cannot contain commas. All characters are converted to lowercase.
        /// </param>
        /// <param name="objectType">
        /// Required. Type of the object of this dynamic targeting key. This is a required field.
        /// </param>
        public virtual DeleteRequest Delete(long profileId, long objectId, string name, DeleteRequest.ObjectTypeEnum objectType)
        {
            return new DeleteRequest(this.service, profileId, objectId, name, objectType);
        }

        /// <summary>Deletes an existing dynamic targeting key.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long objectId, string name, ObjectTypeEnum objectType) : base(service)
            {
                ProfileId = profileId;
                ObjectId = objectId;
                Name = name;
                ObjectType = objectType;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>ID of the object of this dynamic targeting key. This is a required field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("objectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ObjectId { get; private set; }

            /// <summary>
            /// Required. Name of this dynamic targeting key. This is a required field. Must be less than 256 characters
            /// long and cannot contain commas. All characters are converted to lowercase.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; private set; }

            /// <summary>Required. Type of the object of this dynamic targeting key. This is a required field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("objectType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual ObjectTypeEnum ObjectType { get; private set; }

            /// <summary>Required. Type of the object of this dynamic targeting key. This is a required field.</summary>
            public enum ObjectTypeEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_ADVERTISER")]
                OBJECTADVERTISER = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_AD")]
                OBJECTAD = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE")]
                OBJECTCREATIVE = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_PLACEMENT")]
                OBJECTPLACEMENT = 3,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/dynamicTargetingKeys/{+objectId}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("objectId", new Google.Apis.Discovery.Parameter
                {
                    Name = "objectId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                {
                    Name = "name",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("objectType", new Google.Apis.Discovery.Parameter
                {
                    Name = "objectType",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>
        /// Inserts a new dynamic targeting key. Keys must be created at the advertiser level before being assigned to
        /// the advertiser's ads, creatives, or placements. There is a maximum of 1000 keys per advertiser, out of which
        /// a maximum of 20 keys can be assigned per ad, creative, or placement.
        /// </summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.DynamicTargetingKey body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>
        /// Inserts a new dynamic targeting key. Keys must be created at the advertiser level before being assigned to
        /// the advertiser's ads, creatives, or placements. There is a maximum of 1000 keys per advertiser, out of which
        /// a maximum of 20 keys can be assigned per ad, creative, or placement.
        /// </summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.DynamicTargetingKey>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.DynamicTargetingKey body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.DynamicTargetingKey Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/dynamicTargetingKeys";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of dynamic targeting keys.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of dynamic targeting keys.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.DynamicTargetingKeysListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only dynamic targeting keys whose object has this advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only dynamic targeting keys exactly matching these names.</summary>
            [Google.Apis.Util.RequestParameterAttribute("names", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Names { get; set; }

            /// <summary>Select only dynamic targeting keys with this object ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("objectId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> ObjectId { get; set; }

            /// <summary>Select only dynamic targeting keys with this object type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("objectType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ObjectTypeEnum> ObjectType { get; set; }

            /// <summary>Select only dynamic targeting keys with this object type.</summary>
            public enum ObjectTypeEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_ADVERTISER")]
                OBJECTADVERTISER = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_AD")]
                OBJECTAD = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_CREATIVE")]
                OBJECTCREATIVE = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("OBJECT_PLACEMENT")]
                OBJECTPLACEMENT = 3,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/dynamicTargetingKeys";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("names", new Google.Apis.Discovery.Parameter
                {
                    Name = "names",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("objectId", new Google.Apis.Discovery.Parameter
                {
                    Name = "objectId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("objectType", new Google.Apis.Discovery.Parameter
                {
                    Name = "objectType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "eventTags" collection of methods.</summary>
    public class EventTagsResource
    {
        private const string Resource = "eventTags";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public EventTagsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing event tag.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Event tag ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(this.service, profileId, id);
        }

        /// <summary>Deletes an existing event tag.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Event tag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/eventTags/{+id}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets one event tag by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Event tag ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one event tag by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.EventTag>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Event tag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/eventTags/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new event tag.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.EventTag body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new event tag.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.EventTag>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.EventTag body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.EventTag Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/eventTags";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of event tags, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of event tags, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.EventTagsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only event tags that belong to this ad.</summary>
            [Google.Apis.Util.RequestParameterAttribute("adId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdId { get; set; }

            /// <summary>Select only event tags that belong to this advertiser.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only event tags that belong to this campaign.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> CampaignId { get; set; }

            /// <summary>
            /// Examine only the specified campaign or advertiser's event tags for matching selector criteria. When set
            /// to false, the parent advertiser and parent campaign of the specified ad or campaign is examined as well.
            /// In addition, when set to false, the status field is examined as well, along with the enabledByDefault
            /// field. This parameter can not be set to true when adId is specified as ads do not define their own even
            /// tags.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("definitionsOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> DefinitionsOnly { get; set; }

            /// <summary>
            /// Select only enabled event tags. What is considered enabled or disabled depends on the definitionsOnly
            /// parameter. When definitionsOnly is set to true, only the specified advertiser or campaign's event tags'
            /// enabledByDefault field is examined. When definitionsOnly is set to false, the specified ad or specified
            /// campaign's parent advertiser's or parent campaign's event tags' enabledByDefault and status fields are
            /// examined as well.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("enabled", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Enabled { get; set; }

            /// <summary>
            /// Select only event tags with the specified event tag types. Event tag types can be used to specify
            /// whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for
            /// either impression or click tracking.
            /// </summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="EventTagTypesList"/> to set
            /// multiple values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("eventTagTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<EventTagTypesEnum> EventTagTypes { get; set; }

            /// <summary>
            /// Select only event tags with the specified event tag types. Event tag types can be used to specify
            /// whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for
            /// either impression or click tracking.
            /// </summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="EventTagTypes"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("eventTagTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<EventTagTypesEnum> EventTagTypesList { get; set; }

            /// <summary>
            /// Select only event tags with the specified event tag types. Event tag types can be used to specify
            /// whether to use a third-party pixel, a third-party JavaScript URL, or a third-party click-through URL for
            /// either impression or click tracking.
            /// </summary>
            public enum EventTagTypesEnum
            {
                /// <summary>A third-party pixel for impression tracking.</summary>
                [Google.Apis.Util.StringValueAttribute("IMPRESSION_IMAGE_EVENT_TAG")]
                IMPRESSIONIMAGEEVENTTAG = 0,

                /// <summary>A third-party JavaScript URL for impression tracking.</summary>
                [Google.Apis.Util.StringValueAttribute("IMPRESSION_JAVASCRIPT_EVENT_TAG")]
                IMPRESSIONJAVASCRIPTEVENTTAG = 1,

                /// <summary>A third-party URL for click tracking that redirects to the landing page.</summary>
                [Google.Apis.Util.StringValueAttribute("CLICK_THROUGH_EVENT_TAG")]
                CLICKTHROUGHEVENTTAG = 2,
            }

            /// <summary>Select only event tags with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "eventtag*2015" will
            /// return objects with names like "eventtag June 2015", "eventtag April 2015", or simply "eventtag 2015".
            /// Most of the searches also add wildcards implicitly at the start and the end of the search string. For
            /// example, a search string of "eventtag" will match objects with name "my eventtag", "eventtag 2015", or
            /// simply "eventtag".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/eventTags";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("adId", new Google.Apis.Discovery.Parameter
                {
                    Name = "adId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("campaignId", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("definitionsOnly", new Google.Apis.Discovery.Parameter
                {
                    Name = "definitionsOnly",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("enabled", new Google.Apis.Discovery.Parameter
                {
                    Name = "enabled",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("eventTagTypes", new Google.Apis.Discovery.Parameter
                {
                    Name = "eventTagTypes",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing event tag. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. EventTag ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.EventTag body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing event tag. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.EventTag>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.EventTag body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. EventTag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.EventTag Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/eventTags";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing event tag.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.EventTag body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing event tag.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.EventTag>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.EventTag body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.EventTag Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/eventTags";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "files" collection of methods.</summary>
    public class FilesResource
    {
        private const string Resource = "files";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>
        /// Retrieves a report file by its report ID and file ID. This method supports media download.
        /// </summary>
        /// <param name="reportId">The ID of the report.</param>
        /// <param name="fileId">The ID of the report file.</param>
        public virtual GetRequest Get(long reportId, long fileId)
        {
            return new GetRequest(this.service, reportId, fileId);
        }

        /// <summary>
        /// Retrieves a report file by its report ID and file ID. This method supports media download.
        /// </summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.File>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long reportId, long fileId) : base(service)
            {
                ReportId = reportId;
                FileId = fileId;
                MediaDownloader = new Google.Apis.Download.MediaDownloader(service);
                InitParameters();
            }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>The ID of the report file.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long FileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "reports/{reportId}/files/{fileId}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("reportId", new Google.Apis.Discovery.Parameter
                {
                    Name = "reportId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("fileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "fileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }

            /// <summary>Gets the media downloader.</summary>
            public Google.Apis.Download.IMediaDownloader MediaDownloader { get; private set; }

            /// <summary>
            /// <para>Synchronously download the media into the given stream.</para>
            /// <para>
            /// Warning: This method hides download errors; use <see cref="DownloadWithStatus(System.IO.Stream)"/>
            /// instead.
            /// </para>
            /// </summary>
            /// <remarks>
            /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
            /// handlers and other configuration may be performed using that property prior to calling this method.
            /// </remarks>
            public virtual void Download(System.IO.Stream stream)
            {
                var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                mediaDownloader.Range = null;
                mediaDownloader.Download(this.GenerateRequestUri(), stream);
            }

            /// <summary>Synchronously download the media into the given stream.</summary>
            /// <remarks>
            /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
            /// handlers and other configuration may be performed using that property prior to calling this method.
            /// </remarks>
            /// <returns>The final status of the download; including whether the download succeeded or failed.</returns>
            public virtual Google.Apis.Download.IDownloadProgress DownloadWithStatus(System.IO.Stream stream)
            {
                var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                mediaDownloader.Range = null;
                return mediaDownloader.Download(this.GenerateRequestUri(), stream);
            }

            /// <summary>Asynchronously download the media into the given stream.</summary>
            /// <remarks>
            /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
            /// handlers and other configuration may be performed using that property prior to calling this method.
            /// </remarks>
            public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream)
            {
                var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                mediaDownloader.Range = null;
                return mediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream);
            }

            /// <summary>Asynchronously download the media into the given stream.</summary>
            /// <remarks>
            /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
            /// handlers and other configuration may be performed using that property prior to calling this method.
            /// </remarks>
            public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream,
                System.Threading.CancellationToken cancellationToken)
            {
                var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                mediaDownloader.Range = null;
                return mediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream, cancellationToken);
            }

            /// <summary>Synchronously download a range of the media into the given stream.</summary>
            /// <remarks>
            /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
            /// handlers and other configuration may be performed using that property prior to calling this method.
            /// </remarks>
            public virtual Google.Apis.Download.IDownloadProgress DownloadRange(System.IO.Stream stream, System.Net.Http.Headers.RangeHeaderValue range)
            {
                var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                mediaDownloader.Range = range;
                return mediaDownloader.Download(this.GenerateRequestUri(), stream);
            }

            /// <summary>Asynchronously download a range of the media into the given stream.</summary>
            /// <remarks>
            /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
            /// handlers and other configuration may be performed using that property prior to calling this method.
            /// </remarks>
            public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadRangeAsync(System.IO.Stream stream,
                System.Net.Http.Headers.RangeHeaderValue range,
                System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
            {
                var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                mediaDownloader.Range = range;
                return mediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream, cancellationToken);
            }
        }

        /// <summary>Lists files for a user profile.</summary>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Lists files for a user profile.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FileList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The scope that defines which results are returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("scope", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ScopeEnum> Scope { get; set; }

            /// <summary>The scope that defines which results are returned.</summary>
            public enum ScopeEnum
            {
                /// <summary>All files in account.</summary>
                [Google.Apis.Util.StringValueAttribute("ALL")]
                ALL = 0,

                /// <summary>My files.</summary>
                [Google.Apis.Util.StringValueAttribute("MINE")]
                MINE = 1,

                /// <summary>Files shared with me.</summary>
                [Google.Apis.Util.StringValueAttribute("SHARED_WITH_ME")]
                SHAREDWITHME = 2,
            }

            /// <summary>The field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>The field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary>Sort by file ID.</summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary>Sort by 'lastmodifiedAt' field.</summary>
                [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                LASTMODIFIEDTIME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/files";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "10",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("scope", new Google.Apis.Discovery.Parameter
                {
                    Name = "scope",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "MINE",
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "LAST_MODIFIED_TIME",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "DESCENDING",
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "floodlightActivities" collection of methods.</summary>
    public class FloodlightActivitiesResource
    {
        private const string Resource = "floodlightActivities";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FloodlightActivitiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing floodlight activity.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight activity ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(this.service, profileId, id);
        }

        /// <summary>Deletes an existing floodlight activity.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivities/{+id}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Generates a tag for a floodlight activity.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual GeneratetagRequest Generatetag(long profileId)
        {
            return new GeneratetagRequest(this.service, profileId);
        }

        /// <summary>Generates a tag for a floodlight activity.</summary>
        public class GeneratetagRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivitiesGenerateTagResponse>
        {
            /// <summary>Constructs a new Generatetag request.</summary>
            public GeneratetagRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity ID for which we want to generate a tag.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> FloodlightActivityId { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "generatetag";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivities/generatetag";

            /// <summary>Initializes Generatetag parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("floodlightActivityId", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightActivityId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Gets one floodlight activity by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight activity ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one floodlight activity by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivity>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivities/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new floodlight activity.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.FloodlightActivity body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new floodlight activity.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivity>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.FloodlightActivity body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.FloodlightActivity Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivities";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>
        /// Retrieves a list of floodlight activities, possibly filtered. This method supports paging.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>
        /// Retrieves a list of floodlight activities, possibly filtered. This method supports paging.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivitiesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>
            /// Select only floodlight activities for the specified advertiser ID. Must specify either ids,
            /// advertiserId, or floodlightConfigurationId for a non-empty result.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityGroupIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> FloodlightActivityGroupIds { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group name.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityGroupName", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string FloodlightActivityGroupName { get; set; }

            /// <summary>
            /// Select only floodlight activities with the specified floodlight activity group tag string.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityGroupTagString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string FloodlightActivityGroupTagString { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityGroupType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FloodlightActivityGroupTypeEnum> FloodlightActivityGroupType { get; set; }

            /// <summary>Select only floodlight activities with the specified floodlight activity group type.</summary>
            public enum FloodlightActivityGroupTypeEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("COUNTER")]
                COUNTER = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("SALE")]
                SALE = 1,
            }

            /// <summary>
            /// Select only floodlight activities for the specified floodlight configuration ID. Must specify either
            /// ids, advertiserId, or floodlightConfigurationId for a non-empty result.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightConfigurationId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> FloodlightConfigurationId { get; set; }

            /// <summary>
            /// Select only floodlight activities with the specified IDs. Must specify either ids, advertiserId, or
            /// floodlightConfigurationId for a non-empty result.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "floodlightactivity*2015" will return objects with names like "floodlightactivity June 2015",
            /// "floodlightactivity April 2015", or simply "floodlightactivity 2015". Most of the searches also add
            /// wildcards implicitly at the start and the end of the search string. For example, a search string of
            /// "floodlightactivity" will match objects with name "my floodlightactivity activity", "floodlightactivity
            /// 2015", or simply "floodlightactivity".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only floodlight activities with the specified tag string.</summary>
            [Google.Apis.Util.RequestParameterAttribute("tagString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string TagString { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivities";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("floodlightActivityGroupIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightActivityGroupIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("floodlightActivityGroupName", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightActivityGroupName",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("floodlightActivityGroupTagString", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightActivityGroupTagString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("floodlightActivityGroupType", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightActivityGroupType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("floodlightConfigurationId", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightConfigurationId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("tagString", new Google.Apis.Discovery.Parameter
                {
                    Name = "tagString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing floodlight activity. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. EventTag ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.FloodlightActivity body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing floodlight activity. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivity>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.FloodlightActivity body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. EventTag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.FloodlightActivity Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivities";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing floodlight activity.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.FloodlightActivity body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing floodlight activity.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivity>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.FloodlightActivity body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.FloodlightActivity Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivities";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "floodlightActivityGroups" collection of methods.</summary>
    public class FloodlightActivityGroupsResource
    {
        private const string Resource = "floodlightActivityGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FloodlightActivityGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one floodlight activity group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight activity Group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one floodlight activity group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight activity Group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivityGroups/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new floodlight activity group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new floodlight activity group.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivityGroups";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>
        /// Retrieves a list of floodlight activity groups, possibly filtered. This method supports paging.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>
        /// Retrieves a list of floodlight activity groups, possibly filtered. This method supports paging.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>
            /// Select only floodlight activity groups with the specified advertiser ID. Must specify either
            /// advertiserId or floodlightConfigurationId for a non-empty result.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>
            /// Select only floodlight activity groups with the specified floodlight configuration ID. Must specify
            /// either advertiserId, or floodlightConfigurationId for a non-empty result.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightConfigurationId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> FloodlightConfigurationId { get; set; }

            /// <summary>
            /// Select only floodlight activity groups with the specified IDs. Must specify either advertiserId or
            /// floodlightConfigurationId for a non-empty result.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "floodlightactivitygroup*2015" will return objects with names like "floodlightactivitygroup June 2015",
            /// "floodlightactivitygroup April 2015", or simply "floodlightactivitygroup 2015". Most of the searches
            /// also add wildcards implicitly at the start and the end of the search string. For example, a search
            /// string of "floodlightactivitygroup" will match objects with name "my floodlightactivitygroup activity",
            /// "floodlightactivitygroup 2015", or simply "floodlightactivitygroup".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>
            /// Select only floodlight activity groups with the specified floodlight activity group type.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypeEnum> Type { get; set; }

            /// <summary>
            /// Select only floodlight activity groups with the specified floodlight activity group type.
            /// </summary>
            public enum TypeEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("COUNTER")]
                COUNTER = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("SALE")]
                SALE = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivityGroups";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("floodlightConfigurationId", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightConfigurationId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("type", new Google.Apis.Discovery.Parameter
                {
                    Name = "type",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing floodlight activity group. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. EventTag ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing floodlight activity group. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. EventTag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivityGroups";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing floodlight activity group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing floodlight activity group.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.FloodlightActivityGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightActivityGroups";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "floodlightConfigurations" collection of methods.</summary>
    public class FloodlightConfigurationsResource
    {
        private const string Resource = "floodlightConfigurations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public FloodlightConfigurationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one floodlight configuration by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Floodlight configuration ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one floodlight configuration by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Floodlight configuration ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightConfigurations/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of floodlight configurations, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of floodlight configurations, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightConfigurationsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>
            /// Set of IDs of floodlight configurations to retrieve. Required field; otherwise an empty list will be
            /// returned.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightConfigurations";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing floodlight configuration. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. EventTag ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing floodlight configuration. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. EventTag ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightConfigurations";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing floodlight configuration.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing floodlight configuration.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.FloodlightConfiguration Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/floodlightConfigurations";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "inventoryItems" collection of methods.</summary>
    public class InventoryItemsResource
    {
        private const string Resource = "inventoryItems";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public InventoryItemsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one inventory item by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="projectId">Project ID for order documents.</param>
        /// <param name="id">Inventory item ID.</param>
        public virtual GetRequest Get(long profileId, long projectId, long id)
        {
            return new GetRequest(this.service, profileId, projectId, id);
        }

        /// <summary>Gets one inventory item by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.InventoryItem>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long projectId, long id) : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for order documents.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Inventory item ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/projects/{projectId}/inventoryItems/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("projectId", new Google.Apis.Discovery.Parameter
                {
                    Name = "projectId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of inventory items, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="projectId">Project ID for order documents.</param>
        public virtual ListRequest List(long profileId, long projectId)
        {
            return new ListRequest(this.service, profileId, projectId);
        }

        /// <summary>Retrieves a list of inventory items, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.InventoryItemsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long projectId) : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for order documents.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Select only inventory items with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only inventory items that are in plan.</summary>
            [Google.Apis.Util.RequestParameterAttribute("inPlan", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> InPlan { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Select only inventory items that belong to specified orders.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> OrderId { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only inventory items that are associated with these sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteId { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only inventory items with this type.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TypeEnum> Type { get; set; }

            /// <summary>Select only inventory items with this type.</summary>
            public enum TypeEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLANNING_PLACEMENT_TYPE_REGULAR")]
                PLANNINGPLACEMENTTYPEREGULAR = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLANNING_PLACEMENT_TYPE_CREDIT")]
                PLANNINGPLACEMENTTYPECREDIT = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/projects/{projectId}/inventoryItems";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("projectId", new Google.Apis.Discovery.Parameter
                {
                    Name = "projectId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("inPlan", new Google.Apis.Discovery.Parameter
                {
                    Name = "inPlan",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("orderId", new Google.Apis.Discovery.Parameter
                {
                    Name = "orderId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("siteId", new Google.Apis.Discovery.Parameter
                {
                    Name = "siteId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("type", new Google.Apis.Discovery.Parameter
                {
                    Name = "type",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "languages" collection of methods.</summary>
    public class LanguagesResource
    {
        private const string Resource = "languages";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public LanguagesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Retrieves a list of languages.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of languages.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.LanguagesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/languages";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "metros" collection of methods.</summary>
    public class MetrosResource
    {
        private const string Resource = "metros";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MetrosResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Retrieves a list of metros.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of metros.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.MetrosListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/metros";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "mobileApps" collection of methods.</summary>
    public class MobileAppsResource
    {
        private const string Resource = "mobileApps";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MobileAppsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one mobile app by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Mobile app ID.</param>
        public virtual GetRequest Get(long profileId, string id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one mobile app by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.MobileApp>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, string id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Mobile app ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/mobileApps/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves list of available mobile apps.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves list of available mobile apps.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.MobileAppsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only apps from these directories.</summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="DirectoriesList"/> to set
            /// multiple values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("directories", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<DirectoriesEnum> Directories { get; set; }

            /// <summary>Select only apps from these directories.</summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="Directories"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("directories", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<DirectoriesEnum> DirectoriesList { get; set; }

            /// <summary>Select only apps from these directories.</summary>
            public enum DirectoriesEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("UNKNOWN")]
                UNKNOWN = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("APPLE_APP_STORE")]
                APPLEAPPSTORE = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("GOOGLE_PLAY_STORE")]
                GOOGLEPLAYSTORE = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ROKU_APP_STORE")]
                ROKUAPPSTORE = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("AMAZON_FIRETV_APP_STORE")]
                AMAZONFIRETVAPPSTORE = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLAYSTATION_APP_STORE")]
                PLAYSTATIONAPPSTORE = 5,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("APPLE_TV_APP_STORE")]
                APPLETVAPPSTORE = 6,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("XBOX_APP_STORE")]
                XBOXAPPSTORE = 7,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("SAMSUNG_TV_APP_STORE")]
                SAMSUNGTVAPPSTORE = 8,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ANDROID_TV_APP_STORE")]
                ANDROIDTVAPPSTORE = 9,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("GENERIC_CTV_APP_STORE")]
                GENERICCTVAPPSTORE = 10,
            }

            /// <summary>Select only apps with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "app*2015" will
            /// return objects with names like "app Jan 2018", "app Jan 2018", or simply "app 2018". Most of the
            /// searches also add wildcards implicitly at the start and the end of the search string. For example, a
            /// search string of "app" will match objects with name "my app", "app 2018", or simply "app".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/mobileApps";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("directories", new Google.Apis.Discovery.Parameter
                {
                    Name = "directories",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "mobileCarriers" collection of methods.</summary>
    public class MobileCarriersResource
    {
        private const string Resource = "mobileCarriers";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public MobileCarriersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one mobile carrier by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Mobile carrier ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one mobile carrier by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.MobileCarrier>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Mobile carrier ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/mobileCarriers/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of mobile carriers.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of mobile carriers.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.MobileCarriersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/mobileCarriers";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "operatingSystemVersions" collection of methods.</summary>
    public class OperatingSystemVersionsResource
    {
        private const string Resource = "operatingSystemVersions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OperatingSystemVersionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one operating system version by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Operating system version ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one operating system version by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.OperatingSystemVersion>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Operating system version ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/operatingSystemVersions/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of operating system versions.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of operating system versions.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.OperatingSystemVersionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/operatingSystemVersions";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "operatingSystems" collection of methods.</summary>
    public class OperatingSystemsResource
    {
        private const string Resource = "operatingSystems";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OperatingSystemsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one operating system by DART ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="dartId">Operating system DART ID.</param>
        public virtual GetRequest Get(long profileId, long dartId)
        {
            return new GetRequest(this.service, profileId, dartId);
        }

        /// <summary>Gets one operating system by DART ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.OperatingSystem>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long dartId) : base(service)
            {
                ProfileId = profileId;
                DartId = dartId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Operating system DART ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("dartId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long DartId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/operatingSystems/{+dartId}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("dartId", new Google.Apis.Discovery.Parameter
                {
                    Name = "dartId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of operating systems.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of operating systems.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.OperatingSystemsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/operatingSystems";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "orders" collection of methods.</summary>
    public class OrdersResource
    {
        private const string Resource = "orders";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OrdersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one order by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="projectId">Project ID for orders.</param>
        /// <param name="id">Order ID.</param>
        public virtual GetRequest Get(long profileId, long projectId, long id)
        {
            return new GetRequest(this.service, profileId, projectId, id);
        }

        /// <summary>Gets one order by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Order>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long projectId, long id) : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for orders.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Order ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/projects/{projectId}/orders/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("projectId", new Google.Apis.Discovery.Parameter
                {
                    Name = "projectId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of orders, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="projectId">Project ID for orders.</param>
        public virtual ListRequest List(long profileId, long projectId)
        {
            return new ListRequest(this.service, profileId, projectId);
        }

        /// <summary>Retrieves a list of orders, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.OrdersListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long projectId) : base(service)
            {
                ProfileId = profileId;
                ProjectId = projectId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID for orders.</summary>
            [Google.Apis.Util.RequestParameterAttribute("projectId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProjectId { get; private set; }

            /// <summary>Select only orders with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for orders by name or ID. Wildcards (*) are allowed. For example, "order*2015" will
            /// return orders with names like "order June 2015", "order April 2015", or simply "order 2015". Most of the
            /// searches also add wildcards implicitly at the start and the end of the search string. For example, a
            /// search string of "order" will match orders with name "my order", "order 2015", or simply "order".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only orders that are associated with these site IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteId { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/projects/{projectId}/orders";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("projectId", new Google.Apis.Discovery.Parameter
                {
                    Name = "projectId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("siteId", new Google.Apis.Discovery.Parameter
                {
                    Name = "siteId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "placementGroups" collection of methods.</summary>
    public class PlacementGroupsResource
    {
        private const string Resource = "placementGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PlacementGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one placement group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one placement group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementGroups/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new placement group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.PlacementGroup body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new placement group.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementGroup>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.PlacementGroup body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.PlacementGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementGroups";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of placement groups, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of placement groups, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only placements with these active statuses.</summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="ActiveStatusList"/> to set
            /// multiple values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("activeStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ActiveStatusEnum> ActiveStatus { get; set; }

            /// <summary>Select only placements with these active statuses.</summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="ActiveStatus"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("activeStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<ActiveStatusEnum> ActiveStatusList { get; set; }

            /// <summary>Select only placements with these active statuses.</summary>
            public enum ActiveStatusEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_UNKNOWN")]
                PLACEMENTSTATUSUNKNOWN = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_ACTIVE")]
                PLACEMENTSTATUSACTIVE = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_INACTIVE")]
                PLACEMENTSTATUSINACTIVE = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_ARCHIVED")]
                PLACEMENTSTATUSARCHIVED = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_PERMANENTLY_ARCHIVED")]
                PLACEMENTSTATUSPERMANENTLYARCHIVED = 4,
            }

            /// <summary>Select only placement groups that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only placement groups that belong to these campaigns.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>Select only placement groups that are associated with these content categories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentCategoryIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ContentCategoryIds { get; set; }

            /// <summary>Select only placement groups that are associated with these directory sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("directorySiteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DirectorySiteIds { get; set; }

            /// <summary>Select only placement groups with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>
            /// Select only placements or placement groups whose end date is on or before the specified maxEndDate. The
            /// date should be formatted as "yyyy-MM-dd".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("maxEndDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxEndDate { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>
            /// Select only placements or placement groups whose start date is on or before the specified maxStartDate.
            /// The date should be formatted as "yyyy-MM-dd".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("maxStartDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxStartDate { get; set; }

            /// <summary>
            /// Select only placements or placement groups whose end date is on or after the specified minEndDate. The
            /// date should be formatted as "yyyy-MM-dd".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("minEndDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinEndDate { get; set; }

            /// <summary>
            /// Select only placements or placement groups whose start date is on or after the specified minStartDate.
            /// The date should be formatted as "yyyy-MM-dd".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("minStartDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinStartDate { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Select only placement groups belonging with this group type. A package is a simple group of placements
            /// that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not
            /// only acts as a single pricing point but also assumes that all the tags in it will be served at the same
            /// time. A roadblock requires one of its assigned placements to be marked as primary for reporting.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("placementGroupType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PlacementGroupTypeEnum> PlacementGroupType { get; set; }

            /// <summary>
            /// Select only placement groups belonging with this group type. A package is a simple group of placements
            /// that acts as a single pricing point for a group of tags. A roadblock is a group of placements that not
            /// only acts as a single pricing point but also assumes that all the tags in it will be served at the same
            /// time. A roadblock requires one of its assigned placements to be marked as primary for reporting.
            /// </summary>
            public enum PlacementGroupTypeEnum
            {
                /// <summary>
                /// A simple group of site-placements (tags). Basically acts as a single pricing point for a group of
                /// tags.
                /// </summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_PACKAGE")]
                PLACEMENTPACKAGE = 0,

                /// <summary>
                /// A group of site-placements (tags) that not only acts as a single pricing point but also assumes that
                /// all the tags in it will be served at the same time. This kind of group requires one of its assigned
                /// site-placements to be marked as primary for reporting purposes.
                /// </summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_ROADBLOCK")]
                PLACEMENTROADBLOCK = 1,
            }

            /// <summary>Select only placement groups that are associated with these placement strategies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementStrategyIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PlacementStrategyIds { get; set; }

            /// <summary>Select only placement groups with these pricing types.</summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="PricingTypesList"/> to set
            /// multiple values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("pricingTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PricingTypesEnum> PricingTypes { get; set; }

            /// <summary>Select only placement groups with these pricing types.</summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="PricingTypes"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("pricingTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<PricingTypesEnum> PricingTypesList { get; set; }

            /// <summary>Select only placement groups with these pricing types.</summary>
            public enum PricingTypesEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPM")]
                PRICINGTYPECPM = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPC")]
                PRICINGTYPECPC = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPA")]
                PRICINGTYPECPA = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_FLAT_RATE_IMPRESSIONS")]
                PRICINGTYPEFLATRATEIMPRESSIONS = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_FLAT_RATE_CLICKS")]
                PRICINGTYPEFLATRATECLICKS = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPM_ACTIVEVIEW")]
                PRICINGTYPECPMACTIVEVIEW = 5,
            }

            /// <summary>
            /// Allows searching for placement groups by name or ID. Wildcards (*) are allowed. For example,
            /// "placement*2015" will return placement groups with names like "placement group June 2015", "placement
            /// group May 2015", or simply "placements 2015". Most of the searches also add wildcards implicitly at the
            /// start and the end of the search string. For example, a search string of "placementgroup" will match
            /// placement groups with name "my placementgroup", "placementgroup 2015", or simply "placementgroup".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only placement groups that are associated with these sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteIds { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementGroups";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("activeStatus", new Google.Apis.Discovery.Parameter
                {
                    Name = "activeStatus",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("advertiserIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("campaignIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("contentCategoryIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "contentCategoryIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("directorySiteIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "directorySiteIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxEndDate", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxEndDate",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "800",
                    Pattern = null,
                });
                RequestParameters.Add("maxStartDate", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxStartDate",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("minEndDate", new Google.Apis.Discovery.Parameter
                {
                    Name = "minEndDate",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("minStartDate", new Google.Apis.Discovery.Parameter
                {
                    Name = "minStartDate",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("placementGroupType", new Google.Apis.Discovery.Parameter
                {
                    Name = "placementGroupType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("placementStrategyIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "placementStrategyIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pricingTypes", new Google.Apis.Discovery.Parameter
                {
                    Name = "pricingTypes",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("siteIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "siteIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing placement group. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Placement ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.PlacementGroup body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing placement group. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementGroup>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.PlacementGroup body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Placement ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.PlacementGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementGroups";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing placement group.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.PlacementGroup body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing placement group.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementGroup>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.PlacementGroup body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.PlacementGroup Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementGroups";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "placementStrategies" collection of methods.</summary>
    public class PlacementStrategiesResource
    {
        private const string Resource = "placementStrategies";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PlacementStrategiesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing placement strategy.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement strategy ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(this.service, profileId, id);
        }

        /// <summary>Deletes an existing placement strategy.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement strategy ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementStrategies/{+id}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets one placement strategy by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement strategy ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one placement strategy by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementStrategy>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement strategy ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementStrategies/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new placement strategy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.PlacementStrategy body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new placement strategy.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementStrategy>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.PlacementStrategy body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.PlacementStrategy Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementStrategies";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of placement strategies, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of placement strategies, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementStrategiesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only placement strategies with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example,
            /// "placementstrategy*2015" will return objects with names like "placementstrategy June 2015",
            /// "placementstrategy April 2015", or simply "placementstrategy 2015". Most of the searches also add
            /// wildcards implicitly at the start and the end of the search string. For example, a search string of
            /// "placementstrategy" will match objects with name "my placementstrategy", "placementstrategy 2015", or
            /// simply "placementstrategy".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementStrategies";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing placement strategy. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. PlacementStrategy ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.PlacementStrategy body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing placement strategy. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementStrategy>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.PlacementStrategy body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. PlacementStrategy ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.PlacementStrategy Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementStrategies";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing placement strategy.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.PlacementStrategy body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing placement strategy.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementStrategy>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.PlacementStrategy body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.PlacementStrategy Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placementStrategies";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "placements" collection of methods.</summary>
    public class PlacementsResource
    {
        private const string Resource = "placements";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PlacementsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Generates tags for a placement.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual GeneratetagsRequest Generatetags(long profileId)
        {
            return new GeneratetagsRequest(this.service, profileId);
        }

        /// <summary>Generates tags for a placement.</summary>
        public class GeneratetagsRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementsGenerateTagsResponse>
        {
            /// <summary>Constructs a new Generatetags request.</summary>
            public GeneratetagsRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Generate placements belonging to this campaign. This is a required field.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> CampaignId { get; set; }

            /// <summary>Generate tags for these placements.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PlacementIds { get; set; }

            /// <summary>
            /// Tag formats to generate for these placements. *Note:* PLACEMENT_TAG_STANDARD can only be generated for
            /// 1x1 placements.
            /// </summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="TagFormatsList"/> to set
            /// multiple values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("tagFormats", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<TagFormatsEnum> TagFormats { get; set; }

            /// <summary>
            /// Tag formats to generate for these placements. *Note:* PLACEMENT_TAG_STANDARD can only be generated for
            /// 1x1 placements.
            /// </summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="TagFormats"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("tagFormats", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<TagFormatsEnum> TagFormatsList { get; set; }

            /// <summary>
            /// Tag formats to generate for these placements. *Note:* PLACEMENT_TAG_STANDARD can only be generated for
            /// 1x1 placements.
            /// </summary>
            public enum TagFormatsEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_STANDARD")]
                PLACEMENTTAGSTANDARD = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_IFRAME_JAVASCRIPT")]
                PLACEMENTTAGIFRAMEJAVASCRIPT = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_IFRAME_ILAYER")]
                PLACEMENTTAGIFRAMEILAYER = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERNAL_REDIRECT")]
                PLACEMENTTAGINTERNALREDIRECT = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_JAVASCRIPT")]
                PLACEMENTTAGJAVASCRIPT = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT")]
                PLACEMENTTAGINTERSTITIALIFRAMEJAVASCRIPT = 5,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT")]
                PLACEMENTTAGINTERSTITIALINTERNALREDIRECT = 6,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT")]
                PLACEMENTTAGINTERSTITIALJAVASCRIPT = 7,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_CLICK_COMMANDS")]
                PLACEMENTTAGCLICKCOMMANDS = 8,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH")]
                PLACEMENTTAGINSTREAMVIDEOPREFETCH = 9,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_TRACKING")]
                PLACEMENTTAGTRACKING = 10,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_TRACKING_IFRAME")]
                PLACEMENTTAGTRACKINGIFRAME = 11,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_TRACKING_JAVASCRIPT")]
                PLACEMENTTAGTRACKINGJAVASCRIPT = 12,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3")]
                PLACEMENTTAGINSTREAMVIDEOPREFETCHVAST3 = 13,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_IFRAME_JAVASCRIPT_LEGACY")]
                PLACEMENTTAGIFRAMEJAVASCRIPTLEGACY = 14,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_JAVASCRIPT_LEGACY")]
                PLACEMENTTAGJAVASCRIPTLEGACY = 15,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT_LEGACY")]
                PLACEMENTTAGINTERSTITIALIFRAMEJAVASCRIPTLEGACY = 16,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT_LEGACY")]
                PLACEMENTTAGINTERSTITIALJAVASCRIPTLEGACY = 17,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4")]
                PLACEMENTTAGINSTREAMVIDEOPREFETCHVAST4 = 18,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_TAG_TRACKING_THIRD_PARTY_MEASUREMENT")]
                PLACEMENTTAGTRACKINGTHIRDPARTYMEASUREMENT = 19,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "generatetags";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placements/generatetags";

            /// <summary>Initializes Generatetags parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("campaignId", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("placementIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "placementIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("tagFormats", new Google.Apis.Discovery.Parameter
                {
                    Name = "tagFormats",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Gets one placement by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Placement ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one placement by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Placement>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Placement ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placements/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new placement.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Placement body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new placement.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Placement>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Placement body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Placement Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placements";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of placements, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of placements, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlacementsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only placements with these active statuses.</summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="ActiveStatusList"/> to set
            /// multiple values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("activeStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ActiveStatusEnum> ActiveStatus { get; set; }

            /// <summary>Select only placements with these active statuses.</summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="ActiveStatus"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("activeStatus", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<ActiveStatusEnum> ActiveStatusList { get; set; }

            /// <summary>Select only placements with these active statuses.</summary>
            public enum ActiveStatusEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_UNKNOWN")]
                PLACEMENTSTATUSUNKNOWN = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_ACTIVE")]
                PLACEMENTSTATUSACTIVE = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_INACTIVE")]
                PLACEMENTSTATUSINACTIVE = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_ARCHIVED")]
                PLACEMENTSTATUSARCHIVED = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_STATUS_PERMANENTLY_ARCHIVED")]
                PLACEMENTSTATUSPERMANENTLYARCHIVED = 4,
            }

            /// <summary>Select only placements that belong to these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only placements that belong to these campaigns.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>
            /// Select only placements that are associated with these compatibilities. DISPLAY and DISPLAY_INTERSTITIAL
            /// refer to rendering either on desktop or on mobile devices for regular or interstitial ads respectively.
            /// APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in
            /// in-stream video ads developed with the VAST standard.
            /// </summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="CompatibilitiesList"/> to set
            /// multiple values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("compatibilities", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<CompatibilitiesEnum> Compatibilities { get; set; }

            /// <summary>
            /// Select only placements that are associated with these compatibilities. DISPLAY and DISPLAY_INTERSTITIAL
            /// refer to rendering either on desktop or on mobile devices for regular or interstitial ads respectively.
            /// APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in
            /// in-stream video ads developed with the VAST standard.
            /// </summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="Compatibilities"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("compatibilities", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<CompatibilitiesEnum> CompatibilitiesList { get; set; }

            /// <summary>
            /// Select only placements that are associated with these compatibilities. DISPLAY and DISPLAY_INTERSTITIAL
            /// refer to rendering either on desktop or on mobile devices for regular or interstitial ads respectively.
            /// APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in
            /// in-stream video ads developed with the VAST standard.
            /// </summary>
            public enum CompatibilitiesEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("DISPLAY")]
                DISPLAY = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("DISPLAY_INTERSTITIAL")]
                DISPLAYINTERSTITIAL = 1,

                /// <summary>Deprecated enum value. No longer supported.</summary>
                [Google.Apis.Util.StringValueAttribute("APP")]
                APP = 2,

                /// <summary>Deprecated enum value. No longer supported.</summary>
                [Google.Apis.Util.StringValueAttribute("APP_INTERSTITIAL")]
                APPINTERSTITIAL = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("IN_STREAM_VIDEO")]
                INSTREAMVIDEO = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("IN_STREAM_AUDIO")]
                INSTREAMAUDIO = 5,
            }

            /// <summary>Select only placements that are associated with these content categories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentCategoryIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> ContentCategoryIds { get; set; }

            /// <summary>Select only placements that are associated with these directory sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("directorySiteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DirectorySiteIds { get; set; }

            /// <summary>Select only placements that belong to these placement groups.</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> GroupIds { get; set; }

            /// <summary>Select only placements with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>
            /// Select only placements or placement groups whose end date is on or before the specified maxEndDate. The
            /// date should be formatted as "yyyy-MM-dd".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("maxEndDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxEndDate { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>
            /// Select only placements or placement groups whose start date is on or before the specified maxStartDate.
            /// The date should be formatted as "yyyy-MM-dd".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("maxStartDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MaxStartDate { get; set; }

            /// <summary>
            /// Select only placements or placement groups whose end date is on or after the specified minEndDate. The
            /// date should be formatted as "yyyy-MM-dd".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("minEndDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinEndDate { get; set; }

            /// <summary>
            /// Select only placements or placement groups whose start date is on or after the specified minStartDate.
            /// The date should be formatted as "yyyy-MM-dd".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("minStartDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MinStartDate { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Select only placements with this payment source.</summary>
            [Google.Apis.Util.RequestParameterAttribute("paymentSource", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PaymentSourceEnum> PaymentSource { get; set; }

            /// <summary>Select only placements with this payment source.</summary>
            public enum PaymentSourceEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_AGENCY_PAID")]
                PLACEMENTAGENCYPAID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PLACEMENT_PUBLISHER_PAID")]
                PLACEMENTPUBLISHERPAID = 1,
            }

            /// <summary>Select only placements that are associated with these placement strategies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("placementStrategyIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> PlacementStrategyIds { get; set; }

            /// <summary>Select only placements with these pricing types.</summary>
            /// <remarks>
            /// Use this property to set a single value for the parameter, or <see cref="PricingTypesList"/> to set
            /// multiple values. Do not set both properties.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("pricingTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<PricingTypesEnum> PricingTypes { get; set; }

            /// <summary>Select only placements with these pricing types.</summary>
            /// <remarks>
            /// Use this property to set one or more values for the parameter. Do not set both this property and
            /// <see cref="PricingTypes"/>.
            /// </remarks>
            [Google.Apis.Util.RequestParameterAttribute("pricingTypes", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<PricingTypesEnum> PricingTypesList { get; set; }

            /// <summary>Select only placements with these pricing types.</summary>
            public enum PricingTypesEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPM")]
                PRICINGTYPECPM = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPC")]
                PRICINGTYPECPC = 1,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPA")]
                PRICINGTYPECPA = 2,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_FLAT_RATE_IMPRESSIONS")]
                PRICINGTYPEFLATRATEIMPRESSIONS = 3,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_FLAT_RATE_CLICKS")]
                PRICINGTYPEFLATRATECLICKS = 4,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("PRICING_TYPE_CPM_ACTIVEVIEW")]
                PRICINGTYPECPMACTIVEVIEW = 5,
            }

            /// <summary>
            /// Allows searching for placements by name or ID. Wildcards (*) are allowed. For example, "placement*2015"
            /// will return placements with names like "placement June 2015", "placement May 2015", or simply
            /// "placements 2015". Most of the searches also add wildcards implicitly at the start and the end of the
            /// search string. For example, a search string of "placement" will match placements with name "my
            /// placement", "placement 2015", or simply "placement" .
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Select only placements that are associated with these sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("siteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SiteIds { get; set; }

            /// <summary>Select only placements that are associated with these sizes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sizeIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> SizeIds { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placements";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("activeStatus", new Google.Apis.Discovery.Parameter
                {
                    Name = "activeStatus",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("advertiserIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("campaignIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("compatibilities", new Google.Apis.Discovery.Parameter
                {
                    Name = "compatibilities",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("contentCategoryIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "contentCategoryIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("directorySiteIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "directorySiteIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("groupIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "groupIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxEndDate", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxEndDate",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("maxStartDate", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxStartDate",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("minEndDate", new Google.Apis.Discovery.Parameter
                {
                    Name = "minEndDate",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("minStartDate", new Google.Apis.Discovery.Parameter
                {
                    Name = "minStartDate",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("paymentSource", new Google.Apis.Discovery.Parameter
                {
                    Name = "paymentSource",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("placementStrategyIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "placementStrategyIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pricingTypes", new Google.Apis.Discovery.Parameter
                {
                    Name = "pricingTypes",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("siteIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "siteIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sizeIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "sizeIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing placement. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Placement ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Placement body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing placement. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Placement>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Placement body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Placement ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Placement Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placements";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing placement.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Placement body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing placement.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Placement>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Placement body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Placement Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/placements";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "platformTypes" collection of methods.</summary>
    public class PlatformTypesResource
    {
        private const string Resource = "platformTypes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PlatformTypesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one platform type by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Platform type ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one platform type by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlatformType>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Platform type ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/platformTypes/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of platform types.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of platform types.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PlatformTypesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/platformTypes";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "postalCodes" collection of methods.</summary>
    public class PostalCodesResource
    {
        private const string Resource = "postalCodes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PostalCodesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one postal code by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="code">Postal code ID.</param>
        public virtual GetRequest Get(long profileId, string code)
        {
            return new GetRequest(this.service, profileId, code);
        }

        /// <summary>Gets one postal code by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PostalCode>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, string code) : base(service)
            {
                ProfileId = profileId;
                Code = code;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Postal code ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("code", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Code { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/postalCodes/{+code}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("code", new Google.Apis.Discovery.Parameter
                {
                    Name = "code",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of postal codes.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of postal codes.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.PostalCodesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/postalCodes";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one project by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Project ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one project by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Project>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Project ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/projects/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of projects, possibly filtered. This method supports paging .</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of projects, possibly filtered. This method supports paging .</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ProjectsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only projects with these advertiser IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> AdvertiserIds { get; set; }

            /// <summary>Select only projects with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for projects by name or ID. Wildcards (*) are allowed. For example, "project*2015" will
            /// return projects with names like "project June 2015", "project April 2015", or simply "project 2015".
            /// Most of the searches also add wildcards implicitly at the start and the end of the search string. For
            /// example, a search string of "project" will match projects with name "my project", "project 2015", or
            /// simply "project".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/projects";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "regions" collection of methods.</summary>
    public class RegionsResource
    {
        private const string Resource = "regions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RegionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Retrieves a list of regions.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of regions.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RegionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/regions";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "remarketingListShares" collection of methods.</summary>
    public class RemarketingListSharesResource
    {
        private const string Resource = "remarketingListShares";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RemarketingListSharesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one remarketing list share by remarketing list ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="remarketingListId">Remarketing list ID.</param>
        public virtual GetRequest Get(long profileId, long remarketingListId)
        {
            return new GetRequest(this.service, profileId, remarketingListId);
        }

        /// <summary>Gets one remarketing list share by remarketing list ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RemarketingListShare>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long remarketingListId) : base(service)
            {
                ProfileId = profileId;
                RemarketingListId = remarketingListId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Remarketing list ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("remarketingListId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long RemarketingListId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/remarketingListShares/{+remarketingListId}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("remarketingListId", new Google.Apis.Discovery.Parameter
                {
                    Name = "remarketingListId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Updates an existing remarketing list share. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. RemarketingList ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.RemarketingListShare body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing remarketing list share. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RemarketingListShare>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.RemarketingListShare body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. RemarketingList ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.RemarketingListShare Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/remarketingListShares";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing remarketing list share.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.RemarketingListShare body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing remarketing list share.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RemarketingListShare>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.RemarketingListShare body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.RemarketingListShare Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/remarketingListShares";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "remarketingLists" collection of methods.</summary>
    public class RemarketingListsResource
    {
        private const string Resource = "remarketingLists";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public RemarketingListsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one remarketing list by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Remarketing list ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one remarketing list by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RemarketingList>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Remarketing list ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/remarketingLists/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new remarketing list.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.RemarketingList body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new remarketing list.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RemarketingList>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.RemarketingList body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.RemarketingList Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/remarketingLists";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of remarketing lists, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="advertiserId">Required. Select only remarketing lists owned by this advertiser.</param>
        public virtual ListRequest List(long profileId, long advertiserId)
        {
            return new ListRequest(this.service, profileId, advertiserId);
        }

        /// <summary>Retrieves a list of remarketing lists, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RemarketingListsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long advertiserId) : base(service)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Select only remarketing lists owned by this advertiser.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long AdvertiserId { get; private set; }

            /// <summary>Select only active or only inactive remarketing lists.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Select only remarketing lists that have this floodlight activity ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("floodlightActivityId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> FloodlightActivityId { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "remarketing
            /// list*2015" will return objects with names like "remarketing list June 2015", "remarketing list April
            /// 2015", or simply "remarketing list 2015". Most of the searches also add wildcards implicitly at the
            /// start and the end of the search string. For example, a search string of "remarketing list" will match
            /// objects with name "my remarketing list", "remarketing list 2015", or simply "remarketing list".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/remarketingLists";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("active", new Google.Apis.Discovery.Parameter
                {
                    Name = "active",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("floodlightActivityId", new Google.Apis.Discovery.Parameter
                {
                    Name = "floodlightActivityId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                {
                    Name = "name",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing remarketing list. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. RemarketingList ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.RemarketingList body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing remarketing list. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RemarketingList>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.RemarketingList body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. RemarketingList ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.RemarketingList Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/remarketingLists";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing remarketing list.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.RemarketingList body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing remarketing list.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.RemarketingList>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.RemarketingList body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.RemarketingList Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/remarketingLists";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "reports" collection of methods.</summary>
    public class ReportsResource
    {
        private const string Resource = "reports";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ReportsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            CompatibleFields = new CompatibleFieldsResource(service);
            Files = new FilesResource(service);
        }

        /// <summary>Gets the CompatibleFields resource.</summary>
        public virtual CompatibleFieldsResource CompatibleFields { get; }

        /// <summary>The "compatibleFields" collection of methods.</summary>
        public class CompatibleFieldsResource
        {
            private const string Resource = "compatibleFields";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public CompatibleFieldsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>
            /// Returns the fields that are compatible to be selected in the respective sections of a report criteria,
            /// given the fields already selected in the input report and user permissions.
            /// </summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
            public virtual QueryRequest Query(Google.Apis.Dfareporting.v4.Data.Report body, long profileId)
            {
                return new QueryRequest(this.service, body, profileId);
            }

            /// <summary>
            /// Returns the fields that are compatible to be selected in the respective sections of a report criteria,
            /// given the fields already selected in the input report and user permissions.
            /// </summary>
            public class QueryRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.CompatibleFields>
            {
                /// <summary>Constructs a new Query request.</summary>
                public QueryRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Report body, long profileId) : base(service)
                {
                    ProfileId = profileId;
                    Body = body;
                    InitParameters();
                }

                /// <summary>The Campaign Manager 360 user profile ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ProfileId { get; private set; }

                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.Dfareporting.v4.Data.Report Body { get; set; }

                /// <summary>Returns the body of the request.</summary>
                protected override object GetBody() => Body;

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "query";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "POST";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "userprofiles/{profileId}/reports/compatiblefields/query";

                /// <summary>Initializes Query parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Gets the Files resource.</summary>
        public virtual FilesResource Files { get; }

        /// <summary>The "files" collection of methods.</summary>
        public class FilesResource
        {
            private const string Resource = "files";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public FilesResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
            }

            /// <summary>
            /// Retrieves a report file by its report ID and file ID. This method supports media download.
            /// </summary>
            /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
            /// <param name="reportId">The ID of the report.</param>
            /// <param name="fileId">The ID of the report file.</param>
            public virtual GetRequest Get(long profileId, long reportId, long fileId)
            {
                return new GetRequest(this.service, profileId, reportId, fileId);
            }

            /// <summary>
            /// Retrieves a report file by its report ID and file ID. This method supports media download.
            /// </summary>
            public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.File>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, long profileId, long reportId, long fileId) : base(service)
                {
                    ProfileId = profileId;
                    ReportId = reportId;
                    FileId = fileId;
                    MediaDownloader = new Google.Apis.Download.MediaDownloader(service);
                    InitParameters();
                }

                /// <summary>The Campaign Manager 360 user profile ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ProfileId { get; private set; }

                /// <summary>The ID of the report.</summary>
                [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ReportId { get; private set; }

                /// <summary>The ID of the report file.</summary>
                [Google.Apis.Util.RequestParameterAttribute("fileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long FileId { get; private set; }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "get";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "userprofiles/{profileId}/reports/{reportId}/files/{fileId}";

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("fileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "fileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                }

                /// <summary>Gets the media downloader.</summary>
                public Google.Apis.Download.IMediaDownloader MediaDownloader { get; private set; }

                /// <summary>
                /// <para>Synchronously download the media into the given stream.</para>
                /// <para>
                /// Warning: This method hides download errors; use <see cref="DownloadWithStatus(System.IO.Stream)"/>
                /// instead.
                /// </para>
                /// </summary>
                /// <remarks>
                /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
                /// handlers and other configuration may be performed using that property prior to calling this method.
                /// </remarks>
                public virtual void Download(System.IO.Stream stream)
                {
                    var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                    mediaDownloader.Range = null;
                    mediaDownloader.Download(this.GenerateRequestUri(), stream);
                }

                /// <summary>Synchronously download the media into the given stream.</summary>
                /// <remarks>
                /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
                /// handlers and other configuration may be performed using that property prior to calling this method.
                /// </remarks>
                /// <returns>
                /// The final status of the download; including whether the download succeeded or failed.
                /// </returns>
                public virtual Google.Apis.Download.IDownloadProgress DownloadWithStatus(System.IO.Stream stream)
                {
                    var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                    mediaDownloader.Range = null;
                    return mediaDownloader.Download(this.GenerateRequestUri(), stream);
                }

                /// <summary>Asynchronously download the media into the given stream.</summary>
                /// <remarks>
                /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
                /// handlers and other configuration may be performed using that property prior to calling this method.
                /// </remarks>
                public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream)
                {
                    var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                    mediaDownloader.Range = null;
                    return mediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream);
                }

                /// <summary>Asynchronously download the media into the given stream.</summary>
                /// <remarks>
                /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
                /// handlers and other configuration may be performed using that property prior to calling this method.
                /// </remarks>
                public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadAsync(System.IO.Stream stream,
                    System.Threading.CancellationToken cancellationToken)
                {
                    var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                    mediaDownloader.Range = null;
                    return mediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream, cancellationToken);
                }

                /// <summary>Synchronously download a range of the media into the given stream.</summary>
                /// <remarks>
                /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
                /// handlers and other configuration may be performed using that property prior to calling this method.
                /// </remarks>
                public virtual Google.Apis.Download.IDownloadProgress DownloadRange(System.IO.Stream stream, System.Net.Http.Headers.RangeHeaderValue range)
                {
                    var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                    mediaDownloader.Range = range;
                    return mediaDownloader.Download(this.GenerateRequestUri(), stream);
                }

                /// <summary>Asynchronously download a range of the media into the given stream.</summary>
                /// <remarks>
                /// This method uses the <see cref="MediaDownloader"/> property to perform the download. Progress event
                /// handlers and other configuration may be performed using that property prior to calling this method.
                /// </remarks>
                public virtual System.Threading.Tasks.Task<Google.Apis.Download.IDownloadProgress> DownloadRangeAsync(System.IO.Stream stream,
                    System.Net.Http.Headers.RangeHeaderValue range,
                    System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
                {
                    var mediaDownloader = (Google.Apis.Download.MediaDownloader)MediaDownloader;
                    mediaDownloader.Range = range;
                    return mediaDownloader.DownloadAsync(this.GenerateRequestUri(), stream, cancellationToken);
                }
            }

            /// <summary>Lists files for a report.</summary>
            /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
            /// <param name="reportId">The ID of the parent report.</param>
            public virtual ListRequest List(long profileId, long reportId)
            {
                return new ListRequest(this.service, profileId, reportId);
            }

            /// <summary>Lists files for a report.</summary>
            public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.FileList>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, long profileId, long reportId) : base(service)
                {
                    ProfileId = profileId;
                    ReportId = reportId;
                    InitParameters();
                }

                /// <summary>The Campaign Manager 360 user profile ID.</summary>
                [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ProfileId { get; private set; }

                /// <summary>The ID of the parent report.</summary>
                [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
                public virtual long ReportId { get; private set; }

                /// <summary>Maximum number of results to return.</summary>
                [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> MaxResults { get; set; }

                /// <summary>The value of the nextToken from the previous result page.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The field by which to sort the list.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

                /// <summary>The field by which to sort the list.</summary>
                public enum SortFieldEnum
                {
                    /// <summary></summary>
                    [Google.Apis.Util.StringValueAttribute("ID")]
                    ID = 0,

                    /// <summary></summary>
                    [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                    LASTMODIFIEDTIME = 1,
                }

                /// <summary>Order of sorted results.</summary>
                [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

                /// <summary>Order of sorted results.</summary>
                public enum SortOrderEnum
                {
                    /// <summary>Ascending order.</summary>
                    [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                    ASCENDING = 0,

                    /// <summary>Descending order.</summary>
                    [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                    DESCENDING = 1,
                }

                /// <summary>Gets the method name.</summary>
                public override string MethodName => "list";

                /// <summary>Gets the HTTP method.</summary>
                public override string HttpMethod => "GET";

                /// <summary>Gets the REST path.</summary>
                public override string RestPath => "userprofiles/{profileId}/reports/{reportId}/files";

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();
                    RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "profileId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("reportId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "reportId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                    {
                        Name = "maxResults",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "10",
                        Pattern = null,
                    });
                    RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                    RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortField",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "LAST_MODIFIED_TIME",
                        Pattern = null,
                    });
                    RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortOrder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = "DESCENDING",
                        Pattern = null,
                    });
                }
            }
        }

        /// <summary>Deletes a report by its ID.</summary>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        /// <param name="reportId">The ID of the report.</param>
        public virtual DeleteRequest Delete(long profileId, long reportId)
        {
            return new DeleteRequest(this.service, profileId, reportId);
        }

        /// <summary>Deletes a report by its ID.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long reportId) : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/reports/{reportId}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("reportId", new Google.Apis.Discovery.Parameter
                {
                    Name = "reportId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Retrieves a report by its ID.</summary>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        /// <param name="reportId">The ID of the report.</param>
        public virtual GetRequest Get(long profileId, long reportId)
        {
            return new GetRequest(this.service, profileId, reportId);
        }

        /// <summary>Retrieves a report by its ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Report>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long reportId) : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/reports/{reportId}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("reportId", new Google.Apis.Discovery.Parameter
                {
                    Name = "reportId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Creates a report.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Report body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Creates a report.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Report>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Report body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Report Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/reports";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Retrieves list of reports.</summary>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves list of reports.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.ReportList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>The value of the nextToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The scope that defines which results are returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("scope", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<ScopeEnum> Scope { get; set; }

            /// <summary>The scope that defines which results are returned.</summary>
            public enum ScopeEnum
            {
                /// <summary>All reports in account.</summary>
                [Google.Apis.Util.StringValueAttribute("ALL")]
                ALL = 0,

                /// <summary>My reports.</summary>
                [Google.Apis.Util.StringValueAttribute("MINE")]
                MINE = 1,
            }

            /// <summary>The field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>The field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary>Sort by report ID.</summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary>Sort by 'lastModifiedTime' field.</summary>
                [Google.Apis.Util.StringValueAttribute("LAST_MODIFIED_TIME")]
                LASTMODIFIEDTIME = 1,

                /// <summary>Sort by name of reports.</summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 2,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/reports";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "10",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("scope", new Google.Apis.Discovery.Parameter
                {
                    Name = "scope",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "MINE",
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "LAST_MODIFIED_TIME",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "DESCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing report. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        /// <param name="reportId">The ID of the report.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Report body, long profileId, long reportId)
        {
            return new PatchRequest(this.service, body, profileId, reportId);
        }

        /// <summary>Updates an existing report. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Report>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Report body, long profileId, long reportId) : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                Body = body;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Report Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/reports/{reportId}";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("reportId", new Google.Apis.Discovery.Parameter
                {
                    Name = "reportId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Runs a report.</summary>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        /// <param name="reportId">The ID of the report.</param>
        public virtual RunRequest Run(long profileId, long reportId)
        {
            return new RunRequest(this.service, profileId, reportId);
        }

        /// <summary>Runs a report.</summary>
        public class RunRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.File>
        {
            /// <summary>Constructs a new Run request.</summary>
            public RunRequest(Google.Apis.Services.IClientService service, long profileId, long reportId) : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>If set and true, tries to run the report synchronously.</summary>
            [Google.Apis.Util.RequestParameterAttribute("synchronous", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Synchronous { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "run";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/reports/{reportId}/run";

            /// <summary>Initializes Run parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("reportId", new Google.Apis.Discovery.Parameter
                {
                    Name = "reportId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("synchronous", new Google.Apis.Discovery.Parameter
                {
                    Name = "synchronous",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "false",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates a report.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">The Campaign Manager 360 user profile ID.</param>
        /// <param name="reportId">The ID of the report.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Report body, long profileId, long reportId)
        {
            return new UpdateRequest(this.service, body, profileId, reportId);
        }

        /// <summary>Updates a report.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Report>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Report body, long profileId, long reportId) : base(service)
            {
                ProfileId = profileId;
                ReportId = reportId;
                Body = body;
                InitParameters();
            }

            /// <summary>The Campaign Manager 360 user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>The ID of the report.</summary>
            [Google.Apis.Util.RequestParameterAttribute("reportId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ReportId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Report Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}/reports/{reportId}";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("reportId", new Google.Apis.Discovery.Parameter
                {
                    Name = "reportId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "sites" collection of methods.</summary>
    public class SitesResource
    {
        private const string Resource = "sites";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SitesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one site by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Site ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one site by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Site>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Site ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/sites/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new site.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Site body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new site.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Site>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Site body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Site Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/sites";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of sites, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of sites, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.SitesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>
            /// This search filter is no longer supported and will have no effect on the results returned.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsInStreamVideoPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsInStreamVideoPlacements { get; set; }

            /// <summary>
            /// This search filter is no longer supported and will have no effect on the results returned.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsInterstitialPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsInterstitialPlacements { get; set; }

            /// <summary>Select only sites that accept publisher paid placements.</summary>
            [Google.Apis.Util.RequestParameterAttribute("acceptsPublisherPaidPlacements", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AcceptsPublisherPaidPlacements { get; set; }

            /// <summary>Select only AdWords sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("adWordsSite", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AdWordsSite { get; set; }

            /// <summary>Select only approved sites.</summary>
            [Google.Apis.Util.RequestParameterAttribute("approved", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Approved { get; set; }

            /// <summary>Select only sites with these campaign IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("campaignIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> CampaignIds { get; set; }

            /// <summary>Select only sites with these directory site IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("directorySiteIds", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> DirectorySiteIds { get; set; }

            /// <summary>Select only sites with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name, ID or keyName. Wildcards (*) are allowed. For example, "site*2015"
            /// will return objects with names like "site June 2015", "site April 2015", or simply "site 2015". Most of
            /// the searches also add wildcards implicitly at the start and the end of the search string. For example, a
            /// search string of "site" will match objects with name "my site", "site 2015", or simply "site".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only sites with this subaccount ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }

            /// <summary>Select only sites that have not been mapped to a directory site.</summary>
            [Google.Apis.Util.RequestParameterAttribute("unmappedSite", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> UnmappedSite { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/sites";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("acceptsInStreamVideoPlacements", new Google.Apis.Discovery.Parameter
                {
                    Name = "acceptsInStreamVideoPlacements",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("acceptsInterstitialPlacements", new Google.Apis.Discovery.Parameter
                {
                    Name = "acceptsInterstitialPlacements",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("acceptsPublisherPaidPlacements", new Google.Apis.Discovery.Parameter
                {
                    Name = "acceptsPublisherPaidPlacements",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("adWordsSite", new Google.Apis.Discovery.Parameter
                {
                    Name = "adWordsSite",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("approved", new Google.Apis.Discovery.Parameter
                {
                    Name = "approved",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("campaignIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "campaignIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("directorySiteIds", new Google.Apis.Discovery.Parameter
                {
                    Name = "directorySiteIds",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("subaccountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "subaccountId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("unmappedSite", new Google.Apis.Discovery.Parameter
                {
                    Name = "unmappedSite",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing site. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Site ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Site body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing site. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Site>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Site body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Site ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Site Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/sites";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing site.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Site body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing site.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Site>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Site body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Site Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/sites";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "sizes" collection of methods.</summary>
    public class SizesResource
    {
        private const string Resource = "sizes";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SizesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one size by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Size ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one size by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Size>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Size ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/sizes/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new size.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Size body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new size.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Size>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Size body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Size Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/sizes";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>
        /// Retrieves a list of sizes, possibly filtered. Retrieved sizes are globally unique and may include values not
        /// currently in use by your account. Due to this, the list of sizes returned by this method may differ from the
        /// list seen in the Trafficking UI.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>
        /// Retrieves a list of sizes, possibly filtered. Retrieved sizes are globally unique and may include values not
        /// currently in use by your account. Due to this, the list of sizes returned by this method may differ from the
        /// list seen in the Trafficking UI.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.SizesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only sizes with this height.</summary>
            [Google.Apis.Util.RequestParameterAttribute("height", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Height { get; set; }

            /// <summary>Select only IAB standard sizes.</summary>
            [Google.Apis.Util.RequestParameterAttribute("iabStandard", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> IabStandard { get; set; }

            /// <summary>Select only sizes with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Select only sizes with this width.</summary>
            [Google.Apis.Util.RequestParameterAttribute("width", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Width { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/sizes";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("height", new Google.Apis.Discovery.Parameter
                {
                    Name = "height",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("iabStandard", new Google.Apis.Discovery.Parameter
                {
                    Name = "iabStandard",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("width", new Google.Apis.Discovery.Parameter
                {
                    Name = "width",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "subaccounts" collection of methods.</summary>
    public class SubaccountsResource
    {
        private const string Resource = "subaccounts";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SubaccountsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one subaccount by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Subaccount ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one subaccount by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Subaccount>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Subaccount ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/subaccounts/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new subaccount.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.Subaccount body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new subaccount.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Subaccount>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Subaccount body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Subaccount Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/subaccounts";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets a list of subaccounts, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Gets a list of subaccounts, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.SubaccountsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only subaccounts with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "subaccount*2015"
            /// will return objects with names like "subaccount June 2015", "subaccount April 2015", or simply
            /// "subaccount 2015". Most of the searches also add wildcards implicitly at the start and the end of the
            /// search string. For example, a search string of "subaccount" will match objects with name "my
            /// subaccount", "subaccount 2015", or simply "subaccount" .
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/subaccounts";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing subaccount. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. Subaccount ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.Subaccount body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing subaccount. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Subaccount>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Subaccount body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Subaccount ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Subaccount Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/subaccounts";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing subaccount.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.Subaccount body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing subaccount.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.Subaccount>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.Subaccount body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.Subaccount Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/subaccounts";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "targetableRemarketingLists" collection of methods.</summary>
    public class TargetableRemarketingListsResource
    {
        private const string Resource = "targetableRemarketingLists";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetableRemarketingListsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one remarketing list by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Remarketing list ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one remarketing list by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TargetableRemarketingList>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Remarketing list ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/targetableRemarketingLists/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>
        /// Retrieves a list of targetable remarketing lists, possibly filtered. This method supports paging.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="advertiserId">
        /// Required. Select only targetable remarketing lists targetable by these advertisers.
        /// </param>
        public virtual ListRequest List(long profileId, long advertiserId)
        {
            return new ListRequest(this.service, profileId, advertiserId);
        }

        /// <summary>
        /// Retrieves a list of targetable remarketing lists, possibly filtered. This method supports paging.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TargetableRemarketingListsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId, long advertiserId) : base(service)
            {
                ProfileId = profileId;
                AdvertiserId = advertiserId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Select only targetable remarketing lists targetable by these advertisers.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long AdvertiserId { get; private set; }

            /// <summary>Select only active or only inactive targetable remarketing lists.</summary>
            [Google.Apis.Util.RequestParameterAttribute("active", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "remarketing
            /// list*2015" will return objects with names like "remarketing list June 2015", "remarketing list April
            /// 2015", or simply "remarketing list 2015". Most of the searches also add wildcards implicitly at the
            /// start and the end of the search string. For example, a search string of "remarketing list" will match
            /// objects with name "my remarketing list", "remarketing list 2015", or simply "remarketing list".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/targetableRemarketingLists";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("active", new Google.Apis.Discovery.Parameter
                {
                    Name = "active",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                {
                    Name = "name",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "targetingTemplates" collection of methods.</summary>
    public class TargetingTemplatesResource
    {
        private const string Resource = "targetingTemplates";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TargetingTemplatesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one targeting template by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Targeting template ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one targeting template by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TargetingTemplate>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Targeting template ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/targetingTemplates/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new targeting template.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.TargetingTemplate body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new targeting template.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TargetingTemplate>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.TargetingTemplate body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.TargetingTemplate Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/targetingTemplates";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>
        /// Retrieves a list of targeting templates, optionally filtered. This method supports paging.
        /// </summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>
        /// Retrieves a list of targeting templates, optionally filtered. This method supports paging.
        /// </summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TargetingTemplatesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only targeting templates with this advertiser ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("advertiserId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AdvertiserId { get; set; }

            /// <summary>Select only targeting templates with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "template*2015" will
            /// return objects with names like "template June 2015", "template April 2015", or simply "template 2015".
            /// Most of the searches also add wildcards implicitly at the start and the end of the search string. For
            /// example, a search string of "template" will match objects with name "my template", "template 2015", or
            /// simply "template".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/targetingTemplates";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("advertiserId", new Google.Apis.Discovery.Parameter
                {
                    Name = "advertiserId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing targeting template. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. RemarketingList ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.TargetingTemplate body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing targeting template. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TargetingTemplate>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.TargetingTemplate body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. RemarketingList ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.TargetingTemplate Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/targetingTemplates";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing targeting template.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.TargetingTemplate body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing targeting template.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TargetingTemplate>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.TargetingTemplate body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.TargetingTemplate Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/targetingTemplates";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "tvCampaignDetails" collection of methods.</summary>
    public class TvCampaignDetailsResource
    {
        private const string Resource = "tvCampaignDetails";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TvCampaignDetailsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one TvCampaignDetail by ID.</summary>
        /// <param name="profileId">Required. User profile ID associated with this request.</param>
        /// <param name="id">Required. TV Campaign ID.</param>
        public virtual GetRequest Get(long profileId, string id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one TvCampaignDetail by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TvCampaignDetail>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, string id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>Required. User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. TV Campaign ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }

            /// <summary>Required. Account ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AccountId { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/tvCampaignDetails/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("accountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "accountId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "tvCampaignSummaries" collection of methods.</summary>
    public class TvCampaignSummariesResource
    {
        private const string Resource = "tvCampaignSummaries";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TvCampaignSummariesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Retrieves a list of TV campaign summaries.</summary>
        /// <param name="profileId">Required. User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of TV campaign summaries.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.TvCampaignSummariesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>Required. User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. Account ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("accountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> AccountId { get; set; }

            /// <summary>
            /// Required. Search string to filter the list of TV campaign summaries. Matches any substring. Required
            /// field.
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Name { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/tvCampaignSummaries";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("accountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "accountId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("name", new Google.Apis.Discovery.Parameter
                {
                    Name = "name",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "userProfiles" collection of methods.</summary>
    public class UserProfilesResource
    {
        private const string Resource = "userProfiles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserProfilesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one user profile by ID.</summary>
        /// <param name="profileId">The user profile ID.</param>
        public virtual GetRequest Get(long profileId)
        {
            return new GetRequest(this.service, profileId);
        }

        /// <summary>Gets one user profile by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserProfile>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>The user profile ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{profileId}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Retrieves list of user profiles for a user.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(this.service);
        }

        /// <summary>Retrieves list of user profiles for a user.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserProfileList>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service) : base(service)
            {
                InitParameters();
            }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
            }
        }
    }

    /// <summary>The "userRolePermissionGroups" collection of methods.</summary>
    public class UserRolePermissionGroupsResource
    {
        private const string Resource = "userRolePermissionGroups";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserRolePermissionGroupsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one user role permission group by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role permission group ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one user role permission group by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRolePermissionGroup>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role permission group ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRolePermissionGroups/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets a list of all supported user role permission groups.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Gets a list of all supported user role permission groups.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRolePermissionGroupsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRolePermissionGroups";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "userRolePermissions" collection of methods.</summary>
    public class UserRolePermissionsResource
    {
        private const string Resource = "userRolePermissions";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserRolePermissionsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one user role permission by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role permission ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one user role permission by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRolePermission>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role permission ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRolePermissions/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets a list of user role permissions, possibly filtered.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Gets a list of user role permissions, possibly filtered.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRolePermissionsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only user role permissions with these IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRolePermissions";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }
    }

    /// <summary>The "userRoles" collection of methods.</summary>
    public class UserRolesResource
    {
        private const string Resource = "userRoles";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UserRolesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Deletes an existing user role.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role ID.</param>
        public virtual DeleteRequest Delete(long profileId, long id)
        {
            return new DeleteRequest(this.service, profileId, id);
        }

        /// <summary>Deletes an existing user role.</summary>
        public class DeleteRequest : DfareportingBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "delete";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "DELETE";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRoles/{+id}";

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Gets one user role by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">User role ID.</param>
        public virtual GetRequest Get(long profileId, long id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one user role by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRole>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>User role ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRoles/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Inserts a new user role.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual InsertRequest Insert(Google.Apis.Dfareporting.v4.Data.UserRole body, long profileId)
        {
            return new InsertRequest(this.service, body, profileId);
        }

        /// <summary>Inserts a new user role.</summary>
        public class InsertRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRole>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.UserRole body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.UserRole Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "insert";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "POST";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRoles";

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Retrieves a list of user roles, possibly filtered. This method supports paging.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Retrieves a list of user roles, possibly filtered. This method supports paging.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRolesListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Select only account level user roles not associated with any specific subaccount.</summary>
            [Google.Apis.Util.RequestParameterAttribute("accountUserRoleOnly", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> AccountUserRoleOnly { get; set; }

            /// <summary>Select only user roles with the specified IDs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ids", Google.Apis.Util.RequestParameterType.Query)]
            public virtual Google.Apis.Util.Repeatable<string> Ids { get; set; }

            /// <summary>Maximum number of results to return.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }

            /// <summary>Value of the nextPageToken from the previous result page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>
            /// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "userrole*2015" will
            /// return objects with names like "userrole June 2015", "userrole April 2015", or simply "userrole 2015".
            /// Most of the searches also add wildcards implicitly at the start and the end of the search string. For
            /// example, a search string of "userrole" will match objects with name "my userrole", "userrole 2015", or
            /// simply "userrole".
            /// </summary>
            [Google.Apis.Util.RequestParameterAttribute("searchString", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string SearchString { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortField", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortFieldEnum> SortField { get; set; }

            /// <summary>Field by which to sort the list.</summary>
            public enum SortFieldEnum
            {
                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("ID")]
                ID = 0,

                /// <summary></summary>
                [Google.Apis.Util.StringValueAttribute("NAME")]
                NAME = 1,
            }

            /// <summary>Order of sorted results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sortOrder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<SortOrderEnum> SortOrder { get; set; }

            /// <summary>Order of sorted results.</summary>
            public enum SortOrderEnum
            {
                /// <summary>Ascending order.</summary>
                [Google.Apis.Util.StringValueAttribute("ASCENDING")]
                ASCENDING = 0,

                /// <summary>Descending order.</summary>
                [Google.Apis.Util.StringValueAttribute("DESCENDING")]
                DESCENDING = 1,
            }

            /// <summary>Select only user roles that belong to this subaccount.</summary>
            [Google.Apis.Util.RequestParameterAttribute("subaccountId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> SubaccountId { get; set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRoles";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("accountUserRoleOnly", new Google.Apis.Discovery.Parameter
                {
                    Name = "accountUserRoleOnly",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("ids", new Google.Apis.Discovery.Parameter
                {
                    Name = "ids",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("maxResults", new Google.Apis.Discovery.Parameter
                {
                    Name = "maxResults",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "1000",
                    Pattern = null,
                });
                RequestParameters.Add("pageToken", new Google.Apis.Discovery.Parameter
                {
                    Name = "pageToken",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("searchString", new Google.Apis.Discovery.Parameter
                {
                    Name = "searchString",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
                RequestParameters.Add("sortField", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortField",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ID",
                    Pattern = null,
                });
                RequestParameters.Add("sortOrder", new Google.Apis.Discovery.Parameter
                {
                    Name = "sortOrder",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "ASCENDING",
                    Pattern = null,
                });
                RequestParameters.Add("subaccountId", new Google.Apis.Discovery.Parameter
                {
                    Name = "subaccountId",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing user role. This method supports patch semantics.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Required. UserRole ID.</param>
        public virtual PatchRequest Patch(Google.Apis.Dfareporting.v4.Data.UserRole body, long profileId, long id)
        {
            return new PatchRequest(this.service, body, profileId, id);
        }

        /// <summary>Updates an existing user role. This method supports patch semantics.</summary>
        public class PatchRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRole>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.UserRole body, long profileId, long id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Required. UserRole ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long Id { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.UserRole Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "patch";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PATCH";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRoles";

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            }
        }

        /// <summary>Updates an existing user role.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual UpdateRequest Update(Google.Apis.Dfareporting.v4.Data.UserRole body, long profileId)
        {
            return new UpdateRequest(this.service, body, profileId);
        }

        /// <summary>Updates an existing user role.</summary>
        public class UpdateRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.UserRole>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.Dfareporting.v4.Data.UserRole body, long profileId) : base(service)
            {
                ProfileId = profileId;
                Body = body;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.Dfareporting.v4.Data.UserRole Body { get; set; }

            /// <summary>Returns the body of the request.</summary>
            protected override object GetBody() => Body;

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "update";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "PUT";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/userRoles";

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }

    /// <summary>The "videoFormats" collection of methods.</summary>
    public class VideoFormatsResource
    {
        private const string Resource = "videoFormats";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public VideoFormatsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
        }

        /// <summary>Gets one video format by ID.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        /// <param name="id">Video format ID.</param>
        public virtual GetRequest Get(long profileId, int id)
        {
            return new GetRequest(this.service, profileId, id);
        }

        /// <summary>Gets one video format by ID.</summary>
        public class GetRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.VideoFormat>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, long profileId, int id) : base(service)
            {
                ProfileId = profileId;
                Id = id;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Video format ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual int Id { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "get";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/videoFormats/{+id}";

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
                RequestParameters.Add("id", new Google.Apis.Discovery.Parameter
                {
                    Name = "id",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }

        /// <summary>Lists available video formats.</summary>
        /// <param name="profileId">User profile ID associated with this request.</param>
        public virtual ListRequest List(long profileId)
        {
            return new ListRequest(this.service, profileId);
        }

        /// <summary>Lists available video formats.</summary>
        public class ListRequest : DfareportingBaseServiceRequest<Google.Apis.Dfareporting.v4.Data.VideoFormatsListResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, long profileId) : base(service)
            {
                ProfileId = profileId;
                InitParameters();
            }

            /// <summary>User profile ID associated with this request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("profileId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual long ProfileId { get; private set; }

            /// <summary>Gets the method name.</summary>
            public override string MethodName => "list";

            /// <summary>Gets the HTTP method.</summary>
            public override string HttpMethod => "GET";

            /// <summary>Gets the REST path.</summary>
            public override string RestPath => "userprofiles/{+profileId}/videoFormats";

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();
                RequestParameters.Add("profileId", new Google.Apis.Discovery.Parameter
                {
                    Name = "profileId",
                    IsRequired = true,
                    ParameterType = "path",
                    DefaultValue = null,
                    Pattern = @"^[^/]+$",
                });
            }
        }
    }
}
namespace Google.Apis.Dfareporting.v4.Data
{
    /// <summary>Contains properties of a Campaign Manager account.</summary>
    public class Account : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account permissions assigned to this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountPermissionIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> AccountPermissionIds { get; set; }

        /// <summary>Profile for this account. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountProfile")]
        public virtual string AccountProfile { get; set; }

        /// <summary>Whether this account is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>Maximum number of active ads allowed for this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeAdsLimitTier")]
        public virtual string ActiveAdsLimitTier { get; set; }

        /// <summary>
        /// Whether to serve creatives with Active View tags. If disabled, viewability data will not be available for
        /// any impressions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeViewOptOut")]
        public virtual System.Nullable<bool> ActiveViewOptOut { get; set; }

        /// <summary>User role permissions available to the user roles of this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availablePermissionIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> AvailablePermissionIds { get; set; }

        /// <summary>ID of the country associated with this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryId")]
        public virtual System.Nullable<long> CountryId { get; set; }

        /// <summary>
        /// ID of currency associated with this account. This is a required field. Acceptable values are: - "1" for USD
        /// - "2" for GBP - "3" for ESP - "4" for SEK - "5" for CAD - "6" for JPY - "7" for DEM - "8" for AUD - "9" for
        /// FRF - "10" for ITL - "11" for DKK - "12" for NOK - "13" for FIM - "14" for ZAR - "15" for IEP - "16" for NLG
        /// - "17" for EUR - "18" for KRW - "19" for TWD - "20" for SGD - "21" for CNY - "22" for HKD - "23" for NZD -
        /// "24" for MYR - "25" for BRL - "26" for PTE - "28" for CLP - "29" for TRY - "30" for ARS - "31" for PEN -
        /// "32" for ILS - "33" for CHF - "34" for VEF - "35" for COP - "36" for GTQ - "37" for PLN - "39" for INR -
        /// "40" for THB - "41" for IDR - "42" for CZK - "43" for RON - "44" for HUF - "45" for RUB - "46" for AED -
        /// "47" for BGN - "48" for HRK - "49" for MXN - "50" for NGN - "51" for EGP
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyId")]
        public virtual System.Nullable<long> CurrencyId { get; set; }

        /// <summary>Default placement dimensions for this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultCreativeSizeId")]
        public virtual System.Nullable<long> DefaultCreativeSizeId { get; set; }

        /// <summary>Description of this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>ID of this account. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#account".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Locale of this account. Acceptable values are: - "cs" (Czech) - "de" (German) - "en" (English) - "en-GB"
        /// (English United Kingdom) - "es" (Spanish) - "fr" (French) - "it" (Italian) - "ja" (Japanese) - "ko" (Korean)
        /// - "pl" (Polish) - "pt-BR" (Portuguese Brazil) - "ru" (Russian) - "sv" (Swedish) - "tr" (Turkish) - "zh-CN"
        /// (Chinese Simplified) - "zh-TW" (Chinese Traditional)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locale")]
        public virtual string Locale { get; set; }

        /// <summary>
        /// Maximum image size allowed for this account, in kilobytes. Value must be greater than or equal to 1.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maximumImageSize")]
        public virtual System.Nullable<long> MaximumImageSize { get; set; }

        /// <summary>
        /// Name of this account. This is a required field, and must be less than 128 characters long and be globally
        /// unique.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Whether campaigns created in this account will be enabled for Nielsen OCR reach ratings by default.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nielsenOcrEnabled")]
        public virtual System.Nullable<bool> NielsenOcrEnabled { get; set; }

        /// <summary>Reporting configuration of this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportsConfiguration")]
        public virtual ReportsConfiguration ReportsConfiguration { get; set; }

        /// <summary>Share Path to Conversion reports with Twitter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("shareReportsWithTwitter")]
        public virtual System.Nullable<bool> ShareReportsWithTwitter { get; set; }

        /// <summary>
        /// File size limit in kilobytes of Rich Media teaser creatives. Acceptable values are 1 to 10240, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("teaserSizeLimit")]
        public virtual System.Nullable<long> TeaserSizeLimit { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Gets a summary of active ads in an account.</summary>
    public class AccountActiveAdSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Ads that have been activated for the account</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeAds")]
        public virtual System.Nullable<long> ActiveAds { get; set; }

        /// <summary>Maximum number of active ads allowed for the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeAdsLimitTier")]
        public virtual string ActiveAdsLimitTier { get; set; }

        /// <summary>Ads that can be activated for the account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availableAds")]
        public virtual System.Nullable<long> AvailableAds { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountActiveAdSummary".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// AccountPermissions contains information about a particular account permission. Some features of Campaign Manager
    /// require an account permission to be present in the account.
    /// </summary>
    public class AccountPermission : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Account profiles associated with this account permission. Possible values are: - "ACCOUNT_PROFILE_BASIC" -
        /// "ACCOUNT_PROFILE_STANDARD"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountProfiles")]
        public virtual System.Collections.Generic.IList<string> AccountProfiles { get; set; }

        /// <summary>ID of this account permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountPermission".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Administrative level required to enable this account permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("level")]
        public virtual string Level { get; set; }

        /// <summary>Name of this account permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Permission group of this account permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissionGroupId")]
        public virtual System.Nullable<long> PermissionGroupId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// AccountPermissionGroups contains a mapping of permission group IDs to names. A permission group is a grouping of
    /// account permissions.
    /// </summary>
    public class AccountPermissionGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this account permission group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountPermissionGroup".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this account permission group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Account Permission Group List Response</summary>
    public class AccountPermissionGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account permission group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountPermissionGroups")]
        public virtual System.Collections.Generic.IList<AccountPermissionGroup> AccountPermissionGroups { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountPermissionGroupGroupsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Account Permission List Response</summary>
    public class AccountPermissionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account permission collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountPermissions")]
        public virtual System.Collections.Generic.IList<AccountPermission> AccountPermissions { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountPermissionsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// AccountUserProfiles contains properties of a Campaign Manager user profile. This resource is specifically for
    /// managing user profiles, whereas UserProfiles is for accessing the API.
    /// </summary>
    public class AccountUserProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of the user profile. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// Whether this user profile is active. This defaults to false, and must be set true on insert for the user
        /// profile to be usable.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>Filter that describes which advertisers are visible to the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserFilter")]
        public virtual ObjectFilter AdvertiserFilter { get; set; }

        /// <summary>Filter that describes which campaigns are visible to the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignFilter")]
        public virtual ObjectFilter CampaignFilter { get; set; }

        /// <summary>Comments for this user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comments")]
        public virtual string Comments { get; set; }

        /// <summary>
        /// Email of the user profile. The email address must be linked to a Google Account. This field is required on
        /// insertion and is read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; }

        /// <summary>ID of the user profile. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountUserProfile".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Locale of the user profile. This is a required field. Acceptable values are: - "cs" (Czech) - "de" (German)
        /// - "en" (English) - "en-GB" (English United Kingdom) - "es" (Spanish) - "fr" (French) - "it" (Italian) - "ja"
        /// (Japanese) - "ko" (Korean) - "pl" (Polish) - "pt-BR" (Portuguese Brazil) - "ru" (Russian) - "sv" (Swedish) -
        /// "tr" (Turkish) - "zh-CN" (Chinese Simplified) - "zh-TW" (Chinese Traditional)
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locale")]
        public virtual string Locale { get; set; }

        /// <summary>
        /// Name of the user profile. This is a required field. Must be less than 64 characters long, must be globally
        /// unique, and cannot contain whitespace or any of the following characters: "&amp;amp;;&amp;lt;&amp;gt;"#%,".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Filter that describes which sites are visible to the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteFilter")]
        public virtual ObjectFilter SiteFilter { get; set; }

        /// <summary>Subaccount ID of the user profile. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>Trafficker type of this user profile. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("traffickerType")]
        public virtual string TraffickerType { get; set; }

        /// <summary>User type of the user profile. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userAccessType")]
        public virtual string UserAccessType { get; set; }

        /// <summary>Filter that describes which user roles are visible to the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRoleFilter")]
        public virtual ObjectFilter UserRoleFilter { get; set; }

        /// <summary>User role ID of the user profile. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRoleId")]
        public virtual System.Nullable<long> UserRoleId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Account User Profile List Response</summary>
    public class AccountUserProfilesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account user profile collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountUserProfiles")]
        public virtual System.Collections.Generic.IList<AccountUserProfile> AccountUserProfiles { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#accountUserProfilesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Account List Response</summary>
    public class AccountsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accounts")]
        public virtual System.Collections.Generic.IList<Account> Accounts { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#accountsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents an activity group.</summary>
    public class Activities : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// List of activity filters. The dimension values need to be all either of type "dfa:activity" or
        /// "dfa:activityGroup".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filters")]
        public virtual System.Collections.Generic.IList<DimensionValue> Filters { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#activities.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>List of names of floodlight activity metrics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
        public virtual System.Collections.Generic.IList<string> MetricNames { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Campaign Manager ad.</summary>
    public class Ad : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this ad. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Whether this ad is active. When true, archived must be false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>Advertiser ID of this ad. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Whether this ad is archived. When true, active must be false.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; }

        /// <summary>
        /// Audience segment ID that is being targeted for this ad. Applicable when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceSegmentId")]
        public virtual System.Nullable<long> AudienceSegmentId { get; set; }

        /// <summary>Campaign ID of this ad. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; }

        /// <summary>Dimension value for the ID of the campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignIdDimensionValue")]
        public virtual DimensionValue CampaignIdDimensionValue { get; set; }

        /// <summary>
        /// Click-through URL for this ad. This is a required field on insertion. Applicable when type is
        /// AD_SERVING_CLICK_TRACKER.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrl")]
        public virtual ClickThroughUrl ClickThroughUrl { get; set; }

        /// <summary>
        /// Click-through URL suffix properties for this ad. Applies to the URL in the ad or (if overriding ad
        /// properties) the URL in the creative.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrlSuffixProperties")]
        public virtual ClickThroughUrlSuffixProperties ClickThroughUrlSuffixProperties { get; set; }

        /// <summary>Comments for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comments")]
        public virtual string Comments { get; set; }

        /// <summary>
        /// Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL
        /// refer to either rendering on desktop or on mobile devices or in mobile apps for regular or interstitial ads,
        /// respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New mobile placements must be
        /// assigned DISPLAY or DISPLAY_INTERSTITIAL and default ads created for those placements will be limited to
        /// those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video ads developed with the VAST
        /// standard.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compatibility")]
        public virtual string Compatibility { get; set; }

        /// <summary>Information about the creation of this ad. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createInfo")]
        public virtual LastModifiedInfo CreateInfo { get; set; }

        /// <summary>
        /// Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one
        /// assignment per creative group number is allowed for a maximum of two assignments.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupAssignments")]
        public virtual System.Collections.Generic.IList<CreativeGroupAssignment> CreativeGroupAssignments { get; set; }

        /// <summary>
        /// Creative rotation for this ad. Applicable when type is AD_SERVING_DEFAULT_AD, AD_SERVING_STANDARD_AD, or
        /// AD_SERVING_TRACKING. When type is AD_SERVING_DEFAULT_AD, this field should have exactly one
        /// creativeAssignment .
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeRotation")]
        public virtual CreativeRotation CreativeRotation { get; set; }

        /// <summary>
        /// Time and day targeting information for this ad. This field must be left blank if the ad is using a targeting
        /// template. Applicable when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dayPartTargeting")]
        public virtual DayPartTargeting DayPartTargeting { get; set; }

        /// <summary>Default click-through event tag properties for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultClickThroughEventTagProperties")]
        public virtual DefaultClickThroughEventTagProperties DefaultClickThroughEventTagProperties { get; set; }

        /// <summary>
        /// Delivery schedule information for this ad. Applicable when type is AD_SERVING_STANDARD_AD or
        /// AD_SERVING_TRACKING. This field along with subfields priority and impressionRatio are required on insertion
        /// when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deliverySchedule")]
        public virtual DeliverySchedule DeliverySchedule { get; set; }

        /// <summary>
        /// Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This is a
        /// required field on insert, and is read-only after insert.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicClickTracker")]
        public virtual System.Nullable<bool> DynamicClickTracker { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToDateTime(value);
        }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual System.DateTime? EndTime
        {
            get => Google.Apis.Util.Utilities.GetDateTimeFromString(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
        }

        /// <summary>Event tag overrides for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventTagOverrides")]
        public virtual System.Collections.Generic.IList<EventTagOverride> EventTagOverrides { get; set; }

        /// <summary>
        /// Geographical targeting information for this ad. This field must be left blank if the ad is using a targeting
        /// template. Applicable when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geoTargeting")]
        public virtual GeoTargeting GeoTargeting { get; set; }

        /// <summary>ID of this ad. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Dimension value for the ID of this ad. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Key-value targeting information for this ad. This field must be left blank if the ad is using a targeting
        /// template. Applicable when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyValueTargetingExpression")]
        public virtual KeyValueTargetingExpression KeyValueTargetingExpression { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#ad".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Language targeting information for this ad. This field must be left blank if the ad is using a targeting
        /// template. Applicable when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageTargeting")]
        public virtual LanguageTargeting LanguageTargeting { get; set; }

        /// <summary>Information about the most recent modification of this ad. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; }

        /// <summary>Name of this ad. This is a required field and must be less than 256 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Placement assignments for this ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementAssignments")]
        public virtual System.Collections.Generic.IList<PlacementAssignment> PlacementAssignments { get; set; }

        /// <summary>
        /// Remarketing list targeting expression for this ad. This field must be left blank if the ad is using a
        /// targeting template. Applicable when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingListExpression")]
        public virtual ListTargetingExpression RemarketingListExpression { get; set; }

        /// <summary>Size of this ad. Applicable when type is AD_SERVING_DEFAULT_AD.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; }

        /// <summary>
        /// Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is inserted
        /// or updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; }

        /// <summary>
        /// Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is inserted or
        /// updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslRequired")]
        public virtual System.Nullable<bool> SslRequired { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToDateTime(value);
        }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual System.DateTime? StartTime
        {
            get => Google.Apis.Util.Utilities.GetDateTimeFromString(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
        }

        /// <summary>Subaccount ID of this ad. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>
        /// Targeting template ID, used to apply preconfigured targeting information to this ad. This cannot be set
        /// while any of dayPartTargeting, geoTargeting, keyValueTargetingExpression, languageTargeting,
        /// remarketingListExpression, or technologyTargeting are set. Applicable when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetingTemplateId")]
        public virtual System.Nullable<long> TargetingTemplateId { get; set; }

        /// <summary>
        /// Technology platform targeting information for this ad. This field must be left blank if the ad is using a
        /// targeting template. Applicable when type is AD_SERVING_STANDARD_AD.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("technologyTargeting")]
        public virtual TechnologyTargeting TechnologyTargeting { get; set; }

        /// <summary>
        /// Type of ad. This is a required field on insertion. Note that default ads ( AD_SERVING_DEFAULT_AD) cannot be
        /// created directly (see Creative resource).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Campaign ad blocking settings.</summary>
    public class AdBlockingConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether this campaign has enabled ad blocking. When true, ad blocking is enabled for placements in the
        /// campaign, but this may be overridden by site and placement settings. When false, ad blocking is disabled for
        /// all placements under the campaign, regardless of site and placement settings.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Ad Slot</summary>
    public class AdSlot : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Comment for this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; }

        /// <summary>
        /// Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices
        /// or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering
        /// in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compatibility")]
        public virtual string Compatibility { get; set; }

        /// <summary>Height of this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual System.Nullable<long> Height { get; set; }

        /// <summary>ID of the placement from an external platform that is linked to this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkedPlacementId")]
        public virtual System.Nullable<long> LinkedPlacementId { get; set; }

        /// <summary>Name of this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Payment source type of this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentSourceType")]
        public virtual string PaymentSourceType { get; set; }

        /// <summary>Primary ad slot of a roadblock inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; }

        /// <summary>Width of this ad slot.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual System.Nullable<long> Width { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Ad List Response</summary>
    public class AdsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Ad collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ads")]
        public virtual System.Collections.Generic.IList<Ad> Ads { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#adsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Campaign Manager advertiser.</summary>
    public class Advertiser : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this advertiser.This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes,
        /// allowing you to see aggregated information for all advertisers in each group.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserGroupId")]
        public virtual System.Nullable<long> AdvertiserGroupId { get; set; }

        /// <summary>
        /// Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129
        /// characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrlSuffix")]
        public virtual string ClickThroughUrlSuffix { get; set; }

        /// <summary>
        /// ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultClickThroughEventTagId")]
        public virtual System.Nullable<long> DefaultClickThroughEventTagId { get; set; }

        /// <summary>Default email address used in sender field for tag emails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultEmail")]
        public virtual string DefaultEmail { get; set; }

        /// <summary>
        /// Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created
        /// automatically, so on insert this field should be left blank. This field can be set to another advertiser's
        /// floodlight configuration ID in order to share that advertiser's floodlight configuration with this
        /// advertiser, so long as: - This advertiser's original floodlight configuration is not already associated with
        /// floodlight activities or floodlight activity groups. - This advertiser's original floodlight configuration
        /// is not already shared with another advertiser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationId")]
        public virtual System.Nullable<long> FloodlightConfigurationId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationIdDimensionValue")]
        public virtual DimensionValue FloodlightConfigurationIdDimensionValue { get; set; }

        /// <summary>ID of this advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Dimension value for the ID of this advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertiser".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Measurement partner advertiser link for tag wrapping.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("measurementPartnerLink")]
        public virtual MeasurementPartnerAdvertiserLink MeasurementPartnerLink { get; set; }

        /// <summary>
        /// Name of this advertiser. This is a required field and must be less than 256 characters long and unique among
        /// advertisers of the same account.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this
        /// advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight
        /// configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has
        /// activities associated with any campaign or placement.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalFloodlightConfigurationId")]
        public virtual System.Nullable<long> OriginalFloodlightConfigurationId { get; set; }

        /// <summary>Status of this advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>Subaccount ID of this advertiser.This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>Suspension status of this advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("suspended")]
        public virtual System.Nullable<bool> Suspended { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Groups advertisers together so that reports can be generated for the entire group at once.</summary>
    public class AdvertiserGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this advertiser group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>ID of this advertiser group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertiserGroup".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this advertiser group. This is a required field and must be less than 256 characters long and unique
        /// among advertiser groups of the same account.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Advertiser Group List Response</summary>
    public class AdvertiserGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Advertiser group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserGroups")]
        public virtual System.Collections.Generic.IList<AdvertiserGroup> AdvertiserGroups { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#advertiserGroupsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Invoice List Response</summary>
    public class AdvertiserInvoicesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Invoice collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("invoices")]
        public virtual System.Collections.Generic.IList<Invoice> Invoices { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#advertiserInvoicesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Landing Page List Response</summary>
    public class AdvertiserLandingPagesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#advertiserLandingPagesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Landing page collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("landingPages")]
        public virtual System.Collections.Generic.IList<LandingPage> LandingPages { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Advertiser List Response</summary>
    public class AdvertisersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Advertiser collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertisers")]
        public virtual System.Collections.Generic.IList<Advertiser> Advertisers { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertisersListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Audience Segment.</summary>
    public class AudienceSegment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Weight allocated to this segment. The weight assigned will be understood in proportion to the weights
        /// assigned to other segments in the same segment group. Acceptable values are 1 to 1000, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allocation")]
        public virtual System.Nullable<int> Allocation { get; set; }

        /// <summary>ID of this audience segment. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Name of this audience segment. This is a required field and must be less than 65 characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Audience Segment Group.</summary>
    public class AudienceSegmentGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Audience segments assigned to this group. The number of segments must be between 2 and 100.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceSegments")]
        public virtual System.Collections.Generic.IList<AudienceSegment> AudienceSegments { get; set; }

        /// <summary>ID of this audience segment group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Name of this audience segment group. This is a required field and must be less than 65 characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>List account, subaccount, advertiser, and campaign associated with a given Billing Profile.</summary>
    public class BillingAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// ID of the account associated with the billing assignment.This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual string AccountId { get; set; }

        /// <summary>
        /// ID of the advertiser associated with the billing assignment.Wildcard (*) means this assignment is not
        /// limited to a single advertiser
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual string AdvertiserId { get; set; }

        /// <summary>
        /// ID of the campaign associated with the billing assignment. Wildcard (*) means this assignment is not limited
        /// to a single campaign
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual string CampaignId { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#billingAssignment".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// ID of the subaccount associated with the billing assignment.Wildcard (*) means this assignment is not
        /// limited to a single subaccountThis is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual string SubaccountId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Billing assignment List Response</summary>
    public class BillingAssignmentsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Billing assignments collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingAssignments")]
        public virtual System.Collections.Generic.IList<BillingAssignment> BillingAssignments { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#billingAssignmentsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Campaign Manager Billing Profile.</summary>
    public class BillingProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Consolidated invoice option for this billing profile. Used to get a single, consolidated invoice across the
        /// chosen invoice level.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("consolidatedInvoice")]
        public virtual System.Nullable<bool> ConsolidatedInvoice { get; set; }

        /// <summary>Country code of this billing profile.This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; }

        /// <summary>Billing currency code in ISO 4217 format.This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
        public virtual string CurrencyCode { get; set; }

        /// <summary>ID of this billing profile. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Invoice level for this billing profile. Used to group fees into separate invoices by account, advertiser, or
        /// campaign.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("invoiceLevel")]
        public virtual string InvoiceLevel { get; set; }

        /// <summary>True if the billing profile is the account default profile. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isDefault")]
        public virtual System.Nullable<bool> IsDefault { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#billingProfile".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this billing profile. This is a required field and must be less than 256 characters long and must be
        /// unique among billing profile in the same account.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ID of the payment account the billing profile belongs to. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentsAccountId")]
        public virtual string PaymentsAccountId { get; set; }

        /// <summary>The ID of the payment customer the billing profile belongs to. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentsCustomerId")]
        public virtual string PaymentsCustomerId { get; set; }

        /// <summary>
        /// Purchase order (PO) for this billing profile. This PO number is used in the invoices for all of the
        /// advertisers in this billing profile.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purchaseOrder")]
        public virtual string PurchaseOrder { get; set; }

        /// <summary>
        /// The ID of the secondary payment customer the billing profile belongs to. This is a read-only field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secondaryPaymentsCustomerId")]
        public virtual string SecondaryPaymentsCustomerId { get; set; }

        /// <summary>Status of this billing profile.This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Billing profile List Response</summary>
    public class BillingProfilesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Billing profiles collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingProfiles")]
        public virtual System.Collections.Generic.IList<BillingProfile> BillingProfiles { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#billingProfilesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class BillingRate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Billing currency code in ISO 4217 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
        public virtual string CurrencyCode { get; set; }

        /// <summary>End date of this billing rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>ID of this billing rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Name of this billing rate. This must be less than 256 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Flat rate in micros of this billing rate. This cannot co-exist with tiered rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rateInMicros")]
        public virtual System.Nullable<long> RateInMicros { get; set; }

        /// <summary>Start date of this billing rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>Tiered rate of this billing rate. This cannot co-exist with flat rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tieredRates")]
        public virtual System.Collections.Generic.IList<BillingRateTieredRate> TieredRates { get; set; }

        /// <summary>Type of this billing rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>Unit of measure for this billing rate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unitOfMeasure")]
        public virtual string UnitOfMeasure { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class BillingRateTieredRate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The maximum for this tier range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("highValue")]
        public virtual System.Nullable<long> HighValue { get; set; }

        /// <summary>The minimum for this tier range.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lowValue")]
        public virtual System.Nullable<long> LowValue { get; set; }

        /// <summary>Rate in micros for this tier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rateInMicros")]
        public virtual System.Nullable<long> RateInMicros { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Billing Rate List Response</summary>
    public class BillingRatesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Billing rates collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingRates")]
        public virtual System.Collections.Generic.IList<BillingRate> BillingRates { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#billingRatesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a browser that can be targeted by ads.</summary>
    public class Browser : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// ID referring to this grouping of browser and version numbers. This is the ID used for targeting.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browserVersionId")]
        public virtual System.Nullable<long> BrowserVersionId { get; set; }

        /// <summary>DART ID of this browser. This is the ID used when generating reports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#browser".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Major version number (leftmost number) of this browser. For example, for Chrome 5.0.376.86 beta, this field
        /// should be set to 5. An asterisk (*) may be used to target any version number, and a question mark (?) may be
        /// used to target cases where the version number cannot be identified. For example, Chrome *.* targets any
        /// version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but not 4.0. Firefox ?.?
        /// targets cases where the ad server knows the browser is Firefox but can't tell which version it is.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("majorVersion")]
        public virtual string MajorVersion { get; set; }

        /// <summary>
        /// Minor version number (number after first dot on left) of this browser. For example, for Chrome 5.0.375.86
        /// beta, this field should be set to 0. An asterisk (*) may be used to target any version number, and a
        /// question mark (?) may be used to target cases where the version number cannot be identified. For example,
        /// Chrome *.* targets any version of Chrome: 1.2, 2.5, 3.5, and so on. Chrome 3.* targets Chrome 3.1, 3.5, but
        /// not 4.0. Firefox ?.? targets cases where the ad server knows the browser is Firefox but can't tell which
        /// version it is.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minorVersion")]
        public virtual string MinorVersion { get; set; }

        /// <summary>Name of this browser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Browser List Response</summary>
    public class BrowsersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Browser collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browsers")]
        public virtual System.Collections.Generic.IList<Browser> Browsers { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#browsersListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Campaign Manager campaign.</summary>
    public class Campaign : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this campaign. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Ad blocking settings for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adBlockingConfiguration")]
        public virtual AdBlockingConfiguration AdBlockingConfiguration { get; set; }

        /// <summary>Additional creative optimization configurations for the campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalCreativeOptimizationConfigurations")]
        public virtual System.Collections.Generic.IList<CreativeOptimizationConfiguration> AdditionalCreativeOptimizationConfigurations { get; set; }

        /// <summary>Advertiser group ID of the associated advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserGroupId")]
        public virtual System.Nullable<long> AdvertiserGroupId { get; set; }

        /// <summary>Advertiser ID of this campaign. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>
        /// Dimension value for the advertiser ID of this campaign. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Whether this campaign has been archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; }

        /// <summary>
        /// Audience segment groups assigned to this campaign. Cannot have more than 300 segment groups.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceSegmentGroups")]
        public virtual System.Collections.Generic.IList<AudienceSegmentGroup> AudienceSegmentGroups { get; set; }

        /// <summary>
        /// Billing invoice code included in the Campaign Manager client billing invoices associated with the campaign.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingInvoiceCode")]
        public virtual string BillingInvoiceCode { get; set; }

        /// <summary>Click-through URL suffix override properties for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrlSuffixProperties")]
        public virtual ClickThroughUrlSuffixProperties ClickThroughUrlSuffixProperties { get; set; }

        /// <summary>Arbitrary comments about this campaign. Must be less than 256 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; }

        /// <summary>Information about the creation of this campaign. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createInfo")]
        public virtual LastModifiedInfo CreateInfo { get; set; }

        /// <summary>List of creative group IDs that are assigned to the campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> CreativeGroupIds { get; set; }

        /// <summary>Creative optimization configuration for the campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeOptimizationConfiguration")]
        public virtual CreativeOptimizationConfiguration CreativeOptimizationConfiguration { get; set; }

        /// <summary>Click-through event tag ID override properties for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultClickThroughEventTagProperties")]
        public virtual DefaultClickThroughEventTagProperties DefaultClickThroughEventTagProperties { get; set; }

        /// <summary>The default landing page ID for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultLandingPageId")]
        public virtual System.Nullable<long> DefaultLandingPageId { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>Overrides that can be used to activate or deactivate advertiser event tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventTagOverrides")]
        public virtual System.Collections.Generic.IList<EventTagOverride> EventTagOverrides { get; set; }

        /// <summary>External ID for this campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("externalId")]
        public virtual string ExternalId { get; set; }

        /// <summary>ID of this campaign. This is a read-only auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Dimension value for the ID of this campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#campaign".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Information about the most recent modification of this campaign. This is a read-only field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; }

        /// <summary>Measurement partner campaign link for tag wrapping.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("measurementPartnerLink")]
        public virtual MeasurementPartnerCampaignLink MeasurementPartnerLink { get; set; }

        /// <summary>
        /// Name of this campaign. This is a required field and must be less than 512 characters long and unique among
        /// campaigns of the same advertiser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>Subaccount ID of this campaign. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Identifies a creative which has been associated with a given campaign.</summary>
    public class CampaignCreativeAssociation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the creative associated with the campaign. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeId")]
        public virtual System.Nullable<long> CreativeId { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#campaignCreativeAssociation".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Campaign Creative Association List Response</summary>
    public class CampaignCreativeAssociationsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Campaign creative association collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignCreativeAssociations")]
        public virtual System.Collections.Generic.IList<CampaignCreativeAssociation> CampaignCreativeAssociations { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#campaignCreativeAssociationsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a summarized campaign information associated with this invoice.</summary>
    public class CampaignSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Campaign billing invoice code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("billingInvoiceCode")]
        public virtual string BillingInvoiceCode { get; set; }

        /// <summary>Campaign ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; }

        /// <summary>The pre-tax amount for this campaign, in micros of the invoice's currency.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("preTaxAmountMicros")]
        public virtual System.Nullable<long> PreTaxAmountMicros { get; set; }

        /// <summary>The tax amount for this campaign, in micros of the invoice's currency.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("taxAmountMicros")]
        public virtual System.Nullable<long> TaxAmountMicros { get; set; }

        /// <summary>The total amount of charges for this campaign, in micros of the invoice's currency.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalAmountMicros")]
        public virtual System.Nullable<long> TotalAmountMicros { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Campaign List Response</summary>
    public class CampaignsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Campaign collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaigns")]
        public virtual System.Collections.Generic.IList<Campaign> Campaigns { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#campaignsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    ///  *Beta:* This feature is currently in beta. Contains additional information about cart data. This field may only
    /// be used when calling batchinsert; it is not supported by batchupdate. Cart data reporting is only supported in
    /// SA360. [Learn more](https://support.google.com/sa360/topic/13425788)
    /// </summary>
    public class CartData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Data of the items purchased.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<CartDataItem> Items { get; set; }

        /// <summary>
        /// The feed labels associated with the feed where your items are uploaded. For more information, please refer
        /// to ​​ https://support.google.com/merchants/answer/12453549. Providing the feed label reduces ambiguity in
        /// identifying the right offer details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("merchantFeedLabel")]
        public virtual string MerchantFeedLabel { get; set; }

        /// <summary>
        /// The language associated with the feed where your items are uploaded. Use ISO 639-1 language codes. Providing
        /// the feed language reduces ambiguity in identifying the right offer details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("merchantFeedLanguage")]
        public virtual string MerchantFeedLanguage { get; set; }

        /// <summary>
        /// The Merchant Center ID where the items are uploaded. Providing Merchant Center ID reduces ambiguity in
        /// identifying the right offer details.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("merchantId")]
        public virtual System.Nullable<long> MerchantId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains data of the items purchased.</summary>
    public class CartDataItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The shopping id of the item. Must be equal to the Merchant Center product identifier. This is a required
        /// field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("itemId")]
        public virtual string ItemId { get; set; }

        /// <summary>Number of items sold. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quantity")]
        public virtual System.Nullable<int> Quantity { get; set; }

        /// <summary>
        /// Unit price excluding tax, shipping, and any transaction level discounts. Interpreted in CM360 Floodlight
        /// config parent advertiser's currency code. This is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("unitPrice")]
        public virtual System.Nullable<double> UnitPrice { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes a change that a user has made to a resource.</summary>
    public class ChangeLog : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of the modified object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Action which caused the change.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("changeTime")]
        public virtual string ChangeTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="ChangeTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? ChangeTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseDateTimeToDateTimeOffset(ChangeTimeRaw);
            set => ChangeTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToDateTime(value);
        }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="ChangeTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use ChangeTimeDateTimeOffset instead.")]
        public virtual System.DateTime? ChangeTime
        {
            get => Google.Apis.Util.Utilities.GetDateTimeFromString(ChangeTimeRaw);
            set => ChangeTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
        }

        /// <summary>Field name of the object which changed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fieldName")]
        public virtual string FieldName { get; set; }

        /// <summary>ID of this change log.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#changeLog".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>New value of the object field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newValue")]
        public virtual string NewValue { get; set; }

        /// <summary>
        /// ID of the object of this change log. The object could be a campaign, placement, ad, or other type.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectId")]
        public virtual System.Nullable<long> ObjectId { get; set; }

        /// <summary>Object type of the change log.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
        public virtual string ObjectType { get; set; }

        /// <summary>Old value of the object field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("oldValue")]
        public virtual string OldValue { get; set; }

        /// <summary>Subaccount ID of the modified object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>
        /// Transaction ID of this change log. When a single API call results in many changes, each change will have a
        /// separate ID in the change log but will share the same transactionId.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transactionId")]
        public virtual System.Nullable<long> TransactionId { get; set; }

        /// <summary>ID of the user who modified the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userProfileId")]
        public virtual System.Nullable<long> UserProfileId { get; set; }

        /// <summary>User profile name of the user who modified the object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userProfileName")]
        public virtual string UserProfileName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Change Log List Response</summary>
    public class ChangeLogsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Change log collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("changeLogs")]
        public virtual System.Collections.Generic.IList<ChangeLog> ChangeLogs { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#changeLogsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>City List Response</summary>
    public class CitiesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>City collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cities")]
        public virtual System.Collections.Generic.IList<City> Cities { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#citiesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a city that can be targeted by ads.</summary>
    public class City : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code of the country to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; }

        /// <summary>DART ID of the country to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; }

        /// <summary>DART ID of this city. This is the ID used for targeting and generating reports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#city".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metro region code of the metro region (DMA) to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metroCode")]
        public virtual string MetroCode { get; set; }

        /// <summary>ID of the metro region (DMA) to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metroDmaId")]
        public virtual System.Nullable<long> MetroDmaId { get; set; }

        /// <summary>Name of this city.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Region code of the region to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCode")]
        public virtual string RegionCode { get; set; }

        /// <summary>DART ID of the region to which this city belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionDartId")]
        public virtual System.Nullable<long> RegionDartId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Click Tag.</summary>
    public class ClickTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Parameter value for the specified click tag. This field contains a click-through url.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrl")]
        public virtual CreativeClickThroughUrl ClickThroughUrl { get; set; }

        /// <summary>
        /// Advertiser event name associated with the click tag. This field is used by DISPLAY_IMAGE_GALLERY and
        /// HTML5_BANNER creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventName")]
        public virtual string EventName { get; set; }

        /// <summary>
        /// Parameter name for the specified click tag. For DISPLAY_IMAGE_GALLERY creative assets, this field must match
        /// the value of the creative asset's creativeAssetId.name field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Click-through URL</summary>
    public class ClickThroughUrl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Read-only convenience field representing the actual URL that will be used for this click-through. The URL is
        /// computed as follows: - If defaultLandingPage is enabled then the campaign's default landing page URL is
        /// assigned to this field. - If defaultLandingPage is not enabled and a landingPageId is specified then that
        /// landing page's URL is assigned to this field. - If neither of the above cases apply, then the
        /// customClickThroughUrl is assigned to this field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("computedClickThroughUrl")]
        public virtual string ComputedClickThroughUrl { get; set; }

        /// <summary>
        /// Custom click-through URL. Applicable if the defaultLandingPage field is set to false and the landingPageId
        /// field is left unset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customClickThroughUrl")]
        public virtual string CustomClickThroughUrl { get; set; }

        /// <summary>Whether the campaign default landing page is used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultLandingPage")]
        public virtual System.Nullable<bool> DefaultLandingPage { get; set; }

        /// <summary>
        /// ID of the landing page for the click-through URL. Applicable if the defaultLandingPage field is set to
        /// false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("landingPageId")]
        public virtual System.Nullable<long> LandingPageId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Click Through URL Suffix settings.</summary>
    public class ClickThroughUrlSuffixProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Click-through URL suffix to apply to all ads in this entity's scope. Must be less than 128 characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrlSuffix")]
        public virtual string ClickThroughUrlSuffix { get; set; }

        /// <summary>
        /// Whether this entity should override the inherited click-through URL suffix with its own defined value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overrideInheritedSuffix")]
        public virtual System.Nullable<bool> OverrideInheritedSuffix { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Companion Click-through override.</summary>
    public class CompanionClickThroughOverride : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Click-through URL of this companion click-through override.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrl")]
        public virtual ClickThroughUrl ClickThroughUrl { get; set; }

        /// <summary>ID of the creative for this companion click-through override.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeId")]
        public virtual System.Nullable<long> CreativeId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Companion Settings</summary>
    public class CompanionSetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether companions are disabled for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionsDisabled")]
        public virtual System.Nullable<bool> CompanionsDisabled { get; set; }

        /// <summary>
        /// Allowlist of companion sizes to be served to this placement. Set this list to null or empty to serve all
        /// companion sizes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledSizes")]
        public virtual System.Collections.Generic.IList<Size> EnabledSizes { get; set; }

        /// <summary>Whether to serve only static images as companions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageOnly")]
        public virtual System.Nullable<bool> ImageOnly { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#companionSetting".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a response to the queryCompatibleFields method. Next ID: 10</summary>
    public class CompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Contains items that are compatible to be selected for a report of type "CROSS_DIMENSION_REACH".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crossDimensionReachReportCompatibleFields")]
        public virtual CrossDimensionReachReportCompatibleFields CrossDimensionReachReportCompatibleFields { get; set; }

        /// <summary>
        /// Contains items that are compatible to be selected for a report of type "CROSS_MEDIA_REACH".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crossMediaReachReportCompatibleFields")]
        public virtual CrossMediaReachReportCompatibleFields CrossMediaReachReportCompatibleFields { get; set; }

        /// <summary>Contains items that are compatible to be selected for a report of type "FLOODLIGHT".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightReportCompatibleFields")]
        public virtual FloodlightReportCompatibleFields FloodlightReportCompatibleFields { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#compatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Contains items that are compatible to be selected for a report of type "PATH_TO_CONVERSION".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pathToConversionReportCompatibleFields")]
        public virtual PathToConversionReportCompatibleFields PathToConversionReportCompatibleFields { get; set; }

        /// <summary>Contains items that are compatible to be selected for a report of type "REACH".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachReportCompatibleFields")]
        public virtual ReachReportCompatibleFields ReachReportCompatibleFields { get; set; }

        /// <summary>Contains items that are compatible to be selected for a report of type "STANDARD".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportCompatibleFields")]
        public virtual ReportCompatibleFields ReportCompatibleFields { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains information about an internet connection type that can be targeted by ads. Clients can use the
    /// connection type to target mobile vs. broadband users.
    /// </summary>
    public class ConnectionType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this connection type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#connectionType".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this connection type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Connection Type List Response</summary>
    public class ConnectionTypesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Collection of connection types such as broadband and mobile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("connectionTypes")]
        public virtual System.Collections.Generic.IList<ConnectionType> ConnectionTypes { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#connectionTypesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Content Category List Response</summary>
    public class ContentCategoriesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Content category collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentCategories")]
        public virtual System.Collections.Generic.IList<ContentCategory> ContentCategories { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#contentCategoriesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class ContentCategory : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this content category. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>ID of this content category. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#contentCategory".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this content category. This is a required field and must be less than 256 characters long and unique
        /// among content categories of the same account.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A Conversion represents when a user successfully performs a desired action after seeing an ad.
    /// </summary>
    public class Conversion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>This represents consent for ad user data.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adUserDataConsent")]
        public virtual string AdUserDataConsent { get; set; }

        /// <summary>The cart data associated with this conversion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cartData")]
        public virtual CartData CartData { get; set; }

        /// <summary>
        /// Whether this particular request may come from a user under the age of 13, under COPPA compliance.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("childDirectedTreatment")]
        public virtual System.Nullable<bool> ChildDirectedTreatment { get; set; }

        /// <summary>Custom floodlight variables.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customVariables")]
        public virtual System.Collections.Generic.IList<CustomFloodlightVariable> CustomVariables { get; set; }

        /// <summary>
        /// The display click ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[],
        /// matchId, mobileDeviceId, gclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or
        /// matchId or mobileDeviceId or gclid or impressionId is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dclid")]
        public virtual string Dclid { get; set; }

        /// <summary>
        /// The alphanumeric encrypted user ID. When set, encryptionInfo should also be specified. This field is
        /// mutually exclusive with encryptedUserIdCandidates[], matchId, mobileDeviceId, gclid, dclid, and
        /// impressionId. This or encryptedUserIdCandidates[] or matchId or mobileDeviceId or gclid or dclid or
        /// impressionId is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptedUserId")]
        public virtual string EncryptedUserId { get; set; }

        /// <summary>
        /// A list of the alphanumeric encrypted user IDs. Any user ID with exposure prior to the conversion timestamp
        /// will be used in the inserted conversion. If no such user ID is found then the conversion will be rejected
        /// with INVALID_ARGUMENT error. When set, encryptionInfo should also be specified. This field may only be used
        /// when calling batchinsert; it is not supported by batchupdate. This field is mutually exclusive with
        /// encryptedUserId, matchId, mobileDeviceId, gclid dclid, and impressionId. This or encryptedUserId or matchId
        /// or mobileDeviceId or gclid or dclid or impressionId is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptedUserIdCandidates")]
        public virtual System.Collections.Generic.IList<string> EncryptedUserIdCandidates { get; set; }

        /// <summary>Floodlight Activity ID of this conversion. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityId")]
        public virtual System.Nullable<long> FloodlightActivityId { get; set; }

        /// <summary>Floodlight Configuration ID of this conversion. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationId")]
        public virtual System.Nullable<long> FloodlightConfigurationId { get; set; }

        /// <summary>
        /// The Google click ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[],
        /// matchId, mobileDeviceId, dclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or
        /// matchId or mobileDeviceId or dclid or impressionId is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("gclid")]
        public virtual string Gclid { get; set; }

        /// <summary>
        /// The impression ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[],
        /// matchId, mobileDeviceId, and gclid. One of these identifiers must be set.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressionId")]
        public virtual string ImpressionId { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversion".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Whether Limit Ad Tracking is enabled. When set to true, the conversion will be used for reporting but not
        /// targeting. This will prevent remarketing.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("limitAdTracking")]
        public virtual System.Nullable<bool> LimitAdTracking { get; set; }

        /// <summary>
        /// The match ID field. A match ID is your own first-party identifier that has been synced with Google using the
        /// match ID feature in Floodlight. This field is mutually exclusive with encryptedUserId,
        /// encryptedUserIdCandidates[],mobileDeviceId, gclid, dclid, and impressionId. This or encryptedUserId
        /// orencryptedUserIdCandidates[] or mobileDeviceId or gclid or dclid or impressionIdis a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchId")]
        public virtual string MatchId { get; set; }

        /// <summary>
        /// The mobile device ID. This field is mutually exclusive with encryptedUserId, encryptedUserIdCandidates[],
        /// matchId, gclid, dclid, and impressionId. This or encryptedUserId or encryptedUserIdCandidates[] or matchId
        /// or gclid or dclid or impressionId is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobileDeviceId")]
        public virtual string MobileDeviceId { get; set; }

        /// <summary>Whether the conversion was for a non personalized ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nonPersonalizedAd")]
        public virtual System.Nullable<bool> NonPersonalizedAd { get; set; }

        /// <summary>
        /// The ordinal of the conversion. Use this field to control how conversions of the same user and day are
        /// de-duplicated. This is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ordinal")]
        public virtual string Ordinal { get; set; }

        /// <summary>The quantity of the conversion. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("quantity")]
        public virtual System.Nullable<long> Quantity { get; set; }

        /// <summary>
        /// Session attributes for the conversion, encoded as based64 bytes. This field may only be used when calling
        /// batchinsert; it is not supported by batchupdate.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sessionAttributesEncoded")]
        public virtual string SessionAttributesEncoded { get; set; }

        /// <summary>The timestamp of conversion, in Unix epoch micros. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timestampMicros")]
        public virtual System.Nullable<long> TimestampMicros { get; set; }

        /// <summary>
        /// Whether this particular request may come from a user under the age of 16 (may differ by country), under
        /// compliance with the European Union's General Data Protection Regulation (GDPR).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("treatmentForUnderage")]
        public virtual System.Nullable<bool> TreatmentForUnderage { get; set; }

        /// <summary>
        /// The user identifiers to enhance the conversion. The maximum number of user identifiers for each conversion
        /// is 5.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userIdentifiers")]
        public virtual System.Collections.Generic.IList<UserIdentifier> UserIdentifiers { get; set; }

        /// <summary>
        /// The value of the conversion. Interpreted in CM360 Floodlight config parent advertiser's currency code. This
        /// is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual System.Nullable<double> Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The error code and description for a conversion that failed to insert or update.</summary>
    public class ConversionError : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The error code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual string Code { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionError".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>A description of the error.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>The original conversion that was inserted or updated and whether there were any errors.</summary>
    public class ConversionStatus : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The original conversion that was inserted or updated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversion")]
        public virtual Conversion Conversion { get; set; }

        /// <summary>A list of errors related to this conversion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("errors")]
        public virtual System.Collections.Generic.IList<ConversionError> Errors { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionStatus".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Insert Conversions Request.</summary>
    public class ConversionsBatchInsertRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The set of conversions to insert.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversions")]
        public virtual System.Collections.Generic.IList<Conversion> Conversions { get; set; }

        /// <summary>
        /// Describes how encryptedUserId or encryptedUserIdCandidates[] is encrypted. This is a required field if
        /// encryptedUserId or encryptedUserIdCandidates[] is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptionInfo")]
        public virtual EncryptionInfo EncryptionInfo { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#conversionsBatchInsertRequest".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Insert Conversions Response.</summary>
    public class ConversionsBatchInsertResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates that some or all conversions failed to insert.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasFailures")]
        public virtual System.Nullable<bool> HasFailures { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#conversionsBatchInsertResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// The insert status of each conversion. Statuses are returned in the same order that conversions are inserted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual System.Collections.Generic.IList<ConversionStatus> Status { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Update Conversions Request.</summary>
    public class ConversionsBatchUpdateRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The set of conversions to update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversions")]
        public virtual System.Collections.Generic.IList<Conversion> Conversions { get; set; }

        /// <summary>
        /// Describes how encryptedUserId is encrypted. This is a required field if encryptedUserId is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptionInfo")]
        public virtual EncryptionInfo EncryptionInfo { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#conversionsBatchUpdateRequest".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Update Conversions Response.</summary>
    public class ConversionsBatchUpdateResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Indicates that some or all conversions failed to update.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hasFailures")]
        public virtual System.Nullable<bool> HasFailures { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#conversionsBatchUpdateResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// The update status of each conversion. Statuses are returned in the same order that conversions are updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual System.Collections.Generic.IList<ConversionStatus> Status { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Country List Response</summary>
    public class CountriesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countries")]
        public virtual System.Collections.Generic.IList<Country> Countries { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#countriesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a country that can be targeted by ads.</summary>
    public class Country : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; }

        /// <summary>DART ID of this country. This is the ID used for targeting and generating reports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#country".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this country.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Whether ad serving supports secure servers in this country.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslEnabled")]
        public virtual System.Nullable<bool> SslEnabled { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Creative.</summary>
    public class Creative : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Account ID of this creative. This field, if left unset, will be auto-generated for both insert and update
        /// operations. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Whether the creative is active. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>
        /// Ad parameters user for VPAID creative. This is a read-only field. Applicable to the following creative
        /// types: all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adParameters")]
        public virtual string AdParameters { get; set; }

        /// <summary>
        /// Keywords for a Rich Media creative. Keywords let you customize the creative settings of a Rich Media ad
        /// running on your site without having to contact the advertiser. You can use keywords to dynamically change
        /// the look or functionality of a creative. Applicable to the following creative types: all RICH_MEDIA, and all
        /// VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adTagKeys")]
        public virtual System.Collections.Generic.IList<string> AdTagKeys { get; set; }

        /// <summary>
        /// Additional sizes associated with a responsive creative. When inserting or updating a creative either the
        /// size ID field or size width and height fields can be used. Applicable to DISPLAY creatives when the primary
        /// asset type is HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalSizes")]
        public virtual System.Collections.Generic.IList<Size> AdditionalSizes { get; set; }

        /// <summary>
        /// Required. Advertiser ID of this creative. This is a required field. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>
        /// Whether script access is allowed for this creative. This is a read-only and deprecated field which will
        /// automatically be set to true on update. Applicable to the following creative types: FLASH_INPAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("allowScriptAccess")]
        public virtual System.Nullable<bool> AllowScriptAccess { get; set; }

        /// <summary>Whether the creative is archived. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; }

        /// <summary>
        /// Type of artwork used for the creative. This is a read-only field. Applicable to the following creative
        /// types: all RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artworkType")]
        public virtual string ArtworkType { get; set; }

        /// <summary>
        /// Source application where creative was authored. Presently, only DBM authored creatives will have this field
        /// set. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authoringSource")]
        public virtual string AuthoringSource { get; set; }

        /// <summary>
        /// Authoring tool for HTML5 banner creatives. This is a read-only field. Applicable to the following creative
        /// types: HTML5_BANNER.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authoringTool")]
        public virtual string AuthoringTool { get; set; }

        /// <summary>
        /// Whether images are automatically advanced for image gallery creatives. Applicable to the following creative
        /// types: DISPLAY_IMAGE_GALLERY.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("autoAdvanceImages")]
        public virtual System.Nullable<bool> AutoAdvanceImages { get; set; }

        /// <summary>
        /// The 6-character HTML color code, beginning with #, for the background of the window area where the Flash
        /// file is displayed. Default is white. Applicable to the following creative types: FLASH_INPAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backgroundColor")]
        public virtual string BackgroundColor { get; set; }

        /// <summary>
        /// Click-through URL for backup image. Applicable to ENHANCED_BANNER when the primary asset type is not
        /// HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageClickThroughUrl")]
        public virtual CreativeClickThroughUrl BackupImageClickThroughUrl { get; set; }

        /// <summary>
        /// List of feature dependencies that will cause a backup image to be served if the browser that serves the ad
        /// does not support them. Feature dependencies are features that a browser must be able to support in order to
        /// render your HTML5 creative asset correctly. This field is initially auto-generated to contain all features
        /// detected by Campaign Manager for all the assets of this creative and can then be modified by the client. To
        /// reset this field, copy over all the creativeAssets' detected features. Applicable to the following creative
        /// types: HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageFeatures")]
        public virtual System.Collections.Generic.IList<string> BackupImageFeatures { get; set; }

        /// <summary>
        /// Reporting label used for HTML5 banner backup image. Applicable to the following creative types: DISPLAY when
        /// the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageReportingLabel")]
        public virtual string BackupImageReportingLabel { get; set; }

        /// <summary>
        /// Target window for backup image. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER.
        /// Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageTargetWindow")]
        public virtual TargetWindow BackupImageTargetWindow { get; set; }

        /// <summary>
        /// Click tags of the creative. For DISPLAY, FLASH_INPAGE, and HTML5_BANNER creatives, this is a subset of
        /// detected click tags for the assets associated with this creative. After creating a flash asset, detected
        /// click tags will be returned in the creativeAssetMetadata. When inserting the creative, populate the creative
        /// clickTags field using the creativeAssetMetadata.clickTags field. For DISPLAY_IMAGE_GALLERY creatives, there
        /// should be exactly one entry in this list for each image creative asset. A click tag is matched with a
        /// corresponding creative asset by matching the clickTag.name field with the creativeAsset.assetIdentifier.name
        /// field. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER.
        /// Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickTags")]
        public virtual System.Collections.Generic.IList<ClickTag> ClickTags { get; set; }

        /// <summary>
        /// Industry standard ID assigned to creative for reach and frequency. Applicable to INSTREAM_VIDEO_REDIRECT
        /// creatives.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commercialId")]
        public virtual string CommercialId { get; set; }

        /// <summary>
        /// List of companion creatives assigned to an in-Stream video creative. Acceptable values include IDs of
        /// existing flash and image creatives. Applicable to the following creative types: all VPAID, all
        /// INSTREAM_AUDIO and all INSTREAM_VIDEO with dynamicAssetSelection set to false.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionCreatives")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> CompanionCreatives { get; set; }

        /// <summary>
        /// Compatibilities associated with this creative. This is a read-only field. DISPLAY and DISPLAY_INTERSTITIAL
        /// refer to rendering either on desktop or on mobile devices or in mobile apps for regular or interstitial ads,
        /// respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. Only pre-existing creatives may
        /// have these compatibilities since new creatives will either be assigned DISPLAY or DISPLAY_INTERSTITIAL
        /// instead. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.
        /// IN_STREAM_AUDIO refers to rendering in in-stream audio ads developed with the VAST standard. Applicable to
        /// all creative types. Acceptable values are: - "APP" - "APP_INTERSTITIAL" - "IN_STREAM_VIDEO" -
        /// "IN_STREAM_AUDIO" - "DISPLAY" - "DISPLAY_INTERSTITIAL"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compatibility")]
        public virtual System.Collections.Generic.IList<string> Compatibility { get; set; }

        /// <summary>
        /// Whether Flash assets associated with the creative need to be automatically converted to HTML5. This flag is
        /// enabled by default and users can choose to disable it if they don't want the system to generate and use
        /// HTML5 asset for this creative. Applicable to the following creative type: FLASH_INPAGE. Applicable to
        /// DISPLAY when the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("convertFlashToHtml5")]
        public virtual System.Nullable<bool> ConvertFlashToHtml5 { get; set; }

        /// <summary>
        /// List of counter events configured for the creative. For DISPLAY_IMAGE_GALLERY creatives, these are read-only
        /// and auto-generated from clickTags. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all
        /// RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("counterCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> CounterCustomEvents { get; set; }

        /// <summary>Required if dynamicAssetSelection is true.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeAssetSelection")]
        public virtual CreativeAssetSelection CreativeAssetSelection { get; set; }

        /// <summary>
        /// Assets associated with a creative. Applicable to all but the following creative types: INTERNAL_REDIRECT,
        /// INTERSTITIAL_INTERNAL_REDIRECT, and REDIRECT
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeAssets")]
        public virtual System.Collections.Generic.IList<CreativeAsset> CreativeAssets { get; set; }

        /// <summary>Creative field assignments for this creative. Applicable to all creative types.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFieldAssignments")]
        public virtual System.Collections.Generic.IList<CreativeFieldAssignment> CreativeFieldAssignments { get; set; }

        /// <summary>
        /// Custom key-values for a Rich Media creative. Key-values let you customize the creative settings of a Rich
        /// Media ad running on your site without having to contact the advertiser. You can use key-values to
        /// dynamically change the look or functionality of a creative. Applicable to the following creative types: all
        /// RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customKeyValues")]
        public virtual System.Collections.Generic.IList<string> CustomKeyValues { get; set; }

        /// <summary>
        /// Set this to true to enable the use of rules to target individual assets in this creative. When set to true
        /// creativeAssetSelection must be set. This also controls asset-level companions. When this is true, companion
        /// creatives should be assigned to creative assets. Learn more. Applicable to INSTREAM_VIDEO creatives.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicAssetSelection")]
        public virtual System.Nullable<bool> DynamicAssetSelection { get; set; }

        /// <summary>
        /// List of exit events configured for the creative. For DISPLAY and DISPLAY_IMAGE_GALLERY creatives, these are
        /// read-only and auto-generated from clickTags, For DISPLAY, an event is also created from the
        /// backupImageReportingLabel. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all
        /// RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exitCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> ExitCustomEvents { get; set; }

        /// <summary>
        /// OpenWindow FSCommand of this creative. This lets the SWF file communicate with either Flash Player or the
        /// program hosting Flash Player, such as a web browser. This is only triggered if allowScriptAccess field is
        /// true. Applicable to the following creative types: FLASH_INPAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fsCommand")]
        public virtual FsCommand FsCommand { get; set; }

        /// <summary>
        /// HTML code for the creative. This is a required field when applicable. This field is ignored if
        /// htmlCodeLocked is true. Applicable to the following creative types: all CUSTOM, FLASH_INPAGE, and
        /// HTML5_BANNER, and all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("htmlCode")]
        public virtual string HtmlCode { get; set; }

        /// <summary>
        /// Whether HTML code is generated by Campaign Manager or manually entered. Set to true to ignore changes to
        /// htmlCode. Applicable to the following creative types: FLASH_INPAGE and HTML5_BANNER.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("htmlCodeLocked")]
        public virtual System.Nullable<bool> HtmlCodeLocked { get; set; }

        /// <summary>
        /// ID of this creative. This is a read-only, auto-generated field. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Dimension value for the ID of this creative. This is a read-only field. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#creative".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Creative last modification information. This is a read-only field. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; }

        /// <summary>
        /// Latest Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only
        /// field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("latestTraffickedCreativeId")]
        public virtual System.Nullable<long> LatestTraffickedCreativeId { get; set; }

        /// <summary>
        /// Description of the audio or video ad. Applicable to the following creative types: all INSTREAM_VIDEO,
        /// INSTREAM_AUDIO, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaDescription")]
        public virtual string MediaDescription { get; set; }

        /// <summary>
        /// Creative audio or video duration in seconds. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_VIDEO, INSTREAM_AUDIO, all RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaDuration")]
        public virtual System.Nullable<float> MediaDuration { get; set; }

        /// <summary>
        /// Required. Name of the creative. This must be less than 256 characters long. Applicable to all creative
        /// types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Online behavioral advertising icon to be added to the creative. Applicable to the following creative types:
        /// all INSTREAM_VIDEO.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("obaIcon")]
        public virtual ObaIcon ObaIcon { get; set; }

        /// <summary>
        /// Override CSS value for rich media creatives. Applicable to the following creative types: all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overrideCss")]
        public virtual string OverrideCss { get; set; }

        /// <summary>
        /// Amount of time to play the video before counting a view. Applicable to the following creative types: all
        /// INSTREAM_VIDEO.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progressOffset")]
        public virtual VideoOffset ProgressOffset { get; set; }

        /// <summary>
        /// URL of hosted image or hosted video or another ad tag. For INSTREAM_VIDEO_REDIRECT creatives this is the
        /// in-stream video redirect URL. The standard for a VAST (Video Ad Serving Template) ad response allows for a
        /// redirect link to another VAST 2.0 or 3.0 call. This is a required field when applicable. Applicable to the
        /// following creative types: DISPLAY_REDIRECT, INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and
        /// INSTREAM_VIDEO_REDIRECT
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("redirectUrl")]
        public virtual string RedirectUrl { get; set; }

        /// <summary>
        /// ID of current rendering version. This is a read-only field. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderingId")]
        public virtual System.Nullable<long> RenderingId { get; set; }

        /// <summary>
        /// Dimension value for the rendering ID of this creative. This is a read-only field. Applicable to all creative
        /// types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("renderingIdDimensionValue")]
        public virtual DimensionValue RenderingIdDimensionValue { get; set; }

        /// <summary>
        /// The minimum required Flash plugin version for this creative. For example, 11.2.202.235. This is a read-only
        /// field. Applicable to the following creative types: all RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requiredFlashPluginVersion")]
        public virtual string RequiredFlashPluginVersion { get; set; }

        /// <summary>
        /// The internal Flash version for this creative as calculated by Studio. This is a read-only field. Applicable
        /// to the following creative types: FLASH_INPAGE all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the
        /// primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("requiredFlashVersion")]
        public virtual System.Nullable<int> RequiredFlashVersion { get; set; }

        /// <summary>
        /// Size associated with this creative. When inserting or updating a creative either the size ID field or size
        /// width and height fields can be used. This is a required field when applicable; however for IMAGE,
        /// FLASH_INPAGE creatives, and for DISPLAY creatives with a primary asset of type HTML_IMAGE, if left blank,
        /// this field will be automatically set using the actual size of the associated image assets. Applicable to the
        /// following creative types: DISPLAY, DISPLAY_IMAGE_GALLERY, FLASH_INPAGE, HTML5_BANNER, IMAGE, and all
        /// RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; }

        /// <summary>
        /// Amount of time to play the video before the skip button appears. Applicable to the following creative types:
        /// all INSTREAM_VIDEO.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skipOffset")]
        public virtual VideoOffset SkipOffset { get; set; }

        /// <summary>
        /// Whether the user can choose to skip the creative. Applicable to the following creative types: all
        /// INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skippable")]
        public virtual System.Nullable<bool> Skippable { get; set; }

        /// <summary>
        /// Whether the creative is SSL-compliant. This is a read-only field. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; }

        /// <summary>
        /// Whether creative should be treated as SSL compliant even if the system scan shows it's not. Applicable to
        /// all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslOverride")]
        public virtual System.Nullable<bool> SslOverride { get; set; }

        /// <summary>
        /// Studio advertiser ID associated with rich media and VPAID creatives. This is a read-only field. Applicable
        /// to the following creative types: all RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("studioAdvertiserId")]
        public virtual System.Nullable<long> StudioAdvertiserId { get; set; }

        /// <summary>
        /// Studio creative ID associated with rich media and VPAID creatives. This is a read-only field. Applicable to
        /// the following creative types: all RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("studioCreativeId")]
        public virtual System.Nullable<long> StudioCreativeId { get; set; }

        /// <summary>
        /// Studio trafficked creative ID associated with rich media and VPAID creatives. This is a read-only field.
        /// Applicable to the following creative types: all RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("studioTraffickedCreativeId")]
        public virtual System.Nullable<long> StudioTraffickedCreativeId { get; set; }

        /// <summary>
        /// Subaccount ID of this creative. This field, if left unset, will be auto-generated for both insert and update
        /// operations. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>
        /// Third-party URL used to record backup image impressions. Applicable to the following creative types: all
        /// RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyBackupImageImpressionsUrl")]
        public virtual string ThirdPartyBackupImageImpressionsUrl { get; set; }

        /// <summary>
        /// Third-party URL used to record rich media impressions. Applicable to the following creative types: all
        /// RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyRichMediaImpressionsUrl")]
        public virtual string ThirdPartyRichMediaImpressionsUrl { get; set; }

        /// <summary>
        /// Third-party URLs for tracking in-stream creative events. Applicable to the following creative types: all
        /// INSTREAM_VIDEO, all INSTREAM_AUDIO, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyUrls")]
        public virtual System.Collections.Generic.IList<ThirdPartyTrackingUrl> ThirdPartyUrls { get; set; }

        /// <summary>
        /// List of timer events configured for the creative. For DISPLAY_IMAGE_GALLERY creatives, these are read-only
        /// and auto-generated from clickTags. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, all
        /// RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timerCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> TimerCustomEvents { get; set; }

        /// <summary>
        /// Combined size of all creative assets. This is a read-only field. Applicable to the following creative types:
        /// all RICH_MEDIA, and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalFileSize")]
        public virtual System.Nullable<long> TotalFileSize { get; set; }

        /// <summary>
        /// Required. Type of this creative. Applicable to all creative types. *Note:* FLASH_INPAGE, HTML5_BANNER, and
        /// IMAGE are only used for existing creatives. New creatives should use DISPLAY as a replacement for these
        /// types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>
        /// A Universal Ad ID as per the VAST 4.0 spec. Applicable to the following creative types: INSTREAM_AUDIO and
        /// INSTREAM_VIDEO and VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("universalAdId")]
        public virtual UniversalAdId UniversalAdId { get; set; }

        /// <summary>
        /// The version number helps you keep track of multiple versions of your creative in your reports. The version
        /// number will always be auto-generated during insert operations to start at 1. For tracking creatives the
        /// version cannot be incremented and will always remain at 1. For all other creative types the version can be
        /// incremented only by 1 during update operations. In addition, the version will be automatically incremented
        /// by 1 when undergoing Rich Media creative merging. Applicable to all creative types.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("version")]
        public virtual System.Nullable<int> Version { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Asset.</summary>
    public class CreativeAsset : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether ActionScript3 is enabled for the flash asset. This is a read-only field. Applicable to the following
        /// creative type: FLASH_INPAGE. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actionScript3")]
        public virtual System.Nullable<bool> ActionScript3 { get; set; }

        /// <summary>
        /// Whether the video or audio asset is active. This is a read-only field for VPAID_NON_LINEAR_VIDEO assets.
        /// Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>
        /// Additional sizes associated with this creative asset. HTML5 asset generated by compatible software such as
        /// GWD will be able to support more sizes this creative asset can render.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalSizes")]
        public virtual System.Collections.Generic.IList<Size> AdditionalSizes { get; set; }

        /// <summary>
        /// Possible alignments for an asset. This is a read-only field. Applicable to the following creative types:
        /// RICH_MEDIA_DISPLAY_MULTI_FLOATING_INTERSTITIAL .
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("alignment")]
        public virtual string Alignment { get; set; }

        /// <summary>
        /// Artwork type of rich media creative. This is a read-only field. Applicable to the following creative types:
        /// all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artworkType")]
        public virtual string ArtworkType { get; set; }

        /// <summary>
        /// Identifier of this asset. This is the same identifier returned during creative asset insert operation. This
        /// is a required field. Applicable to all but the following creative types: all REDIRECT and TRACKING_TEXT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assetIdentifier")]
        public virtual CreativeAssetId AssetIdentifier { get; set; }

        /// <summary>
        /// Audio stream bit rate in kbps. This is a read-only field. Applicable to the following creative types:
        /// INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioBitRate")]
        public virtual System.Nullable<int> AudioBitRate { get; set; }

        /// <summary>
        /// Audio sample bit rate in hertz. This is a read-only field. Applicable to the following creative types:
        /// INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioSampleRate")]
        public virtual System.Nullable<int> AudioSampleRate { get; set; }

        /// <summary>
        /// Exit event configured for the backup image. Applicable to the following creative types: all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("backupImageExit")]
        public virtual CreativeCustomEvent BackupImageExit { get; set; }

        /// <summary>
        /// Detected bit-rate for audio or video asset. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bitRate")]
        public virtual System.Nullable<int> BitRate { get; set; }

        /// <summary>
        /// Rich media child asset type. This is a read-only field. Applicable to the following creative types: all
        /// VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("childAssetType")]
        public virtual string ChildAssetType { get; set; }

        /// <summary>
        /// Size of an asset when collapsed. This is a read-only field. Applicable to the following creative types: all
        /// RICH_MEDIA and all VPAID. Additionally, applicable to assets whose displayType is
        /// ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("collapsedSize")]
        public virtual Size CollapsedSize { get; set; }

        /// <summary>
        /// List of companion creatives assigned to an in-stream video creative asset. Acceptable values include IDs of
        /// existing flash and image creatives. Applicable to INSTREAM_VIDEO creative type with dynamicAssetSelection
        /// set to true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionCreativeIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> CompanionCreativeIds { get; set; }

        /// <summary>
        /// Custom start time in seconds for making the asset visible. Applicable to the following creative types: all
        /// RICH_MEDIA. Value must be greater than or equal to 0.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customStartTimeValue")]
        public virtual System.Nullable<int> CustomStartTimeValue { get; set; }

        /// <summary>
        /// List of feature dependencies for the creative asset that are detected by Campaign Manager. Feature
        /// dependencies are features that a browser must be able to support in order to render your HTML5 creative
        /// correctly. This is a read-only, auto-generated field. Applicable to the following creative types:
        /// HTML5_BANNER. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detectedFeatures")]
        public virtual System.Collections.Generic.IList<string> DetectedFeatures { get; set; }

        /// <summary>
        /// Type of rich media asset. This is a read-only field. Applicable to the following creative types: all
        /// RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayType")]
        public virtual string DisplayType { get; set; }

        /// <summary>
        /// Duration in seconds for which an asset will be displayed. Applicable to the following creative types:
        /// INSTREAM_AUDIO, INSTREAM_VIDEO and VPAID_LINEAR_VIDEO. Value must be greater than or equal to 1.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual System.Nullable<int> Duration { get; set; }

        /// <summary>
        /// Duration type for which an asset will be displayed. Applicable to the following creative types: all
        /// RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("durationType")]
        public virtual string DurationType { get; set; }

        /// <summary>
        /// Detected expanded dimension for video asset. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expandedDimension")]
        public virtual Size ExpandedDimension { get; set; }

        /// <summary>
        /// File size associated with this creative asset. This is a read-only field. Applicable to all but the
        /// following creative types: all REDIRECT and TRACKING_TEXT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileSize")]
        public virtual System.Nullable<long> FileSize { get; set; }

        /// <summary>
        /// Flash version of the asset. This is a read-only field. Applicable to the following creative types:
        /// FLASH_INPAGE, all RICH_MEDIA, and all VPAID. Applicable to DISPLAY when the primary asset type is not
        /// HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flashVersion")]
        public virtual System.Nullable<int> FlashVersion { get; set; }

        /// <summary>
        /// Video frame rate for video asset in frames per second. This is a read-only field. Applicable to the
        /// following creative types: INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("frameRate")]
        public virtual System.Nullable<float> FrameRate { get; set; }

        /// <summary>
        /// Whether to hide Flash objects flag for an asset. Applicable to the following creative types: all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hideFlashObjects")]
        public virtual System.Nullable<bool> HideFlashObjects { get; set; }

        /// <summary>
        /// Whether to hide selection boxes flag for an asset. Applicable to the following creative types: all
        /// RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hideSelectionBoxes")]
        public virtual System.Nullable<bool> HideSelectionBoxes { get; set; }

        /// <summary>
        /// Whether the asset is horizontally locked. This is a read-only field. Applicable to the following creative
        /// types: all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("horizontallyLocked")]
        public virtual System.Nullable<bool> HorizontallyLocked { get; set; }

        /// <summary>
        /// Numeric ID of this creative asset. This is a required field and should not be modified. Applicable to all
        /// but the following creative types: all REDIRECT and TRACKING_TEXT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Dimension value for the ID of the asset. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Detected duration for audio or video asset. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mediaDuration")]
        public virtual System.Nullable<float> MediaDuration { get; set; }

        /// <summary>
        /// Detected MIME type for audio or video asset. This is a read-only field. Applicable to the following creative
        /// types: INSTREAM_AUDIO, INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mimeType")]
        public virtual string MimeType { get; set; }

        /// <summary>
        /// Offset position for an asset in collapsed mode. This is a read-only field. Applicable to the following
        /// creative types: all RICH_MEDIA and all VPAID. Additionally, only applicable to assets whose displayType is
        /// ASSET_DISPLAY_TYPE_EXPANDING or ASSET_DISPLAY_TYPE_PEEL_DOWN.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual OffsetPosition Offset { get; set; }

        /// <summary>Orientation of video asset. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orientation")]
        public virtual string Orientation { get; set; }

        /// <summary>
        /// Whether the backup asset is original or changed by the user in Campaign Manager. Applicable to the following
        /// creative types: all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalBackup")]
        public virtual System.Nullable<bool> OriginalBackup { get; set; }

        /// <summary>Whether this asset is used as a polite load asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("politeLoad")]
        public virtual System.Nullable<bool> PoliteLoad { get; set; }

        /// <summary>Offset position for an asset. Applicable to the following creative types: all RICH_MEDIA.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("position")]
        public virtual OffsetPosition Position { get; set; }

        /// <summary>
        /// Offset left unit for an asset. This is a read-only field. Applicable to the following creative types: all
        /// RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positionLeftUnit")]
        public virtual string PositionLeftUnit { get; set; }

        /// <summary>
        /// Offset top unit for an asset. This is a read-only field if the asset displayType is
        /// ASSET_DISPLAY_TYPE_OVERLAY. Applicable to the following creative types: all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positionTopUnit")]
        public virtual string PositionTopUnit { get; set; }

        /// <summary>
        /// Progressive URL for video asset. This is a read-only field. Applicable to the following creative types:
        /// INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progressiveServingUrl")]
        public virtual string ProgressiveServingUrl { get; set; }

        /// <summary>
        /// Whether the asset pushes down other content. Applicable to the following creative types: all RICH_MEDIA.
        /// Additionally, only applicable when the asset offsets are 0, the collapsedSize.width matches size.width, and
        /// the collapsedSize.height is less than size.height.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pushdown")]
        public virtual System.Nullable<bool> Pushdown { get; set; }

        /// <summary>
        /// Pushdown duration in seconds for an asset. Applicable to the following creative types: all
        /// RICH_MEDIA.Additionally, only applicable when the asset pushdown field is true, the offsets are 0, the
        /// collapsedSize.width matches size.width, and the collapsedSize.height is less than size.height. Acceptable
        /// values are 0 to 9.99, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pushdownDuration")]
        public virtual System.Nullable<float> PushdownDuration { get; set; }

        /// <summary>
        /// Role of the asset in relation to creative. Applicable to all but the following creative types: all REDIRECT
        /// and TRACKING_TEXT. This is a required field. PRIMARY applies to DISPLAY, FLASH_INPAGE, HTML5_BANNER, IMAGE,
        /// DISPLAY_IMAGE_GALLERY, all RICH_MEDIA (which may contain multiple primary assets), and all VPAID creatives.
        /// BACKUP_IMAGE applies to FLASH_INPAGE, HTML5_BANNER, all RICH_MEDIA, and all VPAID creatives. Applicable to
        /// DISPLAY when the primary asset type is not HTML_IMAGE. ADDITIONAL_IMAGE and ADDITIONAL_FLASH apply to
        /// FLASH_INPAGE creatives. OTHER refers to assets from sources other than Campaign Manager, such as Studio
        /// uploaded assets, applicable to all RICH_MEDIA and all VPAID creatives. PARENT_VIDEO refers to videos
        /// uploaded by the user in Campaign Manager and is applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO
        /// creatives. TRANSCODED_VIDEO refers to videos transcoded by Campaign Manager from PARENT_VIDEO assets and is
        /// applicable to INSTREAM_VIDEO and VPAID_LINEAR_VIDEO creatives. ALTERNATE_VIDEO refers to the Campaign
        /// Manager representation of child asset videos from Studio, and is applicable to VPAID_LINEAR_VIDEO creatives.
        /// These cannot be added or removed within Campaign Manager. For VPAID_LINEAR_VIDEO creatives, PARENT_VIDEO,
        /// TRANSCODED_VIDEO and ALTERNATE_VIDEO assets that are marked active serve as backup in case the VPAID
        /// creative cannot be served. Only PARENT_VIDEO assets can be added or removed for an INSTREAM_VIDEO or
        /// VPAID_LINEAR_VIDEO creative. PARENT_AUDIO refers to audios uploaded by the user in Campaign Manager and is
        /// applicable to INSTREAM_AUDIO creatives. TRANSCODED_AUDIO refers to audios transcoded by Campaign Manager
        /// from PARENT_AUDIO assets and is applicable to INSTREAM_AUDIO creatives.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("role")]
        public virtual string Role { get; set; }

        /// <summary>
        /// Size associated with this creative asset. This is a required field when applicable; however for IMAGE and
        /// FLASH_INPAGE, creatives if left blank, this field will be automatically set using the actual size of the
        /// associated image asset. Applicable to the following creative types: DISPLAY_IMAGE_GALLERY, FLASH_INPAGE,
        /// HTML5_BANNER, IMAGE, and all RICH_MEDIA. Applicable to DISPLAY when the primary asset type is not
        /// HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; }

        /// <summary>
        /// Whether the asset is SSL-compliant. This is a read-only field. Applicable to all but the following creative
        /// types: all REDIRECT and TRACKING_TEXT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; }

        /// <summary>
        /// Initial wait time type before making the asset visible. Applicable to the following creative types: all
        /// RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startTimeType")]
        public virtual string StartTimeType { get; set; }

        /// <summary>
        /// Streaming URL for video asset. This is a read-only field. Applicable to the following creative types:
        /// INSTREAM_VIDEO and all VPAID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("streamingServingUrl")]
        public virtual string StreamingServingUrl { get; set; }

        /// <summary>
        /// Whether the asset is transparent. Applicable to the following creative types: all RICH_MEDIA. Additionally,
        /// only applicable to HTML5 assets.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transparency")]
        public virtual System.Nullable<bool> Transparency { get; set; }

        /// <summary>
        /// Whether the asset is vertically locked. This is a read-only field. Applicable to the following creative
        /// types: all RICH_MEDIA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("verticallyLocked")]
        public virtual System.Nullable<bool> VerticallyLocked { get; set; }

        /// <summary>
        /// Window mode options for flash assets. Applicable to the following creative types: FLASH_INPAGE,
        /// RICH_MEDIA_DISPLAY_EXPANDING, RICH_MEDIA_IM_EXPAND, RICH_MEDIA_DISPLAY_BANNER, and
        /// RICH_MEDIA_INPAGE_FLOATING.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("windowMode")]
        public virtual string WindowMode { get; set; }

        /// <summary>
        /// zIndex value of an asset. Applicable to the following creative types: all RICH_MEDIA.Additionally, only
        /// applicable to assets whose displayType is NOT one of the following types: ASSET_DISPLAY_TYPE_INPAGE or
        /// ASSET_DISPLAY_TYPE_OVERLAY. Acceptable values are -999999999 to 999999999, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zIndex")]
        public virtual System.Nullable<int> ZIndex { get; set; }

        /// <summary>
        /// File name of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zipFilename")]
        public virtual string ZipFilename { get; set; }

        /// <summary>
        /// Size of zip file. This is a read-only field. Applicable to the following creative types: HTML5_BANNER.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("zipFilesize")]
        public virtual string ZipFilesize { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Asset ID.</summary>
    public class CreativeAssetId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Name of the creative asset. This is a required field while inserting an asset. After insertion, this
        /// assetIdentifier is used to identify the uploaded asset. Characters in the name must be alphanumeric or one
        /// of the following: ".-_ ". Spaces are allowed.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Type of asset to upload. This is a required field. FLASH and IMAGE are no longer supported for new uploads.
        /// All image assets should use HTML_IMAGE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// CreativeAssets contains properties of a creative asset file which will be uploaded or has already been uploaded.
    /// Refer to the creative sample code for how to upload assets and insert a creative.
    /// </summary>
    public class CreativeAssetMetadata : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the creative asset. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assetIdentifier")]
        public virtual CreativeAssetId AssetIdentifier { get; set; }

        /// <summary>
        /// List of detected click tags for assets. This is a read-only, auto-generated field. This field is empty for a
        /// rich media asset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickTags")]
        public virtual System.Collections.Generic.IList<ClickTag> ClickTags { get; set; }

        /// <summary>
        /// List of counter events configured for the asset. This is a read-only, auto-generated field and only
        /// applicable to a rich media asset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("counterCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> CounterCustomEvents { get; set; }

        /// <summary>
        /// List of feature dependencies for the creative asset that are detected by Campaign Manager. Feature
        /// dependencies are features that a browser must be able to support in order to render your HTML5 creative
        /// correctly. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("detectedFeatures")]
        public virtual System.Collections.Generic.IList<string> DetectedFeatures { get; set; }

        /// <summary>
        /// List of exit events configured for the asset. This is a read-only, auto-generated field and only applicable
        /// to a rich media asset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exitCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> ExitCustomEvents { get; set; }

        /// <summary>Numeric ID of the asset. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Dimension value for the numeric ID of the asset. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeAssetMetadata".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// True if the uploaded asset is a rich media asset. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("richMedia")]
        public virtual System.Nullable<bool> RichMedia { get; set; }

        /// <summary>
        /// List of timer events configured for the asset. This is a read-only, auto-generated field and only applicable
        /// to a rich media asset.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timerCustomEvents")]
        public virtual System.Collections.Generic.IList<CreativeCustomEvent> TimerCustomEvents { get; set; }

        /// <summary>
        /// Rules validated during code generation that generated a warning. This is a read-only, auto-generated field.
        /// Possible values are: - "ADMOB_REFERENCED" - "ASSET_FORMAT_UNSUPPORTED_DCM" - "ASSET_INVALID" -
        /// "CLICK_TAG_HARD_CODED" - "CLICK_TAG_INVALID" - "CLICK_TAG_IN_GWD" - "CLICK_TAG_MISSING" -
        /// "CLICK_TAG_MORE_THAN_ONE" - "CLICK_TAG_NON_TOP_LEVEL" - "COMPONENT_UNSUPPORTED_DCM" -
        /// "ENABLER_UNSUPPORTED_METHOD_DCM" - "EXTERNAL_FILE_REFERENCED" - "FILE_DETAIL_EMPTY" - "FILE_TYPE_INVALID" -
        /// "GWD_PROPERTIES_INVALID" - "HTML5_FEATURE_UNSUPPORTED" - "LINKED_FILE_NOT_FOUND" - "MAX_FLASH_VERSION_11" -
        /// "MRAID_REFERENCED" - "NOT_SSL_COMPLIANT" - "ORPHANED_ASSET" - "PRIMARY_HTML_MISSING" - "SVG_INVALID" -
        /// "ZIP_INVALID"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("warnedValidationRules")]
        public virtual System.Collections.Generic.IList<string> WarnedValidationRules { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Encapsulates the list of rules for asset selection and a default asset in case none of the rules match.
    /// Applicable to INSTREAM_VIDEO creatives.
    /// </summary>
    public class CreativeAssetSelection : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A creativeAssets[].id. This should refer to one of the parent assets in this creative, and will be served if
        /// none of the rules match. This is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultAssetId")]
        public virtual System.Nullable<long> DefaultAssetId { get; set; }

        /// <summary>
        /// Rules determine which asset will be served to a viewer. Rules will be evaluated in the order in which they
        /// are stored in this list. This list must contain at least one rule. Applicable to INSTREAM_VIDEO creatives.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<Rule> Rules { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Assignment.</summary>
    public class CreativeAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether this creative assignment is active. When true, the creative will be included in the ad's rotation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>
        /// Whether applicable event tags should fire when this creative assignment is rendered. If this value is unset
        /// when the ad is inserted or updated, it will default to true for all creative types EXCEPT for
        /// INTERNAL_REDIRECT, INTERSTITIAL_INTERNAL_REDIRECT, and INSTREAM_VIDEO.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("applyEventTags")]
        public virtual System.Nullable<bool> ApplyEventTags { get; set; }

        /// <summary>Click-through URL of the creative assignment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrl")]
        public virtual ClickThroughUrl ClickThroughUrl { get; set; }

        /// <summary>Companion creative overrides for this creative assignment. Applicable to video ads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionCreativeOverrides")]
        public virtual System.Collections.Generic.IList<CompanionClickThroughOverride> CompanionCreativeOverrides { get; set; }

        /// <summary>
        /// Creative group assignments for this creative assignment. Only one assignment per creative group number is
        /// allowed for a maximum of two assignments.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupAssignments")]
        public virtual System.Collections.Generic.IList<CreativeGroupAssignment> CreativeGroupAssignments { get; set; }

        /// <summary>ID of the creative to be assigned. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeId")]
        public virtual System.Nullable<long> CreativeId { get; set; }

        /// <summary>Dimension value for the ID of the creative. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeIdDimensionValue")]
        public virtual DimensionValue CreativeIdDimensionValue { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("endTime")]
        public virtual string EndTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? EndTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseDateTimeToDateTimeOffset(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToDateTime(value);
        }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="EndTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use EndTimeDateTimeOffset instead.")]
        public virtual System.DateTime? EndTime
        {
            get => Google.Apis.Util.Utilities.GetDateTimeFromString(EndTimeRaw);
            set => EndTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
        }

        /// <summary>
        /// Rich media exit overrides for this creative assignment. Applicable when the creative type is any of the
        /// following: - DISPLAY - RICH_MEDIA_INPAGE - RICH_MEDIA_INPAGE_FLOATING - RICH_MEDIA_IM_EXPAND -
        /// RICH_MEDIA_EXPANDING - RICH_MEDIA_INTERSTITIAL_FLOAT - RICH_MEDIA_MOBILE_IN_APP - RICH_MEDIA_MULTI_FLOATING
        /// - RICH_MEDIA_PEEL_DOWN - VPAID_LINEAR - VPAID_NON_LINEAR
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("richMediaExitOverrides")]
        public virtual System.Collections.Generic.IList<RichMediaExitOverride> RichMediaExitOverrides { get; set; }

        /// <summary>
        /// Sequence number of the creative assignment, applicable when the rotation type is
        /// CREATIVE_ROTATION_TYPE_SEQUENTIAL. Acceptable values are 1 to 65535, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sequence")]
        public virtual System.Nullable<int> Sequence { get; set; }

        /// <summary>
        /// Whether the creative to be assigned is SSL-compliant. This is a read-only field that is auto-generated when
        /// the ad is inserted or updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startTime")]
        public virtual string StartTimeRaw { get; set; }

        /// <summary><seealso cref="System.DateTimeOffset"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        public virtual System.DateTimeOffset? StartTimeDateTimeOffset
        {
            get => Google.Apis.Util.DiscoveryFormat.ParseDateTimeToDateTimeOffset(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.DiscoveryFormat.FormatDateTimeOffsetToDateTime(value);
        }

        /// <summary><seealso cref="System.DateTime"/> representation of <see cref="StartTimeRaw"/>.</summary>
        [Newtonsoft.Json.JsonIgnoreAttribute]
        [System.ObsoleteAttribute("This property is obsolete and may behave unexpectedly; please use StartTimeDateTimeOffset instead.")]
        public virtual System.DateTime? StartTime
        {
            get => Google.Apis.Util.Utilities.GetDateTimeFromString(StartTimeRaw);
            set => StartTimeRaw = Google.Apis.Util.Utilities.GetStringFromDateTime(value);
        }

        /// <summary>
        /// Weight of the creative assignment, applicable when the rotation type is CREATIVE_ROTATION_TYPE_RANDOM. Value
        /// must be greater than or equal to 1.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("weight")]
        public virtual System.Nullable<int> Weight { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Click-through URL</summary>
    public class CreativeClickThroughUrl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Read-only convenience field representing the actual URL that will be used for this click-through. The URL is
        /// computed as follows: - If landingPageId is specified then that landing page's URL is assigned to this field.
        /// - Otherwise, the customClickThroughUrl is assigned to this field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("computedClickThroughUrl")]
        public virtual string ComputedClickThroughUrl { get; set; }

        /// <summary>Custom click-through URL. Applicable if the landingPageId field is left unset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customClickThroughUrl")]
        public virtual string CustomClickThroughUrl { get; set; }

        /// <summary>ID of the landing page for the click-through URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("landingPageId")]
        public virtual System.Nullable<long> LandingPageId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Custom Event.</summary>
    public class CreativeCustomEvent : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Unique ID of this event used by Reporting and Data Transfer. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserCustomEventId")]
        public virtual System.Nullable<long> AdvertiserCustomEventId { get; set; }

        /// <summary>User-entered name for the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserCustomEventName")]
        public virtual string AdvertiserCustomEventName { get; set; }

        /// <summary>Type of the event. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserCustomEventType")]
        public virtual string AdvertiserCustomEventType { get; set; }

        /// <summary>
        /// Artwork label column, used to link events in Campaign Manager back to events in Studio. This is a required
        /// field and should not be modified after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artworkLabel")]
        public virtual string ArtworkLabel { get; set; }

        /// <summary>Artwork type used by the creative.This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artworkType")]
        public virtual string ArtworkType { get; set; }

        /// <summary>Exit click-through URL for the event. This field is used only for exit events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exitClickThroughUrl")]
        public virtual CreativeClickThroughUrl ExitClickThroughUrl { get; set; }

        /// <summary>ID of this event. This is a required field and should not be modified after insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Properties for rich media popup windows. This field is used only for exit events.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("popupWindowProperties")]
        public virtual PopupWindowProperties PopupWindowProperties { get; set; }

        /// <summary>Target type used by the event.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetType")]
        public virtual string TargetType { get; set; }

        /// <summary>
        /// Video reporting ID, used to differentiate multiple videos in a single creative. This is a read-only field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoReportingId")]
        public virtual string VideoReportingId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a creative field.</summary>
    public class CreativeField : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this creative field. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Advertiser ID of this creative field. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>ID of this creative field. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeField".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this creative field. This is a required field and must be less than 256 characters long and unique
        /// among creative fields of the same advertiser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Subaccount ID of this creative field. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Field Assignment.</summary>
    public class CreativeFieldAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the creative field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFieldId")]
        public virtual System.Nullable<long> CreativeFieldId { get; set; }

        /// <summary>ID of the creative field value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFieldValueId")]
        public virtual System.Nullable<long> CreativeFieldValueId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a creative field value.</summary>
    public class CreativeFieldValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this creative field value. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeFieldValue".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Value of this creative field value. It needs to be less than 256 characters in length and unique per
        /// creative field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Field Value List Response</summary>
    public class CreativeFieldValuesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative field value collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFieldValues")]
        public virtual System.Collections.Generic.IList<CreativeFieldValue> CreativeFieldValues { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#creativeFieldValuesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Field List Response</summary>
    public class CreativeFieldsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative field collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeFields")]
        public virtual System.Collections.Generic.IList<CreativeField> CreativeFields { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeFieldsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a creative group.</summary>
    public class CreativeGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this creative group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Advertiser ID of this creative group. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>
        /// Subgroup of the creative group. Assign your creative groups to a subgroup in order to filter or manage them
        /// more easily. This field is required on insertion and is read-only after insertion. Acceptable values are 1
        /// to 2, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupNumber")]
        public virtual System.Nullable<int> GroupNumber { get; set; }

        /// <summary>ID of this creative group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeGroup".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this creative group. This is a required field and must be less than 256 characters long and unique
        /// among creative groups of the same advertiser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Subaccount ID of this creative group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Group Assignment.</summary>
    public class CreativeGroupAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the creative group to be assigned.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupId")]
        public virtual System.Nullable<long> CreativeGroupId { get; set; }

        /// <summary>Creative group number of the creative group assignment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroupNumber")]
        public virtual string CreativeGroupNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Group List Response</summary>
    public class CreativeGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeGroups")]
        public virtual System.Collections.Generic.IList<CreativeGroup> CreativeGroups { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativeGroupsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative optimization settings.</summary>
    public class CreativeOptimizationConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// ID of this creative optimization config. This field is auto-generated when the campaign is inserted or
        /// updated. It can be null for existing campaigns.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Name of this creative optimization config. This is a required field and must be less than 129 characters
        /// long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>List of optimization activities associated with this configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optimizationActivitys")]
        public virtual System.Collections.Generic.IList<OptimizationActivity> OptimizationActivitys { get; set; }

        /// <summary>Optimization model for this configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("optimizationModel")]
        public virtual string OptimizationModel { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative Rotation.</summary>
    public class CreativeRotation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative assignments in this creative rotation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeAssignments")]
        public virtual System.Collections.Generic.IList<CreativeAssignment> CreativeAssignments { get; set; }

        /// <summary>
        /// Creative optimization configuration that is used by this ad. It should refer to one of the existing
        /// optimization configurations in the ad's campaign. If it is unset or set to 0, then the campaign's default
        /// optimization configuration will be used for this ad.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeOptimizationConfigurationId")]
        public virtual System.Nullable<long> CreativeOptimizationConfigurationId { get; set; }

        /// <summary>
        /// Type of creative rotation. Can be used to specify whether to use sequential or random rotation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>Strategy for calculating weights. Used with CREATIVE_ROTATION_TYPE_RANDOM.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("weightCalculationStrategy")]
        public virtual string WeightCalculationStrategy { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative List Response</summary>
    public class CreativesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Creative collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creatives")]
        public virtual System.Collections.Generic.IList<Creative> Creatives { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#creativesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents fields that are compatible to be selected for a report of type "CROSS_DIMENSION_REACH".
    /// </summary>
    public class CrossDimensionReachReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Dimensions which are compatible to be selected in the "breakdown" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("breakdown")]
        public virtual System.Collections.Generic.IList<Dimension> Breakdown { get; set; }

        /// <summary>
        /// Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; }

        /// <summary>
        /// The kind of resource this is, in this case dfareporting#crossDimensionReachReportCompatibleFields.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; }

        /// <summary>
        /// Metrics which are compatible to be selected in the "overlapMetricNames" section of the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overlapMetrics")]
        public virtual System.Collections.Generic.IList<Metric> OverlapMetrics { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents fields that are compatible to be selected for a report of type "CROSS_MEDIA_REACH".
    /// </summary>
    public class CrossMediaReachReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; }

        /// <summary>Dimensions which are compatible to be selected in the "dimensions" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual System.Collections.Generic.IList<Dimension> Dimensions { get; set; }

        /// <summary>
        /// The kind of resource this is, in this case dfareporting#crossMediaReachReportCompatibleFields.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A custom floodlight variable. Can be used in both batchinsert and batchupdate. Adding this in batchupdate will
    /// update or append the variable to the existing list.
    /// </summary>
    public class CustomFloodlightVariable : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#customFloodlightVariable".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// The type of custom floodlight variable to supply a value for. These map to the "u[1-100]=" in the tags.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>
        /// The value of the custom floodlight variable. The length of string must not exceed 100 characters.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a Custom Rich Media Events group.</summary>
    public class CustomRichMediaEvents : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// List of custom rich media event IDs. Dimension values must be all of type dfa:richMediaEventTypeIdAndName.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filteredEventIds")]
        public virtual System.Collections.Generic.IList<DimensionValue> FilteredEventIds { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#customRichMediaEvents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Custom Viewability Metric</summary>
    public class CustomViewabilityMetric : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Configuration of the custom viewability metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("configuration")]
        public virtual CustomViewabilityMetricConfiguration Configuration { get; set; }

        /// <summary>ID of the custom viewability metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Name of the custom viewability metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// The attributes, like playtime and percent onscreen, that define the Custom Viewability Metric.
    /// </summary>
    public class CustomViewabilityMetricConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether the video must be audible to count an impression.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audible")]
        public virtual System.Nullable<bool> Audible { get; set; }

        /// <summary>
        /// The time in milliseconds the video must play for the Custom Viewability Metric to count an impression. If
        /// both this and timePercent are specified, the earlier of the two will be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeMillis")]
        public virtual System.Nullable<int> TimeMillis { get; set; }

        /// <summary>
        /// The percentage of video that must play for the Custom Viewability Metric to count an impression. If both
        /// this and timeMillis are specified, the earlier of the two will be used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timePercent")]
        public virtual System.Nullable<int> TimePercent { get; set; }

        /// <summary>
        /// The percentage of video that must be on screen for the Custom Viewability Metric to count an impression.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewabilityPercent")]
        public virtual System.Nullable<int> ViewabilityPercent { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a date range.</summary>
    public class DateRange : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#dateRange.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The date range relative to the date of when the report is run.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relativeDateRange")]
        public virtual string RelativeDateRange { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Day Part Targeting.</summary>
    public class DayPartTargeting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Days of the week when the ad will serve. Acceptable values are: - "SUNDAY" - "MONDAY" - "TUESDAY" -
        /// "WEDNESDAY" - "THURSDAY" - "FRIDAY" - "SATURDAY"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("daysOfWeek")]
        public virtual System.Collections.Generic.IList<string> DaysOfWeek { get; set; }

        /// <summary>
        /// Hours of the day when the ad will serve, where 0 is midnight to 1 AM and 23 is 11 PM to midnight. Can be
        /// specified with days of week, in which case the ad would serve during these hours on the specified days. For
        /// example if Monday, Wednesday, Friday are the days of week specified and 9-10am, 3-5pm (hours 9, 15, and 16)
        /// is specified, the ad would serve Monday, Wednesdays, and Fridays at 9-10am and 3-5pm. Acceptable values are
        /// 0 to 23, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hoursOfDay")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> HoursOfDay { get; set; }

        /// <summary>
        /// Whether or not to use the user's local time. If false, the America/New York time zone applies.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userLocalTime")]
        public virtual System.Nullable<bool> UserLocalTime { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a landing page deep link.</summary>
    public class DeepLink : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The URL of the mobile app being linked to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appUrl")]
        public virtual string AppUrl { get; set; }

        /// <summary>
        /// The fallback URL. This URL will be served to users who do not have the mobile app installed.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fallbackUrl")]
        public virtual string FallbackUrl { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#deepLink".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The mobile app targeted by this deep link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobileApp")]
        public virtual MobileApp MobileApp { get; set; }

        /// <summary>
        /// Ads served to users on these remarketing lists will use this deep link. Applicable when mobileApp.directory
        /// is APPLE_APP_STORE.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingListIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> RemarketingListIds { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Properties of inheriting and overriding the default click-through event tag. A campaign may override the event
    /// tag defined at the advertiser level, and an ad may also override the campaign's setting further.
    /// </summary>
    public class DefaultClickThroughEventTagProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of the click-through event tag to apply to all ads in this entity's scope.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultClickThroughEventTagId")]
        public virtual System.Nullable<long> DefaultClickThroughEventTagId { get; set; }

        /// <summary>
        /// Whether this entity should override the inherited default click-through event tag with its own defined
        /// value.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overrideInheritedEventTag")]
        public virtual System.Nullable<bool> OverrideInheritedEventTag { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Delivery Schedule.</summary>
    public class DeliverySchedule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Limit on the number of times an individual user can be served the ad within a specified period of time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("frequencyCap")]
        public virtual FrequencyCap FrequencyCap { get; set; }

        /// <summary>
        /// Whether or not hard cutoff is enabled. If true, the ad will not serve after the end date and time. Otherwise
        /// the ad will continue to be served until it has reached its delivery goals.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hardCutoff")]
        public virtual System.Nullable<bool> HardCutoff { get; set; }

        /// <summary>
        /// Impression ratio for this ad. This ratio determines how often each ad is served relative to the others. For
        /// example, if ad A has an impression ratio of 1 and ad B has an impression ratio of 3, then Campaign Manager
        /// will serve ad B three times as often as ad A. Acceptable values are 1 to 10, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressionRatio")]
        public virtual System.Nullable<long> ImpressionRatio { get; set; }

        /// <summary>
        /// Serving priority of an ad, with respect to other ads. The lower the priority number, the greater the
        /// priority with which it is served.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual string Priority { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Google Ad Manager Settings</summary>
    public class DfpSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Ad Manager network code for this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dfpNetworkCode")]
        public virtual string DfpNetworkCode { get; set; }

        /// <summary>Ad Manager network name for this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dfpNetworkName")]
        public virtual string DfpNetworkName { get; set; }

        /// <summary>Whether this directory site accepts programmatic placements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("programmaticPlacementAccepted")]
        public virtual System.Nullable<bool> ProgrammaticPlacementAccepted { get; set; }

        /// <summary>Whether this directory site accepts publisher-paid tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pubPaidPlacementAccepted")]
        public virtual System.Nullable<bool> PubPaidPlacementAccepted { get; set; }

        /// <summary>Whether this directory site is available only via Publisher Portal.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherPortalOnly")]
        public virtual System.Nullable<bool> PublisherPortalOnly { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a dimension.</summary>
    public class Dimension : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The kind of resource this is, in this case dfareporting#dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The dimension name, e.g. advertiser</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a dimension filter.</summary>
    public class DimensionFilter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dimension to filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#dimensionFilter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The value of the dimension to filter.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a DimensionValue resource.</summary>
    public class DimensionValue : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; }

        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>The ID associated with the value if available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#dimensionValue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to
        /// WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be
        /// escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than
        /// EXACT.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchType")]
        public virtual string MatchType { get; set; }

        /// <summary>The value of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }
    }

    /// <summary>Represents the list of DimensionValue resources.</summary>
    public class DimensionValueList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>The dimension values returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<DimensionValue> Items { get; set; }

        /// <summary>The kind of list this is, in this case dfareporting#dimensionValueList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Continuation token used to page through dimension values. To retrieve the next page of results, set the next
        /// request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time
        /// and should not be persisted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }
    }

    /// <summary>Represents a DimensionValuesRequest.</summary>
    public class DimensionValueRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The name of the dimension for which values should be requested.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionName")]
        public virtual string DimensionName { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>The list of filters by which to filter values. The filters are ANDed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("filters")]
        public virtual System.Collections.Generic.IList<DimensionFilter> Filters { get; set; }

        /// <summary>The kind of request this is, in this case dfareporting#dimensionValueRequest .</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// DirectorySites contains properties of a website from the Site Directory. Sites need to be added to an account
    /// via the Sites resource before they can be assigned to a placement.
    /// </summary>
    public class DirectorySite : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this directory site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Dimension value for the ID of this directory site. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Tag types for regular placements. Acceptable values are: - "STANDARD" - "IFRAME_JAVASCRIPT_INPAGE" -
        /// "INTERNAL_REDIRECT_INPAGE" - "JAVASCRIPT_INPAGE"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inpageTagFormats")]
        public virtual System.Collections.Generic.IList<string> InpageTagFormats { get; set; }

        /// <summary>
        /// Tag types for interstitial placements. Acceptable values are: - "IFRAME_JAVASCRIPT_INTERSTITIAL" -
        /// "INTERNAL_REDIRECT_INTERSTITIAL" - "JAVASCRIPT_INTERSTITIAL"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interstitialTagFormats")]
        public virtual System.Collections.Generic.IList<string> InterstitialTagFormats { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#directorySite".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Output only. Default publisher specification ID of video placements under this directory site. Possible
        /// values are: * `1`, Hulu * `2`, NBC * `3`, CBS * `4`, CBS Desktop * `5`, Discovery * `6`, VEVO HD * `7`, VEVO
        /// Vertical * `8`, Fox * `9`, CW Network * `10`, Disney * `11`, IGN * `12`, NFL.com * `13`, Turner Broadcasting
        /// * `14`, Tubi on Fox * `15`, Hearst Corporation * `16`, Twitch Desktop * `17`, ABC * `18`, Univision * `19`,
        /// MLB.com * `20`, MLB.com Mobile * `21`, MLB.com OTT * `22`, Polsat * `23`, TVN * `24`, Mediaset * `25`,
        /// Antena 3 * `26`, Mediamond * `27`, Sky Italia * `28`, Tubi on CBS * `29`, Spotify * `30`, Paramount * `31`,
        /// Max
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherSpecificationId")]
        public virtual System.Nullable<long> PublisherSpecificationId { get; set; }

        /// <summary>Directory site settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("settings")]
        public virtual DirectorySiteSettings Settings { get; set; }

        /// <summary>URL of this directory site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Directory Site Settings</summary>
    public class DirectorySiteSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this directory site has disabled active view creatives.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeViewOptOut")]
        public virtual System.Nullable<bool> ActiveViewOptOut { get; set; }

        /// <summary>Directory site Ad Manager settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dfpSettings")]
        public virtual DfpSettings DfpSettings { get; set; }

        /// <summary>Whether this site accepts in-stream video ads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("instreamVideoPlacementAccepted")]
        public virtual System.Nullable<bool> InstreamVideoPlacementAccepted { get; set; }

        /// <summary>Whether this site accepts interstitial ads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("interstitialPlacementAccepted")]
        public virtual System.Nullable<bool> InterstitialPlacementAccepted { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Directory Site List Response</summary>
    public class DirectorySitesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Directory site collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySites")]
        public virtual System.Collections.Generic.IList<DirectorySite> DirectorySites { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#directorySitesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains properties of a dynamic targeting key. Dynamic targeting keys are unique, user-friendly labels, created
    /// at the advertiser level in DCM, that can be assigned to ads, creatives, and placements and used for targeting
    /// with Studio dynamic creatives. Use these labels instead of numeric Campaign Manager IDs (such as placement IDs)
    /// to save time and avoid errors in your dynamic feeds.
    /// </summary>
    public class DynamicTargetingKey : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#dynamicTargetingKey".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this dynamic targeting key. This is a required field. Must be less than 256 characters long and
        /// cannot contain commas. All characters are converted to lowercase.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>ID of the object of this dynamic targeting key. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectId")]
        public virtual System.Nullable<long> ObjectId { get; set; }

        /// <summary>Type of the object of this dynamic targeting key. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectType")]
        public virtual string ObjectType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Dynamic Targeting Key List Response</summary>
    public class DynamicTargetingKeysListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Dynamic targeting key collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicTargetingKeys")]
        public virtual System.Collections.Generic.IList<DynamicTargetingKey> DynamicTargetingKeys { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#dynamicTargetingKeysListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A description of how user IDs are encrypted.</summary>
    public class EncryptionInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The encryption entity ID. This should match the encryption configuration for ad serving or Data Transfer.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptionEntityId")]
        public virtual System.Nullable<long> EncryptionEntityId { get; set; }

        /// <summary>
        /// The encryption entity type. This should match the encryption configuration for ad serving or Data Transfer.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptionEntityType")]
        public virtual string EncryptionEntityType { get; set; }

        /// <summary>
        /// Describes whether the encrypted cookie was received from ad serving (the %m macro) or from Data Transfer.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("encryptionSource")]
        public virtual string EncryptionSource { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#encryptionInfo".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of an event tag.</summary>
    public class EventTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this event tag. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// Advertiser ID of this event tag. This field or the campaignId field is required on insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>
        /// Campaign ID of this event tag. This field or the advertiserId field is required on insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; }

        /// <summary>Dimension value for the ID of the campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignIdDimensionValue")]
        public virtual DimensionValue CampaignIdDimensionValue { get; set; }

        /// <summary>
        /// Whether this event tag should be automatically enabled for all of the advertiser's campaigns and ads.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledByDefault")]
        public virtual System.Nullable<bool> EnabledByDefault { get; set; }

        /// <summary>
        /// Whether to remove this event tag from ads that are trafficked through Display &amp;amp; Video 360 to Ad
        /// Exchange. This may be useful if the event tag uses a pixel that is unapproved for Ad Exchange bids on one or
        /// more networks, such as the Google Display Network.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludeFromAdxRequests")]
        public virtual System.Nullable<bool> ExcludeFromAdxRequests { get; set; }

        /// <summary>ID of this event tag. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#eventTag".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this event tag. This is a required field and must be less than 256 characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Site filter type for this event tag. If no type is specified then the event tag will be applied to all
        /// sites.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteFilterType")]
        public virtual string SiteFilterType { get; set; }

        /// <summary>
        /// Filter list of site IDs associated with this event tag. The siteFilterType determines whether this is a
        /// allowlist or blocklist filter.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> SiteIds { get; set; }

        /// <summary>Whether this tag is SSL-compliant or not. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; }

        /// <summary>
        /// Status of this event tag. Must be ENABLED for this event tag to fire. This is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>Subaccount ID of this event tag. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>
        /// Event tag type. Can be used to specify whether to use a third-party pixel, a third-party JavaScript URL, or
        /// a third-party click-through URL for either impression or click tracking. This is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>
        /// Payload URL for this event tag. The URL on a click-through event tag should have a landing page URL appended
        /// to the end of it. This field is required on insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>
        /// Number of times the landing page URL should be URL-escaped before being appended to the click-through event
        /// tag URL. Only applies to click-through event tags as specified by the event tag type.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urlEscapeLevels")]
        public virtual System.Nullable<int> UrlEscapeLevels { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Event tag override information.</summary>
    public class EventTagOverride : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this override is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>ID of this event tag override. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Event Tag List Response</summary>
    public class EventTagsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Event tag collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eventTags")]
        public virtual System.Collections.Generic.IList<EventTag> EventTags { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#eventTagsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents a File resource. A file contains the metadata for a report run. It shows the status of the run and
    /// holds the URLs to the generated report data if the run is finished and the status is "REPORT_AVAILABLE".
    /// </summary>
    public class File : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// The date range for which the file has report data. The date range will always be the absolute date range for
        /// which the report is run.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
        public virtual DateRange DateRange { get; set; }

        /// <summary>Etag of this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>The filename of the file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; }

        /// <summary>The output format of the report. Only available once the file is available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("format")]
        public virtual string Format { get; set; }

        /// <summary>The unique ID of this report file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#file".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The timestamp in milliseconds since epoch when this file was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual System.Nullable<long> LastModifiedTime { get; set; }

        /// <summary>The ID of the report this file was generated from.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportId")]
        public virtual System.Nullable<long> ReportId { get; set; }

        /// <summary>The status of the report file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>The URLs where the completed report file can be downloaded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urls")]
        public virtual UrlsData Urls { get; set; }

        /// <summary>The URLs where the completed report file can be downloaded.</summary>
        public class UrlsData
        {
            /// <summary>The URL for downloading the report data through the API.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("apiUrl")]
            public virtual string ApiUrl { get; set; }

            /// <summary>The URL for downloading the report data through a browser.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("browserUrl")]
            public virtual string BrowserUrl { get; set; }
        }
    }

    /// <summary>List of files for a report.</summary>
    public class FileList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Etag of this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>The files returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<File> Items { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#fileList".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Continuation token used to page through files. To retrieve the next page of results, set the next request's
        /// "pageToken" to the value of this field. The page token is only valid for a limited amount of time and should
        /// not be persisted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }
    }

    /// <summary>Flight</summary>
    public class Flight : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>Rate or cost of this flight.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rateOrCost")]
        public virtual System.Nullable<long> RateOrCost { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>Units of this flight.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("units")]
        public virtual System.Nullable<long> Units { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Floodlight Activity GenerateTag Response</summary>
    public class FloodlightActivitiesGenerateTagResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Generated tag for this Floodlight activity. For Google tags, this is the event snippet.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityTag")]
        public virtual string FloodlightActivityTag { get; set; }

        /// <summary>
        /// The global snippet section of a Google tag. The Google tag sets new cookies on your domain, which will store
        /// a unique identifier for a user or the ad click that brought the user to your site. Learn more.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("globalSiteTagGlobalSnippet")]
        public virtual string GlobalSiteTagGlobalSnippet { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightActivitiesGenerateTagResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Floodlight Activity List Response</summary>
    public class FloodlightActivitiesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight activity collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivities")]
        public virtual System.Collections.Generic.IList<FloodlightActivity> FloodlightActivities { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightActivitiesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Floodlight activity.</summary>
    public class FloodlightActivity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this floodlight activity. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// Advertiser ID of this floodlight activity. If this field is left blank, the value will be copied over either
        /// from the activity group's advertiser or the existing activity's advertiser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Whether the activity is enabled for attribution.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("attributionEnabled")]
        public virtual System.Nullable<bool> AttributionEnabled { get; set; }

        /// <summary>
        /// Code type used for cache busting in the generated tag. Applicable only when floodlightActivityGroupType is
        /// COUNTER and countingMethod is STANDARD_COUNTING or UNIQUE_COUNTING.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cacheBustingType")]
        public virtual string CacheBustingType { get; set; }

        /// <summary>Counting method for conversions for this floodlight activity. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countingMethod")]
        public virtual string CountingMethod { get; set; }

        /// <summary>Dynamic floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultTags")]
        public virtual System.Collections.Generic.IList<FloodlightActivityDynamicTag> DefaultTags { get; set; }

        /// <summary>URL where this tag will be deployed. If specified, must be less than 256 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expectedUrl")]
        public virtual string ExpectedUrl { get; set; }

        /// <summary>Floodlight activity group ID of this floodlight activity. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroupId")]
        public virtual System.Nullable<long> FloodlightActivityGroupId { get; set; }

        /// <summary>Name of the associated floodlight activity group. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroupName")]
        public virtual string FloodlightActivityGroupName { get; set; }

        /// <summary>Tag string of the associated floodlight activity group. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroupTagString")]
        public virtual string FloodlightActivityGroupTagString { get; set; }

        /// <summary>Type of the associated floodlight activity group. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroupType")]
        public virtual string FloodlightActivityGroupType { get; set; }

        /// <summary>
        /// Floodlight configuration ID of this floodlight activity. If this field is left blank, the value will be
        /// copied over either from the activity group's floodlight configuration or from the existing activity's
        /// floodlight configuration.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationId")]
        public virtual System.Nullable<long> FloodlightConfigurationId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationIdDimensionValue")]
        public virtual DimensionValue FloodlightConfigurationIdDimensionValue { get; set; }

        /// <summary>The type of Floodlight tag this activity will generate. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightTagType")]
        public virtual string FloodlightTagType { get; set; }

        /// <summary>ID of this floodlight activity. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Dimension value for the ID of this floodlight activity. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightActivity".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this floodlight activity. This is a required field. Must be less than 129 characters long and cannot
        /// contain quotes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>General notes or implementation instructions for the tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notes")]
        public virtual string Notes { get; set; }

        /// <summary>Publisher dynamic floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherTags")]
        public virtual System.Collections.Generic.IList<FloodlightActivityPublisherDynamicTag> PublisherTags { get; set; }

        /// <summary>Whether this tag should use SSL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("secure")]
        public virtual System.Nullable<bool> Secure { get; set; }

        /// <summary>
        /// Whether the floodlight activity is SSL-compliant. This is a read-only field, its value detected by the
        /// system from the floodlight tags.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslCompliant")]
        public virtual System.Nullable<bool> SslCompliant { get; set; }

        /// <summary>Whether this floodlight activity must be SSL-compliant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslRequired")]
        public virtual System.Nullable<bool> SslRequired { get; set; }

        /// <summary>
        /// The status of the activity. This can only be set to ACTIVE or ARCHIVED_AND_DISABLED. The ARCHIVED status is
        /// no longer supported and cannot be set for Floodlight activities. The DISABLED_POLICY status indicates that a
        /// Floodlight activity is violating Google policy. Contact your account manager for more information.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>
        /// Subaccount ID of this floodlight activity. This is a read-only field that can be left blank.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>
        /// Tag format type for the floodlight activity. If left blank, the tag format will default to HTML.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagFormat")]
        public virtual string TagFormat { get; set; }

        /// <summary>
        /// Value of the cat= parameter in the floodlight tag, which the ad servers use to identify the activity. This
        /// is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters
        /// long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activities of the
        /// same activity group. This field is read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagString")]
        public virtual string TagString { get; set; }

        /// <summary>
        /// List of the user-defined variables used by this conversion tag. These map to the "u[1-100]=" in the tags.
        /// Each of these can have a user defined type. Acceptable values are U1 to U100, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDefinedVariableTypes")]
        public virtual System.Collections.Generic.IList<string> UserDefinedVariableTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Dynamic Tag</summary>
    public class FloodlightActivityDynamicTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this dynamic tag. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Name of this tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Tag code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tag")]
        public virtual string Tag { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Floodlight activity group.</summary>
    public class FloodlightActivityGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Account ID of this floodlight activity group. This is a read-only field that can be left blank.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// Advertiser ID of this floodlight activity group. If this field is left blank, the value will be copied over
        /// either from the floodlight configuration's advertiser or from the existing activity group's advertiser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Floodlight configuration ID of this floodlight activity group. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationId")]
        public virtual System.Nullable<long> FloodlightConfigurationId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the floodlight configuration. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurationIdDimensionValue")]
        public virtual DimensionValue FloodlightConfigurationIdDimensionValue { get; set; }

        /// <summary>ID of this floodlight activity group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Dimension value for the ID of this floodlight activity group. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightActivityGroup".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this floodlight activity group. This is a required field. Must be less than 65 characters long and
        /// cannot contain quotes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Subaccount ID of this floodlight activity group. This is a read-only field that can be left blank.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>
        /// Value of the type= parameter in the floodlight tag, which the ad servers use to identify the activity group
        /// that the activity belongs to. This is optional: if empty, a new tag string will be generated for you. This
        /// string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be
        /// unique among activity groups of the same floodlight configuration. This field is read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagString")]
        public virtual string TagString { get; set; }

        /// <summary>
        /// Type of the floodlight activity group. This is a required field that is read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Floodlight Activity Group List Response</summary>
    public class FloodlightActivityGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight activity group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityGroups")]
        public virtual System.Collections.Generic.IList<FloodlightActivityGroup> FloodlightActivityGroups { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightActivityGroupsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Publisher Dynamic Tag</summary>
    public class FloodlightActivityPublisherDynamicTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether this tag is applicable only for click-throughs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThrough")]
        public virtual System.Nullable<bool> ClickThrough { get; set; }

        /// <summary>
        /// Directory site ID of this dynamic tag. This is a write-only field that can be used as an alternative to the
        /// siteId field. When this resource is retrieved, only the siteId field will be populated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteId")]
        public virtual System.Nullable<long> DirectorySiteId { get; set; }

        /// <summary>Dynamic floodlight tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicTag")]
        public virtual FloodlightActivityDynamicTag DynamicTag { get; set; }

        /// <summary>Site ID of this dynamic tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Nullable<long> SiteId { get; set; }

        /// <summary>Dimension value for the ID of the site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteIdDimensionValue")]
        public virtual DimensionValue SiteIdDimensionValue { get; set; }

        /// <summary>Whether this tag is applicable only for view-throughs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewThrough")]
        public virtual System.Nullable<bool> ViewThrough { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Floodlight configuration.</summary>
    public class FloodlightConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Account ID of this floodlight configuration. This is a read-only field that can be left blank.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Advertiser ID of the parent advertiser of this floodlight configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Whether advertiser data is shared with Google Analytics.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("analyticsDataSharingEnabled")]
        public virtual System.Nullable<bool> AnalyticsDataSharingEnabled { get; set; }

        /// <summary>Custom Viewability metric for the floodlight configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customViewabilityMetric")]
        public virtual CustomViewabilityMetric CustomViewabilityMetric { get; set; }

        /// <summary>
        /// Whether the exposure-to-conversion report is enabled. This report shows detailed pathway information on up
        /// to 10 of the most recent ad exposures seen by a user before converting.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exposureToConversionEnabled")]
        public virtual System.Nullable<bool> ExposureToConversionEnabled { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("firstDayOfWeek")]
        public virtual string FirstDayOfWeek { get; set; }

        /// <summary>ID of this floodlight configuration. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Dimension value for the ID of this floodlight configuration. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>Whether in-app attribution tracking is enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inAppAttributionTrackingEnabled")]
        public virtual System.Nullable<bool> InAppAttributionTrackingEnabled { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#floodlightConfiguration".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Lookback window settings for this floodlight configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lookbackConfiguration")]
        public virtual LookbackConfiguration LookbackConfiguration { get; set; }

        /// <summary>Types of attribution options for natural search conversions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("naturalSearchConversionAttributionOption")]
        public virtual string NaturalSearchConversionAttributionOption { get; set; }

        /// <summary>Settings for Campaign Manager Omniture integration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("omnitureSettings")]
        public virtual OmnitureSettings OmnitureSettings { get; set; }

        /// <summary>
        /// Subaccount ID of this floodlight configuration. This is a read-only field that can be left blank.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>Configuration settings for dynamic and image floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagSettings")]
        public virtual TagSettings TagSettings { get; set; }

        /// <summary>List of third-party authentication tokens enabled for this configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyAuthenticationTokens")]
        public virtual System.Collections.Generic.IList<ThirdPartyAuthenticationToken> ThirdPartyAuthenticationTokens { get; set; }

        /// <summary>List of user defined variables enabled for this configuration.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userDefinedVariableConfigurations")]
        public virtual System.Collections.Generic.IList<UserDefinedVariableConfiguration> UserDefinedVariableConfigurations { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Floodlight Configuration List Response</summary>
    public class FloodlightConfigurationsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight configuration collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigurations")]
        public virtual System.Collections.Generic.IList<FloodlightConfiguration> FloodlightConfigurations { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#floodlightConfigurationsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents fields that are compatible to be selected for a report of type "FlOODLIGHT".</summary>
    public class FloodlightReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; }

        /// <summary>Dimensions which are compatible to be selected in the "dimensions" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual System.Collections.Generic.IList<Dimension> Dimensions { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#floodlightReportCompatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Frequency Cap.</summary>
    public class FrequencyCap : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Duration of time, in seconds, for this frequency cap. The maximum duration is 90 days. Acceptable values are
        /// 1 to 7776000, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual System.Nullable<long> Duration { get; set; }

        /// <summary>
        /// Number of times an individual user can be served the ad within the specified duration. Acceptable values are
        /// 1 to 15, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressions")]
        public virtual System.Nullable<long> Impressions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>FsCommand.</summary>
    public class FsCommand : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Distance from the left of the browser.Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("left")]
        public virtual System.Nullable<int> Left { get; set; }

        /// <summary>Position in the browser where the window will open.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positionOption")]
        public virtual string PositionOption { get; set; }

        /// <summary>
        /// Distance from the top of the browser. Applicable when positionOption is DISTANCE_FROM_TOP_LEFT_CORNER.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top")]
        public virtual System.Nullable<int> Top { get; set; }

        /// <summary>Height of the window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("windowHeight")]
        public virtual System.Nullable<int> WindowHeight { get; set; }

        /// <summary>Width of the window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("windowWidth")]
        public virtual System.Nullable<int> WindowWidth { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Geographical Targeting.</summary>
    public class GeoTargeting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Cities to be targeted. For each city only dartId is required. The other fields are populated automatically
        /// when the ad is inserted or updated. If targeting a city, do not target or exclude the country of the city,
        /// and do not target the metro or region of the city.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("cities")]
        public virtual System.Collections.Generic.IList<City> Cities { get; set; }

        /// <summary>
        /// Countries to be targeted or excluded from targeting, depending on the setting of the excludeCountries field.
        /// For each country only dartId is required. The other fields are populated automatically when the ad is
        /// inserted or updated. If targeting or excluding a country, do not target regions, cities, metros, or postal
        /// codes in the same country.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countries")]
        public virtual System.Collections.Generic.IList<Country> Countries { get; set; }

        /// <summary>
        /// Whether or not to exclude the countries in the countries field from targeting. If false, the countries field
        /// refers to countries which will be targeted by the ad.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("excludeCountries")]
        public virtual System.Nullable<bool> ExcludeCountries { get; set; }

        /// <summary>
        /// Metros to be targeted. For each metro only dmaId is required. The other fields are populated automatically
        /// when the ad is inserted or updated. If targeting a metro, do not target or exclude the country of the metro.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metros")]
        public virtual System.Collections.Generic.IList<Metro> Metros { get; set; }

        /// <summary>
        /// Postal codes to be targeted. For each postal code only id is required. The other fields are populated
        /// automatically when the ad is inserted or updated. If targeting a postal code, do not target or exclude the
        /// country of the postal code.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalCodes")]
        public virtual System.Collections.Generic.IList<PostalCode> PostalCodes { get; set; }

        /// <summary>
        /// Regions to be targeted. For each region only dartId is required. The other fields are populated
        /// automatically when the ad is inserted or updated. If targeting a region, do not target or exclude the
        /// country of the region.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regions")]
        public virtual System.Collections.Generic.IList<Region> Regions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a buy from the Planning inventory store.</summary>
    public class InventoryItem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// Ad slots of this inventory item. If this inventory item represents a standalone placement, there will be
        /// exactly one ad slot. If this inventory item represents a placement group, there will be more than one ad
        /// slot, each representing one child placement in that placement group.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adSlots")]
        public virtual System.Collections.Generic.IList<AdSlot> AdSlots { get; set; }

        /// <summary>Advertiser ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Content category ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentCategoryId")]
        public virtual System.Nullable<long> ContentCategoryId { get; set; }

        /// <summary>Estimated click-through rate of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("estimatedClickThroughRate")]
        public virtual System.Nullable<long> EstimatedClickThroughRate { get; set; }

        /// <summary>Estimated conversion rate of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("estimatedConversionRate")]
        public virtual System.Nullable<long> EstimatedConversionRate { get; set; }

        /// <summary>ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Whether this inventory item is in plan.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inPlan")]
        public virtual System.Nullable<bool> InPlan { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#inventoryItem".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Information about the most recent modification of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; }

        /// <summary>
        /// Name of this inventory item. For standalone inventory items, this is the same name as that of its only ad
        /// slot. For group inventory items, this can differ from the name of any of its ad slots.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Negotiation channel ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("negotiationChannelId")]
        public virtual System.Nullable<long> NegotiationChannelId { get; set; }

        /// <summary>Order ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orderId")]
        public virtual System.Nullable<long> OrderId { get; set; }

        /// <summary>Placement strategy ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementStrategyId")]
        public virtual System.Nullable<long> PlacementStrategyId { get; set; }

        /// <summary>Pricing of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricing")]
        public virtual Pricing Pricing { get; set; }

        /// <summary>Project ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual System.Nullable<long> ProjectId { get; set; }

        /// <summary>RFP ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rfpId")]
        public virtual System.Nullable<long> RfpId { get; set; }

        /// <summary>ID of the site this inventory item is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Nullable<long> SiteId { get; set; }

        /// <summary>Subaccount ID of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>Type of inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Inventory item List Response</summary>
    public class InventoryItemsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Inventory item collection</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("inventoryItems")]
        public virtual System.Collections.Generic.IList<InventoryItem> InventoryItems { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#inventoryItemsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a single invoice</summary>
    public class Invoice : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of summarized campaign information associated with this invoice.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaign_summaries")]
        public virtual System.Collections.Generic.IList<CampaignSummary> CampaignSummaries { get; set; }

        /// <summary>
        /// The originally issued invoice that is being adjusted by this invoice, if applicable. May appear on invoice
        /// PDF as *Reference invoice number*.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("correctedInvoiceId")]
        public virtual string CorrectedInvoiceId { get; set; }

        /// <summary>Invoice currency code in ISO 4217 format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("currencyCode")]
        public virtual string CurrencyCode { get; set; }

        /// <summary>The invoice due date.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dueDate")]
        public virtual string DueDate { get; set; }

        /// <summary>ID of this invoice.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>The type of invoice document.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("invoiceType")]
        public virtual string InvoiceType { get; set; }

        /// <summary>The date when the invoice was issued.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("issueDate")]
        public virtual string IssueDate { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#invoice".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// The ID of the payments account the invoice belongs to. Appears on the invoice PDF as *Billing Account
        /// Number*.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentsAccountId")]
        public virtual string PaymentsAccountId { get; set; }

        /// <summary>
        /// The ID of the payments profile the invoice belongs to. Appears on the invoice PDF as *Billing ID*.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentsProfileId")]
        public virtual string PaymentsProfileId { get; set; }

        /// <summary>
        /// The URL to download a PDF copy of the invoice. Note that this URL is user specific and requires a valid
        /// OAuth 2.0 access token to access. The access token must be provided in an *Authorization: Bearer* HTTP
        /// header. The URL will only be usable for 7 days from when the api is called.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pdfUrl")]
        public virtual string PdfUrl { get; set; }

        /// <summary>Purchase order number associated with the invoice.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purchaseOrderNumber")]
        public virtual string PurchaseOrderNumber { get; set; }

        /// <summary>
        /// The originally issued invoice(s) that is being cancelled by this invoice, if applicable. May appear on
        /// invoice PDF as *Replaced invoice numbers*. Note: There may be multiple replaced invoices due to
        /// consolidation of multiple invoices into a single invoice.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("replacedInvoiceIds")]
        public virtual System.Collections.Generic.IList<string> ReplacedInvoiceIds { get; set; }

        /// <summary>The invoice service end date.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceEndDate")]
        public virtual string ServiceEndDate { get; set; }

        /// <summary>The invoice service start date.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("serviceStartDate")]
        public virtual string ServiceStartDate { get; set; }

        /// <summary>The pre-tax subtotal amount, in micros of the invoice's currency.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtotalAmountMicros")]
        public virtual System.Nullable<long> SubtotalAmountMicros { get; set; }

        /// <summary>The invoice total amount, in micros of the invoice's currency.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalAmountMicros")]
        public virtual System.Nullable<long> TotalAmountMicros { get; set; }

        /// <summary>The sum of all taxes in invoice, in micros of the invoice's currency.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalTaxAmountMicros")]
        public virtual System.Nullable<long> TotalTaxAmountMicros { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Key Value Targeting Expression.</summary>
    public class KeyValueTargetingExpression : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Keyword expression being targeted by the ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expression")]
        public virtual string Expression { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about where a user's browser is taken after the user clicks an ad.</summary>
    public class LandingPage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Advertiser ID of this landing page. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Whether this landing page has been archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("archived")]
        public virtual System.Nullable<bool> Archived { get; set; }

        /// <summary>Links that will direct the user to a mobile app, if installed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deepLinks")]
        public virtual System.Collections.Generic.IList<DeepLink> DeepLinks { get; set; }

        /// <summary>ID of this landing page. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#landingPage".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this landing page. This is a required field. It must be less than 256 characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>URL of this landing page. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a language that can be targeted by ads.</summary>
    public class Language : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Language ID of this language. This is the ID used for targeting and generating reports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#language".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Format of language code is an ISO 639 two-letter language code optionally followed by an underscore followed
        /// by an ISO 3166 code. Examples are "en" for English or "zh_CN" for Simplified Chinese.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageCode")]
        public virtual string LanguageCode { get; set; }

        /// <summary>Name of this language.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Language Targeting.</summary>
    public class LanguageTargeting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Languages that this ad targets. For each language only languageId is required. The other fields are
        /// populated automatically when the ad is inserted or updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languages")]
        public virtual System.Collections.Generic.IList<Language> Languages { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Language List Response</summary>
    public class LanguagesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#languagesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Language collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languages")]
        public virtual System.Collections.Generic.IList<Language> Languages { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Modification timestamp.</summary>
    public class LastModifiedInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Timestamp of the last change in milliseconds since epoch.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("time")]
        public virtual System.Nullable<long> Time { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>A group clause made up of list population terms representing constraints joined by ORs.</summary>
    public class ListPopulationClause : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Terms of this list population clause. Each clause is made up of list population terms representing
        /// constraints and are joined by ORs.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("terms")]
        public virtual System.Collections.Generic.IList<ListPopulationTerm> Terms { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Remarketing List Population Rule.</summary>
    public class ListPopulationRule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight activity ID associated with this rule. This field can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityId")]
        public virtual System.Nullable<long> FloodlightActivityId { get; set; }

        /// <summary>
        /// Name of floodlight activity associated with this rule. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityName")]
        public virtual string FloodlightActivityName { get; set; }

        /// <summary>
        /// Clauses that make up this list population rule. Clauses are joined by ANDs, and the clauses themselves are
        /// made up of list population terms which are joined by ORs.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listPopulationClauses")]
        public virtual System.Collections.Generic.IList<ListPopulationClause> ListPopulationClauses { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Remarketing List Population Rule Term.</summary>
    public class ListPopulationTerm : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Will be true if the term should check if the user is in the list and false if the term should check if the
        /// user is not in the list. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM. False by
        /// default.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contains")]
        public virtual System.Nullable<bool> Contains { get; set; }

        /// <summary>
        /// Whether to negate the comparison result of this term during rule evaluation. This field is only relevant
        /// when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("negation")]
        public virtual System.Nullable<bool> Negation { get; set; }

        /// <summary>
        /// Comparison operator of this term. This field is only relevant when type is left unset or set to
        /// CUSTOM_VARIABLE_TERM or REFERRER_TERM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operator")]
        public virtual string Operator__ { get; set; }

        /// <summary>
        /// ID of the list in question. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingListId")]
        public virtual System.Nullable<long> RemarketingListId { get; set; }

        /// <summary>
        /// List population term type determines the applicable fields in this object. If left unset or set to
        /// CUSTOM_VARIABLE_TERM, then variableName, variableFriendlyName, operator, value, and negation are applicable.
        /// If set to LIST_MEMBERSHIP_TERM then remarketingListId and contains are applicable. If set to REFERRER_TERM
        /// then operator, value, and negation are applicable.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>
        /// Literal to compare the variable to. This field is only relevant when type is left unset or set to
        /// CUSTOM_VARIABLE_TERM or REFERRER_TERM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>
        /// Friendly name of this term's variable. This is a read-only, auto-generated field. This field is only
        /// relevant when type is left unset or set to CUSTOM_VARIABLE_TERM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variableFriendlyName")]
        public virtual string VariableFriendlyName { get; set; }

        /// <summary>
        /// Name of the variable (U1, U2, etc.) being compared in this term. This field is only relevant when type is
        /// set to null, CUSTOM_VARIABLE_TERM or REFERRER_TERM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variableName")]
        public virtual string VariableName { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Remarketing List Targeting Expression.</summary>
    public class ListTargetingExpression : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Expression describing which lists are being targeted by the ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("expression")]
        public virtual string Expression { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Lookback configuration settings.</summary>
    public class LookbackConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Lookback window, in days, from the last time a given user clicked on one of your ads. If you enter 0, clicks
        /// will not be considered as triggering events for floodlight tracking. If you leave this field blank, the
        /// default value for your account will be used. Acceptable values are 0 to 90, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickDuration")]
        public virtual System.Nullable<int> ClickDuration { get; set; }

        /// <summary>
        /// Lookback window, in days, from the last time a given user viewed one of your ads. If you enter 0,
        /// impressions will not be considered as triggering events for floodlight tracking. If you leave this field
        /// blank, the default value for your account will be used. Acceptable values are 0 to 90, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postImpressionActivitiesDuration")]
        public virtual System.Nullable<int> PostImpressionActivitiesDuration { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class MeasurementPartnerAdvertiserLink : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Status of the partner link.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkStatus")]
        public virtual string LinkStatus { get; set; }

        /// <summary>Measurement partner used for tag wrapping.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("measurementPartner")]
        public virtual string MeasurementPartner { get; set; }

        /// <summary>partner Advertiser Id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partnerAdvertiserId")]
        public virtual string PartnerAdvertiserId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class MeasurementPartnerCampaignLink : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkStatus")]
        public virtual string LinkStatus { get; set; }

        /// <summary>Measurement partner used for tag wrapping.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("measurementPartner")]
        public virtual string MeasurementPartner { get; set; }

        /// <summary>Partner campaign ID needed for establishing linking with Measurement partner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partnerCampaignId")]
        public virtual string PartnerCampaignId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Placement tag wrapping</summary>
    public class MeasurementPartnerWrappingData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Placement wrapping status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("linkStatus")]
        public virtual string LinkStatus { get; set; }

        /// <summary>Measurement partner used for wrapping the placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("measurementPartner")]
        public virtual string MeasurementPartner { get; set; }

        /// <summary>Measurement mode for the wrapped placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagWrappingMode")]
        public virtual string TagWrappingMode { get; set; }

        /// <summary>Tag provided by the measurement partner during wrapping.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("wrappedTag")]
        public virtual string WrappedTag { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a metric.</summary>
    public class Metric : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The kind of resource this is, in this case dfareporting#metric.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The metric name, e.g. impressions</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a metro region that can be targeted by ads.</summary>
    public class Metro : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code of the country to which this metro region belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; }

        /// <summary>DART ID of the country to which this metro region belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; }

        /// <summary>DART ID of this metro region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; }

        /// <summary>
        /// DMA ID of this metro region. This is the ID used for targeting and generating reports, and is equivalent to
        /// metro_code.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dmaId")]
        public virtual System.Nullable<long> DmaId { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#metro".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metro code of this metro region. This is equivalent to dma_id.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metroCode")]
        public virtual string MetroCode { get; set; }

        /// <summary>Name of this metro region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Metro List Response</summary>
    public class MetrosListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#metrosListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metro collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metros")]
        public virtual System.Collections.Generic.IList<Metro> Metros { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a mobile app. Used as a landing page deep link.</summary>
    public class MobileApp : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Mobile app directory.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directory")]
        public virtual string Directory { get; set; }

        /// <summary>ID of this mobile app.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#mobileApp".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Publisher name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherName")]
        public virtual string PublisherName { get; set; }

        /// <summary>Title of this mobile app.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Mobile app List Response</summary>
    public class MobileAppsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#mobileAppsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Mobile apps collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobileApps")]
        public virtual System.Collections.Generic.IList<MobileApp> MobileApps { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a mobile carrier that can be targeted by ads.</summary>
    public class MobileCarrier : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code of the country to which this mobile carrier belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; }

        /// <summary>DART ID of the country to which this mobile carrier belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; }

        /// <summary>ID of this mobile carrier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#mobileCarrier".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this mobile carrier.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Mobile Carrier List Response</summary>
    public class MobileCarriersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#mobileCarriersListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Mobile carrier collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobileCarriers")]
        public virtual System.Collections.Generic.IList<MobileCarrier> MobileCarriers { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Online Behavioral Advertiser icon.</summary>
    public class ObaIcon : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>URL to redirect to when an OBA icon is clicked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iconClickThroughUrl")]
        public virtual string IconClickThroughUrl { get; set; }

        /// <summary>URL to track click when an OBA icon is clicked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iconClickTrackingUrl")]
        public virtual string IconClickTrackingUrl { get; set; }

        /// <summary>URL to track view when an OBA icon is clicked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iconViewTrackingUrl")]
        public virtual string IconViewTrackingUrl { get; set; }

        /// <summary>Identifies the industry initiative that the icon supports. For example, AdChoices.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("program")]
        public virtual string Program { get; set; }

        /// <summary>
        /// OBA icon resource URL. Campaign Manager only supports image and JavaScript icons. Learn more
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceUrl")]
        public virtual string ResourceUrl { get; set; }

        /// <summary>OBA icon size.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; }

        /// <summary>OBA icon x coordinate position. Accepted values are left or right.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("xPosition")]
        public virtual string XPosition { get; set; }

        /// <summary>OBA icon y coordinate position. Accepted values are top or bottom.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("yPosition")]
        public virtual string YPosition { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Object Filter.</summary>
    public class ObjectFilter : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#objectFilter".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Applicable when status is ASSIGNED. The user has access to objects with these object IDs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("objectIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> ObjectIds { get; set; }

        /// <summary>
        /// Status of the filter. NONE means the user has access to none of the objects. ALL means the user has access
        /// to all objects. ASSIGNED means the user has access to the objects with IDs in the objectIds list.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Identify a user by name and address.</summary>
    public class OfflineUserAddressInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>City of the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("city")]
        public virtual string City { get; set; }

        /// <summary>2-letter country code in ISO-3166-1 alpha-2 of the user's address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; }

        /// <summary>
        /// First name of the user, which is hashed as SHA-256 after normalized (Lowercase all characters; Remove any
        /// extra spaces before, after, and in between).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hashedFirstName")]
        public virtual string HashedFirstName { get; set; }

        /// <summary>
        /// Last name of the user, which is hashed as SHA-256 after normalized (lower case only and no punctuation).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hashedLastName")]
        public virtual string HashedLastName { get; set; }

        /// <summary>
        /// The street address of the user hashed using SHA-256 hash function after normalization (lower case only).
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hashedStreetAddress")]
        public virtual string HashedStreetAddress { get; set; }

        /// <summary>Postal code of the user's address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalCode")]
        public virtual string PostalCode { get; set; }

        /// <summary>State code of the address.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Offset Position.</summary>
    public class OffsetPosition : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Offset distance from left side of an asset or a window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("left")]
        public virtual System.Nullable<int> Left { get; set; }

        /// <summary>Offset distance from top side of an asset or a window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("top")]
        public virtual System.Nullable<int> Top { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Omniture Integration Settings.</summary>
    public class OmnitureSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether placement cost data will be sent to Omniture. This property can be enabled only if
        /// omnitureIntegrationEnabled is true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("omnitureCostDataEnabled")]
        public virtual System.Nullable<bool> OmnitureCostDataEnabled { get; set; }

        /// <summary>
        /// Whether Omniture integration is enabled. This property can be enabled only when the "Advanced Ad Serving"
        /// account setting is enabled.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("omnitureIntegrationEnabled")]
        public virtual System.Nullable<bool> OmnitureIntegrationEnabled { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about an operating system that can be targeted by ads.</summary>
    public class OperatingSystem : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>DART ID of this operating system. This is the ID used for targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; }

        /// <summary>Whether this operating system is for desktop.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("desktop")]
        public virtual System.Nullable<bool> Desktop { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#operatingSystem".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Whether this operating system is for mobile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobile")]
        public virtual System.Nullable<bool> Mobile { get; set; }

        /// <summary>Name of this operating system.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains information about a particular version of an operating system that can be targeted by ads.
    /// </summary>
    public class OperatingSystemVersion : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#operatingSystemVersion".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Major version (leftmost number) of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("majorVersion")]
        public virtual string MajorVersion { get; set; }

        /// <summary>Minor version (number after the first dot) of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("minorVersion")]
        public virtual string MinorVersion { get; set; }

        /// <summary>Name of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Operating system of this operating system version.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystem")]
        public virtual OperatingSystem OperatingSystem { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Operating System Version List Response</summary>
    public class OperatingSystemVersionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#operatingSystemVersionsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Operating system version collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystemVersions")]
        public virtual System.Collections.Generic.IList<OperatingSystemVersion> OperatingSystemVersions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Operating System List Response</summary>
    public class OperatingSystemsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#operatingSystemsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Operating system collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystems")]
        public virtual System.Collections.Generic.IList<OperatingSystem> OperatingSystems { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Creative optimization activity.</summary>
    public class OptimizationActivity : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Floodlight activity ID of this optimization activity. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityId")]
        public virtual System.Nullable<long> FloodlightActivityId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the floodlight activity. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityIdDimensionValue")]
        public virtual DimensionValue FloodlightActivityIdDimensionValue { get; set; }

        /// <summary>
        /// Weight associated with this optimization. The weight assigned will be understood in proportion to the
        /// weights assigned to the other optimization activities. Value must be greater than or equal to 1.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("weight")]
        public virtual System.Nullable<int> Weight { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Describes properties of a Planning order.</summary>
    public class Order : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Advertiser ID of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>IDs for users that have to approve documents created for this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("approverUserProfileIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> ApproverUserProfileIds { get; set; }

        /// <summary>Buyer invoice ID associated with this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buyerInvoiceId")]
        public virtual string BuyerInvoiceId { get; set; }

        /// <summary>Name of the buyer organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("buyerOrganizationName")]
        public virtual string BuyerOrganizationName { get; set; }

        /// <summary>Comments in this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comments")]
        public virtual string Comments { get; set; }

        /// <summary>Contacts for this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contacts")]
        public virtual System.Collections.Generic.IList<OrderContact> Contacts { get; set; }

        /// <summary>ID of this order. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#order".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Information about the most recent modification of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; }

        /// <summary>Name of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Notes of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notes")]
        public virtual string Notes { get; set; }

        /// <summary>ID of the terms and conditions template used in this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("planningTermId")]
        public virtual System.Nullable<long> PlanningTermId { get; set; }

        /// <summary>Project ID of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual System.Nullable<long> ProjectId { get; set; }

        /// <summary>Seller order ID associated with this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sellerOrderId")]
        public virtual string SellerOrderId { get; set; }

        /// <summary>Name of the seller organization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sellerOrganizationName")]
        public virtual string SellerOrganizationName { get; set; }

        /// <summary>Site IDs this order is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> SiteId { get; set; }

        /// <summary>Free-form site names this order is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteNames")]
        public virtual System.Collections.Generic.IList<string> SiteNames { get; set; }

        /// <summary>Subaccount ID of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>Terms and conditions of this order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("termsAndConditions")]
        public virtual string TermsAndConditions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contact of an order.</summary>
    public class OrderContact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Free-form information about this contact. It could be any information related to this contact in addition to
        /// type, title, name, and signature user profile ID.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactInfo")]
        public virtual string ContactInfo { get; set; }

        /// <summary>Name of this contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactName")]
        public virtual string ContactName { get; set; }

        /// <summary>Title of this contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactTitle")]
        public virtual string ContactTitle { get; set; }

        /// <summary>Type of this contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactType")]
        public virtual string ContactType { get; set; }

        /// <summary>
        /// ID of the user profile containing the signature that will be embedded into order documents.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("signatureUserProfileId")]
        public virtual System.Nullable<long> SignatureUserProfileId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Order List Response</summary>
    public class OrdersListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#ordersListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Order collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orders")]
        public virtual System.Collections.Generic.IList<Order> Orders { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Represents fields that are compatible to be selected for a report of type "PATH_TO_CONVERSION".
    /// </summary>
    public class PathToConversionReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Conversion dimensions which are compatible to be selected in the "conversionDimensions" section of the
        /// report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversionDimensions")]
        public virtual System.Collections.Generic.IList<Dimension> ConversionDimensions { get; set; }

        /// <summary>
        /// Custom floodlight variables which are compatible to be selected in the "customFloodlightVariables" section
        /// of the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customFloodlightVariables")]
        public virtual System.Collections.Generic.IList<Dimension> CustomFloodlightVariables { get; set; }

        /// <summary>
        /// The kind of resource this is, in this case dfareporting#pathToConversionReportCompatibleFields.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; }

        /// <summary>
        /// Per-interaction dimensions which are compatible to be selected in the "perInteractionDimensions" section of
        /// the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("perInteractionDimensions")]
        public virtual System.Collections.Generic.IList<Dimension> PerInteractionDimensions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a placement.</summary>
    public class Placement : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this placement. This field can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Whether this placement is active, inactive, archived or permanently archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeStatus")]
        public virtual string ActiveStatus { get; set; }

        /// <summary>
        /// Whether this placement opts out of ad blocking. When true, ad blocking is disabled for this placement. When
        /// false, the campaign and site settings take effect.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adBlockingOptOut")]
        public virtual System.Nullable<bool> AdBlockingOptOut { get; set; }

        /// <summary>
        /// Optional. Ad serving platform ID to identify the ad serving platform used by the placement. Measurement
        /// partners can use this field to add ad-server specific macros. Possible values are: * `1`, Adelphic * `2`,
        /// Adform * `3`, Adobe * `4`, Amobee * `5`, Basis (Centro) * `6`, Beeswax * `7`, Amazon * `8`, DV360 (DBM) *
        /// `9`, Innovid * `10`, MediaMath * `11`, Roku OneView DSP * `12`, TabMo Hawk * `13`, The Trade Desk * `14`,
        /// Xandr Invest DSP * `15`, Yahoo DSP * `16`, Zeta Global * `17`, Scaleout * `18`, Bidtellect * `19`, Unicorn *
        /// `20`, Teads * `21`, Quantcast * `22`, Cognitiv
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adServingPlatformId")]
        public virtual System.Nullable<long> AdServingPlatformId { get; set; }

        /// <summary>
        /// Additional sizes associated with this placement. When inserting or updating a placement, only the size ID
        /// field is used.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalSizes")]
        public virtual System.Collections.Generic.IList<Size> AdditionalSizes { get; set; }

        /// <summary>Advertiser ID of this placement. This field can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Campaign ID of this placement. This field is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; }

        /// <summary>Dimension value for the ID of the campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignIdDimensionValue")]
        public virtual DimensionValue CampaignIdDimensionValue { get; set; }

        /// <summary>Comments for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; }

        /// <summary>
        /// Placement compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering on desktop, on mobile devices
        /// or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are no longer
        /// allowed for new placement insertions. Instead, use DISPLAY or DISPLAY_INTERSTITIAL. IN_STREAM_VIDEO refers
        /// to rendering in in-stream video ads developed with the VAST standard. This field is required on insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("compatibility")]
        public virtual string Compatibility { get; set; }

        /// <summary>ID of the content category assigned to this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentCategoryId")]
        public virtual System.Nullable<long> ContentCategoryId { get; set; }

        /// <summary>Optional. Conversion domain overrides for a placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conversionDomainOverride")]
        public virtual PlacementConversionDomainOverride ConversionDomainOverride { get; set; }

        /// <summary>Information about the creation of this placement. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createInfo")]
        public virtual LastModifiedInfo CreateInfo { get; set; }

        /// <summary>
        /// Directory site ID of this placement. On insert, you must set either this field or the siteId field to
        /// specify the site associated with this placement. This is a required field that is read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteId")]
        public virtual System.Nullable<long> DirectorySiteId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the directory site. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteIdDimensionValue")]
        public virtual DimensionValue DirectorySiteIdDimensionValue { get; set; }

        /// <summary>External ID for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("externalId")]
        public virtual string ExternalId { get; set; }

        /// <summary>ID of this placement. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Dimension value for the ID of this placement. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>Key name of this placement. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyName")]
        public virtual string KeyName { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#placement".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Information about the most recent modification of this placement. This is a read-only field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; }

        /// <summary>Lookback window settings for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lookbackConfiguration")]
        public virtual LookbackConfiguration LookbackConfiguration { get; set; }

        /// <summary>
        /// Name of this placement.This is a required field and must be less than or equal to 512 characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Measurement partner provided settings for a wrapped placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("partnerWrappingData")]
        public virtual MeasurementPartnerWrappingData PartnerWrappingData { get; set; }

        /// <summary>
        /// Whether payment was approved for this placement. This is a read-only field relevant only to publisher-paid
        /// placements.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentApproved")]
        public virtual System.Nullable<bool> PaymentApproved { get; set; }

        /// <summary>
        /// Payment source for this placement. This is a required field that is read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("paymentSource")]
        public virtual string PaymentSource { get; set; }

        /// <summary>ID of this placement's group, if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementGroupId")]
        public virtual System.Nullable<long> PlacementGroupId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the placement group. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementGroupIdDimensionValue")]
        public virtual DimensionValue PlacementGroupIdDimensionValue { get; set; }

        /// <summary>ID of the placement strategy assigned to this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementStrategyId")]
        public virtual System.Nullable<long> PlacementStrategyId { get; set; }

        /// <summary>
        /// Pricing schedule of this placement. This field is required on insertion, specifically subfields startDate,
        /// endDate and pricingType.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingSchedule")]
        public virtual PricingSchedule PricingSchedule { get; set; }

        /// <summary>
        /// Whether this placement is the primary placement of a roadblock (placement group). You cannot change this
        /// field from true to false. Setting this field to true will automatically set the primary field on the
        /// original primary placement of the roadblock to false, and it will automatically set the roadblock's
        /// primaryPlacementId field to the ID of this placement.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; }

        /// <summary>Information about the last publisher update. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherUpdateInfo")]
        public virtual LastModifiedInfo PublisherUpdateInfo { get; set; }

        /// <summary>
        /// Site ID associated with this placement. On insert, you must set either this field or the directorySiteId
        /// field to specify the site associated with this placement. This is a required field that is read-only after
        /// insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Nullable<long> SiteId { get; set; }

        /// <summary>Dimension value for the ID of the site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteIdDimensionValue")]
        public virtual DimensionValue SiteIdDimensionValue { get; set; }

        /// <summary>
        /// Optional. Whether the ads in the placement are served by another platform and CM is only used for tracking
        /// or they are served by CM. A false value indicates the ad is served by CM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteServed")]
        public virtual System.Nullable<bool> SiteServed { get; set; }

        /// <summary>
        /// Size associated with this placement. When inserting or updating a placement, only the size ID field is used.
        /// This field is required on insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("size")]
        public virtual Size Size { get; set; }

        /// <summary>Whether creatives assigned to this placement must be SSL-compliant.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslRequired")]
        public virtual System.Nullable<bool> SslRequired { get; set; }

        /// <summary>Third-party placement status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status { get; set; }

        /// <summary>Subaccount ID of this placement. This field can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>
        /// Tag formats to generate for this placement. This field is required on insertion. Acceptable values are: -
        /// "PLACEMENT_TAG_STANDARD" - "PLACEMENT_TAG_IFRAME_JAVASCRIPT" - "PLACEMENT_TAG_IFRAME_ILAYER" -
        /// "PLACEMENT_TAG_INTERNAL_REDIRECT" - "PLACEMENT_TAG_JAVASCRIPT" -
        /// "PLACEMENT_TAG_INTERSTITIAL_IFRAME_JAVASCRIPT" - "PLACEMENT_TAG_INTERSTITIAL_INTERNAL_REDIRECT" -
        /// "PLACEMENT_TAG_INTERSTITIAL_JAVASCRIPT" - "PLACEMENT_TAG_CLICK_COMMANDS" -
        /// "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH" - "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_3" -
        /// "PLACEMENT_TAG_INSTREAM_VIDEO_PREFETCH_VAST_4" - "PLACEMENT_TAG_TRACKING" - "PLACEMENT_TAG_TRACKING_IFRAME"
        /// - "PLACEMENT_TAG_TRACKING_JAVASCRIPT"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagFormats")]
        public virtual System.Collections.Generic.IList<string> TagFormats { get; set; }

        /// <summary>Tag settings for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagSetting")]
        public virtual TagSetting TagSetting { get; set; }

        /// <summary>
        /// Whether Verification and ActiveView are disabled for in-stream video creatives for this placement. The same
        /// setting videoActiveViewOptOut exists on the site level -- the opt out occurs if either of these settings are
        /// true. These settings are distinct from DirectorySites.settings.activeViewOptOut or
        /// Sites.siteSettings.activeViewOptOut which only apply to display ads. However, Accounts.activeViewOptOut opts
        /// out both video traffic, as well as display ads, from Verification and ActiveView.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoActiveViewOptOut")]
        public virtual System.Nullable<bool> VideoActiveViewOptOut { get; set; }

        /// <summary>
        /// A collection of settings which affect video creatives served through this placement. Applicable to
        /// placements with IN_STREAM_VIDEO compatibility.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoSettings")]
        public virtual VideoSettings VideoSettings { get; set; }

        /// <summary>
        /// VPAID adapter setting for this placement. Controls which VPAID format the measurement adapter will use for
        /// in-stream video creatives assigned to this placement. *Note:* Flash is no longer supported. This field now
        /// defaults to HTML5 when the following values are provided: FLASH, BOTH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vpaidAdapterChoice")]
        public virtual string VpaidAdapterChoice { get; set; }

        /// <summary>Whether this placement opts out of tag wrapping.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("wrappingOptOut")]
        public virtual System.Nullable<bool> WrappingOptOut { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Placement Assignment.</summary>
    public class PlacementAssignment : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether this placement assignment is active. When true, the placement will be included in the ad's rotation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>ID of the placement to be assigned. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementId")]
        public virtual System.Nullable<long> PlacementId { get; set; }

        /// <summary>Dimension value for the ID of the placement. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementIdDimensionValue")]
        public virtual DimensionValue PlacementIdDimensionValue { get; set; }

        /// <summary>
        /// Whether the placement to be assigned requires SSL. This is a read-only field that is auto-generated when the
        /// ad is inserted or updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sslRequired")]
        public virtual System.Nullable<bool> SslRequired { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class PlacementConversionDomainOverride : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("conversionDomains")]
        public virtual System.Collections.Generic.IList<PlacementSingleConversionDomain> ConversionDomains { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a package or roadblock.</summary>
    public class PlacementGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this placement group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Whether this placement group is active, inactive, archived or permanently archived.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeStatus")]
        public virtual string ActiveStatus { get; set; }

        /// <summary>Advertiser ID of this placement group. This is a required field on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Campaign ID of this placement group. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignId")]
        public virtual System.Nullable<long> CampaignId { get; set; }

        /// <summary>Dimension value for the ID of the campaign. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("campaignIdDimensionValue")]
        public virtual DimensionValue CampaignIdDimensionValue { get; set; }

        /// <summary>
        /// IDs of placements which are assigned to this placement group. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("childPlacementIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> ChildPlacementIds { get; set; }

        /// <summary>Comments for this placement group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual string Comment { get; set; }

        /// <summary>ID of the content category assigned to this placement group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentCategoryId")]
        public virtual System.Nullable<long> ContentCategoryId { get; set; }

        /// <summary>Information about the creation of this placement group. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("createInfo")]
        public virtual LastModifiedInfo CreateInfo { get; set; }

        /// <summary>
        /// Directory site ID associated with this placement group. On insert, you must set either this field or the
        /// site_id field to specify the site associated with this placement group. This is a required field that is
        /// read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteId")]
        public virtual System.Nullable<long> DirectorySiteId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the directory site. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteIdDimensionValue")]
        public virtual DimensionValue DirectorySiteIdDimensionValue { get; set; }

        /// <summary>External ID for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("externalId")]
        public virtual string ExternalId { get; set; }

        /// <summary>ID of this placement group. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Dimension value for the ID of this placement group. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementGroup".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Information about the most recent modification of this placement group. This is a read-only field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; }

        /// <summary>
        /// Name of this placement group. This is a required field and must be less than 256 characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Type of this placement group. A package is a simple group of placements that acts as a single pricing point
        /// for a group of tags. A roadblock is a group of placements that not only acts as a single pricing point, but
        /// also assumes that all the tags in it will be served at the same time. A roadblock requires one of its
        /// assigned placements to be marked as primary for reporting. This field is required on insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementGroupType")]
        public virtual string PlacementGroupType { get; set; }

        /// <summary>ID of the placement strategy assigned to this placement group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementStrategyId")]
        public virtual System.Nullable<long> PlacementStrategyId { get; set; }

        /// <summary>Pricing schedule of this placement group. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingSchedule")]
        public virtual PricingSchedule PricingSchedule { get; set; }

        /// <summary>
        /// ID of the primary placement, used to calculate the media cost of a roadblock (placement group). Modifying
        /// this field will automatically modify the primary field on all affected roadblock child placements.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryPlacementId")]
        public virtual System.Nullable<long> PrimaryPlacementId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the primary placement. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryPlacementIdDimensionValue")]
        public virtual DimensionValue PrimaryPlacementIdDimensionValue { get; set; }

        /// <summary>
        /// Site ID associated with this placement group. On insert, you must set either this field or the
        /// directorySiteId field to specify the site associated with this placement group. This is a required field
        /// that is read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteId")]
        public virtual System.Nullable<long> SiteId { get; set; }

        /// <summary>Dimension value for the ID of the site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteIdDimensionValue")]
        public virtual DimensionValue SiteIdDimensionValue { get; set; }

        /// <summary>Subaccount ID of this placement group. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Placement Group List Response</summary>
    public class PlacementGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementGroupsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Placement group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementGroups")]
        public virtual System.Collections.Generic.IList<PlacementGroup> PlacementGroups { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class PlacementSingleConversionDomain : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("conversionDomainId")]
        public virtual System.Nullable<long> ConversionDomainId { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("conversionDomainValue")]
        public virtual string ConversionDomainValue { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Placement Strategy List Response</summary>
    public class PlacementStrategiesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementStrategiesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Placement strategy collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementStrategies")]
        public virtual System.Collections.Generic.IList<PlacementStrategy> PlacementStrategies { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a placement strategy.</summary>
    public class PlacementStrategy : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this placement strategy.This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>ID of this placement strategy. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementStrategy".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this placement strategy. This is a required field. It must be less than 256 characters long and
        /// unique among placement strategies of the same account.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Placement Tag</summary>
    public class PlacementTag : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Placement ID</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementId")]
        public virtual System.Nullable<long> PlacementId { get; set; }

        /// <summary>Tags generated for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagDatas")]
        public virtual System.Collections.Generic.IList<TagData> TagDatas { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Placement GenerateTags Response</summary>
    public class PlacementsGenerateTagsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#placementsGenerateTagsResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Set of generated tags for the specified placements.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placementTags")]
        public virtual System.Collections.Generic.IList<PlacementTag> PlacementTags { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Placement List Response</summary>
    public class PlacementsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#placementsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Placement collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("placements")]
        public virtual System.Collections.Generic.IList<Placement> Placements { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a platform type that can be targeted by ads.</summary>
    public class PlatformType : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this platform type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#platformType".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this platform type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Platform Type List Response</summary>
    public class PlatformTypesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#platformTypesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Platform type collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platformTypes")]
        public virtual System.Collections.Generic.IList<PlatformType> PlatformTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Popup Window Properties.</summary>
    public class PopupWindowProperties : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Popup dimension for a creative. This is a read-only field. Applicable to the following creative types: all
        /// RICH_MEDIA and all VPAID
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimension")]
        public virtual Size Dimension { get; set; }

        /// <summary>
        /// Upper-left corner coordinates of the popup window. Applicable if positionType is COORDINATES.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offset")]
        public virtual OffsetPosition Offset { get; set; }

        /// <summary>Popup window position either centered or at specific coordinate.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("positionType")]
        public virtual string PositionType { get; set; }

        /// <summary>Whether to display the browser address bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showAddressBar")]
        public virtual System.Nullable<bool> ShowAddressBar { get; set; }

        /// <summary>Whether to display the browser menu bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showMenuBar")]
        public virtual System.Nullable<bool> ShowMenuBar { get; set; }

        /// <summary>Whether to display the browser scroll bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showScrollBar")]
        public virtual System.Nullable<bool> ShowScrollBar { get; set; }

        /// <summary>Whether to display the browser status bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showStatusBar")]
        public virtual System.Nullable<bool> ShowStatusBar { get; set; }

        /// <summary>Whether to display the browser tool bar.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showToolBar")]
        public virtual System.Nullable<bool> ShowToolBar { get; set; }

        /// <summary>Title of popup window.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a postal code that can be targeted by ads.</summary>
    public class PostalCode : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Postal code. This is equivalent to the id field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual string Code { get; set; }

        /// <summary>Country code of the country to which this postal code belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; }

        /// <summary>DART ID of the country to which this postal code belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; }

        /// <summary>ID of this postal code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#postalCode".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Postal Code List Response</summary>
    public class PostalCodesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#postalCodesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Postal code collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("postalCodes")]
        public virtual System.Collections.Generic.IList<PostalCode> PostalCodes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    public class Pricing : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Cap cost type of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("capCostType")]
        public virtual string CapCostType { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>
        /// Flights of this inventory item. A flight (a.k.a. pricing period) represents the inventory item pricing
        /// information for a specific period of time.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flights")]
        public virtual System.Collections.Generic.IList<Flight> Flights { get; set; }

        /// <summary>
        /// Group type of this inventory item if it represents a placement group. Is null otherwise. There are two type
        /// of placement groups: PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE is a simple group of inventory items that acts as
        /// a single pricing point for a group of tags. PLANNING_PLACEMENT_GROUP_TYPE_ROADBLOCK is a group of inventory
        /// items that not only acts as a single pricing point, but also assumes that all the tags in it will be served
        /// at the same time. A roadblock requires one of its assigned inventory items to be marked as primary.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupType")]
        public virtual string GroupType { get; set; }

        /// <summary>Pricing type of this inventory item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingType")]
        public virtual string PricingType { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Pricing Schedule</summary>
    public class PricingSchedule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Placement cap cost option.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("capCostOption")]
        public virtual string CapCostOption { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>
        /// Whether this placement is flighted. If true, pricing periods will be computed automatically.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("flighted")]
        public virtual System.Nullable<bool> Flighted { get; set; }

        /// <summary>
        /// Floodlight activity ID associated with this placement. This field should be set when placement pricing type
        /// is set to PRICING_TYPE_CPA.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightActivityId")]
        public virtual System.Nullable<long> FloodlightActivityId { get; set; }

        /// <summary>Pricing periods for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingPeriods")]
        public virtual System.Collections.Generic.IList<PricingSchedulePricingPeriod> PricingPeriods { get; set; }

        /// <summary>Placement pricing type. This field is required on insertion.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingType")]
        public virtual string PricingType { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("testingStartDate")]
        public virtual string TestingStartDate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Pricing Period</summary>
    public class PricingSchedulePricingPeriod : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>Comments for this pricing period.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pricingComment")]
        public virtual string PricingComment { get; set; }

        /// <summary>
        /// Rate or cost of this pricing period in nanos (i.e., multiplied by 1000000000). Acceptable values are 0 to
        /// 1000000000000000000, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rateOrCostNanos")]
        public virtual System.Nullable<long> RateOrCostNanos { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>Units of this pricing period. Acceptable values are 0 to 10000000000, inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("units")]
        public virtual System.Nullable<long> Units { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Planning project.</summary>
    public class Project : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Advertiser ID of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Audience age group of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceAgeGroup")]
        public virtual string AudienceAgeGroup { get; set; }

        /// <summary>Audience gender of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audienceGender")]
        public virtual string AudienceGender { get; set; }

        /// <summary>
        /// Budget of this project in the currency specified by the current account. The value stored in this field
        /// represents only the non-fractional amount. For example, for USD, the smallest value that can be represented
        /// by this field is 1 US dollar.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("budget")]
        public virtual System.Nullable<long> Budget { get; set; }

        /// <summary>Client billing code of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientBillingCode")]
        public virtual string ClientBillingCode { get; set; }

        /// <summary>Name of the project client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clientName")]
        public virtual string ClientName { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>ID of this project. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#project".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Information about the most recent modification of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedInfo")]
        public virtual LastModifiedInfo LastModifiedInfo { get; set; }

        /// <summary>Name of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Overview of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("overview")]
        public virtual string Overview { get; set; }

        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>Subaccount ID of this project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>Number of clicks that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetClicks")]
        public virtual System.Nullable<long> TargetClicks { get; set; }

        /// <summary>Number of conversions that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetConversions")]
        public virtual System.Nullable<long> TargetConversions { get; set; }

        /// <summary>CPA that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetCpaNanos")]
        public virtual System.Nullable<long> TargetCpaNanos { get; set; }

        /// <summary>CPC that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetCpcNanos")]
        public virtual System.Nullable<long> TargetCpcNanos { get; set; }

        /// <summary>vCPM from Active View that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetCpmActiveViewNanos")]
        public virtual System.Nullable<long> TargetCpmActiveViewNanos { get; set; }

        /// <summary>CPM that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetCpmNanos")]
        public virtual System.Nullable<long> TargetCpmNanos { get; set; }

        /// <summary>Number of impressions that the advertiser is targeting.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetImpressions")]
        public virtual System.Nullable<long> TargetImpressions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Project List Response</summary>
    public class ProjectsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#projectsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Project collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projects")]
        public virtual System.Collections.Generic.IList<Project> Projects { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents fields that are compatible to be selected for a report of type "REACH".</summary>
    public class ReachReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; }

        /// <summary>Dimensions which are compatible to be selected in the "dimensions" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual System.Collections.Generic.IList<Dimension> Dimensions { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#reachReportCompatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; }

        /// <summary>
        /// Metrics which are compatible to be selected as activity metrics to pivot on in the "activities" section of
        /// the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pivotedActivityMetrics")]
        public virtual System.Collections.Generic.IList<Metric> PivotedActivityMetrics { get; set; }

        /// <summary>
        /// Metrics which are compatible to be selected in the "reachByFrequencyMetricNames" section of the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachByFrequencyMetrics")]
        public virtual System.Collections.Generic.IList<Metric> ReachByFrequencyMetrics { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a recipient.</summary>
    public class Recipient : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The delivery type for the recipient.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("deliveryType")]
        public virtual string DeliveryType { get; set; }

        /// <summary>The email address of the recipient.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#recipient.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about a region that can be targeted by ads.</summary>
    public class Region : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Country code of the country to which this region belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryCode")]
        public virtual string CountryCode { get; set; }

        /// <summary>DART ID of the country to which this region belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countryDartId")]
        public virtual System.Nullable<long> CountryDartId { get; set; }

        /// <summary>DART ID of this region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dartId")]
        public virtual System.Nullable<long> DartId { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#region".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this region.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Region code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCode")]
        public virtual string RegionCode { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Region List Response</summary>
    public class RegionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#regionsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Region collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regions")]
        public virtual System.Collections.Generic.IList<Region> Regions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains properties of a remarketing list. Remarketing enables you to create lists of users who have performed
    /// specific actions on a site, then target ads to members of those lists. This resource can be used to manage
    /// remarketing lists that are owned by your advertisers. To see all remarketing lists that are visible to your
    /// advertisers, including those that are shared to your advertiser or account, use the TargetableRemarketingLists
    /// resource.
    /// </summary>
    public class RemarketingList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET
        /// requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Whether this remarketing list is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>
        /// Dimension value for the advertiser ID that owns this remarketing list. This is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Remarketing list description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Remarketing list ID. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#remarketingList".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Number of days that a user should remain in the remarketing list without an impression. Acceptable values
        /// are 1 to 540, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifeSpan")]
        public virtual System.Nullable<long> LifeSpan { get; set; }

        /// <summary>Rule used to populate the remarketing list with users.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listPopulationRule")]
        public virtual ListPopulationRule ListPopulationRule { get; set; }

        /// <summary>Number of users currently in the list. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSize")]
        public virtual System.Nullable<long> ListSize { get; set; }

        /// <summary>Product from which this remarketing list was originated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSource")]
        public virtual string ListSource { get; set; }

        /// <summary>
        /// Name of the remarketing list. This is a required field. Must be no greater than 128 characters long.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in
        /// GET requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains properties of a remarketing list's sharing information. Sharing allows other accounts or advertisers to
    /// target to your remarketing lists. This resource can be used to manage remarketing list sharing to other accounts
    /// and advertisers.
    /// </summary>
    public class RemarketingListShare : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#remarketingListShare".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Remarketing list ID. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingListId")]
        public virtual System.Nullable<long> RemarketingListId { get; set; }

        /// <summary>Accounts that the remarketing list is shared with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sharedAccountIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> SharedAccountIds { get; set; }

        /// <summary>Advertisers that the remarketing list is shared with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sharedAdvertiserIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> SharedAdvertiserIds { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Remarketing list response</summary>
    public class RemarketingListsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#remarketingListsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Remarketing list collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("remarketingLists")]
        public virtual System.Collections.Generic.IList<RemarketingList> RemarketingLists { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a Report resource.</summary>
    public class Report : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The account ID to which this report belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>The report criteria for a report of type "STANDARD".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("criteria")]
        public virtual CriteriaData Criteria { get; set; }

        /// <summary>The report criteria for a report of type "CROSS_DIMENSION_REACH".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crossDimensionReachCriteria")]
        public virtual CrossDimensionReachCriteriaData CrossDimensionReachCriteria { get; set; }

        /// <summary>Optional. The report criteria for a report of type "CROSS_MEDIA_REACH".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("crossMediaReachCriteria")]
        public virtual CrossMediaReachCriteriaData CrossMediaReachCriteria { get; set; }

        /// <summary>The report's email delivery settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("delivery")]
        public virtual DeliveryData Delivery { get; set; }

        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>The filename used when generating report files for this report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; }

        /// <summary>The report criteria for a report of type "FLOODLIGHT".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("floodlightCriteria")]
        public virtual FloodlightCriteriaData FloodlightCriteria { get; set; }

        /// <summary>
        /// The output format of the report. If not specified, default format is "CSV". Note that the actual format in
        /// the completed report file might differ if for instance the report's size exceeds the format's capabilities.
        /// "CSV" will then be the fallback format.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("format")]
        public virtual string Format { get; set; }

        /// <summary>The unique ID identifying this report resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The timestamp (in milliseconds since epoch) of when this report was last modified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastModifiedTime")]
        public virtual System.Nullable<ulong> LastModifiedTime { get; set; }

        /// <summary>The name of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The user profile id of the owner of this report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ownerProfileId")]
        public virtual System.Nullable<long> OwnerProfileId { get; set; }

        /// <summary>The report criteria for a report of type "PATH_TO_CONVERSION".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pathToConversionCriteria")]
        public virtual PathToConversionCriteriaData PathToConversionCriteria { get; set; }

        /// <summary>The report criteria for a report of type "REACH".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reachCriteria")]
        public virtual ReachCriteriaData ReachCriteria { get; set; }

        /// <summary>
        /// The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative
        /// date range is not "TODAY".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("schedule")]
        public virtual ScheduleData Schedule { get; set; }

        /// <summary>The subaccount ID to which this report belongs if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountId")]
        public virtual System.Nullable<long> SubAccountId { get; set; }

        /// <summary>The type of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The report criteria for a report of type "STANDARD".</summary>
        public class CriteriaData
        {
            /// <summary>Activity group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("activities")]
            public virtual Activities Activities { get; set; }

            /// <summary>Custom Rich Media Events group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual CustomRichMediaEvents CustomRichMediaEvents { get; set; }

            /// <summary>The date range for which this report should be run.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; }

            /// <summary>
            /// The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed,
            /// filters for the same dimension are grouped together and ORed.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; }

            /// <summary>The list of standard dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> Dimensions { get; set; }

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; }
        }

        /// <summary>The report criteria for a report of type "CROSS_DIMENSION_REACH".</summary>
        public class CrossDimensionReachCriteriaData
        {
            /// <summary>The list of dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("breakdown")]
            public virtual System.Collections.Generic.IList<SortedDimension> Breakdown { get; set; }

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; }

            /// <summary>The dimension option.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimension")]
            public virtual string Dimension { get; set; }

            /// <summary>The list of filters on which dimensions are filtered.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; }

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; }

            /// <summary>The list of names of overlap metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("overlapMetricNames")]
            public virtual System.Collections.Generic.IList<string> OverlapMetricNames { get; set; }

            /// <summary>Whether the report is pivoted or not. Defaults to true.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("pivoted")]
            public virtual System.Nullable<bool> Pivoted { get; set; }
        }

        /// <summary>Optional. The report criteria for a report of type "CROSS_MEDIA_REACH".</summary>
        public class CrossMediaReachCriteriaData
        {
            /// <summary>Required. The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; }

            /// <summary>
            /// Required. The list of filters on which dimensions are filtered. Filters for different dimensions are
            /// ANDed, filters for the same dimension are grouped together and ORed.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; }

            /// <summary>Required. The list of dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> Dimensions { get; set; }

            /// <summary>Required. The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; }
        }

        /// <summary>The report's email delivery settings.</summary>
        public class DeliveryData
        {
            /// <summary>Whether the report should be emailed to the report owner.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("emailOwner")]
            public virtual System.Nullable<bool> EmailOwner { get; set; }

            /// <summary>The type of delivery for the owner to receive, if enabled.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("emailOwnerDeliveryType")]
            public virtual string EmailOwnerDeliveryType { get; set; }

            /// <summary>The message to be sent with each email.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("message")]
            public virtual string Message { get; set; }

            /// <summary>The list of recipients to which to email the report.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("recipients")]
            public virtual System.Collections.Generic.IList<Recipient> Recipients { get; set; }
        }

        /// <summary>The report criteria for a report of type "FLOODLIGHT".</summary>
        public class FloodlightCriteriaData
        {
            /// <summary>The list of custom rich media events to include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual System.Collections.Generic.IList<DimensionValue> CustomRichMediaEvents { get; set; }

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; }

            /// <summary>
            /// The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed,
            /// filters for the same dimension are grouped together and ORed.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; }

            /// <summary>The list of dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> Dimensions { get; set; }

            /// <summary>
            /// The floodlight ID for which to show data in this report. All advertisers associated with that ID will
            /// automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigId")]
            public virtual DimensionValue FloodlightConfigId { get; set; }

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; }

            /// <summary>The properties of the report.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reportProperties")]
            public virtual ReportPropertiesData ReportProperties { get; set; }

            /// <summary>The properties of the report.</summary>
            public class ReportPropertiesData
            {
                /// <summary>Include conversions that have no cookie, but do have an exposure path.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeAttributedIPConversions")]
                public virtual System.Nullable<bool> IncludeAttributedIPConversions { get; set; }

                /// <summary>
                /// Include conversions of users with a DoubleClick cookie but without an exposure. That means the user
                /// did not click or see an ad from the advertiser within the Floodlight group, or that the interaction
                /// happened outside the lookback window.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeUnattributedCookieConversions")]
                public virtual System.Nullable<bool> IncludeUnattributedCookieConversions { get; set; }

                /// <summary>
                /// Include conversions that have no associated cookies and no exposures. It’s therefore impossible to
                /// know how the user was exposed to your ads during the lookback window prior to a conversion.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeUnattributedIPConversions")]
                public virtual System.Nullable<bool> IncludeUnattributedIPConversions { get; set; }
            }
        }

        /// <summary>The report criteria for a report of type "PATH_TO_CONVERSION".</summary>
        public class PathToConversionCriteriaData
        {
            /// <summary>The list of 'dfa:activity' values to filter on.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("activityFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> ActivityFilters { get; set; }

            /// <summary>The list of conversion dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("conversionDimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> ConversionDimensions { get; set; }

            /// <summary>The list of custom floodlight variables the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customFloodlightVariables")]
            public virtual System.Collections.Generic.IList<SortedDimension> CustomFloodlightVariables { get; set; }

            /// <summary>The list of custom rich media events to include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual System.Collections.Generic.IList<DimensionValue> CustomRichMediaEvents { get; set; }

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; }

            /// <summary>
            /// The floodlight ID for which to show data in this report. All advertisers associated with that ID will
            /// automatically be added. The dimension of the value needs to be 'dfa:floodlightConfigId'.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("floodlightConfigId")]
            public virtual DimensionValue FloodlightConfigId { get; set; }

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; }

            /// <summary>The list of per interaction dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("perInteractionDimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> PerInteractionDimensions { get; set; }

            /// <summary>The properties of the report.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reportProperties")]
            public virtual ReportPropertiesData ReportProperties { get; set; }

            /// <summary>The properties of the report.</summary>
            public class ReportPropertiesData
            {
                /// <summary>
                /// CM360 checks to see if a click interaction occurred within the specified period of time before a
                /// conversion. By default the value is pulled from Floodlight or you can manually enter a custom value.
                /// Valid values: 1-90.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("clicksLookbackWindow")]
                public virtual System.Nullable<int> ClicksLookbackWindow { get; set; }

                /// <summary>
                /// CM360 checks to see if an impression interaction occurred within the specified period of time before
                /// a conversion. By default the value is pulled from Floodlight or you can manually enter a custom
                /// value. Valid values: 1-90.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("impressionsLookbackWindow")]
                public virtual System.Nullable<int> ImpressionsLookbackWindow { get; set; }

                /// <summary>Deprecated: has no effect.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeAttributedIPConversions")]
                public virtual System.Nullable<bool> IncludeAttributedIPConversions { get; set; }

                /// <summary>
                /// Include conversions of users with a DoubleClick cookie but without an exposure. That means the user
                /// did not click or see an ad from the advertiser within the Floodlight group, or that the interaction
                /// happened outside the lookback window.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeUnattributedCookieConversions")]
                public virtual System.Nullable<bool> IncludeUnattributedCookieConversions { get; set; }

                /// <summary>
                /// Include conversions that have no associated cookies and no exposures. It’s therefore impossible to
                /// know how the user was exposed to your ads during the lookback window prior to a conversion.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("includeUnattributedIPConversions")]
                public virtual System.Nullable<bool> IncludeUnattributedIPConversions { get; set; }

                /// <summary>
                /// The maximum number of click interactions to include in the report. Advertisers currently paying for
                /// E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is
                /// paying for E2C, you can have up to 5 total exposures per report.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("maximumClickInteractions")]
                public virtual System.Nullable<int> MaximumClickInteractions { get; set; }

                /// <summary>
                /// The maximum number of click interactions to include in the report. Advertisers currently paying for
                /// E2C reports get up to 200 (100 clicks, 100 impressions). If another advertiser in your network is
                /// paying for E2C, you can have up to 5 total exposures per report.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("maximumImpressionInteractions")]
                public virtual System.Nullable<int> MaximumImpressionInteractions { get; set; }

                /// <summary>
                /// The maximum amount of time that can take place between interactions (clicks or impressions) by the
                /// same user. Valid values: 1-90.
                /// </summary>
                [Newtonsoft.Json.JsonPropertyAttribute("maximumInteractionGap")]
                public virtual System.Nullable<int> MaximumInteractionGap { get; set; }

                /// <summary>Enable pivoting on interaction path.</summary>
                [Newtonsoft.Json.JsonPropertyAttribute("pivotOnInteractionPath")]
                public virtual System.Nullable<bool> PivotOnInteractionPath { get; set; }
            }
        }

        /// <summary>The report criteria for a report of type "REACH".</summary>
        public class ReachCriteriaData
        {
            /// <summary>Activity group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("activities")]
            public virtual Activities Activities { get; set; }

            /// <summary>Custom Rich Media Events group.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("customRichMediaEvents")]
            public virtual CustomRichMediaEvents CustomRichMediaEvents { get; set; }

            /// <summary>The date range this report should be run for.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dateRange")]
            public virtual DateRange DateRange { get; set; }

            /// <summary>
            /// The list of filters on which dimensions are filtered. Filters for different dimensions are ANDed,
            /// filters for the same dimension are grouped together and ORed.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
            public virtual System.Collections.Generic.IList<DimensionValue> DimensionFilters { get; set; }

            /// <summary>The list of dimensions the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
            public virtual System.Collections.Generic.IList<SortedDimension> Dimensions { get; set; }

            /// <summary>
            /// Whether to enable all reach dimension combinations in the report. Defaults to false. If enabled, the
            /// date range of the report should be within the last 42 days.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("enableAllDimensionCombinations")]
            public virtual System.Nullable<bool> EnableAllDimensionCombinations { get; set; }

            /// <summary>The list of names of metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("metricNames")]
            public virtual System.Collections.Generic.IList<string> MetricNames { get; set; }

            /// <summary>The list of names of Reach By Frequency metrics the report should include.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reachByFrequencyMetricNames")]
            public virtual System.Collections.Generic.IList<string> ReachByFrequencyMetricNames { get; set; }
        }

        /// <summary>
        /// The report's schedule. Can only be set if the report's 'dateRange' is a relative date range and the relative
        /// date range is not "TODAY".
        /// </summary>
        public class ScheduleData
        {
            /// <summary>Whether the schedule is active or not. Must be set to either true or false.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("active")]
            public virtual System.Nullable<bool> Active { get; set; }

            /// <summary>
            /// Defines every how many days, weeks or months the report should be run. Needs to be set when "repeats" is
            /// either "DAILY", "WEEKLY" or "MONTHLY".
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("every")]
            public virtual System.Nullable<int> Every { get; set; }

            [Newtonsoft.Json.JsonPropertyAttribute("expirationDate")]
            public virtual string ExpirationDate { get; set; }

            /// <summary>
            /// The interval for which the report is repeated. Note: - "DAILY" also requires field "every" to be set. -
            /// "WEEKLY" also requires fields "every" and "repeatsOnWeekDays" to be set. - "MONTHLY" also requires
            /// fields "every" and "runsOnDayOfMonth" to be set.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("repeats")]
            public virtual string Repeats { get; set; }

            /// <summary>List of week days "WEEKLY" on which scheduled reports should run.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("repeatsOnWeekDays")]
            public virtual System.Collections.Generic.IList<string> RepeatsOnWeekDays { get; set; }

            /// <summary>
            /// Enum to define for "MONTHLY" scheduled reports whether reports should be repeated on the same day of the
            /// month as "startDate" or the same day of the week of the month. Example: If 'startDate' is Monday, April
            /// 2nd 2012 (2012-04-02), "DAY_OF_MONTH" would run subsequent reports on the 2nd of every Month, and
            /// "WEEK_OF_MONTH" would run subsequent reports on the first Monday of the month.
            /// </summary>
            [Newtonsoft.Json.JsonPropertyAttribute("runsOnDayOfMonth")]
            public virtual string RunsOnDayOfMonth { get; set; }

            [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
            public virtual string StartDate { get; set; }

            /// <summary>The timezone when the report will run.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("timezone")]
            public virtual string Timezone { get; set; }
        }
    }

    /// <summary>Represents fields that are compatible to be selected for a report of type "STANDARD".</summary>
    public class ReportCompatibleFields : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Dimensions which are compatible to be selected in the "dimensionFilters" section of the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensionFilters")]
        public virtual System.Collections.Generic.IList<Dimension> DimensionFilters { get; set; }

        /// <summary>Dimensions which are compatible to be selected in the "dimensions" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dimensions")]
        public virtual System.Collections.Generic.IList<Dimension> Dimensions { get; set; }

        /// <summary>The kind of resource this is, in this case dfareporting#reportCompatibleFields.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Metrics which are compatible to be selected in the "metricNames" section of the report.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metrics")]
        public virtual System.Collections.Generic.IList<Metric> Metrics { get; set; }

        /// <summary>
        /// Metrics which are compatible to be selected as activity metrics to pivot on in the "activities" section of
        /// the report.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pivotedActivityMetrics")]
        public virtual System.Collections.Generic.IList<Metric> PivotedActivityMetrics { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the list of reports.</summary>
    public class ReportList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The eTag of this response for caching purposes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>The reports returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Report> Items { get; set; }

        /// <summary>The kind of list this is, in this case dfareporting#reportList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Continuation token used to page through reports. To retrieve the next page of results, set the next
        /// request's "pageToken" to the value of this field. The page token is only valid for a limited amount of time
        /// and should not be persisted.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }
    }

    /// <summary>Reporting Configuration</summary>
    public class ReportsConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Whether the exposure to conversion report is enabled. This report shows detailed pathway information on up
        /// to 10 of the most recent ad exposures seen by a user before converting.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exposureToConversionEnabled")]
        public virtual System.Nullable<bool> ExposureToConversionEnabled { get; set; }

        /// <summary>Default lookback windows for new advertisers in this account.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lookbackConfiguration")]
        public virtual LookbackConfiguration LookbackConfiguration { get; set; }

        /// <summary>
        /// Report generation time zone ID of this account. This is a required field that cannot be changed on update.
        /// Acceptable values are: - "1" for "America/New_York" - "2" for "Europe/London" - "3" for "Europe/Paris" - "4"
        /// for "Africa/Johannesburg" - "5" for "Asia/Jerusalem" - "6" for "Asia/Shanghai" - "7" for "Asia/Hong_Kong" -
        /// "8" for "Asia/Tokyo" - "9" for "Australia/Sydney" - "10" for "Asia/Dubai" - "11" for "America/Los_Angeles" -
        /// "12" for "Pacific/Auckland" - "13" for "America/Sao_Paulo" - "16" for "America/Asuncion" - "17" for
        /// "America/Chicago" - "18" for "America/Denver" - "19" for "America/St_Johns" - "20" for "Asia/Dhaka" - "21"
        /// for "Asia/Jakarta" - "22" for "Asia/Kabul" - "23" for "Asia/Karachi" - "24" for "Asia/Calcutta" - "25" for
        /// "Asia/Pyongyang" - "26" for "Asia/Rangoon" - "27" for "Atlantic/Cape_Verde" - "28" for
        /// "Atlantic/South_Georgia" - "29" for "Australia/Adelaide" - "30" for "Australia/Lord_Howe" - "31" for
        /// "Europe/Moscow" - "32" for "Pacific/Kiritimati" - "35" for "Pacific/Norfolk" - "36" for "Pacific/Tongatapu"
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportGenerationTimeZoneId")]
        public virtual System.Nullable<long> ReportGenerationTimeZoneId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Rich Media Exit Override.</summary>
    public class RichMediaExitOverride : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Click-through URL of this rich media exit override. Applicable if the enabled field is set to true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickThroughUrl")]
        public virtual ClickThroughUrl ClickThroughUrl { get; set; }

        /// <summary>Whether to use the clickThroughUrl. If false, the creative-level exit will be used.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabled")]
        public virtual System.Nullable<bool> Enabled { get; set; }

        /// <summary>ID for the override to refer to a specific exit in the creative.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("exitId")]
        public virtual System.Nullable<long> ExitId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A rule associates an asset with a targeting template for asset-level targeting. Applicable to INSTREAM_VIDEO
    /// creatives.
    /// </summary>
    public class Rule : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// A creativeAssets[].id. This should refer to one of the parent assets in this creative. This is a required
        /// field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assetId")]
        public virtual System.Nullable<long> AssetId { get; set; }

        /// <summary>A user-friendly name for this rule. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// A targeting template ID. The targeting from the targeting template will be used to determine whether this
        /// asset should be served. This is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetingTemplateId")]
        public virtual System.Nullable<long> TargetingTemplateId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a site.</summary>
    public class Site : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this site. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// Optional. Ad serving platform ID to identify the ad serving platform used by the site. Measurement partners
        /// can use this field to add ad-server specific macros. If set, this value acts as the default during placement
        /// creation. Possible values are: * `1`, Adelphic * `2`, Adform * `3`, Adobe * `4`, Amobee * `5`, Basis
        /// (Centro) * `6`, Beeswax * `7`, Amazon * `8`, DV360 (DBM) * `9`, Innovid * `10`, MediaMath * `11`, Roku
        /// OneView DSP * `12`, TabMo Hawk * `13`, The Trade Desk * `14`, Xandr Invest DSP * `15`, Yahoo DSP * `16`,
        /// Zeta Global * `17`, Scaleout * `18`, Bidtellect * `19`, Unicorn * `20`, Teads * `21`, Quantcast * `22`,
        /// Cognitiv
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adServingPlatformId")]
        public virtual System.Nullable<long> AdServingPlatformId { get; set; }

        /// <summary>Whether this site is approved.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("approved")]
        public virtual System.Nullable<bool> Approved { get; set; }

        /// <summary>
        /// Directory site associated with this site. This is a required field that is read-only after insertion.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteId")]
        public virtual System.Nullable<long> DirectorySiteId { get; set; }

        /// <summary>
        /// Dimension value for the ID of the directory site. This is a read-only, auto-generated field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("directorySiteIdDimensionValue")]
        public virtual DimensionValue DirectorySiteIdDimensionValue { get; set; }

        /// <summary>ID of this site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Dimension value for the ID of this site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("idDimensionValue")]
        public virtual DimensionValue IdDimensionValue { get; set; }

        /// <summary>Key name of this site. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyName")]
        public virtual string KeyName { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#site".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this site.This is a required field. Must be less than 128 characters long. If this site is under a
        /// subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a top-level
        /// site, and the name must be unique among top-level sites of the same account.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Site contacts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteContacts")]
        public virtual System.Collections.Generic.IList<SiteContact> SiteContacts { get; set; }

        /// <summary>Site-wide settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("siteSettings")]
        public virtual SiteSettings SiteSettings { get; set; }

        /// <summary>Subaccount ID of this site. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>
        /// Default video settings for new placements created under this site. This value will be used to populate the
        /// placements.videoSettings field, when no value is specified for the new placement.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoSettings")]
        public virtual SiteVideoSettings VideoSettings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Companion Settings</summary>
    public class SiteCompanionSetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether companions are disabled for this site template.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionsDisabled")]
        public virtual System.Nullable<bool> CompanionsDisabled { get; set; }

        /// <summary>
        /// Allowlist of companion sizes to be served via this site template. Set this list to null or empty to serve
        /// all companion sizes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledSizes")]
        public virtual System.Collections.Generic.IList<Size> EnabledSizes { get; set; }

        /// <summary>Whether to serve only static images as companions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageOnly")]
        public virtual System.Nullable<bool> ImageOnly { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#siteCompanionSetting".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Site Contact</summary>
    public class SiteContact : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Address of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; }

        /// <summary>Site contact type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contactType")]
        public virtual string ContactType { get; set; }

        /// <summary>Email address of this site contact. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual string Email { get; set; }

        /// <summary>First name of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("firstName")]
        public virtual string FirstName { get; set; }

        /// <summary>ID of this site contact. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Last name of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lastName")]
        public virtual string LastName { get; set; }

        /// <summary>Primary phone number of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("phone")]
        public virtual string Phone { get; set; }

        /// <summary>Title or designation of this site contact.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Site Settings</summary>
    public class SiteSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether active view creatives are disabled for this site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("activeViewOptOut")]
        public virtual System.Nullable<bool> ActiveViewOptOut { get; set; }

        /// <summary>
        /// Whether this site opts out of ad blocking. When true, ad blocking is disabled for all placements under the
        /// site, regardless of the individual placement settings. When false, the campaign and placement settings take
        /// effect.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adBlockingOptOut")]
        public virtual System.Nullable<bool> AdBlockingOptOut { get; set; }

        /// <summary>Whether new cookies are disabled for this site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disableNewCookie")]
        public virtual System.Nullable<bool> DisableNewCookie { get; set; }

        /// <summary>Configuration settings for dynamic and image floodlight tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tagSetting")]
        public virtual TagSetting TagSetting { get; set; }

        /// <summary>
        /// Whether Verification and ActiveView for in-stream video creatives are disabled by default for new placements
        /// created under this site. This value will be used to populate the placement.videoActiveViewOptOut field, when
        /// no value is specified for the new placement.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoActiveViewOptOutTemplate")]
        public virtual System.Nullable<bool> VideoActiveViewOptOutTemplate { get; set; }

        /// <summary>
        /// Default VPAID adapter setting for new placements created under this site. This value will be used to
        /// populate the placements.vpaidAdapterChoice field, when no value is specified for the new placement. Controls
        /// which VPAID format the measurement adapter will use for in-stream video creatives assigned to the placement.
        /// The publisher's specifications will typically determine this setting. For VPAID creatives, the adapter
        /// format will match the VPAID format (HTML5 VPAID creatives use the HTML5 adapter). *Note:* Flash is no longer
        /// supported. This field now defaults to HTML5 when the following values are provided: FLASH, BOTH.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("vpaidAdapterChoiceTemplate")]
        public virtual string VpaidAdapterChoiceTemplate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Skippable Settings</summary>
    public class SiteSkippableSetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#siteSkippableSetting".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Amount of time to play videos served to this site template before counting a view. Applicable when skippable
        /// is true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progressOffset")]
        public virtual VideoOffset ProgressOffset { get; set; }

        /// <summary>
        /// Amount of time to play videos served to this site before the skip button should appear. Applicable when
        /// skippable is true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skipOffset")]
        public virtual VideoOffset SkipOffset { get; set; }

        /// <summary>
        /// Whether the user can skip creatives served to this site. This will act as default for new placements created
        /// under this site.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skippable")]
        public virtual System.Nullable<bool> Skippable { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Transcode Settings</summary>
    public class SiteTranscodeSetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Allowlist of video formats to be served to this site template. Set this list to null or empty to serve all
        /// video formats.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledVideoFormats")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> EnabledVideoFormats { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#siteTranscodeSetting".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Video Settings</summary>
    public class SiteVideoSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Settings for the companion creatives of video creatives served to this site.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionSettings")]
        public virtual SiteCompanionSetting CompanionSettings { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#siteVideoSettings".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Whether OBA icons are enabled for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("obaEnabled")]
        public virtual System.Nullable<bool> ObaEnabled { get; set; }

        /// <summary>
        /// Settings for the OBA icon of video creatives served to this site. This will act as default for new
        /// placements created under this site.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("obaSettings")]
        public virtual ObaIcon ObaSettings { get; set; }

        /// <summary>
        /// Orientation of a site template used for video. This will act as default for new placements created under
        /// this site.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orientation")]
        public virtual string Orientation { get; set; }

        /// <summary>
        /// Publisher specification ID used to identify site-associated publisher requirements and automatically
        /// populate transcode settings. If publisher specification ID is specified, it will take precedence over
        /// transcode settings. Possible values are: * `1`, Hulu * `2`, NBC * `3`, CBS * `4`, CBS Desktop * `5`,
        /// Discovery * `6`, VEVO HD * `7`, VEVO Vertical * `8`, Fox * `9`, CW Network * `10`, Disney * `11`, IGN *
        /// `12`, NFL.com * `13`, Turner Broadcasting * `14`, Tubi on Fox * `15`, Hearst Corporation * `16`, Twitch
        /// Desktop * `17`, ABC * `18`, Univision * `19`, MLB.com * `20`, MLB.com Mobile * `21`, MLB.com OTT * `22`,
        /// Polsat * `23`, TVN * `24`, Mediaset * `25`, Antena 3 * `26`, Mediamond * `27`, Sky Italia * `28`, Tubi on
        /// CBS * `29`, Spotify * `30`, Paramount * `31`, Max
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherSpecificationId")]
        public virtual System.Nullable<long> PublisherSpecificationId { get; set; }

        /// <summary>
        /// Settings for the skippability of video creatives served to this site. This will act as default for new
        /// placements created under this site.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skippableSettings")]
        public virtual SiteSkippableSetting SkippableSettings { get; set; }

        /// <summary>
        /// Settings for the transcodes of video creatives served to this site. This will act as default for new
        /// placements created under this site.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transcodeSettings")]
        public virtual SiteTranscodeSetting TranscodeSettings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Site List Response</summary>
    public class SitesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#sitesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Site collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sites")]
        public virtual System.Collections.Generic.IList<Site> Sites { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents the dimensions of ads, placements, creatives, or creative assets.</summary>
    public class Size : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Height of this size. Acceptable values are 0 to 32767, inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("height")]
        public virtual System.Nullable<int> Height { get; set; }

        /// <summary>IAB standard size. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iab")]
        public virtual System.Nullable<bool> Iab { get; set; }

        /// <summary>ID of this size. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Identifies what kind of resource this is. Value: the fixed string "dfareporting#size".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Width of this size. Acceptable values are 0 to 32767, inclusive.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("width")]
        public virtual System.Nullable<int> Width { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Size List Response</summary>
    public class SizesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#sizesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Size collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sizes")]
        public virtual System.Collections.Generic.IList<Size> Sizes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Skippable Settings</summary>
    public class SkippableSetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#skippableSetting".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Amount of time to play videos served to this placement before counting a view. Applicable when skippable is
        /// true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("progressOffset")]
        public virtual VideoOffset ProgressOffset { get; set; }

        /// <summary>
        /// Amount of time to play videos served to this placement before the skip button should appear. Applicable when
        /// skippable is true.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skipOffset")]
        public virtual VideoOffset SkipOffset { get; set; }

        /// <summary>Whether the user can skip creatives served to this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skippable")]
        public virtual System.Nullable<bool> Skippable { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a sorted dimension.</summary>
    public class SortedDimension : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The kind of resource this is, in this case dfareporting#sortedDimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The name of the dimension.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>An optional sort order for the dimension column.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("sortOrder")]
        public virtual string SortOrder { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a Campaign Manager subaccount.</summary>
    public class Subaccount : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// ID of the account that contains this subaccount. This is a read-only field that can be left blank.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>IDs of the available user role permissions for this subaccount.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availablePermissionIds")]
        public virtual System.Collections.Generic.IList<System.Nullable<long>> AvailablePermissionIds { get; set; }

        /// <summary>ID of this subaccount. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#subaccount".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this subaccount. This is a required field. Must be less than 128 characters long and be unique among
        /// subaccounts of the same account.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Subaccount List Response</summary>
    public class SubaccountsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#subaccountsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Subaccount collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccounts")]
        public virtual System.Collections.Generic.IList<Subaccount> Subaccounts { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Placement Tag Data</summary>
    public class TagData : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Ad associated with this placement tag. Applicable only when format is PLACEMENT_TAG_TRACKING.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adId")]
        public virtual System.Nullable<long> AdId { get; set; }

        /// <summary>Tag string to record a click.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("clickTag")]
        public virtual string ClickTag { get; set; }

        /// <summary>
        /// Creative associated with this placement tag. Applicable only when format is PLACEMENT_TAG_TRACKING.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("creativeId")]
        public virtual System.Nullable<long> CreativeId { get; set; }

        /// <summary>TagData tag format of this tag.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("format")]
        public virtual string Format { get; set; }

        /// <summary>Tag string for serving an ad.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressionTag")]
        public virtual string ImpressionTag { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Tag Settings</summary>
    public class TagSetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Additional key-values to be included in tags. Each key-value pair must be of the form key=value, and pairs
        /// must be separated by a semicolon (;). Keys and values must not contain commas. For example, id=2;color=red
        /// is a valid value for this field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("additionalKeyValues")]
        public virtual string AdditionalKeyValues { get; set; }

        /// <summary>
        /// Whether static landing page URLs should be included in the tags. New placements will default to the value
        /// set on their site.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeClickThroughUrls")]
        public virtual System.Nullable<bool> IncludeClickThroughUrls { get; set; }

        /// <summary>Whether click-tracking string should be included in the tags.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeClickTracking")]
        public virtual System.Nullable<bool> IncludeClickTracking { get; set; }

        /// <summary>
        /// Optional. Indicates that the unescapedlpurl macro should be included in the tag for the static landing page.
        /// New placements will default to the value set on their site.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("includeUnescapedlpurlMacro")]
        public virtual System.Nullable<bool> IncludeUnescapedlpurlMacro { get; set; }

        /// <summary>
        /// Option specifying how keywords are embedded in ad tags. This setting can be used to specify whether keyword
        /// placeholders are inserted in placement tags for this site. Publishers can then add keywords to those
        /// placeholders.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keywordOption")]
        public virtual string KeywordOption { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Dynamic and Image Tag Settings.</summary>
    public class TagSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Whether dynamic floodlight tags are enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dynamicTagEnabled")]
        public virtual System.Nullable<bool> DynamicTagEnabled { get; set; }

        /// <summary>Whether image tags are enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("imageTagEnabled")]
        public virtual System.Nullable<bool> ImageTagEnabled { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Target Window.</summary>
    public class TargetWindow : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>User-entered value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customHtml")]
        public virtual string CustomHtml { get; set; }

        /// <summary>Type of browser window for which the backup image of the flash creative can be displayed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetWindowOption")]
        public virtual string TargetWindowOption { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains properties of a targetable remarketing list. Remarketing enables you to create lists of users who have
    /// performed specific actions on a site, then target ads to members of those lists. This resource is a read-only
    /// view of a remarketing list to be used to facilitate targeting ads to specific lists. Remarketing lists that are
    /// owned by your advertisers and those that are shared to your advertisers or account are accessible via this
    /// resource. To manage remarketing lists that are owned by your advertisers, use the RemarketingLists resource.
    /// </summary>
    public class TargetableRemarketingList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Account ID of this remarketing list. This is a read-only, auto-generated field that is only returned in GET
        /// requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>Whether this targetable remarketing list is active.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("active")]
        public virtual System.Nullable<bool> Active { get; set; }

        /// <summary>Dimension value for the advertiser ID that owns this targetable remarketing list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Targetable remarketing list description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description { get; set; }

        /// <summary>Targetable remarketing list ID.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#targetableRemarketingList".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Number of days that a user should remain in the targetable remarketing list without an impression.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("lifeSpan")]
        public virtual System.Nullable<long> LifeSpan { get; set; }

        /// <summary>Number of users currently in the list. This is a read-only field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSize")]
        public virtual System.Nullable<long> ListSize { get; set; }

        /// <summary>Product from which this targetable remarketing list was originated.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listSource")]
        public virtual string ListSource { get; set; }

        /// <summary>Name of the targetable remarketing list. Is no greater than 128 characters long.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Subaccount ID of this remarketing list. This is a read-only, auto-generated field that is only returned in
        /// GET requests.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Targetable remarketing list response</summary>
    public class TargetableRemarketingListsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#targetableRemarketingListsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Targetable remarketing list collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetableRemarketingLists")]
        public virtual System.Collections.Generic.IList<TargetableRemarketingList> TargetableRemarketingLists { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// Contains properties of a targeting template. A targeting template encapsulates targeting information which can
    /// be reused across multiple ads.
    /// </summary>
    public class TargetingTemplate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Account ID of this targeting template. This field, if left unset, will be auto-generated on insert and is
        /// read-only after insert.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// Advertiser ID of this targeting template. This is a required field on insert and is read-only after insert.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserId")]
        public virtual System.Nullable<long> AdvertiserId { get; set; }

        /// <summary>Dimension value for the ID of the advertiser. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("advertiserIdDimensionValue")]
        public virtual DimensionValue AdvertiserIdDimensionValue { get; set; }

        /// <summary>Time and day targeting criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dayPartTargeting")]
        public virtual DayPartTargeting DayPartTargeting { get; set; }

        /// <summary>Geographical targeting criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("geoTargeting")]
        public virtual GeoTargeting GeoTargeting { get; set; }

        /// <summary>ID of this targeting template. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>Key-value targeting criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyValueTargetingExpression")]
        public virtual KeyValueTargetingExpression KeyValueTargetingExpression { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#targetingTemplate".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Language targeting criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("languageTargeting")]
        public virtual LanguageTargeting LanguageTargeting { get; set; }

        /// <summary>Remarketing list targeting criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("listTargetingExpression")]
        public virtual ListTargetingExpression ListTargetingExpression { get; set; }

        /// <summary>
        /// Name of this targeting template. This field is required. It must be less than 256 characters long and unique
        /// within an advertiser.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// Subaccount ID of this targeting template. This field, if left unset, will be auto-generated on insert and is
        /// read-only after insert.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>Technology platform targeting criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("technologyTargeting")]
        public virtual TechnologyTargeting TechnologyTargeting { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Targeting Template List Response</summary>
    public class TargetingTemplatesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#targetingTemplatesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>Targeting template collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetingTemplates")]
        public virtual System.Collections.Generic.IList<TargetingTemplate> TargetingTemplates { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Technology Targeting.</summary>
    public class TechnologyTargeting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Browsers that this ad targets. For each browser either set browserVersionId or dartId along with the version
        /// numbers. If both are specified, only browserVersionId will be used. The other fields are populated
        /// automatically when the ad is inserted or updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("browsers")]
        public virtual System.Collections.Generic.IList<Browser> Browsers { get; set; }

        /// <summary>
        /// Connection types that this ad targets. For each connection type only id is required. The other fields are
        /// populated automatically when the ad is inserted or updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("connectionTypes")]
        public virtual System.Collections.Generic.IList<ConnectionType> ConnectionTypes { get; set; }

        /// <summary>
        /// Mobile carriers that this ad targets. For each mobile carrier only id is required, and the other fields are
        /// populated automatically when the ad is inserted or updated. If targeting a mobile carrier, do not set
        /// targeting for any zip codes.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mobileCarriers")]
        public virtual System.Collections.Generic.IList<MobileCarrier> MobileCarriers { get; set; }

        /// <summary>
        /// Operating system versions that this ad targets. To target all versions, use operatingSystems. For each
        /// operating system version, only id is required. The other fields are populated automatically when the ad is
        /// inserted or updated. If targeting an operating system version, do not set targeting for the corresponding
        /// operating system in operatingSystems.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystemVersions")]
        public virtual System.Collections.Generic.IList<OperatingSystemVersion> OperatingSystemVersions { get; set; }

        /// <summary>
        /// Operating systems that this ad targets. To target specific versions, use operatingSystemVersions. For each
        /// operating system only dartId is required. The other fields are populated automatically when the ad is
        /// inserted or updated. If targeting an operating system, do not set targeting for operating system versions
        /// for the same operating system.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("operatingSystems")]
        public virtual System.Collections.Generic.IList<OperatingSystem> OperatingSystems { get; set; }

        /// <summary>
        /// Platform types that this ad targets. For example, desktop, mobile, or tablet. For each platform type, only
        /// id is required, and the other fields are populated automatically when the ad is inserted or updated.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platformTypes")]
        public virtual System.Collections.Generic.IList<PlatformType> PlatformTypes { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Third Party Authentication Token</summary>
    public class ThirdPartyAuthenticationToken : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Name of the third-party authentication token.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Value of the third-party authentication token. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Third-party Tracking URL.</summary>
    public class ThirdPartyTrackingUrl : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Third-party URL type for in-stream video and in-stream audio creatives.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thirdPartyUrlType")]
        public virtual string ThirdPartyUrlType { get; set; }

        /// <summary>URL for the specified third-party URL type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Transcode Settings</summary>
    public class TranscodeSetting : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Allowlist of video formats to be served to this placement. Set this list to null or empty to serve all video
        /// formats.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enabledVideoFormats")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> EnabledVideoFormats { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#transcodeSetting".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>TvCampaignDetail contains data from a TV campaign for specific start dates and date windows.</summary>
    public class TvCampaignDetail : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this TV campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#tvCampaignSummary".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The timepoints of the TV campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timepoints")]
        public virtual System.Collections.Generic.IList<TvCampaignTimepoint> Timepoints { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Response message for TvCampaignSummariesService.List.</summary>
    public class TvCampaignSummariesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#tvCampaignSummariesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>List of TV campaign summaries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tvCampaignSummaries")]
        public virtual System.Collections.Generic.IList<TvCampaignSummary> TvCampaignSummaries { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>TvCampaignSummary contains aggregate data from a TV campaign.</summary>
    public class TvCampaignSummary : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The end date of the TV campaign, inclusive. A string of the format: "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endDate")]
        public virtual string EndDate { get; set; }

        /// <summary>GRP of this TV campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("grp")]
        public virtual System.Nullable<long> Grp { get; set; }

        /// <summary>ID of this TV campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; }

        /// <summary>Impressions across the entire TV campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("impressions")]
        public virtual System.Nullable<long> Impressions { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#tvCampaignSummary".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Identifier. Name of this TV campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>Spend across the entire TV campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spend")]
        public virtual System.Nullable<double> Spend { get; set; }

        /// <summary>The start date of the TV campaign, inclusive. A string of the format: "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>"CampaignComponentType" of this TV campaign.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A single data point for TvCampaignDetail, which holds information about the TV campaign for a specific start
    /// date and date window.
    /// </summary>
    public class TvCampaignTimepoint : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The date window of the timepoint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dateWindow")]
        public virtual string DateWindow { get; set; }

        /// <summary>The spend within the time range of the timepoint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spend")]
        public virtual System.Nullable<double> Spend { get; set; }

        /// <summary>The start date of the timepoint. A string in the format of "yyyy-MM-dd".</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startDate")]
        public virtual string StartDate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A Universal Ad ID as per the VAST 4.0 spec. Applicable to the following creative types: INSTREAM_AUDIO,
    /// INSTREAM_VIDEO and VPAID.
    /// </summary>
    public class UniversalAdId : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Registry used for the Ad ID value.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("registry")]
        public virtual string Registry { get; set; }

        /// <summary>
        /// ID value for this creative. Only alphanumeric characters and the following symbols are valid: "_/\-".
        /// Maximum length is 64 characters. Read only when registry is DCM.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>User Defined Variable configuration.</summary>
    public class UserDefinedVariableConfiguration : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Data type for the variable. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dataType")]
        public virtual string DataType { get; set; }

        /// <summary>
        /// User-friendly name for the variable which will appear in reports. This is a required field, must be less
        /// than 64 characters long, and cannot contain the following characters: ""&amp;lt;&amp;gt;".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("reportName")]
        public virtual string ReportName { get; set; }

        /// <summary>Variable name in the tag. This is a required field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("variableType")]
        public virtual string VariableType { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>User identifying information. Exactly one type of identifier must be specified.</summary>
    public class UserIdentifier : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Address information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("addressInfo")]
        public virtual OfflineUserAddressInfo AddressInfo { get; set; }

        /// <summary>Hashed email address using SHA-256 hash function after normalization.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hashedEmail")]
        public virtual string HashedEmail { get; set; }

        /// <summary>Hashed phone number using SHA-256 hash function after normalization (E164 standard).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hashedPhoneNumber")]
        public virtual string HashedPhoneNumber { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>
    /// A UserProfile resource lets you list all DFA user profiles that are associated with a Google user account. The
    /// profile_id needs to be specified in other API requests.
    /// </summary>
    public class UserProfile : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The account ID to which this profile belongs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>The account name this profile belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountName")]
        public virtual string AccountName { get; set; }

        /// <summary>Etag of this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#userProfile".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The unique ID of the user profile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("profileId")]
        public virtual System.Nullable<long> ProfileId { get; set; }

        /// <summary>The sub account ID this profile belongs to if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountId")]
        public virtual System.Nullable<long> SubAccountId { get; set; }

        /// <summary>The sub account name this profile belongs to if applicable.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subAccountName")]
        public virtual string SubAccountName { get; set; }

        /// <summary>The user name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userName")]
        public virtual string UserName { get; set; }
    }

    /// <summary>Represents the list of user profiles.</summary>
    public class UserProfileList : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Etag of this resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag { get; set; }

        /// <summary>The user profiles returned in this response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<UserProfile> Items { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#userProfileList".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }
    }

    /// <summary>Contains properties of auser role, which is used to manage user access.</summary>
    public class UserRole : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Account ID of this user role. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("accountId")]
        public virtual System.Nullable<long> AccountId { get; set; }

        /// <summary>
        /// Whether this is a default user role. Default user roles are created by the system for the account/subaccount
        /// and cannot be modified or deleted. Each default user role comes with a basic set of preassigned permissions.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("defaultUserRole")]
        public virtual System.Nullable<bool> DefaultUserRole { get; set; }

        /// <summary>ID of this user role. This is a read-only, auto-generated field.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRole".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>
        /// Name of this user role. This is a required field. Must be less than 256 characters long. If this user role
        /// is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this user role
        /// is a top-level user role, and the name must be unique among top-level user roles of the same account.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>
        /// ID of the user role that this user role is based on or copied from. This is a required field.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentUserRoleId")]
        public virtual System.Nullable<long> ParentUserRoleId { get; set; }

        /// <summary>List of permissions associated with this user role.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissions")]
        public virtual System.Collections.Generic.IList<UserRolePermission> Permissions { get; set; }

        /// <summary>Subaccount ID of this user role. This is a read-only field that can be left blank.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaccountId")]
        public virtual System.Nullable<long> SubaccountId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains properties of a user role permission.</summary>
    public class UserRolePermission : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Levels of availability for a user role permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availability")]
        public virtual string Availability { get; set; }

        /// <summary>ID of this user role permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolePermission".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this user role permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>ID of the permission group that this user role permission belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("permissionGroupId")]
        public virtual System.Nullable<long> PermissionGroupId { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Represents a grouping of related user role permissions.</summary>
    public class UserRolePermissionGroup : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>ID of this user role permission.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<long> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolePermissionGroup".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Name of this user role permission group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>User Role Permission Group List Response</summary>
    public class UserRolePermissionGroupsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#userRolePermissionGroupsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>User role permission group collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRolePermissionGroups")]
        public virtual System.Collections.Generic.IList<UserRolePermissionGroup> UserRolePermissionGroups { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>User Role Permission List Response</summary>
    public class UserRolePermissionsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string
        /// "dfareporting#userRolePermissionsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>User role permission collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRolePermissions")]
        public virtual System.Collections.Generic.IList<UserRolePermission> UserRolePermissions { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>User Role List Response</summary>
    public class UserRolesListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRolesListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Pagination token to be used for the next list operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; }

        /// <summary>User role collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userRoles")]
        public virtual System.Collections.Generic.IList<UserRole> UserRoles { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Contains information about supported video formats.</summary>
    public class VideoFormat : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>File type of the video format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fileType")]
        public virtual string FileType { get; set; }

        /// <summary>ID of the video format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual System.Nullable<int> Id { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#videoFormat".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>The resolution of this video format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resolution")]
        public virtual Size Resolution { get; set; }

        /// <summary>The target bit rate of this video format.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("targetBitRate")]
        public virtual System.Nullable<int> TargetBitRate { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Video Format List Response</summary>
    public class VideoFormatsListResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#videoFormatsListResponse".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Video format collection.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoFormats")]
        public virtual System.Collections.Generic.IList<VideoFormat> VideoFormats { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Video Offset</summary>
    public class VideoOffset : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>
        /// Duration, as a percentage of video duration. Do not set when offsetSeconds is set. Acceptable values are 0
        /// to 100, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offsetPercentage")]
        public virtual System.Nullable<int> OffsetPercentage { get; set; }

        /// <summary>
        /// Duration, in seconds. Do not set when offsetPercentage is set. Acceptable values are 0 to 86399, inclusive.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("offsetSeconds")]
        public virtual System.Nullable<int> OffsetSeconds { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }

    /// <summary>Video Settings</summary>
    public class VideoSettings : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Settings for the companion creatives of video creatives served to this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("companionSettings")]
        public virtual CompanionSetting CompanionSettings { get; set; }

        /// <summary>Duration of a video placement in seconds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("durationSeconds")]
        public virtual System.Nullable<int> DurationSeconds { get; set; }

        /// <summary>
        /// Identifies what kind of resource this is. Value: the fixed string "dfareporting#videoSettings".
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind { get; set; }

        /// <summary>Whether OBA icons are enabled for this placement.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("obaEnabled")]
        public virtual System.Nullable<bool> ObaEnabled { get; set; }

        /// <summary>
        /// Settings for the OBA icon of video creatives served to this placement. If this object is provided, the
        /// creative-level OBA settings will be overridden.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("obaSettings")]
        public virtual ObaIcon ObaSettings { get; set; }

        /// <summary>
        /// Orientation of a video placement. If this value is set, placement will return assets matching the specified
        /// orientation.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("orientation")]
        public virtual string Orientation { get; set; }

        /// <summary>
        /// Publisher specification ID of a video placement. Possible values are: * `1`, Hulu * `2`, NBC * `3`, CBS *
        /// `4`, CBS Desktop * `5`, Discovery * `6`, VEVO HD * `7`, VEVO Vertical * `8`, Fox * `9`, CW Network * `10`,
        /// Disney * `11`, IGN * `12`, NFL.com * `13`, Turner Broadcasting * `14`, Tubi on Fox * `15`, Hearst
        /// Corporation * `16`, Twitch Desktop * `17`, ABC * `18`, Univision * `19`, MLB.com * `20`, MLB.com Mobile *
        /// `21`, MLB.com OTT * `22`, Polsat * `23`, TVN * `24`, Mediaset * `25`, Antena 3 * `26`, Mediamond * `27`, Sky
        /// Italia * `28`, Tubi on CBS * `29`, Spotify * `30`, Paramount * `31`, Max
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisherSpecificationId")]
        public virtual System.Nullable<long> PublisherSpecificationId { get; set; }

        /// <summary>
        /// Settings for the skippability of video creatives served to this placement. If this object is provided, the
        /// creative-level skippable settings will be overridden.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skippableSettings")]
        public virtual SkippableSetting SkippableSettings { get; set; }

        /// <summary>
        /// Settings for the transcodes of video creatives served to this placement. If this object is provided, the
        /// creative-level transcode settings will be overridden.
        /// </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("transcodeSettings")]
        public virtual TranscodeSetting TranscodeSettings { get; set; }

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
